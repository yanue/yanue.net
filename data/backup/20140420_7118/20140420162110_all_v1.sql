--
-- MySQL database dump
-- Created by DBManage class, Power By yanue. 
-- http://yanue.net 
--
-- 主机: 115.29.224.30
-- 生成日期: 2014 年  04 月 20 日 16:21
-- MySQL版本: 5.6.16
-- PHP 版本: 5.5.6

--
-- 数据库: `yanue_blog`
--

-- -------------------------------------------------------

--
-- 表的结构admin_users
--

DROP TABLE IF EXISTS `admin_users`;
CREATE TABLE `admin_users` (
  `uid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '用户id',
  `user_name` varchar(50) NOT NULL COMMENT '用户名',
  `password` char(40) NOT NULL DEFAULT '' COMMENT '密码(md5结合sha1的hash)',
  `email` varchar(200) NOT NULL DEFAULT '' COMMENT '邮箱',
  `true_name` char(32) NOT NULL DEFAULT '' COMMENT '真实姓名',
  `level` int(1) NOT NULL DEFAULT '1',
  `create_time` int(10) NOT NULL DEFAULT '0' COMMENT '创建时间',
  `modify_time` int(10) NOT NULL DEFAULT '0' COMMENT '修改时间',
  `last_login` int(10) NOT NULL DEFAULT '0' COMMENT '最后登录时间',
  `last_ip` varchar(50) NOT NULL DEFAULT '' COMMENT '最后登录ip',
  `login_count` int(10) NOT NULL DEFAULT '0' COMMENT '登陆次数',
  PRIMARY KEY (`uid`),
  UNIQUE KEY `email` (`email`),
  UNIQUE KEY `user_name` (`user_name`)
) ENGINE=MyISAM AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 COMMENT='后台管理用户';

--
-- 转存表中的数据 admin_users
--

INSERT INTO `admin_users` VALUES('1','yanue','cb88e5c631952af5073d3558ae824b5e86bf43d6','642399406@qq.com','杨元学','0','1356942281','1384521630','1361024400','127.0.0.1','8');
INSERT INTO `admin_users` VALUES('2','yansueh','cb88e5c631952af5073d3558ae824b5e86bf43d6','619420650@qq.com','yansueh','1','0','0','1359105963','127.0.0.1','0');
INSERT INTO `admin_users` VALUES('3','conjure','cb88e5c631952af5073d3558ae824b5e86bf43d6','looklo@looklo.com','慈恩软件','0','0','0','1359711705','121.35.196.77','3');
INSERT INTO `admin_users` VALUES('4','sales','cb88e5c631952af5073d3558ae824b5e86bf43d6','sales@looklo.com','销售','1','0','0','1359106481','127.0.0.1','0');
--
-- 表的结构page
--

DROP TABLE IF EXISTS `page`;
CREATE TABLE `page` (
  `id` tinyint(3) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL DEFAULT '',
  `alias` varchar(30) NOT NULL DEFAULT '',
  `content` text,
  `published` tinyint(4) NOT NULL DEFAULT '1',
  `created` int(10) NOT NULL DEFAULT '0',
  `layout` tinyint(4) NOT NULL DEFAULT '1',
  `modified` int(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `alias` (`alias`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT='name, alias, content, published, layout, modified';

--
-- 转存表中的数据 page
--

INSERT INTO `page` VALUES('1','关于','about','            <div class=\"widget suggest\" style=\"margin: 10px 0 0 0;\">                <strong>关于</strong>                <h2>                    关于我                </h2>                <p>                    <br />很懒，爱玩…<br />qq 642399406<br />有问题可以共同交流、                </p>            </div>','1','0','0','1397981467');
--
-- 表的结构post
--

DROP TABLE IF EXISTS `post`;
CREATE TABLE `post` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cid` smallint(6) NOT NULL DEFAULT '0' COMMENT '咨询类别',
  `tags` varchar(250) NOT NULL DEFAULT '' COMMENT '标签id',
  `title` varchar(80) NOT NULL DEFAULT '' COMMENT '标题',
  `sub_title` varchar(250) NOT NULL DEFAULT '' COMMENT '副标题或简单描述',
  `author` varchar(50) NOT NULL DEFAULT 'yanue' COMMENT '作者',
  `keywords` varchar(50) NOT NULL DEFAULT '',
  `cover_img` varchar(200) NOT NULL DEFAULT '' COMMENT '封面图片',
  `content` text COMMENT '内容',
  `created` int(10) NOT NULL DEFAULT '0' COMMENT '创建时间',
  `modified` int(10) NOT NULL DEFAULT '0',
  `source` varchar(50) NOT NULL DEFAULT '',
  `published` tinyint(4) NOT NULL DEFAULT '1',
  `recommend` tinyint(1) NOT NULL DEFAULT '0',
  `comments` int(10) NOT NULL DEFAULT '0',
  `views` int(10) NOT NULL DEFAULT '1' COMMENT '点击率',
  `wp_id` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=154 DEFAULT CHARSET=utf8 COMMENT='咨讯';

--
-- 转存表中的数据 post
--

INSERT INTO `post` VALUES('1','2','[{\"id\":6,\"name\":\".htaccess\"},{\"id\":5,\"name\":\"apache\"}]','通过.htaccess将主域名指向子目录','','yanue','','','<p>一般情况下,针对Linux主机主域名总是默认绑定在public_html目录，其他绑定的域名可以指定在public_html下面任意目录中，因此二级目录里面有主站的目录文件还有二级域名所绑定的目录（也就是其他的网站了，跟主域名没有啥联系的），这样就感觉很乱，以后很难找，于是我们可以将所有的网站都放在public_html的二级目录里，让主域名去绑定其中那个主站目录，这样的话，看起来就方便多了。</p><p>那么要解决此方法，就只有用htaccess的urlrewrite来解决了。</p><p>1.假设主域名是www.yanue.net，你可以在public_html中建立一个文件夹main(根据你的虚拟主机情况来设定)，主域名下的文件均位于文件夹中；</p><p>2.在public_html中建立一个文件，名为.htaccess；</p><pre class=\"lang:php decode:true \"><pre class=\"prettyprint linenums prettyprinted lang-php \">RewriteEngine on\n#更改www.yanue.net为你的主域名地址\nRewriteCond %{HTTP_HOST} ^(www.)?www.yanue.net$\n# 更改主域名要指向的子目录\nRewriteCond %{REQUEST_URI} !^/wp/\n#不要更改这两行\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\n# 更改主域名要指向的子目录\nRewriteRule ^(.*)$ //$1\n#更改www.yanue.net为你的主域名地址\nRewriteCond %{HTTP_HOST} ^(www.)?www.yanue.net$\n#更改index.php为你的网站首页文件\nRewriteRule ^(/)?$ wp/index.php [L]</pre><br /></pre>&nbsp;','1330862652','1395204616','','1','0','0','958','4');
INSERT INTO `post` VALUES('2','6','[{\"id\":34,\"name\":\"jquery\"}]','(原创)jquery右下角pop弹窗 完美兼容,类似discuz右下角消息提示框','','yanue','','','<p>网上找了很多，感觉不好用或者有问题</p><p>自己写一个以备后用：</p><p>类似discuz右下角消息提示框主要是用css position的fixed属性，但是ie6不支持此属性，通过jquery.fixed.js插件实现兼容</p><p>效果如下：</p><p><a href=\"http://www.yanue.net/wp-content/uploads/2012/03/未命名.jpg\"><img class=\"alignnone size-full wp-image-17\" title=\"jquery.pop\" src=\"http://www.yanue.net/wp-content/uploads/2012/03/未命名.jpg\" alt=\"jquery右下角pop弹窗效果图\" width=\"264\" height=\"167\" /></a></p><p>演示地址：<a href=\"http://demo.yanue.net/pop/\" target=\"_blank\">http://demo.yanue.net/pop/</a></p><p>代码下载：<a href=\"http://demo.yanue.net/pop/pop.rar\" target=\"_blank\">http://demo.yanue.net/pop/pop.rar</a></p><h2>调用方法非常简单</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;script type=&quot;text/javascript&quot; &gt;\n //记得加载jquery\n //使用参数：1.标题，2.链接地址，3.内容简介\n window.onload=function(){\nvar pop=new Pop(&quot;这里是标题，哈哈&quot;,\n&quot;http://demo.yanue.net/pop/&quot;,\n&quot;请输入你的内容简介，这里是内容简介.请输入你的内容简介，这里是内容简介.请输入你的内容简介，这里是内容简介&quot;);\n}\n&lt;/script&gt;</pre><p></p><p>自己去下载来试一下吧</p><p>done</p>','1331085928','1395204789','','1','0','0','4336','12');
INSERT INTO `post` VALUES('3','5','[{\"id\":37,\"name\":\"google\"},{\"id\":14,\"name\":\"map\"}]','在线查询经纬度 google map查询地名返回经纬度 geocode geocoder的完整实例 代码下载','','yanue','','','<p>说明：地址解析就是将地址(如：贵州省贵阳市)转换为地理坐标(如经度：106.71，纬度：26.57)的过程。</p><div id=\"blog_text\">这是运用google map api开发的地图应用，&nbsp;geocode geocoder的完整实例，实现鼠标经过提示经纬度，自动填充地名地点名称，输入完成后可直接点击enter键进行解析，地理位置不准确，可以拖动重新解析，解析后显示完整经纬度信息，轻轻松松将地理位置转换为经纬度，希望能帮助各位需要的人</div><h2>演示地址：</h2><p><a href=\"http://map.yanue.net/toLatLng/\">http://map.yanue.net/toLatLng/</a></p><h2>代码下载：</h2><p><a href=\"http://map.yanue.net/toLatLng.rar\" target=\"_blank\">http://map.yanue.net/toLatLng.rar</a></p><div id=\"blog_text\">以前做<a href=\"http://sqph.org/map/\" target=\"_blank\">贵州山区希望工程电子地图平台</a>（地址：<a href=\"http://sqph.org/map/\">http://sqph.org/map/</a>&nbsp;我会把代码分享给大家，当然我还是个菜鸟，请大虾们不要见笑，初学者可以参考），需要运用google map api通过读取json数据向中添marker，点击地图上marker通过iframe调出该marker的详细信息。</div><div id=\"blog_text\">最开始的想法就是通过地理解析功能，只要在json数据存一个地址，然后运用google map地址解析使用&nbsp;google.maps.Geocoder&nbsp;对象去处理地址，然后循环像地图里面添加marker，这样就能实现了需求了。</div><div id=\"blog_text\">于是慢慢去接触google map，那实在太强大了，但是学习起来还是有一定难度，有很多东西很庞大（这不是废话么 呵呵）其实其他比如百度地图等都非常优秀，后来我还是选择了google map，为什么呢，就是看好google map的强悍的地理解析（参考：<a href=\"http://code.google.com/intl/zh-CN/apis/maps/documentation//services.html#Geocoding\">http://code.google.com/intl/zh-CN/apis/maps/documentation/javascript/services.html#Geocoding</a>&nbsp;官方实例地址&nbsp;<a href=\"http://code.google.com/intl/zh-CN/apis/maps/documentation//examples/geocoding-simple.html\">http://code.google.com/intl/zh-CN/apis/maps/documentation/javascript/examples/geocoding-simple.html</a>）和反解析功能（这里就不给地址了），其他的地图好像不能解析出经纬度（技术是肯定能的，但大陆政策好像不允许，有很多军事秘密基地，你是知道的，我都不知道是不是这个原因）。</div><div id=\"blog_text\">后来觉得这样还是很麻烦，不过要在地图上生成坐标的点，就必须能让google&nbsp;map解析出每个地名的经纬度，但是有很多地名，尤其是那些小地名，根本就解析不出来，处理起来很麻烦，那就不如全部都用经纬度，这样就不用地理解析了，加载速度也应该提高了很多。但是必须手动去查找经纬度，但是网上去找又非常麻烦，于是这个小东西就产生了，放在后台用，根据需求，在里面又加了很多实用的东西。（上面的一切都是废话，各位看官不用理会，下面才是正文）&nbsp;</div><h2>实现功能：</h2><div id=\"blog_text\">1. 自动填充地名地点名称</div><div id=\"blog_text\">2. 鼠标经过提示经纬度</div><div id=\"blog_text\">3. 输入完成后可直接点击enter键进行解析</div><div id=\"blog_text\">4. 地理位置不准确，可以拖动重新解析</div><div id=\"blog_text\">5. 解析后经纬度信息显示完整</div><div id=\"blog_text\"><br /></div><div id=\"blog_text\"><div>实例图片如下：</div><div>根据你输入的内容自动填充信息，选择正确的信息后，直接enter快捷键进入地理解析</div><div>&nbsp;<a href=\"http://www.yanue.net/wp-content/uploads/2012/03/3f2829c19f3df8dca81a5323cd11728b4610284e.jpg\"><img class=\"alignnone size-full wp-image-39\" title=\"3f2829c19f3df8dca81a5323cd11728b4610284e\" src=\"http://www.yanue.net/wp-content/uploads/2012/03/3f2829c19f3df8dca81a5323cd11728b4610284e.jpg\" alt=\"\" width=\"555\" height=\"164\" /></a></div><div>图为输入一个地点过后解析出来的状态 &nbsp;右面有解析出来的详细信息：当前经纬度，匹配地址，所解析的区域所在经纬度范围</div><div><a href=\"http://www.yanue.net/wp-content/uploads/2012/03/342c1840f21fbe0991b91da66b600c338544ad8f.jpg\"><img class=\"alignnone size-full wp-image-40\" title=\"342c1840f21fbe0991b91da66b600c338544ad8f\" src=\"http://www.yanue.net/wp-content/uploads/2012/03/342c1840f21fbe0991b91da66b600c338544ad8f.jpg\" alt=\"\" width=\"880\" height=\"313\" /></a></div><div>当然，如果解析出来的位置有偏差 你可以拖动地图上的点进行重新解析 图为拖动状态<a href=\"http://www.yanue.net/wp-content/uploads/2012/03/48ef3a3e1f30e9246abc40834c086e061c95f7521.jpg\"><img class=\"alignnone size-full wp-image-42\" title=\"48ef3a3e1f30e9246abc40834c086e061c95f752\" src=\"http://www.yanue.net/wp-content/uploads/2012/03/48ef3a3e1f30e9246abc40834c086e061c95f7521.jpg\" alt=\"\" width=\"606\" height=\"374\" /></a></div><div>调整好位置你就能得到你想要的经纬度了</div><div>最后贴一下地址演示地址：<a href=\"http://map.yanue.net/toLatLng/\">http://map.yanue.net/toLatLng/</a></div><div>代码下载：<a href=\"http://map.yanue.net/toLatLng.rar\" target=\"_blank\">http://map.yanue.net/toLatLng.rar</a></div></div>','1331672410','1395204967','','1','0','10','12253','32');
INSERT INTO `post` VALUES('4','15','[{\"id\":38,\"name\":\"js\"},{\"id\":41,\"name\":\"json\"}]','js去除数组重复项以及js移除json里面的重复项的方法','','yanue','','','<p>最近在做贵州山区希望工程捐赠平台（<a href=\"http://sqph.org/alipay/index.html\">http://sqph.org/alipay/index.html</a>）的时候，在用json存储的信息里实现联动效果的时候 遇到的问题 无法去除里面重复的项</p><p>花了很长时间 实现下面方法 感觉用处不大&nbsp;</p><p>实际上原理很简单 下面是代码</p><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;js去除数组重复项以及js移除json里面的重复项的方法&lt;/title&gt;\n&lt;meta charset=&quot;UTF-8&quot;&gt;\n&lt;meta name=&quot;author&quot; content=&quot;yanue&quot; /&gt;\n&lt;meta name=&quot;copyright&quot; content=&quot;www.yanue.net&quot; /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;script type=&quot;text/javascript&quot;&gt;\n    //去除数组重复\n    //var arr = [\'a\',\'b\',\'c\',\'a\',\'b\',\'d\',\'b\'];\n    //去除json数组里面重复\n    var arr=[{&quot;cid&quot;:1,&quot;county&quot;:&quot;小河区&quot;},\n    {&quot;cid&quot;:1,&quot;county&quot;:&quot;小河区&quot;},\n    {&quot;cid&quot;:2,&quot;county&quot;:&quot;南明区&quot;},\n    {&quot;cid&quot;:1,&quot;county&quot;:&quot;小河区&quot;},\n    {&quot;cid&quot;:1,&quot;county&quot;:&quot;小河区&quot;},\n    {&quot;cid&quot;:3,&quot;county&quot;:&quot;乌当区&quot;},\n    {&quot;cid&quot;:1,&quot;county&quot;:&quot;小河区&quot;}];\n    var hash = {};\n    for ( var i = 0; i &lt; arr.length; i++) {\n    //去除数组重复情况\n//(hash[arr[i]] == undefined) &amp;&amp; (hash[arr[i]]=arr[i]);\n//去除json数组里面重复情况\n(hash[arr[i]] == undefined) &amp;&amp; (hash[arr[i][&quot;cid&quot;]+&quot;,&quot;+arr[i][&quot;county&quot;]]=arr[i][&quot;cid&quot;]+&quot;,&quot;+arr[i][&quot;county&quot;]);\n}\nfor(var o in hash){\n//alert(o);\ncid=o.split(\',\')[0];\ncounty=o.split(\',\')[1];\ndocument.write(cid+&quot; &quot;+county+&quot;&lt;br&gt;&quot;);\n}\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre></pre><span style=\"font-size:16px;\"><span style=\"line-height: normal;\"></span></span>','1332356151','1395289762','','1','0','0','2581','45');
INSERT INTO `post` VALUES('5','2','[{\"id\":\"42\",\"name\":\"zend\"}]','zend framework配置文件之错误提示设置，数据库设置','','yanue','','','<p>Zend Framework配置文件位于application-&gt;configs目录下application.ini文件，</p><p>默认有4组配置，即开发（development）、测试（testing）、演示（staging）、上线（production）</p><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">[production]\nphpSettings.display_startup_errors = 0\nphpSettings.display_errors = 0\nincludePaths.library = APPLICATION_PATH &quot;/../library&quot;\nbootstrap.path = APPLICATION_PATH &quot;/Bootstrap.php&quot;\nbootstrap.class = &quot;Bootstrap&quot;\nappnamespace = &quot;Application&quot;\nresources.frontController.controllerDirectory = APPLICATION_PATH &quot;/controllers&quot;\nresources.frontController.params.displayExceptions = 0\n\n[staging : production]\n\n[testing : production]\nphpSettings.display_startup_errors = 1\nphpSettings.display_errors = 1\n\n[development : production]\nphpSettings.display_startup_errors = 1\nphpSettings.display_errors = 1\nresources.frontController.params.displayExceptions = 1</pre></pre><p>新建的Zend Framework项目默认使用上线的配置，因此错误消息不会出现，给初学者造成不少麻烦，因此对照开发的配置（如下），将上线的配置同样的3行的值改成1。</p><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">;开启错误调试，请将下面前三项设为1\n[production]\nphpSettings.display_startup_errors = 1\nphpSettings.display_errors = 1\nresources.frontController.params.displayExceptions = 1\nincludePaths.library = APPLICATION_PATH &quot;/../library&quot;\nbootstrap.path = APPLICATION_PATH &quot;/Bootstrap.php&quot;\nbootstrap.class = &quot;Bootstrap&quot;\nappnamespace = &quot;Application&quot;\nresources.frontController.controllerDirectory = APPLICATION_PATH &quot;/controllers&quot;\n;数据库设置\n[mysql]\ndb.adapter=PDO_MYSQL\ndb.params.host=localhost\ndb.params.username=root\ndb.params.password=\ndb.params.dbname=votedb</pre>或者在入口选择对应配置亦可<br /></pre>','1332640189','1395290088','','1','0','2','2642','63');
INSERT INTO `post` VALUES('6','2','[{\"id\":42,\"name\":\"zend\"}]','Zend Framework 跳转方法(render, forward, redirect)区别与总结','','yanue','','','<h2>一. render（最常见的，只能在当前控制器使用，用于跳转到不同的视图）</h2><p>不指定render</p><p>结果： {当前Module}/{当前Controller}/{当前Action}.phtml</p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">$this-&gt;render(\'bar\') ;</pre><p></p><p>结果： {当前Module}/{当前Controller}/bar.phtml</p><h2>二. forward(重要，主要用于不同的控制器之间跳转)</h2><p>在任意的pre/postDispatch()或者动作中调用该方法_forward()，并传入动作、控制器、模块、以及可选的附加参数，就可以进入新的动作。</p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">$this-&gt;_forward(\'bar\') ;</pre><p>结果： {当前Module}/{当前Controller}/bar<br /></p><p></p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">$this-&gt;_forward(\'bar\', \'foo\') ;</pre><p>结果： {当前Module}/foo/bar<br /></p><p></p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">$this-&gt;_forward(\'bar\', \'foo\', \'hoge\') ;</pre><p>结果： hoge/foo/bar<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">$params = array(\'a\' =&gt; \'1\',\'b\' =&gt; \'2\') ;\n$this-&gt;_forward(\'bar\', \'foo\', \'hoge\', $params) ;\n</pre><p></p><p>结果： /hoge/foo/bar/a/1/b/2<br /></p><h2>三. redirect（用于跨域等，直接302跳转）</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">$this-&gt;_redirect(\'/hoge\') ;</pre><p>结果： /hoge<br /></p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">$this-&gt;_redirect(\'/hoge/foo\') ;</pre><p>结果： /hoge/foo<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \"><span style=\"font-family: Arial, Helvetica, sans-serif;\">$this-&gt;_redirect(\'/hoge/foo/bar\') ;</span></pre><p>结果： /hoge/foo/bar<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">$this-&gt;_redirect(\'http://localhost/hoge/foo/bar\') ;</pre><p>结果： http://localhost/hoge/foo/bar<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">$this-&gt;_redirect(\'http://localhost/hoge/foo/bar?a=1&amp;b=2\') ;</pre><p>结果： http://localhost/hoge/foo/bar?a=1&amp;b=2<br /></p><p></p><h2>四. 特殊情况</h2><p>禁用layout方法</p><pre class=\"prettyprint linenums prettyprinted lang-php \"> $this-&gt;_helper-&gt;layout()-&gt;disableLayout() ;</pre><p></p><p>禁用view方法<br /></p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \"> $this-&gt;_helper-&gt;viewRenderer-&gt;setNoRender()</pre><p></p>','1332730723','1395290993','','1','0','0','3122','69');
INSERT INTO `post` VALUES('7','15','[{\"id\":38,\"name\":\"js\"},{\"id\":39,\"name\":\"ie6\"}]','js判断ie6 ie6完美提示框','','yanue','','','首先贴出判断ie6的js方法：（你可以复制代码到本地试试）<pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;script type=&quot;text/javascript&quot;&gt;\nif (window.ActiveXObject) {\n  var ua = navigator.userAgent.toLowerCase();\n  var ie=ua.match(/msie ([\\d.]+)/)[1]\nif(ie==6.0){\n alert(&quot;您的浏览器版本过低，在本系统中不能达到良好的视觉效果，建议你升级到ie8以上！&quot;);\nwindow.close();\n}\n}\n&lt;/script&gt;</pre></pre><p>单是alert()弹窗提示信息，太丑陋，而且信息内容受限制，于是我们可以单独做一层（弹出层）居中显示你需要的信息，下面是演示及代码：演示地址：<a title=\"http://www.yanue.net/js/isIE6.html\" href=\"http://www.yanue.net/js/isIE6.html\">http://www.yanue.net/js/isIE6.html</a>&nbsp;(请用ie6查看效果)代码如下</p><p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;!DOCTYPE HTML&gt;\n&lt;html lang=&quot;en-US&quot;&gt;\n&lt;head&gt;\n&lt;meta charset=&quot;UTF-8&quot;&gt;\n&lt;title&gt;ie6弹出层显示信息&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;!--ie6弹出层显示信息--&gt;\n&lt;script type=&quot;text/javascript&quot;&gt;\nwindow.onload=function(){\n  var popDiv=document.getElementById(&quot;popDiv&quot;);\nvar acontinue=document.getElementById(&quot;acontinue&quot;);\nvar aClose=document.getElementById(\'aClose\');\n  if (window.ActiveXObject) {\nvar ua = navigator.userAgent.toLowerCase();\nvar ie=ua.match(/msie ([\\d.]+)/)[1]\nif(ie==6.0){\npopDiv.style.display=&quot;block&quot;;\nacontinue.onclick=function(){\n popDiv.style.display=&quot;none&quot;;\n}\naClose.onclick=function(){\n window.close();\n}\n}\n}\n}\n&lt;/script&gt;\n&lt;style type=&quot;text/css&quot;&gt;\nbody{background:#fcf6f0;}\n*{margin:0;padding:0;}\n/*弹出层的STYLE*/\n#popDiv {\nwidth:412px;\nbackground: #f0f0f6;\nborder: 10px solid #e0e0e0;\npadding:0 0 10px 0;\nborder-top:none;\ntext-align: left;\nfont-size: 12px;\nz-index:99;\nleft:50%;/*FF IE7*/\ntop: 50%;/*FF IE7*/\nmargin-left:-200px!important;/*FF IE7 该值为本身宽的一半 */\nmargin-top:-60px!important;/*FF IE7 该值为本身高的一半*/\nmargin-top:0px;\nposition:fixed!important;/*FF IE7*/\nposition:absolute;/*IE6*/\n_top:expression(eval(document.compatMode &amp;&amp; document.compatMode==\'CSS1Compat\') ? documentElement.scrollTop + (document.documentElement.clientHeight-this.offsetHeight)/2 :/*IE6*/ document.body.scrollTop + (document.body.clientHeight - this.clientHeight)/2);/*IE5 IE5.5*/\n}\n#popDiv a{text-decoration:none;color:#f00;}\n#popDiv a:hover{color:#f60;}\n#isclose{\n  position:absolute;\n  bottom:5px;\n  right:6px;\n}\n#aClose,#acontinue{\n  border:1px solid #e0e0e0;\npadding:2px 5px;\nbackground:#f0f0f6;\n}\n#aClose:hover,#acontinue:hover{color:#f60;background:#fc6;}\n#bg{background:#fcf6f0;width:100%;height:100%;z-index:98;filter:Alpha(Opacity:&quot;50&quot;)}\n#popDiv h1{font-size:12px;line-height:24px;background:#e0e0e0;line-height:30px;color:#333;}\n#popDiv h2{font-size:12px;text-indent:24px;line-height:24px;color:#333;font-weight:normal;padding:10px;}\n#popDiv p{line-height:24px;display:inline-block;text-indent:24px;}\n/*The END*/\n&lt;/style&gt;\n&lt;div id=&quot;bg&quot;&gt;&lt;/div&gt;\n&lt;div id=&quot;popDiv&quot; style=&quot;display:none;&quot;&gt;\n&lt;h1&gt;贵州省志愿者信息管理系统 Ver 2.0 友情提示：&lt;/h1&gt;\n&lt;h2&gt;您使用的是较低版本浏览器，将导致无法使用后台的部分功能。建议您使用 IE8.0 或其他较新版本浏览器，以便更好的感受本系统的各项特色功能及服务，感谢您对贵州志愿服务网的关心和支持。&lt;/h2&gt;\n&lt;p&gt;政策咨询热线：0851-5514292&lt;/p&gt;\n&lt;p&gt;技术支持热线：0851-6996078&lt;/p&gt;\n&lt;p id=&quot;isclose&quot;&gt;&lt;a title=&quot;&quot; href=&quot;javascript:void()&quot; id=&quot;acontinue&quot;&gt;继续使用&lt;/a&gt; &lt;a title=&quot;&quot; href=&quot;javascript:closeDiv()&quot; id=&quot;aClose&quot;&gt;关闭窗口&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;!--ie6弹出层显示信息end--&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre></p><p>ie6下效果预览如下：</p><p><a href=\"http://www.yanue.net/wp-content/uploads/2012/03/f1ee7965f6246b6097d2cac7ebf81a4c530fa296.jpg\"><img class=\"alignnone size-full wp-image-74\" title=\"f1ee7965f6246b6097d2cac7ebf81a4c530fa296\" src=\"http://www.yanue.net/wp-content/uploads/2012/03/f1ee7965f6246b6097d2cac7ebf81a4c530fa296.jpg\" alt=\"\" width=\"498\" height=\"270\" /></a></p><p>这上面做的都只是针对ie6 ，js判断其他浏览器呢 请见：js判断浏览器类型及版本详细分析<a title=\"http://www.yanue.net/archives/77.html\" href=\"http://www.yanue.net/post-8.html\" target=\"_blank\"><a href=\"http://www.yanue.net/post-8.html\">http://www.yanue.net/post-8.html</a><br /></a></p>','1332785372','1395291081','','1','0','0','10036','73');
INSERT INTO `post` VALUES('8','1','[{\"id\":38,\"name\":\"js\"},{\"id\":39,\"name\":\"ie6\"}]','js判断浏览器类型及版本详细分析 （js判断ie6）','','yanue','','','<p>js判断浏览器类型及版本代码网上到处都是 &nbsp;经过测试 下面代码完全实用。</p><p>你还可以将前面的判断代码写成这样：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;script type=&quot;text/javascript&quot;&gt;\nvar Sys = {};\nvar ua = navigator.userAgent.toLowerCase();\nwindow.ActiveXObject ? Sys.ie = ua.match(/msie ([d.]+)/)[1] :\ndocument.getBoxObjectFor ? Sys.firefox = ua.match(/firefox/([d.]+)/)[1] :\nwindow.MessageEvent &amp;&amp; !document.getBoxObjectFor ? Sys.chrome = ua.match(/chrome/([d.]+)/)[1] :\nwindow.opera ? Sys.opera = ua.match(/opera.([d.]+)/)[1] :\nwindow.openDatabase ? Sys.safari = ua.match(/version/([d.]+)/)[1] : 0;\n\n//以下进行测试\nif(Sys.ie) document.write(\'IE: \'+Sys.ie);\nif(Sys.firefox) document.write(\'Firefox: \'+Sys.firefox);\nif(Sys.chrome) document.write(\'Chrome: \'+Sys.chrome);\nif(Sys.opera) document.write(\'Opera: \'+Sys.opera);\nif(Sys.safari) document.write(\'Safari: \'+Sys.safari);\n&lt;/script&gt;</pre>这样可以使JavaScript代码更精简些。当然，可读性稍差一些，就看你是重视效率还是重视可维护性了。下面是<strong>判断浏览器</strong>的最原始代码：<pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;script type=&quot;text/javascript&quot;&gt;\nvar Sys = {};\nvar ua = navigator.userAgent.toLowerCase();\nif (window.ActiveXObject)\nSys.ie = ua.match(/msie ([d.]+)/)[1]\nelse if (document.getBoxObjectFor)\nSys.firefox = ua.match(/firefox/([d.]+)/)[1]\nelse if (window.MessageEvent &amp;&amp; !document.getBoxObjectFor)\nSys.chrome = ua.match(/chrome/([d.]+)/)[1]\nelse if (window.opera)\nSys.opera = ua.match(/opera.([d.]+)/)[1]\nelse if (window.openDatabase)\nSys.safari = ua.match(/version/([d.]+)/)[1];\n\n//以下进行测试\nif(Sys.ie) document.write(\'IE: \'+Sys.ie);\nif(Sys.firefox) document.write(\'Firefox: \'+Sys.firefox);\nif(Sys.chrome) document.write(\'Chrome: \'+Sys.chrome);\nif(Sys.opera) document.write(\'Opera: \'+Sys.opera);\nif(Sys.safari) document.write(\'Safari: \'+Sys.safari);\n&lt;/script&gt;</pre><br /></pre><h2>我们再来分析一下各种浏览器的特征及其userAgent。</h2><p><strong><span style=\"color:#ff0000;\">IE</span></strong></p><p>只有IE支持创建ActiveX控件，因此她有一个其他浏览器没有的东西，就是ActiveXObject函数。只要判断window对象存在 ActiveXObject函数，就可以明确判断出当前浏览器是IE。</p><p>而IE各个版本典型的userAgent如下：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0)\nMozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.2)\nMozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\nMozilla/4.0 (compatible; MSIE 5.0; Windows NT)</pre><p></p><p>其中，版本号是MSIE之后的数字。</p><p><strong><span style=\"color:#ff0000;\">Firefox</span></strong></p><p>Firefox中的DOM元素都有一个getBoxObjectFor函数，用来获取该DOM元素的位置和大小（IE对应的中是 getBoundingClientRect函数）。这是Firefox独有的，判断它即可知道是当前浏览器是Firefox。</p><p>Firefox几个版本的 userAgent大致如下：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">Mozilla/5.0 (Windows; U; Windows NT 5.2) Gecko/2008070208 Firefox/3.0.1\nMozilla/5.0 (Windows; U; Windows NT 5.1) Gecko/20070309 Firefox/2.0.0.3\nMozilla/5.0 (Windows; U; Windows NT 5.1) Gecko/20070803 Firefox/1.5.0.12</pre><p></p><p>其中，版本号是Firefox之后的数字。</p><p><strong><span style=\"color:#ff0000;\">Opera</span></strong></p><p>Opera提供了专门的浏览器标志，就是window.opera属性。</p><p>Opera典型的userAgent如下：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">Opera/9.27 (Windows NT 5.2; U; zh-cn)\nOpera/8.0 (Macintosh; PPC Mac OS X; U; en)\nMozilla/5.0 (Macintosh; PPC Mac OS X; U; en) Opera 8.0</pre><p></p><p>其中，版本号是靠近Opera的数字。</p><p><strong><span style=\"color:#ff0000;\">Safari</span></strong></p><p>Safari浏览器中有一个其他浏览器没有的openDatabase函数，可做为判断Safari的标志。</p><p>Safari典型的userAgent如下：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">Mozilla/5.0 (Windows; U; Windows NT 5.2) AppleWebKit/525.13 (KHTML, like Gecko) Version/3.1 Safari/525.13\nMozilla/5.0 (iPhone; U; CPU like Mac OS X) AppleWebKit/420.1 (KHTML, like Gecko) Version/3.0 Mobile/4A93 Safari/419.3</pre><p></p><p>其版本号是Version之后的数字。</p><p><strong><span style=\"color:#ff0000;\">Chrome</span></strong></p><p>Chrome有一个MessageEvent函数，但Firefox也有。不过，好在Chrome并没有Firefox的getBoxObjectFor 函数，根据这个条件还是可以准确判断出Chrome浏览器的。</p><p>目前，Chrome的userAgent是：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">Mozilla/5.0 (Windows; U; Windows NT 5.2) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.2.149.27 Safari/525.13</pre><p></p><p>其中，版本号在Chrome只后的数字。有趣的是，Chrome的userAgent还包含了Safari的特征，也许这就是Chrome可以运行所有Apple浏览器应用的基础吧。</p><p><strong>最后：其实我们用js判断浏览器，大多数情况下是为了该死的ie6</strong><br /></p><p>当然这个本身并不完美，ie6下更好的提示效果请见：</p><p>js判断ie6 ie6完美提示框<a href=\"http://www.yanue.net/post-7.html\">http://www.yanue.net/post-7.html</a></p>','1332786114','1395207895','','1','0','3','57474','77');
INSERT INTO `post` VALUES('10','2','[{\"id\":24,\"name\":\"php\"},{\"id\":12,\"name\":\"mysql\"}]','php中mssql数据库简单查询完整实例','','yanue','','','<p><strong>说明：</strong>经常忘记比如数据库连接啊之类的语句，通常做的时候都是从从别的地方copy过来使用或者查手册慢慢写，但是手册上的都是各个语句分开，要完成一个简单的查询都需要找很多，很麻烦。</p><p>本例子只作为简单的引导，实现一个简单的查询：</p><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;!DOCTYPE HTML&gt;\n&lt;html lang=&quot;en-US&quot;&gt;\n&lt;head&gt;\n&lt;title&gt;php中mssql数据库简单查询完整实例&lt;/title&gt;\n&lt;meta charset=&quot;gb2312&quot;&gt;\n&lt;meta name=&quot;author&quot; content=&quot;yanue&quot; /&gt;\n&lt;meta name=&quot;copyright&quot; content=&quot;powered by yanue&quot; /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;?php\n  //说明：测试的时候是连接的是远程的mssql数据库，没有在本机运行\n  //初始化mssql数据库连接,分别是 主机(ip:端口号默认1433), 用户名, 密码\n	$conn=mssql_connect(\'ip:1433\',\'user\',\'pass\') or die(&quot;SQL SERVER 数据库连接失败！&quot;); \n	//选择数据库\n	mssql_select_db(\'yourdb\',$conn); \n	//sql语句\n	$sql=&quot;SELECT TOP 5 * FROM test&quot;; \n	$result=mssql_query($sql); \n	//打印输出\n	//print_r($result);\n	\n	$num = mssql_num_rows($result); \n	//输出结果 \n  echo \'有\'.$num.&quot;条记录&lt;br&gt;&quot;;\n	if($num){\n		//循环出每一条记录\n		for($i=0;$i&lt;$num;$i++) { \n			  //这里是一条记录的信息，你也可以循环显示出来，这里只输出第一第二条\n		    $Row=mssql_fetch_array($result); \n		    echo $Row[0].$Row[1].&quot;...&lt;br/&gt;&quot;;\n		}   \n	}else{\n	    echo &quot;暂无数据&quot;	;\n	}\n	//关闭连接\n	mssql_close($conn);\n?&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre><br /></pre>','1334958409','1395291223','','1','0','0','2746','102');
INSERT INTO `post` VALUES('11','15','[{\"id\":38,\"name\":\"js\"},{\"id\":43,\"name\":\"正则\"}]','js正则匹配出所有图片及所有图片地址src','','yanue','','','<p>有很多时候我们需要用到文章里面的图片，而且主要是用到它的图片地址，这个时候我们需要通过正则匹配出图片标签，然后做到我们需要的数据</p><p>平时也没怎么用正则，一不学就忘，最近项目需要，然后又去goole了，好乱！一搜一大堆，也不是我想要的，最后把自己留一个已被后用</p><p>实现：通过js正则匹配出所有图片及所有图片地址src。</p><h2>思路：</h2><p><span style=\"color:#ff0000;\">1.</span>匹配出图片img标签（即匹配出所有图片），过滤其他不需要的字符</p><p><span style=\"color:#ff0000;\">2.</span>从匹配出来的结果（img标签中）循环匹配出图片地址（即src属性）</p><p><span style=\"color:#ff0000;\">演示</span>：<a href=\"http://www.yanue.net/js/imgReg.html\">http://www.yanue.net/js/imgReg.html</a></p><h2>代码：(你可以复制到本地试试)</h2><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;script type=&quot;text/javascript&quot;&gt;\n//思路分两步：作者（yanue）.\n//1，匹配出图片img标签（即匹配出所有图片），过滤其他不需要的字符\n//2.从匹配出来的结果（img标签中）循环匹配出图片地址（即src属性）\nvar str = &quot;this is test string &lt;img src=\\&quot;http:www.yanue.net/test.jpg\\&quot; width=\'50\' &gt; 123 and the end &lt;img src=\\&quot;所有地址也能匹配.jpg\\&quot; /&gt; 33! &lt;img src=\\&quot;/uploads/attached/image/20120426/20120426225658_92565.png\\&quot; alt=\\&quot;\\&quot; /&gt;&quot;\n//匹配图片（g表示匹配所有结果i表示区分大小写）\nvar imgReg = /&lt;img.*?(?:&gt;|\\/&gt;)/gi;\n//匹配src属性\nvar srcReg = /src=[\\\'\\&quot;]?([^\\\'\\&quot;]*)[\\\'\\&quot;]?/i;\nvar arr = str.match(imgReg);\nalert(\'所有已成功匹配图片的数组：\'+arr);\nfor (var i = 0; i &lt; arr.length; i++) {\n    var src = arr[i].match(srcReg);\n    //获取图片地址\n    if(src[1]){\n       alert(\'已匹配的图片地址\'+(i+1)+\'：\'+src[1]);\n    }\n    //当然你也可以替换src属性\n    if (src[0]) {\n        var t = src[0].replace(/src/i, &quot;href&quot;);\n        //alert(t);\n    }\n}\n&lt;/script&gt;</pre><br /><p></p>','1335430830','1395291414','','1','0','0','2617','110');
INSERT INTO `post` VALUES('12','2','[{\"id\":24,\"name\":\"php\"},{\"id\":43,\"name\":\"正则\"}]','php保存远程图片到本地 php正则匹配文章中的远程图片地址','','yanue','','','<p>在添加文章的时候，很多情况下我们需要处理文章中的远程图片，将其保存到本地，以免别人网站删除后文章里面就无法访问了。</p><p>因此我们需要正则匹配文章中的图片地址，</p><p>这里我们使用php的正则表达式来实现:</p><pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">$content = \'这里是文章内容，这里插入一张图片测试 &lt;img src=&quot;http://www.yanue.net/wp-content/uploads/2012/03/48ef3a3e1f30e9246abc40834c086e061c95f7521.jpg&quot;&gt;\';\n$content = stripslashes ( $content );\n$img_array = array ();\n// 匹配所有远程图片\npreg_match_all ( &quot;/(src|SRC)=[&quot;|\'| ]{0,}(http://(.*).(gif|jpg|jpeg|bmp|png))/isU&quot;, $content, $img_array );\n// 匹配出来的不重复图片\n$img_array = array_unique ( $img_array [2] );\nprint_r($img_array);</pre></pre><p>上面就将远程图片给匹配出来了，我们需要将其保持到本地。</p><h2>这里需要注意两点：</h2><p>1.图片保存路径（图片存储目录）</p><p>2.实际访问图片地址</p><h2>下面是完整实例：</h2><p>（你可以保存到本地服务器修改相应地方进行测试）</p><pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;!DOCTYPE HTML&gt;\n&lt;html lang=&quot;en-US&quot;&gt;\n&lt;head&gt;\n&lt;meta charset=&quot;UTF-8&quot;&gt;\n&lt;title&gt;php保存远程图片到本地，php正则匹配文章中的图片地址&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;?php\n//保存文章中远程图片到本地\n//作者：yanue;\n// 文件保存目录路径(请更换为你自己的路径， 你可以echo一下)\n$save_path = $_SERVER [\'DOCUMENT_ROOT\'] . \'swfupload/attached/\';\n// 文件保存目录URL\n$save_url = \'/swfupload/attached/\';\n$save_path = realpath ( $save_path ) . \'/\';\n// 图片存储目录\n$imgPath = $save_path . date ( &quot;Ymd&quot; );\n$imgUrl = $save_url . date ( &quot;Ymd&quot; );\n\n// 创建文件夹\nif (! is_dir ( $imgPath )) {\n	@mkdir ( $imgPath, 0777 );\n}\n$content = \'这里是文章内容，这里插入一张图片测试 &lt;img src=&quot;http://www.yanue.net/wp-content/uploads/2012/03/48ef3a3e1f30e9246abc40834c086e061c95f7521.jpg&quot;&gt;\';\n$content = stripslashes ( $content );\n$img_array = array ();\n// 匹配所有远程图片\npreg_match_all ( &quot;/(src|SRC)=[&quot;|\'| ]{0,}(http://(.*).(gif|jpg|jpeg|bmp|png))/isU&quot;, $content, $img_array );\n// 匹配出来的不重复图片\n$img_array = array_unique ( $img_array [2] );\nprint_r($img_array);\n// 时间无限制\nset_time_limit ( 0 );\nforeach ( $img_array as $key =&gt; $value ) {\n	$value = trim ( $value );\n	// 读取远程图片\n	$get_file = @file_get_contents ( $value );\n	// 保存到本地图片名称\n	$imgname = date ( &quot;YmdHis&quot; ) . \'_\' . rand ( 10000, 99999 ) . &quot;.&quot; . substr ( $value, - 3, 3 );\n	// 保存到本地的实际文件地址（包含路径和名称）\n	$fileName = $imgPath . \'/\' . $imgname;\n	// 实际访问的地址\n	$fileurl = $imgUrl . &quot;/&quot; . $imgname;\n	// 文件写入\n	if ($get_file) {\n		$fp = @fopen ( $fileName, &quot;w&quot; );\n		@fwrite ( $fp, $get_file );\n		@fclose ( $fp );\n	}\n	// 替换原来的图片地址\n	$content = ereg_replace ( $value, $fileurl, $content );\n}\necho $content;\n?&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre><br /></pre>&nbsp;<pre class=\"lang_php decode_true\"></pre>','1335470533','1395291543','','1','0','2','1716','116');
INSERT INTO `post` VALUES('13','2','[{\"id\":24,\"name\":\"php\"},{\"id\":42,\"name\":\"zend\"}]','Zend Framework - 取消使用view和layout的方法','','yanue','','','<p>在使用Zend Framework ，一般都会用到layout布局，而view是必不可少的，但有的时候我们并不需要view视图显示，如果你使用了layout，单是禁用view视图，还是有基本的视图框架的，这时候我们需要将layout和view都给禁用了，</p><p>下面是方法，经常用到，不解释。</p><h2>取消使用预设view的方法:</h2><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">$frontController = Zend_Controller_Front::getInstance ();\n$frontController-&gt;setParam ( \'noViewRenderer\', true );\n//或者\n//$this-&gt;getHelper(\'viewRenderer\')-&gt;setNoRender();\n//或者\n//$this-&gt;_helper-&gt;viewRenderer-&gt;setNoRender();</pre></pre><h2>取消使用layout:</h2><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">$this-&gt;getHelper(\'layout\')-&gt;disableLayout();\n//或者\n//$this-&gt;_helper-&gt;layout()-&gt;disableLayout();</pre><br /></pre>','1335670899','1395291635','','1','0','0','1809','122');
INSERT INTO `post` VALUES('14','1','[{\"id\":44,\"name\":\"flash\"}]','网页中插入flash及flash背景透明代码','','yanue','','','<p>网页flash插入代码,<span style=\"color:#ff0000;\">兼容所以浏览器</span>，实现flash背景透明，经常用，不解释。</p><h2>代码</h2><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;object id=&quot;FlashID&quot;\n	classid=&quot;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&quot; width=&quot;980&quot;\n	height=&quot;520&quot;&gt;\n	&lt;param name=&quot;movie&quot; value=&quot;swf/index.swf&quot; /&gt;\n	&lt;param name=&quot;quality&quot; value=&quot;high&quot; /&gt;\n	&lt;param name=&quot;wmode&quot; value=&quot;opaque&quot; /&gt;\n	&lt;param name=&quot;swfversion&quot; value=&quot;6.0.65.0&quot; /&gt;\n	&lt;param name=&quot;wmode&quot; value=&quot;transparent&quot;&gt;\n	&lt;object type=&quot;application/x-shockwave-flash&quot; data=&quot;swf/index.swf&quot;\n		width=&quot;980&quot; height=&quot;520&quot;&gt;\n		&lt;param name=&quot;quality&quot; value=&quot;high&quot; /&gt;\n		&lt;param name=&quot;wmode&quot; value=&quot;opaque&quot; /&gt;\n		&lt;param name=&quot;swfversion&quot; value=&quot;6.0.65.0&quot; /&gt;\n		&lt;param name=&quot;wmode&quot; value=&quot;transparent&quot;&gt;\n	&lt;/object&gt;\n&lt;/object&gt;</pre>请将<span style=\"color: rgb(221, 17, 68); font-family: monospace; font-size: 14px; line-height: 20px; white-space: pre; background-color: rgb(247, 247, 249);\">movie</span>替换为你的<span style=\"color:#ff0000;\">swf</span>文件地址,并重置<span style=\"color:#ff0000;\">width</span>和<span style=\"color:#ff0000;\">height</span>值<br /></pre>','1335902980','1395291836','','1','0','0','1150','131');
INSERT INTO `post` VALUES('15','1','[{\"id\":39,\"name\":\"ie6\"}]','HTML中通过注释判断ie浏览器及css常见hack','','yanue','','','<p>在编写网页代码时，经常遇到的就是兼容性问题，尤其ie6,让很多人头疼，各种浏览器的兼容性是个必须考虑的问题，有些时候无法找到适合所有浏览器的写法，就只能写根据浏览器种类区别的代码，这时就要用到判断代码了。</p><p>而区分浏览器分为两种情况，一种是html代码，一种是css代码，经常用到！</p><p>当然另外一直办法就是直接用js判断，请见我的另外一篇文章：<a href=\"http://www.yanue.net/post-8.html\">js判断浏览器类型及版本详细分析 （js判断ie6）</a></p><h2><strong><span style=\"color:#ff0000;\">1.</span></strong>在HTML代码中</h2><p>区别各种浏览器的代码如下(以ie6为例，这时目前国内用户最多的，得益于盗版xp系统的广泛流传….不过这玩意也是绝大部分兼容性问题的根源，因为其标准化程度实在是….)：</p><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;!–[if IE 6]&gt; 仅IE6可识别 &lt;![endif]–&gt;\n&lt;!–[if lte IE 6]&gt; IE6及其以下版本可识别 &lt;![endif]–&gt;\n&lt;!–[if lt IE 6]&gt; IE6以下版本可识别 &lt;![endif]–&gt;\n&lt;!–[if gte IE 6]&gt; IE6及其以上版本可识别 &lt;![endif]–&gt;\n&lt;!–[if gt IE 6]&gt; IE6以上版本可识别 &lt;![endif]–&gt;\n&lt;!–[if IE]&gt; 所有的IE可识别 &lt;![endif]–&gt;</pre></pre>以上这些代码写法都是针对ie各版本浏览器的，在其他浏览器中这些代码都会被解释为Html注释而直接无视掉，所以要想些针对firefox之类的非ie浏览器，需要这么写：<pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;!–[if !IE]&gt;&lt;!–&gt; 除IE外都可识别 &lt;!–&lt;![endif]–&gt;</pre></pre><p>—————————————————分割线———————————————————</p><h2><strong><span style=\"color:#ff0000;\">2.</span></strong>CSS代码中</h2><p>则可以根据各浏览器自己独立的可识别的特殊代码来编写区分浏览器的代码，例如为IE系列浏览器可读[\\9]，而IE6和IE7可读[*]，另外IE6可辨识[ _ ](下划线)；</p><p>由于CSS读取时是按从上到下来的，同样属性靠后写的生效，因此可以依照顺序写下来，就会让每个浏览器正确的读取到自己看得懂得CSS语法，有效区分各类型或版本：</p><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">.classname{\nbackground:blue; /*Firefox等非IE浏览器背景变蓝色*/\nbackground:red \\9; /*IE8 背景变红色*/\n*background:black; /*IE7 背景变黑色*/\n_background:orange; /*IE6 背景变橘色*/\n}</pre></pre>类似的还有：<pre class=\"prettyprint linenums prettyprinted lang-php \">.classname {\nbackground:black !important; /*非IE6 背景变黑色*/\nbackground:orange; /*IE6 背景变橘色*/\n}</pre>因为其他浏览器可读取「!important;」但IE6却不行。','1336068434','1395292057','','1','0','0','2611','133');
INSERT INTO `post` VALUES('16','1','\"\"','ie-css3.htc让IE浏览器支持CSS3圆角,阴影属性','','yanue','','','<p>.htc文件是IE内核支持Web行为后用来描述此类行为的脚本文件。它们定义了一套方法和属性，程序员几乎可以把这些方法和属性应用到HTML页面上的任何元素上去。Web    行为是非常伟大的因为它们允许程序员把自定义的功能“连接”到现有的元素和控件，而不是必须让用户下载二进制文件（例如ActiveX 控件）来完成这个功能。</p><p>演示：<a href=\"http://demo.yanue.net/css3/ie-css3.html\"></a><a href=\"http://demo.yanue.net/css3/ie-css3.html\">http://demo.yanue.net/css3/ie-css3.html</a><br /></p><p>下载：<a title=\"http://www.yanue.net/demo/css3/ie-css3.rar\" href=\"http://www.yanue.net/demo/css3/ie-css3.rar\"></a><a href=\"http://demo.yanue.net/css3/ie-css3.rar\">http://demo.yanue.net/css3/ie-css3.rar</a><br /></p><p>代码：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n&lt;head&gt;\n	&lt;title&gt;让IE浏览器支持CSS3圆角,阴影属性&lt;/title&gt;\n  &lt;meta name=&quot;author&quot; content=&quot;yanue&quot; /&gt;\n  &lt;meta name=&quot;copyright&quot; content=&quot;www.yanue.net&quot; /&gt;\n	&lt;style type=&quot;text/css&quot;&gt;\n	.test {\n			width:560px;\n			height:400px;\n	  	background-color: #ccc;\n			padding:10px 8px 6px; \n			border: 2px solid #C0C0C0; \n			margin-bottom:10px;\n	  	border-radius: 10px;\n	  	behavior: url(ie-css3.htc);\n	}\n	&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n	&lt;div class=&quot;test&quot;&gt;\n		请到ie下观看效果\n		这个页面是用以测试主机是否有正确的content-type。\n		如果有圆角和阴影，说明支持htc\n		说明详解：&lt;a href=&quot;http://www.yanue.net/post-16.html&quot;&gt;http://www.yanue.net/post-16.html&lt;/a&gt;\n	&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre><p></p><p>Webkit内核的浏览器支持“-webkit-border-radius: 10px;”属性（10px是圆角半径），可以直接解析出圆角；</p><p>Firefox浏览器支持“-moz-border-radius:    10px;”属性，也是可以直接解析出圆角；</p><p>IE系浏览器则需要加上“border-radius: 15px;”的属性。</p><p><strong>注意</strong>：</p><p>    1、behavior的url里一定要填写ie-css3.htc的绝对路径，因为 IE浏览器找该文件是相对当前html文件路径来找的，所以对于Wordpress等动态程序生成的页面一定要填写绝对路径。</p><p>    2、一定要有定位属性：position:relative;</p><p>    3、因为在IE浏览器下这些CSS3效果的实现是要借助于VML，由VML绘制圆角或是投影效果，所以还需要一个z-index属性。z-index属性最好设置得比较大，如2。</p><p>    4、如果在IE浏览器下某些模块无法用此渲染，可以试着绝对定位相应的层，即加上“ width: 400px; height:400px;”属性。</p><p>    5、radius属性的10px是圆角半径，还可以给两个值如“border-radius:&nbsp;10px 5px;”，这样则左上角与右下角半径为10px，右上角与左下角半径为5px。也可以赋4个值，为“上 &nbsp;右 &nbsp;下 &nbsp;左”。</p>','1336598401','1395808778','','1','0','0','1842','142');
INSERT INTO `post` VALUES('17','12','[{\"id\":24,\"name\":\"php\"},{\"id\":12,\"name\":\"mysql\"}]','(原创)php数据库(mysql)分卷导入类及思路详解','','yanue','','','<p>数据库导入导出是一个后台必要拥有的功能，网上一搜，有很多关于数据库导入导出的，但基本上一个大的系统，包含了许多我们并不需要的，而且他们都是自己的后台的形式，我并不喜欢的是拿人家的东西整合到自己的后台，我需要的是自己东西。于是参照了很多，自己写了一个关于分卷导入类。以方便调用。欢迎大家拍砖。<br /></p><p>具体完整实现mysql导入导出功能见：<a href=\"http://yanue.net/post-19.html\">http://yanue.net/post-19.html</a></p><pre class=\"prettyprint linenums prettyprinted lang-php \">//分别是主机，用户名，密码，数据库名，数据库编码\n$db = new DataManage ( \'localhost\', \'root\', \'root\', \'test\', \'utf8\' );\n//sql文件，是否只导入单个sql（即如果有其他分卷也不导入）\n$db-&gt;restore ( \'./backup/20120516211738_all_v1.sql\', false );</pre><p></p><p>这里针对分卷文件是以‘_v1.sql’为结尾，实现单个sql文件及分卷sql导入,分卷导入可选择是否当前分卷导入余下分卷，我们只需要直接调用类即可完成</p><p>对应如何去列出备份的sql文件或选择sql之类的，自己去实现，那个不在这个范畴了，也很简单的。</p><p>实际演示效果：</p><p><img title=\"QQ截图20120517101233\" alt=\"\" src=\"http://www.yanue.net/wp-content/uploads/2012/05/QQ截图20120517101233.png\" width=\"199\" height=\"129\" /><a href=\"http://www.yanue.net/archives/150.html/qq%e6%88%aa%e5%9b%be20120517101056-2\" rel=\"attachment wp-att-157\"><img class=\"alignnone size-full wp-image-157\" title=\"QQ截图20120517101056\" alt=\"\" src=\"http://www.yanue.net/wp-content/uploads/2012/05/QQ截图201205171010561.png\" width=\"417\" height=\"115\" /></a></p><p>还有目前只实现了数据库导入，关于数据库导出的，正在编写功能。</p><p>下面是完整的类代码：（具体思路及实现代码里面都有说明，这里不在赘述）</p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?php\n/**\n * @author yanue\n * @copyright	Copyright (c) 2012 www.yanue.net\n * @link  http://www.yanue.net/archives/150.html\n * 说明：分卷文件是以_v1.sql为结尾\n * 功能：实现单个sql文件及分卷sql导入,分卷导入可选择是否当前分卷导入余下分卷\n * 使用方法：\n *\n *\n * ------------------------------------------------------------------\n//分别是主机，用户名，密码，数据库名，数据库编码\n$db = new DataManage ( \'localhost\', \'root\', \'root\', \'test\', \'utf8\' );\n//sql文件，是否只导入单个sql（即如果有其他分卷也不导入）\n$db-&gt;restore ( \'./backup/20120516211738_all_v1.sql\', false );\n *----------------------------------------------------------------------\n */\nclass DataManage {\n	var $db; // 数据库连接\n	var $database; // 所用数据库\n	var $sqldir; // 数据库备份文件夹\n\n	/**\n	 * 初始化\n	 *\n	 * @param string $host\n	 * @param string $username\n	 * @param string $password\n	 * @param string $database\n	 * @param string $charset\n	 */\n	function __construct($host = \'localhost\', $username = \'root\', $password = \'\', $database = \'test\', $charset = \'utf8\') {\n		$this-&gt;host = $host;\n		$this-&gt;username = $username;\n		$this-&gt;password = $password;\n		$this-&gt;database = $database;\n		$this-&gt;charset = $charset;\n		// 连接数据库\n		$this-&gt;db = mysql_connect ( $this-&gt;host, $this-&gt;username, $this-&gt;password ) or die ( &quot;数据库连接失败.&quot; );\n		// 选择使用哪个数据库\n		mysql_select_db ( $this-&gt;database, $this-&gt;db ) or die ( &quot;无法打开数据库&quot; );\n		// 数据库编码方式\n		mysql_query ( \'SET NAMES \' . $this-&gt;charset, $this-&gt;db );\n	}\n\n	/**\n	 * 导入备份数据\n	 * 说明：分卷文件格式20120516211738_all_v1.sql\n	 *\n	 * @param string $sqlfile\n	 * @param bool $single\n	 */\n	function restore($sqlfile, $single = FALSE) {\n		// 检测文件是否存在\n		if (! file_exists ( $sqlfile )) {\n			exit ( &quot;文件不存在！请检查&quot; );\n		}\n		$this-&gt;lock ( $this-&gt;database );\n		// 获取数据库存储位置\n		$sqlpath = pathinfo ( $sqlfile );\n		$this-&gt;sqldir = $sqlpath [\'dirname\'];\n		// 检测是否包含分卷，将类似20120516211738_all_v1.sql从_v分开,有则说明有分卷\n		$volume = explode ( &quot;_v&quot;, $sqlfile );\n		$volume_path = $volume [0];\n		echo &quot;请勿刷新及关闭浏览器以防止程序被中止，如有不慎！将导致数据库结构受损&lt;br /&gt;&quot;;\n		echo &quot;正在导入备份数据，请稍等！&lt;br /&gt;&quot;;\n		if (empty ( $volume [1] ) || $single) {\n			echo &quot;正在导入sql：&lt;span style=\'color:#f00;\'&gt;&quot; . $sqlfile . \'&lt;/span&gt;&lt;br /&gt;\';\n			// 没有分卷\n			if ($this-&gt;_import ( $sqlfile )) {\n				echo &quot;数据库导入成功！&quot;;\n			} else {\n				exit ( \'数据库导入失败！\' );\n			}\n		} else {\n			// 存在分卷，则获取当前是第几分卷，循环执行余下分卷\n			$volume_id = explode ( &quot;.sq&quot;, $volume [1] );\n			// 当前分卷为$volume_id\n			$volume_id = intval ( $volume_id [0] );\n			while ( $volume_id ) {\n				$tmpfile = $volume_path . &quot;_v&quot; . $volume_id . &quot;.sql&quot;;\n				// 存在其他分卷，继续执行\n				if (file_exists ( $tmpfile )) {\n					// 执行导入方法\n					echo &quot;正在导入分卷$volume_id：&lt;span style=\'color:#f00;\'&gt;&quot; . $tmpfile . \'&lt;/span&gt;&lt;br /&gt;\';\n					if ($this-&gt;_import ( $tmpfile )) {\n\n					} else {\n						exit ( &quot;导入分卷$volume_id：&lt;span style=\'color:#f00;\'&gt;&quot; . $tmpfile . \'&lt;/span&gt;失败！可能是数据库结构已损坏！请尝试从分卷1开始导入\' );\n					}\n				} else {\n					echo &quot;此分卷备份全部导入成功！&lt;br /&gt;&quot;;\n					return;\n				}\n				$volume_id ++;\n			}\n		}\n	}\n\n	/**\n	 * 将sql导入到数据库（普通导入）\n	 *\n	 * @param string $sqlfile\n	 * @return boolean\n	 */\n	private function _import($sqlfile) {\n		$name = basename ( $sqlfile );\n		$sqls = file ( $sqlfile );\n		foreach ( $sqls as $sql ) {\n			str_replace ( &quot;\\r&quot;, &quot;&quot;, $sql );\n			str_replace ( &quot;\\n&quot;, &quot;&quot;, $sql );\n			if (! mysql_query ( trim ( $sql ), $this-&gt;db ))\n				return false;\n		}\n		return true;\n	}\n\n	// 关闭数据库连接\n	private function close() {\n		mysql_close ( $this-&gt;db );\n	}\n\n	// 锁定数据库，以免备份或导入时出错\n	private function lock($tablename, $op = &quot;WRITE&quot;) {\n		if (mysql_query ( &quot;lock tables &quot; . $tablename . &quot; &quot; . $op ))\n			return true;\n		else\n			return false;\n	}\n\n	// 解锁\n	private function unlock() {\n		if (mysql_query ( &quot;unlock tables&quot; ))\n			return true;\n		else\n			return false;\n	}\n\n	// 析构\n	function __destruct() {\n		mysql_query ( &quot;unlock tables&quot;, $this-&gt;db );\n		mysql_close ( $this-&gt;db );\n	}\n}</pre><p></p>','1337192227','1395809267','','1','0','0','1667','150');
INSERT INTO `post` VALUES('18','12','[{\"id\":62,\"name\":\"字段\"},{\"id\":12,\"name\":\"mysql\"}]','php查询mysql表中所有字段详细信息','','yanue','','','<p>有时需要把整个字段的结构信息查询出来，于是我们可以通过<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">SHOW FULL COLUMNS FROM tbl_name [FROM db_name]//列出字段及详情</pre><p>然后通过&nbsp;mysql_fetch_array() 函数就可以了，但是单独这样的话，只会显示第一个字段的详细信息，我们需要统计出字段数量，然后分别循环出来（一开始我就这样，一直找不到原因，只能查出第一个字段，灰常郁闷！）</p><p>下面是实现代码：<br /></p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">// 连接数据库\n$db = mysql_connect ( \'localhost\', \'root\', \'root\' ) or die ( &quot;数据库连接失败.&quot; );\n// 选择使用哪个数据库,这里是 test\nmysql_select_db ( \'test\', $db ) or die ( &quot;无法打开数据库&quot; );\n// 数据库编码方式\nmysql_query ( \'SET NAMES utf8\' );\n// 选择表名\n$table = \'test\';\n// 查找所有字段信息\n$sqlColumns = mysql_query ( &quot;SHOW FULL COLUMNS FROM $table&quot;, $db ) or die ( &quot;错误或该表不存在&quot; );\n// 统计字段总数\n$columnNum = mysql_num_rows ( $sqlColumns );\n$i = 0;\n// 循环每个字段\nwhile ( $i &lt; $columnNum ) {\n	// 获取每个字段信息信息\n	$colname = mysql_fetch_array ( $sqlColumns );\n	// 答应详细字段信息\n	print_r ( $colname );\n	$i ++;\n}\n</pre><p></p><p>下面是相关的sql语句<br /></p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">SHOW DATABASES                                //列出 MySQL Server 数据库。\nSHOW TABLES [FROM db_name]                    //列出数据库数据表。\nSHOW CREATE TABLES tbl_name                    //导出数据表结构。\nSHOW TABLE STATUS [FROM db_name]              //列出数据表及表状态信息。\nSHOW COLUMNS FROM tbl_name [FROM db_name]     //列出资料表字段\nSHOW FIELDS FROM tbl_name [FROM db_name]，DESCRIBE tbl_name [col_name]。\nSHOW FULL COLUMNS FROM tbl_name [FROM db_name]//列出字段及详情\nSHOW FULL FIELDS FROM tbl_name [FROM db_name] //列出字段完整属性\nSHOW INDEX FROM tbl_name [FROM db_name]       //列出表索引。\nSHOW STATUS                                  //列出 DB Server 状态。\nSHOW VARIABLES                               //列出 MySQL 系统环境变量。\nSHOW PROCESSLIST                             //列出执行命令。\nSHOW GRANTS FOR user                         //列出某用户权限<span style=\"font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255);\">&nbsp;</span></pre><p></p>','1337300828','1395809373','','1','0','0','7936','169');
INSERT INTO `post` VALUES('19','12','[{\"id\":24,\"name\":\"php\"},{\"id\":12,\"name\":\"mysql\"},{\"id\":64,\"name\":\"导出\"},{\"id\":63,\"name\":\"导入\"}]','(原创)php数据库导入导出类，mysql备份恢复分卷处理，调用简单','','yanue','','','<h2>实现功能：</h2><p>实现mysql数据库分卷备份,选择表进行备份,实现单个sql文件及分卷sql导入。</p><p></p><p><strong>分卷导出思路</strong>：统计sql语句变量的长度，按1个字符当成1 字节比较，如果大于设定分卷大小，则写入一个sql文件（我也不知道这样统计是否稳当，这也是借鉴其他的人的）。</p><p></p><p><strong>分卷导入思路</strong>：按行读取sql文件，将每一行当作完整的sql语句存到数组再循环执行插入数据库就可以了，但是在创建表语句分了多行，这个需要单独处理（就这个花了我好长时间的）；</p><p></p><p>（哇，感觉文章好长啊！主要是那个类文件给占用了）。</p><p></p><p><span style=\"color: #ff0000;\">更新时间： 2012年10月6日</span></p><p>更新说明：&nbsp;</p><p>1.去除sql导入的时候排除sql文件里面的注释\'-- \' 从而解决sql中单双引号不能导入</p><p>2.单行读取后的sql直接执行，避免重新将sql语句组合到数组中再从数组中读取导入sql，提高效率</p><p></p><p><strong>下载地址</strong>:&nbsp;<span style=\"color: #ff0000;\"><a title=\"Dbmanage\" href=\"https://github.com/yanue/Dbmanage\" target=\"_blank\"><span style=\"color: #ff0000;\">https://github.com/yanue/Dbmanage</span></a></span></p><p></p><h2>导出后的sql文件格式如下：</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">--\n-- MySQL database dump\n-- Created by DBManage class, Power By yanue. \n-- http://www.yanue.net \n--\n-- 主机: localhost\n-- 生成日期: 2012 年  10 月 06 日 22:32\n-- MySQL版本: 5.1.50-community\n-- PHP 版本: 5.3.9-ZS5.6.0\n\n--\n-- 数据库: `test`\n--\n\n-- -------------------------------------------------------\n\n--\n-- 表的结构aa\n--\n\nDROP TABLE IF EXISTS `aa`;\nCREATE TABLE `aa` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `content` text NOT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;\n\n--\n-- 转存表中的数据 aa\n--\n\nINSERT INTO `aa` VALUES(\'1\',\'&lt;p id=&quot;test&quot;&gt;&lt;span class=\'hahh\' style=&quot;line-height:;&quot;&gt;我是测试数据 呵呵&lt;/span&gt;&lt;/p&gt;\');</pre><h2>下面是类代码：</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?php\n/**\n * @author yanue\n * @copyright  Copyright (c) 2012 yanue.net\n * @link  http://yanue.net/archives/174.html\n * @version 1.1\n * 创建时间： 2012年5月21日\n\n更新时间： 2012年10月6日\n更新说明： 1.去除sql导入的时候排除sql文件里面的注释\'-- \' 从而解决sql中单双引号不能导入\n2.单行读取后的sql直接执行，避免重新将sql语句组合到数组中再从数组中读取导入sql，提高效率\n\n * 说明：分卷文件是以_v1.sql为结尾(20120522021241_all_v1.sql)\n * 功能：实现mysql数据库分卷备份,选择表进行备份,实现单个sql文件及分卷sql导入\n * 使用方法：\n *\n * ------1. 数据库备份（导出）------------------------------------------------------------\n//分别是主机，用户名，密码，数据库名，数据库编码\n$db = new DBManage ( \'localhost\', \'root\', \'root\', \'test\', \'utf8\' );\n// 参数：备份哪个表(可选),备份目录(可选，默认为backup),分卷大小(可选,默认2000，即2M)\n$db-&gt;backup ();\n * ------2. 数据库恢复（导入）------------------------------------------------------------\n//分别是主机，用户名，密码，数据库名，数据库编码\n$db = new DBManage ( \'localhost\', \'root\', \'root\', \'test\', \'utf8\' );\n//参数：sql文件\n$db-&gt;restore ( \'./backup/20120516211738_all_v1.sql\');\n *----------------------------------------------------------------------\n */\nclass DbManage {\n    var $db; // 数据库连接\n    var $database; // 所用数据库\n    var $sqldir; // 数据库备份文件夹\n    // 换行符\n    private $ds = &quot;n&quot;;\n    // 存储SQL的变量\n    public $sqlContent = &quot;&quot;;\n    // 每条sql语句的结尾符\n    public $sqlEnd = &quot;;&quot;;\n\n    /**\n     * 初始化\n     *\n     * @param string $host\n     * @param string $username\n     * @param string $password\n     * @param string $database\n     * @param string $charset\n     */\n    function __construct($host = \'localhost\', $username = \'root\', $password = \'\', $database = \'test\', $charset = \'utf8\') {\n        $this-&gt;host = $host;\n        $this-&gt;username = $username;\n        $this-&gt;password = $password;\n        $this-&gt;database = $database;\n        $this-&gt;charset = $charset;\n        set_time_limit(0);//无时间限制\n@ob_end_flush();\n        // 连接数据库\n        $this-&gt;db = @mysql_connect ( $this-&gt;host, $this-&gt;username, $this-&gt;password ) or die( \'&lt;p class=&quot;dbDebug&quot;&gt;&lt;span class=&quot;err&quot;&gt;Mysql Connect Error : &lt;/span&gt;\'.mysql_error().\'&lt;/p&gt;\');\n        // 选择使用哪个数据库\n        mysql_select_db ( $this-&gt;database, $this-&gt;db ) or die(\'&lt;p class=&quot;dbDebug&quot;&gt;&lt;span class=&quot;err&quot;&gt;Mysql Connect Error:&lt;/span&gt;\'.mysql_error().\'&lt;/p&gt;\');\n        // 数据库编码方式\n        mysql_query ( \'SET NAMES \' . $this-&gt;charset, $this-&gt;db );\n\n    }\n\n    /*\n     * 新增查询数据库表\n     */\n    function getTables() {\n        $res = mysql_query ( &quot;SHOW TABLES&quot; );\n        $tables = array ();\n        while ( $row = mysql_fetch_array ( $res ) ) {\n            $tables [] = $row [0];\n        }\n        return $tables;\n    }\n\n    /*\n     *\n     * ------------------------------------------数据库备份start----------------------------------------------------------\n     */\n\n    /**\n     * 数据库备份\n     * 参数：备份哪个表(可选),备份目录(可选，默认为backup),分卷大小(可选,默认2000，即2M)\n     *\n     * @param $string $dir\n     * @param int $size\n     * @param $string $tablename\n     */\n    function backup($tablename = \'\', $dir, $size) {\n        $dir = $dir ? $dir : \'./backup/\';\n        // 创建目录\n        if (! is_dir ( $dir )) {\n            mkdir ( $dir, 0777, true ) or die ( \'创建文件夹失败\' );\n        }\n        $size = $size ? $size : 2048;\n        $sql = \'\';\n        // 只备份某个表\n        if (! empty ( $tablename )) {\n            if(@mysql_num_rows(mysql_query(&quot;SHOW TABLES LIKE \'&quot;.$tablename.&quot;\'&quot;)) == 1) {\n             } else {\n                $this-&gt;_showMsg(\'表-&lt;b&gt;\' . $tablename .\'&lt;/b&gt;-不存在，请检查！\',true);\n                die();\n            }\n            $this-&gt;_showMsg(\'正在备份表 &lt;span class=&quot;imp&quot;&gt;\' . $tablename.\'&lt;/span&gt;\');\n            // 插入dump信息\n            $sql = $this-&gt;_retrieve ();\n            // 插入表结构信息\n            $sql .= $this-&gt;_insert_table_structure ( $tablename );\n            // 插入数据\n            $data = mysql_query ( &quot;select * from &quot; . $tablename );\n            // 文件名前面部分\n            $filename = date ( \'YmdHis\' ) . &quot;_&quot; . $tablename;\n            // 字段数量\n            $num_fields = mysql_num_fields ( $data );\n            // 第几分卷\n            $p = 1;\n            // 循环每条记录\n            while ( $record = mysql_fetch_array ( $data ) ) {\n                // 单条记录\n                $sql .= $this-&gt;_insert_record ( $tablename, $num_fields, $record );\n                // 如果大于分卷大小，则写入文件\n                if (strlen ( $sql ) &gt;= $size * 1024) {\n                    $file = $filename . &quot;_v&quot; . $p . &quot;.sql&quot;;\n                    if ($this-&gt;_write_file ( $sql, $file, $dir )) {\n                        $this-&gt;_showMsg(&quot;表-&lt;b&gt;&quot; . $tablename . &quot;&lt;/b&gt;-卷-&lt;b&gt;&quot; . $p . &quot;&lt;/b&gt;-数据备份完成,备份文件 [ &lt;span class=\'imp\'&gt;&quot; .$dir . $file .&quot;&lt;/span&gt; ]&quot;);\n                    } else {\n                        $this-&gt;_showMsg(&quot;备份表 -&lt;b&gt;&quot; . $tablename . &quot;&lt;/b&gt;- 失败&quot;,true);\n                        return false;\n                    }\n                    // 下一个分卷\n                    $p ++;\n                    // 重置$sql变量为空，重新计算该变量大小\n                    $sql = &quot;&quot;;\n                }\n            }\n            // 及时清除数据\n            unset($data,$record);\n            // sql大小不够分卷大小\n            if ($sql != &quot;&quot;) {\n                $filename .= &quot;_v&quot; . $p . &quot;.sql&quot;;\n                if ($this-&gt;_write_file ( $sql, $filename, $dir )) {\n                    $this-&gt;_showMsg( &quot;表-&lt;b&gt;&quot; . $tablename . &quot;&lt;/b&gt;-卷-&lt;b&gt;&quot; . $p . &quot;&lt;/b&gt;-数据备份完成,备份文件 [ &lt;span class=\'imp\'&gt;&quot; .$dir . $filename .&quot;&lt;/span&gt; ]&quot;);\n                } else {\n                    $this-&gt;_showMsg(&quot;备份卷-&lt;b&gt;&quot; . $p . &quot;&lt;/b&gt;-失败&lt;br /&gt;&quot;);\n                    return false;\n                }\n            }\n            $this-&gt;_showMsg(&quot;恭喜您! &lt;span class=\'imp\'&gt;备份成功&lt;/span&gt;&quot;);\n        } else {\n            $this-&gt;_showMsg(\'正在备份\');\n            // 备份全部表\n            if ($tables = mysql_query ( &quot;show table status from &quot; . $this-&gt;database )) {\n                $this-&gt;_showMsg(&quot;读取数据库结构成功！&quot;);\n            } else {\n                $this-&gt;_showMsg(&quot;读取数据库结构失败！&quot;);\n                exit ( 0 );\n            }\n            // 插入dump信息\n            $sql .= $this-&gt;_retrieve ();\n            // 文件名前面部分\n            $filename = date ( \'YmdHis\' ) . &quot;_all&quot;;\n            // 查出所有表\n            $tables = mysql_query ( \'SHOW TABLES\' );\n            // 第几分卷\n            $p = 1;\n            // 循环所有表\n            while ( $table = mysql_fetch_array ( $tables ) ) {\n                // 获取表名\n                $tablename = $table [0];\n                // 获取表结构\n                $sql .= $this-&gt;_insert_table_structure ( $tablename );\n                $data = mysql_query ( &quot;select * from &quot; . $tablename );\n                $num_fields = mysql_num_fields ( $data );\n\n                // 循环每条记录\n                while ( $record = mysql_fetch_array ( $data ) ) {\n                    // 单条记录\n                    $sql .= $this-&gt;_insert_record ( $tablename, $num_fields, $record );\n                    // 如果大于分卷大小，则写入文件\n                    if (strlen ( $sql ) &gt;= $size * 1000) {\n\n                        $file = $filename . &quot;_v&quot; . $p . &quot;.sql&quot;;\n                        // 写入文件\n                        if ($this-&gt;_write_file ( $sql, $file, $dir )) {\n                            $this-&gt;_showMsg(&quot;-卷-&lt;b&gt;&quot; . $p . &quot;&lt;/b&gt;-数据备份完成,备份文件 [ &lt;span class=\'imp\'&gt;&quot;.$dir.$file.&quot;&lt;/span&gt; ]&quot;);\n                        } else {\n                            $this-&gt;_showMsg(&quot;卷-&lt;b&gt;&quot; . $p . &quot;&lt;/b&gt;-备份失败!&quot;,true);\n                            return false;\n                        }\n                        // 下一个分卷\n                        $p ++;\n                        // 重置$sql变量为空，重新计算该变量大小\n                        $sql = &quot;&quot;;\n                    }\n                }\n            }\n            // sql大小不够分卷大小\n            if ($sql != &quot;&quot;) {\n                $filename .= &quot;_v&quot; . $p . &quot;.sql&quot;;\n                if ($this-&gt;_write_file ( $sql, $filename, $dir )) {\n                    $this-&gt;_showMsg(&quot;-卷-&lt;b&gt;&quot; . $p . &quot;&lt;/b&gt;-数据备份完成,备份文件 [ &lt;span class=\'imp\'&gt;&quot;.$dir.$filename.&quot;&lt;/span&gt; ]&quot;);\n                } else {\n                    $this-&gt;_showMsg(&quot;卷-&lt;b&gt;&quot; . $p . &quot;&lt;/b&gt;-备份失败&quot;,true);\n                    return false;\n                }\n            }\n            $this-&gt;_showMsg(&quot;恭喜您! &lt;span class=\'imp\'&gt;备份成功&lt;/span&gt;&quot;);\n        }\n    }\n\n    //  及时输出信息\n    private function _showMsg($msg,$err=false){\n        $err = $err ? &quot;&lt;span class=\'err\'&gt;ERROR:&lt;/span&gt;&quot; : \'\' ;\n        echo &quot;&lt;p class=\'dbDebug\'&gt;&quot;.$err . $msg.&quot;&lt;/p&gt;&quot;;\n        flush();\n\n    }\n\n    /**\n     * 插入数据库备份基础信息\n     *\n     * @return string\n     */\n    private function _retrieve() {\n        $value = \'\';\n        $value .= \'--\' . $this-&gt;ds;\n        $value .= \'-- MySQL database dump\' . $this-&gt;ds;\n        $value .= \'-- Created by DbManage class, Power By yanue. \' . $this-&gt;ds;\n        $value .= \'-- http://yanue.net \' . $this-&gt;ds;\n        $value .= \'--\' . $this-&gt;ds;\n        $value .= \'-- 主机: \' . $this-&gt;host . $this-&gt;ds;\n        $value .= \'-- 生成日期: \' . date ( \'Y\' ) . \' 年  \' . date ( \'m\' ) . \' 月 \' . date ( \'d\' ) . \' 日 \' . date ( \'H:i\' ) . $this-&gt;ds;\n        $value .= \'-- MySQL版本: \' . mysql_get_server_info () . $this-&gt;ds;\n        $value .= \'-- PHP 版本: \' . phpversion () . $this-&gt;ds;\n        $value .= $this-&gt;ds;\n        $value .= \'--\' . $this-&gt;ds;\n        $value .= \'-- 数据库: `\' . $this-&gt;database . \'`\' . $this-&gt;ds;\n        $value .= \'--\' . $this-&gt;ds . $this-&gt;ds;\n        $value .= \'-- -------------------------------------------------------\';\n        $value .= $this-&gt;ds . $this-&gt;ds;\n        return $value;\n    }\n\n    /**\n     * 插入表结构\n     *\n     * @param unknown_type $table\n     * @return string\n     */\n    private function _insert_table_structure($table) {\n        $sql = \'\';\n        $sql .= &quot;--&quot; . $this-&gt;ds;\n        $sql .= &quot;-- 表的结构&quot; . $table . $this-&gt;ds;\n        $sql .= &quot;--&quot; . $this-&gt;ds . $this-&gt;ds;\n\n        // 如果存在则删除表\n        $sql .= &quot;DROP TABLE IF EXISTS `&quot; . $table . \'`\' . $this-&gt;sqlEnd . $this-&gt;ds;\n        // 获取详细表信息\n        $res = mysql_query ( \'SHOW CREATE TABLE `\' . $table . \'`\' );\n        $row = mysql_fetch_array ( $res );\n        $sql .= $row [1];\n        $sql .= $this-&gt;sqlEnd . $this-&gt;ds;\n        // 加上\n        $sql .= $this-&gt;ds;\n        $sql .= &quot;--&quot; . $this-&gt;ds;\n        $sql .= &quot;-- 转存表中的数据 &quot; . $table . $this-&gt;ds;\n        $sql .= &quot;--&quot; . $this-&gt;ds;\n        $sql .= $this-&gt;ds;\n        return $sql;\n    }\n\n    /**\n     * 插入单条记录\n     *\n     * @param string $table\n     * @param int $num_fields\n     * @param array $record\n     * @return string\n     */\n    private function _insert_record($table, $num_fields, $record) {\n        // sql字段逗号分割\n        $insert = \'\';\n        $comma = &quot;&quot;;\n        $insert .= &quot;INSERT INTO `&quot; . $table . &quot;` VALUES(&quot;;\n        // 循环每个子段下面的内容\n        for($i = 0; $i &lt; $num_fields; $i ++) {\n            $insert .= ($comma . &quot;\'&quot; . mysql_escape_string ( $record [$i] ) . &quot;\'&quot;);\n            $comma = &quot;,&quot;;\n        }\n        $insert .= &quot;);&quot; . $this-&gt;ds;\n        return $insert;\n    }\n\n    /**\n     * 写入文件\n     *\n     * @param string $sql\n     * @param string $filename\n     * @param string $dir\n     * @return boolean\n     */\n    private function _write_file($sql, $filename, $dir) {\n        $dir = $dir ? $dir : \'./backup/\';\n        // 创建目录\n        if (! is_dir ( $dir )) {\n            mkdir ( $dir, 0777, true );\n        }\n        $re = true;\n        if (! @$fp = fopen ( $dir . $filename, &quot;w+&quot; )) {\n            $re = false;\n            $this-&gt;_showMsg(&quot;打开sql文件失败！&quot;,true);\n        }\n        if (! @fwrite ( $fp, $sql )) {\n            $re = false;\n            $this-&gt;_showMsg(&quot;写入sql文件失败，请文件是否可写&quot;,true);\n        }\n        if (! @fclose ( $fp )) {\n            $re = false;\n            $this-&gt;_showMsg(&quot;关闭sql文件失败！&quot;,true);\n        }\n        return $re;\n    }\n\n    /*\n     *\n     * -------------------------------上：数据库导出-----------分割线----------下：数据库导入--------------------------------\n     */\n\n    /**\n     * 导入备份数据\n     * 说明：分卷文件格式20120516211738_all_v1.sql\n     * 参数：文件路径(必填)\n     *\n     * @param string $sqlfile\n     */\n    function restore($sqlfile) {\n        // 检测文件是否存在\n        if (! file_exists ( $sqlfile )) {\n            $this-&gt;_showMsg(&quot;sql文件不存在！请检查&quot;,true);\n            exit ();\n        }\n        $this-&gt;lock ( $this-&gt;database );\n        // 获取数据库存储位置\n        $sqlpath = pathinfo ( $sqlfile );\n        $this-&gt;sqldir = $sqlpath [\'dirname\'];\n        // 检测是否包含分卷，将类似20120516211738_all_v1.sql从_v分开,有则说明有分卷\n        $volume = explode ( &quot;_v&quot;, $sqlfile );\n        $volume_path = $volume [0];\n        $this-&gt;_showMsg(&quot;请勿刷新及关闭浏览器以防止程序被中止，如有不慎！将导致数据库结构受损&quot;);\n        $this-&gt;_showMsg(&quot;正在导入备份数据，请稍等！&quot;);\n        if (empty ( $volume [1] )) {\n            $this-&gt;_showMsg ( &quot;正在导入sql：&lt;span class=\'imp\'&gt;&quot; . $sqlfile . \'&lt;/span&gt;\');\n            // 没有分卷\n            if ($this-&gt;_import ( $sqlfile )) {\n                $this-&gt;_showMsg( &quot;数据库导入成功！&quot;);\n            } else {\n                 $this-&gt;_showMsg(\'数据库导入失败！\',true);\n                exit ();\n            }\n        } else {\n            // 存在分卷，则获取当前是第几分卷，循环执行余下分卷\n            $volume_id = explode ( &quot;.sq&quot;, $volume [1] );\n            // 当前分卷为$volume_id\n            $volume_id = intval ( $volume_id [0] );\n            while ( $volume_id ) {\n                $tmpfile = $volume_path . &quot;_v&quot; . $volume_id . &quot;.sql&quot;;\n                // 存在其他分卷，继续执行\n                if (file_exists ( $tmpfile )) {\n                    // 执行导入方法\n                    $this-&gt;msg .= &quot;正在导入分卷 $volume_id ：&lt;span style=\'color:#f00;\'&gt;&quot; . $tmpfile . \'&lt;/span&gt;&lt;br /&gt;\';\n                    if ($this-&gt;_import ( $tmpfile )) {\n\n                    } else {\n                        $volume_id = $volume_id ? $volume_id :1;\n                        exit ( &quot;导入分卷：&lt;span style=\'color:#f00;\'&gt;&quot; . $tmpfile . \'&lt;/span&gt;失败！可能是数据库结构已损坏！请尝试从分卷1开始导入\' );\n                    }\n                } else {\n                    $this-&gt;msg .= &quot;此分卷备份全部导入成功！&lt;br /&gt;&quot;;\n                    return;\n                }\n                $volume_id ++;\n            }\n        }if (empty ( $volume [1] )) {\n            $this-&gt;_showMsg ( &quot;正在导入sql：&lt;span class=\'imp\'&gt;&quot; . $sqlfile . \'&lt;/span&gt;\');\n            // 没有分卷\n            if ($this-&gt;_import ( $sqlfile )) {\n                $this-&gt;_showMsg( &quot;数据库导入成功！&quot;);\n            } else {\n                 $this-&gt;_showMsg(\'数据库导入失败！\',true);\n                exit ();\n            }\n        } else {\n            // 存在分卷，则获取当前是第几分卷，循环执行余下分卷\n            $volume_id = explode ( &quot;.sq&quot;, $volume [1] );\n            // 当前分卷为$volume_id\n            $volume_id = intval ( $volume_id [0] );\n            while ( $volume_id ) {\n                $tmpfile = $volume_path . &quot;_v&quot; . $volume_id . &quot;.sql&quot;;\n                // 存在其他分卷，继续执行\n                if (file_exists ( $tmpfile )) {\n                    // 执行导入方法\n                    $this-&gt;msg .= &quot;正在导入分卷 $volume_id ：&lt;span style=\'color:#f00;\'&gt;&quot; . $tmpfile . \'&lt;/span&gt;&lt;br /&gt;\';\n                    if ($this-&gt;_import ( $tmpfile )) {\n\n                    } else {\n                        $volume_id = $volume_id ? $volume_id :1;\n                        exit ( &quot;导入分卷：&lt;span style=\'color:#f00;\'&gt;&quot; . $tmpfile . \'&lt;/span&gt;失败！可能是数据库结构已损坏！请尝试从分卷1开始导入\' );\n                    }\n                } else {\n                    $this-&gt;msg .= &quot;此分卷备份全部导入成功！&lt;br /&gt;&quot;;\n                    return;\n                }\n                $volume_id ++;\n            }\n        }\n    }\n\n    /**\n     * 将sql导入到数据库（普通导入）\n     *\n     * @param string $sqlfile\n     * @return boolean\n     */\n    private function _import($sqlfile) {\n        // sql文件包含的sql语句数组\n        $sqls = array ();\n        $f = fopen ( $sqlfile, &quot;rb&quot; );\n        // 创建表缓冲变量\n        $create_table = \'\';\n        while ( ! feof ( $f ) ) {\n            // 读取每一行sql\n            $line = fgets ( $f );\n            // 这一步为了将创建表合成完整的sql语句\n            // 如果结尾没有包含\';\'(即为一个完整的sql语句，这里是插入语句)，并且不包含\'ENGINE=\'(即创建表的最后一句)\n            if (! preg_match ( \'/;/\', $line ) || preg_match ( \'/ENGINE=/\', $line )) {\n                // 将本次sql语句与创建表sql连接存起来\n                $create_table .= $line;\n                // 如果包含了创建表的最后一句\n                if (preg_match ( \'/ENGINE=/\', $create_table)) {\n                    //执行sql语句创建表\n                    $this-&gt;_insert_into($create_table);\n                    // 清空当前，准备下一个表的创建\n                    $create_table = \'\';\n                }\n                // 跳过本次\n                continue;\n            }\n            //执行sql语句\n            $this-&gt;_insert_into($line);\n        }\n        fclose ( $f );\n        return true;\n    }\n\n    //插入单条sql语句\n    private function _insert_into($sql){\n        if (! mysql_query ( trim ( $sql ) )) {\n            $this-&gt;msg .= mysql_error ();\n            return false;\n        }\n    }\n\n    /*\n     * -------------------------------数据库导入end---------------------------------\n     */\n\n    // 关闭数据库连接\n    private function close() {\n        mysql_close ( $this-&gt;db );\n    }\n\n    // 锁定数据库，以免备份或导入时出错\n    private function lock($tablename, $op = &quot;WRITE&quot;) {\n        if (mysql_query ( &quot;lock tables &quot; . $tablename . &quot; &quot; . $op ))\n            return true;\n        else\n            return false;\n    }\n\n    // 解锁\n    private function unlock() {\n        if (mysql_query ( &quot;unlock tables&quot; ))\n            return true;\n        else\n            return false;\n    }\n\n    // 析构\n    function __destruct() {\n        if($this-&gt;db){\n            mysql_query ( &quot;unlock tables&quot;, $this-&gt;db );\n            mysql_close ( $this-&gt;db );\n        }\n    }\n\n}</pre>','1337649888','1395809958','','1','0','9','5939','174');
INSERT INTO `post` VALUES('20','2','[{\"id\":6,\"name\":\".htaccess\"},{\"id\":42,\"name\":\"zend\"}]','使用.htaccess实现Zend Framework在共享主机中访问public目录','','yanue','','','<p>常用的Zend&nbsp;Framework项目的目录结构如下：</p><p><a href=\"http://www.zendchina.net/batch.download.php?aid=565\" target=\"_blank\"><img src=\"http://www.zendchina.net/attachments/2010/02/1_201002241831011e4vL.gif\" alt=\"\" border=\"0\" /></a></p><p>当我们使用上面的目录结构时，需要将所有能通过浏览器访问的文件放在public目录，然后修改Web服务器的配置将文档目录指向此目录。</p><p>但问题是一般情况下，在使用共享的虚拟主机时，我们没有修改配置文件的权限，解决这个问题的简单方法，将public目录中的.htaccess文件移至根目录，然后修改内容如下：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">RewriteEngine On\nRewriteRule ^\\.htaccess$ - [F]\nRewriteCond %{REQUEST_URI} =&quot;&quot;\nRewriteRule ^.*$ /public/index.php [NC,L]\nRewriteCond %{REQUEST_URI} !^/public.*$\nRewriteRule ^(.*)$ /public/$1\nRewriteCond %{REQUEST_FILENAME} -f\nRewriteRule ^.*$ - [NC,L]\nRewriteRule ^public/.*$ /public/index.php [NC,L]\n</pre><p>要求服务器支持Rewrite且能够解析.htaccess。<br /></p><p>查看原文：<a href=\"http://www.alberton.info/zend_framework_mod_rewrite_shared_hosting.html\">http://www.alberton.info/zend_framework_mod_rewrite_shared_hosting.html</a></p>','1337724485','1395895673','','1','0','0','1447','192');
INSERT INTO `post` VALUES('21','2','[{\"id\":42,\"name\":\"zend\"},{\"id\":24,\"name\":\"php\"},{\"id\":65,\"name\":\"路由\"}]','Zend Framework中路由router及路由协议route详解','','yanue','','','<h2>1）概述：</h2><p>路由器主要负责解析一个请求并且决定什么module、controller、action被请求；它同时也定义了一种方法来实现用户自定义路由，这也使得它成为最有用的一个MVC组组件；</p><h2>2）设计：</h2><p>作为一个应用中的路由组件是很专业的，理所当然的路由组件是抽象的，这样允许作为开发者的我们很容易的设计出我们自定义的路由协议。 然而，默认的路由组件其实已经服务得我们很好了。记住，如果我们需要一个非标准的路由协议时候，我们就可以自定义一个自己的路由协议，而不用采用默认的路 由协议。</p><p>事实上，路由组件有两个部分：<strong>路由器（或者称路由对象《the router》）</strong>和<strong>路由协议&nbsp;(或者称&nbsp;路由过程《the route》)</strong>。 路由器主要负责管理和运行路由链，路由过程事实上主要负责匹配我们预先定义好的路由协议，意思就是我们只有一个路由器，但我们可以有许多路由协议。 （ps：不知道这样理解是不是有问题，原文是这样的：The router actually has two parts, the router and the route. The router is responsible for managing and running the route chain, and a route is responsible for actually matching the request against the predefined rule of the route. This means that we have one router to many routes.看到后面就会清楚一点的。)</p><p>路由组件基于两个接口：<strong>Zend_Controller_Router_Interface</strong> 和 <strong>Zend_Controller_Router_Route_Interface</strong>；同样路由组件的两个抽象类：<strong>Zend_Controller_Router_Abstact</strong>和<strong>Zend_Controller_Router_Route_Abstract</strong>分 别是实现了上面对应的两个接口，同时这两个抽象类也就提供给我们一些基本的函数来操作路由组件。如果我们需要创建我们自定义的路由器（the router）或者路由协议(the route)，我们就可以分别继承上面的两个抽象类。路由的过程发生派遣过程的最开始，并且路由解析仅仅发生一次。路由协议在任何控制器动作 （controller action）被派遣之前被解析，一旦路由协议被解析后，路由器将会把解析出得到的信息传递给请求对象（Request object），这些信息包括moduel、controller、action、用户params等。然后派遣器（Dispatcher）就会按照这些 信息派遣正确的控制器动作。路由器也有两个前端控制器插件钩子，就是在我们之前提到过的routeStartup和routeShutdown，他们在路 由解析前后分别被调用。</p><h2>3) 默认情况：</h2><p>默认条件下，我们的路由器是使用Zend_Controller_Router_Rewrite，是基于HTTP路由的，意味着它期望一个请 求是HTTP请求并且请求对象是使用Zend_Controller_Request_Http（或者是继承它的对象），这两个默认类，在我们之前的那个 表中都有见到过。默认条件下，路由协议是使用Zend_Controller_Router_Route_Module类。</p><h2>4) 使用路由：</h2><p>使用路由既可以让之很复杂，同时也能让它很简单，这是归于你的应用。然而使用一个路由是很简单的，你可以创建一个路由器让它管你的路由协议，然后你可以添加你的路由协议给路由器，这样就OK了！</p><p>不同的路由协议如下所示：</p><ul>    <li><strong>Zend_Controller_Router_Route</strong></li>    <li><strong>Zend_Controller_Router_Route_Static</strong></li>    <li><strong>Zend_Controller_Router_Route_Regex</strong></li>    <li><strong>Zend_Controller_Router_Route_Hostname</strong></li>    <li><strong>Zend_Controller_Router_Route_Chain</strong></li>    <li><strong>Default Routes</strong></li></ul><p>其中我们使用到的最基本的路由协议类数Zend_Controller_Router_Route，它提供给们少量的控制。如果想要更精密的控 制，我们可以采用正则路由协议：Zend_Controller_Router_Route_Regex，它提供给我们可以通过PHP的正则来使用，很强 大。其他的几个路由协议类分别有不同的专业化。到此为止，首先让我们来看看路由器是如何让路由协议与之一起工作的。</p><p>在我们添加任何路由协议之前我们必须要得到一个路由器（the router）实例，我们可以通过自己创建一个新的路由器或者是通过前端控制器（Front Controller）来得到一个默认的路由器：</p><div>    <div><pre class=\"prettyprint linenums prettyprinted lang-php \">//我们实例化一个默认的路由器\n$router = new Zend_Controller_Router_Rewrite();\n//或者我们可以通过前端控制器的getRouter()方法得到一个默认的路由器实例\n$router = $front-&gt;getRouter()</pre>    </div></div><p>一旦我们有了路由器实例，我们就能通过它来添加我们自定义的一些路由协议：</p><div>    <div><pre class=\"prettyprint linenums prettyprinted lang-php \">$router-&gt;addRoute(\'myRoute\',$route);\n$router-&gt;addRoute(\'myRoute1\',$route)</pre>    </div></div><p>除此之外，我们还可以通过Zend_Config_Ini和Zend_Config_Xml对象来添加我们的路由协议：</p><div>    <div><pre class=\"prettyprint linenums prettyprinted lang-php \">$config = new Zend_Config_Ini(\'/path/to/config.ini\', \'production\');\n$router-&gt;addConfig($config, \'routes\');</pre>    </div></div><p>其实路由器也提供给我们不同的方法来得到和设置包含在它内部的信息，一些重要的方法如下：</p><ul>    <li>addDefaultRoutes() and removeDefaultRoutes()//添加或者移除默认的路由协议。</li>    <li>assemble()//基于给定的路由协议确定URI，这个方法通过Url视图助手（View Helper）使用提供它的链接地址。</li>    <li>getCurrentRoute() and getCurrentRouteName()</li>    <li>getRoute(), getRoutes(), hasRoute(), and removeRoute();</li></ul><p>5)路由协议详解：</p><p><strong>【A】Zend_Controller_Router_Route</strong></p><p>Zend_Controlloer_Router_Route路由协议提供了我们很强的功能，同时也提供了一些简单的操作，为了能够使用该路由协议，我们必须先实例化它，然后用路由器加载它：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">//创建一个路由器实例\n$router = new Zend_Controller_Router_Rewrite();\n//创建一个路由协议实例\n$route = new Zend_Controller_Router_Route(\n　　\'product/:ident\',\n　　array(\n　　　　\'controller\' =&gt; \'products\',\n　　　　\'action\' =&gt; \'view\'\n　　)\n);\n//使用路由器装载路由协议\n$router-&gt;addRoute(\'product\', $route);</pre><p>在这个例子中，我们试图匹配Url指定到一个单一的产品，就像http://domain.com/product/choclolat-bar。 为了实现这点，我们在路由协议中传递了2个变量到路由协议Zend_Controller_Router_Route的构造其中。第一个变量 （\'product/:indent\'）就是匹配的路径，第二个变量(array变量)是路由到的动作控制器；其实路由协议也提供了第三个变量用于正则匹 配，我们将在第二个路由协议中见到；</p><p>路径使用一个特别的标识来告诉路由协议如何匹配到路径中的每一个段，这个标识有有两种，可以帮助我们创建我们的路由协议，如下所示：</p><p>a) <strong>:</strong></p><p>b) *</p><p>冒号(:) 指定了一个段，这个段包含一个变量用于传递到我们动作控制器中的变量，我们要设置好事先的变量名，比如在上面我们的变量名就是\'ident\'，因此，倘若 我们访问http://domian.com/product/chocoloate-bar将会创建一个变量名为ident并且其值是 \'chocoloate-bar\'的变量，我们然后就可以在我们的动作控制器ProductsController/viewAction下获取到它的 值：$this-&gt;_getParam(\'ident\');同时我们还可以在路由协议中设置ident的默认的值，即可以在路由协议类的第二个数组变量中增加一个元素（比如我们在这定义了ident默认值为unknown）：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">$route = new Zend_Controller_Router_Route(\n　　\'product/:ident\',\n　　array(\n　　　　\'controller\' =&gt; \'products\',\n　　　　\'action\' =&gt; \'view\',\n　　　　\'ident\' =&gt; \'unknown\'\n　　)\n);</pre><p>星号(*)被用做一个通配符，意思就是在Url中它后面的所有段都将作为一个通配数据被存储。例如，如果我们有路径\'path/product /:ident/*\'（就是路由协议中设置的第一个变量），并且我们访问的Url为http://domain.com/product /chocolate-bar/test/value1/another/value2，那么所有的在\'chocolate-bar\'后面的段都将被做成 变量名/值对，因此这样会给我们下面的结果：</p><p>ident = chocolate-bar</p><p>test = value1</p><p>another = value2</p><p>这种行为也就是我们平常默认使用的路由协议的行为，记住变量名/值要成对出现，否则像/test/value1/这样的将不会这种另一个变量，我们 有静态的路由协议部分，这些部分简单地被匹配来满足我们的路由协议，在我们的例子中，静态部分就是product；就像你现在看到的那样，我们的 Router_Route路由协议提供给我们极大的灵活性来控制我们的路由；然而，这就就很像正则匹配了，正则匹配使我们能够提供而外的约束力来限制我们 的路由（这里的正则匹配是使用PHP的preg引擎）。在我们的产品实例中，我们得到了用户想观看的\'ident\'的产品特性，即我们通过用户传递过来的 参数，通过数据库的搜索得到正确的产品信息。然而，如果我们得到的需求是系统仅仅只能接受产品ID号作为我们的产品的标识，那么我们可以使用路由协议来实 现这点：</p><p>考虑下面两中路由：</p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">//创建路由器\n$router = new Zend_Controller_Router_Rewrite();\n//创建路由协议\n$route = new Zend_Controller_Router_Route(\n　　\'product/:ident\',\n　　array(\n　　　　\'controller\' =&gt; \'products\',\n　　　　\'action\' =&gt; \'view\'\n　　),\n　　array(\n　　　　// match only alpha, numbers and _-\n　　　　\'ident\' =&gt; \'[a-zA-Z-_0-9]+\'\n　　)\n);\n//让路由器装载路由协议\n$router-&gt;addRoute(\'productident\', $route);\n//再定义一个路由协议\n$route = new Zend_Controller_Router_Route(\n　　\'product/:id\',\n　　array(\n　　　　\'controller\' =&gt; \'products\',\n　　　　\'action\' =&gt; \'view\'\n　　),\n　　array(\n　　　　// match only digits\n　　　　\'id\' =&gt; \'\\d+\'\n　　)\n);\n//让我们的路由器再装载一个路由协议\n$router-&gt;addRoute(\'productid\', $route);</pre><p></p><p>为了达到我们的需求，我们创建了2种路由协议。第一种路由协议对Zend_Controller_Router_Route的构造函数添加了第三个 变量--一个正则表达式的变量ident，这个需求就是用户提供的ident必须是字母、数字和-以及下划线组成。我们的第二个路由协议试图匹配一个产品 的ID数，我们利用\\d+正则来匹配数字。通过我们增加的路由协议，如果我们现在浏览http://domain.com/product/12，这个id变量就会被设置，如果我们浏览http://domain.com/product/chocoloate-bar，那么这个ident变量就会被设置，然后我们可以在同一个动作控制中接受不同的参数来显示同样的信息！！</p><p><strong>【B】Zend_Controller_Router_Route_Static</strong></p><p>标准路由协议，如果我们不需要任何匹配的变量，我们可以通过使用标准路由协议来实现。这个路由协议匹配到一个静态URL并且创建一个静态的路由协议，我们仅仅需要像之前那样实例化它并把它加载到路由器中就行了：</p><div>    <div><pre class=\"prettyprint linenums prettyprinted lang-php \">$route = new Zend_Controller_Router_Route_Static(\n　　\'products/rss\',\n　　array(\n　　　　\'controller\' =&gt; \'feed\',\n　　　　\'action\' =&gt; \'rss\'\n　　)\n);\n$router-&gt;addRoute(\'rss\', $route);</pre>    </div></div><p>就像你看到那样，Router_Route_Static路由协议就是Router_Route一个非常简单的版本，在我们的例子中，http://domain.com/products/rss就会去访问FeedController和rss控制器；</p><p><strong>　【C】Zend_Controller_Router_Route_Regex</strong></p><p>正则路由协议。到目前为止，我们之前的路由协议（Router_Route、Router_Route_Static）都很好的完成了基本的路由操作，我 们常用的也是他们，然而它们会有一些限制，这就是我们为什么要引进正则路由（Router_Route_Regex）的原因。正则路由给予我们preg正则的全部力量，但同时也使得我们的路由协议变得更加复杂了一些。即使是他们有点复杂，我还是希望你能好好掌握它，因为它比标准路由协议（Router_Route）要快一点点。</p><p>一开始，我们先对之前的产品案例改用使用正则路由：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">$route = new Zend_Controller_Router_Route_Regex(\n　　\'product/([a-zA-Z-_0-9]+)\',\n　　　　array(\n　　　　　　\'controller\' =&gt; \'products\',\n　　　　　　\'action\' =&gt; \'view\'\n　　)\n);\n$router-&gt;addRoute(\'product\', $route);</pre><p>你可以看到，我们现在移动我们的正则到我们的path（构造函数的第一个参数）中来了，就像之前的那样，这个正则路由协议现在应该是匹配是一个数 字、字母、-和_组成的ident变量的字符提供给我们，但是，你一定会问，ident变量在哪呢？好，如果你使用了这个正则路由协议，我们可以通过变量1（one） 来获取其值，即可以在控制器里用:$this-&gt;_getParam(1)来获取，其实这里如果看过正则的都知道这就是反向引用中的\\1。然而，你 一定会想为什么要定义的这么的垃圾，我们不能够记住或者弄清每一个数字代表的是什么变量（其实我刚开始看的时候也是一样的感受）。为了改变这点，正则路由 协议的构造函数提供了第3个参数来完成数字到变量名的映射：</p><div>    <div><pre class=\"prettyprint linenums prettyprinted lang-php \">$route = new Zend_Controller_Router_Route_Regex(\n　　\'product/([a-zA-Z-_0-9]+)\',\n　　array(\n　　　　\'controller\' =&gt; \'products\',\n　　　　\'action\' =&gt; \'view\'\n　　),\n　　array(\n　　　　//完成数字到字符变量的映射\n　　　　1 =&gt; \'ident\'\n　　)\n);\n$router-&gt;addRoute(\'product\', $route);</pre>    </div></div><p>这样，我们就简单的将变量1映射到了ident变量名，这样就设置了ident变量，同时你也可以在控制器里面获取到它的值。<em>(如果你不是很了解正则，我建议你可以看下那个正则入门30分钟...</em>)。</p><p>另外，东西总是就两面性的，连正则路由也不例外。正则路由的一个负面作用就是表现在其他zf组件如url视图助手 （$this-&gt;baseUrl()）不能够解析正则路由协议成URL，围绕这点，我们可以为我们的路由协议提供一个反向重写，就像 sprintf()工作的那样：</p><p>为了达到重写的目的，我们将正则路由协议（Router_Route_Regex）的构造函数中添加第四个变量：</p><div>    <div><pre class=\"prettyprint linenums prettyprinted lang-php \">$route = new Zend_Controller_Router_Route_Regex(\n　　\'product/([a-zA-Z]+)/([a-zA-Z-_0-9]+)\',\n　　array(\n　　　　\'controller\' =&gt; \'products\',\n　　　　\'action\' =&gt; \'view\'\n　　),\n　　array(\n　　　　1 =&gt; \'category\'\n　　　　2 =&gt; \'ident\'\n　　),\n　　//重写路由协议\n　　\'product/%s/%s\'\n);\n$router-&gt;addRoute(\'product\', $route);</pre>    </div></div><p>那现在我们已经增加了一个反向重写（reverse rewrite），我们的路由协议能够很容易的被连接到。如果你看到上面的路由协议，我们实际上可以看作是一类参数的捕获。我们然后提供了反向重写 product/%s%s，因此路由协议能够为我们提供变量。记住，这里反向重写可以先熟悉下sprintf()这个函数。</p><p>由于我们感觉这个过程相当复杂，然我们再用一个实例来说明。</p><p>设想一下，假设我们一直在忙于我们老商城应用的重构而采用了zf框架。我们已经决定我们想让我们的产品的URl有一个好的印象针对于搜索引擎。然而 由于我们的产品已经开发完成了很久了，并且里面的url已经很多的被搜索引擎给收录了，我们不想失去这些链接，为了完成这些，我们正好可以使用正则路由的 力量。</p><p>我们老的URL格式：</p><p><strong>http://storefront/products.php/category/{categoryID}/product/{productID}</strong></p><p>我们新的URL的格式：</p><p><strong>http://storefront/product/{categoryName}/{productID}-{productIdent}.html</strong></p><p>因此，一开始，我们就想重定义我们老的请求URL到我们新的请求，我们可以通过这样做：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">//我们老的url匹配的正则路由协议\n$route = new Zend_Controller_Router_Route_Regex(\n　　\'products.php/category/(\\d+)/product/(\\d+)\',\n　　array(\n　　　　\'controller\' =&gt; \'products\',\n　　　　\'action\' =&gt; \'old\'\n　　),\n　　array(\n　　　　1 =&gt; \'categoryID\',\n　　　　2 =&gt; \'productID\'\n　　)\n);</pre><p>在这里，我们将我们老的url中的category和product值分别得到后分别映射到了cateforyID和productID两个变量，并且将 这两个变量传递到我们的ProductsController/oldAction中去，因此，我们可以在我们的old动作中再次重定向到我们新的URl 中：</p><div>    <div><pre class=\"prettyprint linenums prettyprinted lang-php \">public function oldAction(){\n　　$catID = $this-&gt;_getParam( \'categoryID\' );\n　　$productID = $this-&gt;_getParam( \'productID\' );\n　　// model finds the product ident and category names\n　　//....\n　　$ident = \'coolproduct\';\n　　$catName = \'coolstuff\';\n//重定向到新的url\n　　$this-&gt;_redirect( \'/product/\' . $catName . \'/\' . $productID . \'-\'. $ident . \'.html\',\n　　　　array( \'code\' =&gt; 301 )\n　　);\n}</pre>    </div></div><p>这样我们old动作控制器拿取匹配的变量从路由协议中并且使用它们重定向到一个使用一个301的新的url中去，记住，我们不应当直接将我们获取到的变量直接应用到我们的一个重定向请求中，因为这样会牵扯到安全问题。</p><p>那现在我们创建一个新的路由协议来接收我们老的URls映射过来的URLs：</p><div>    <div><pre class=\"prettyprint linenums prettyprinted lang-php \">//新url的正则路由协议\n$route = new Zend_Controller_Router_Route_Regex(\n　　\'product/([a-zA-Z-_0-9]+)/(\\d+)-([a-zA-Z-_0-9]+).html\',\n　　array(\n　　　　\'controller\' =&gt; \'products\',\n　　　　\'action\' =&gt; \'view\'\n　　),\n　　array(\n　　　　1 =&gt; \'categoryIdent\',\n　　　　2 =&gt; \'productID\',\n　　　　3 =&gt; \'productIdent\'\n　　),\n　　\'product/%s/%d-%s.html\'\n);</pre>    </div></div><p>这个路由协议匹配我们新的URLs，这个正则包含3个捕获组，分别是产品类名（categoryIdent）,产品ID(productID)，以及产品特性（ident）。这个\'product/%s/%d-%s.html\'就是匹配原来的<strong>{categoryName}/{productID}-{productIdent}.html这种格式。</strong>最后，建议好好玩玩这个正则路由协议，我可以保证你以后会用得到的。</p>&nbsp;<strong>【D】Zend_Controller_Router_Route_Hostname</strong><p>主机域名路由协议，看名字就知道他是关于处理域名的路由协议。一个常见使用就是一个域名下有按用户的子域名，如，如果我们有一个公共的外部 站点www.domain.com，现在我们的注册用户有一个帐号url像ues1.domain.com，那么我们就可以使用域名路由协议来重写这个请 求：</p><div>    <div><pre class=\"prettyprint linenums prettyprinted lang-php \">$route = new Zend_Controller_Router_Route_Hostname(\n　　\':username.domain.com\',\n　　array(\n　　　　\'controller\' =&gt; \'account\',\n　　　　\'action\' =&gt; \'index\'\n　　),\n　　array(\n　　　　// Match subdomain excluding www.\n　　　　\'username\' =&gt; \'(?!.*www)[a-zA-Z-_0-9]+\'\n　　)\n　　);\n$router-&gt;addRoute(\'account\', $route);</pre>    </div></div><p>正如你所见，域名路由协议（Router_Route_Hostname）很像基本路由协议（Router_Route），我们能够得到变量，设置默认值，同时还能通过正则匹配，在这里的正则匹配我们过掉了www。</p><h2>6）在配置文件中配置Zend_Config</h2><p>当我们有许多路由协议的时候，管理他们就开始变得很棘手了，这样我们就可以通过路由器来调用配置文件。</p><pre class=\"prettyprint linenums prettyprinted lang-php \">[production]\nroutes.rss.type = &quot;Zend_Controller_Router_Route_Static&quot;\nroutes.rss.route = &quot;products/rss&quot;\nroutes.rss.defaults.controller = feed\nroutes.rss.defaults.action = rss\n\nroutes.oldproducts.type = &quot;Zend_Controller_Router_Route_Regex&quot;\nroutes.oldproducts.route = &quot;products.php/category/(\\d+)/product/(\\d+)&quot;\nroutes.oldproducts.defaults.controller = products\nroutes.oldproducts.defaults.action = old\nroutes.oldproducts.map.categoryID = 1\nroutes.oldproducts.map.productID = 2\n\nroutes.product.type = &quot;Zend_Controller_Router_Route_Regex&quot;\nroutes.product.route = &quot;product/([a-zA-Z-_0-9]+)/(\\d+)-([a-zA-Z-_0-9]+).html&quot;\nroutes.product.defaults.controller = products\nroutes.product.defaults.action = view\nroutes.product.map.categoryIdent = 1\nroutes.product.map.productID = 2\nroutes.product.map.productIdent = 3\nroutes.product.reverse = &quot;product/%s/%d-%s.html&quot;\n\nroutes.user.route = &quot;user/profile/:username/*&quot;\nroutes.user.defaults.controller = user\nroutes.user.defaults.action = profile\nroutes.user.defaults.username = &quot;Unknown&quot;\nroutes.user.reqs.username = &quot;([a-zA-Z-_0-9]+)&quot;</pre>一旦我们创建了一个ini文件，我们就能把它加载到路由器中：<div><pre class=\"prettyprint linenums prettyprinted lang-php \">$config = new Zend_Config_Ini(\'config.ini\', \'production\');\n$router = new Zend_Controller_Router_Rewrite();\n$router-&gt;addConfig($config, \'routes\');</pre></div><h2>7）总结</h2><p>路由器属于ZF mvc组件中很重要的一个，我们上面描述的这些路由是经常可以用到的。可能在一开始的时候就去用router会感觉不适应，你可以先熟悉了解它，但我希望 你还是对这个有个比较详细的了解，再次建议，你应该好好的用一下上面的路由，如果你想掌握它的话！！</p><p>原文地址：<a href=\"http://www.cnblogs.com/terryglp/articles/1775778.html\">http://www.cnblogs.com/terryglp/articles/1775778.html</a></p>','1338172390','1395896531','','1','0','0','1936','199');
INSERT INTO `post` VALUES('22','5','[{\"id\":66,\"name\":\"经纬度\"}]','(原创)经纬度查询,经纬度(批量)查找地名,地名(批量)查询经纬度,google map地理解析geocode.geocoder实例','','yanue','','','<p>这是运用google map api v3开发的地图应用，使用谷歌地图地址解析服务，主要实现经纬度和地名之间相互解析功能，同时实现了批量解析。</p><p><strong>实现功能：</strong></p><p>1.&nbsp;经纬度查询(通常指的是查询地名的经纬度，最后获取的是经纬度)</p><p>2.&nbsp;经纬度查找地名(和上面相反，指的是使用经纬度去查找地名，最后获取的是地名)</p><p>3. 批量解析功能(不必要为很多数据而烦恼，你可以一次性进行多个地名或者经纬度进行解析)</p><p>4. 地图跟进显示(每一次解析，谷歌地图位置都会显示当前解析最佳地理位置)</p><p>5. 解析结果清晰(解析后的结果会仔细显示在结果区域，如有解析错误，则显示错误原因)</p><p><strong>在线地址：</strong></p><p><span style=\"color: #ff0000;\"><a href=\"http://map.yanue.net/geo.html\"><span style=\"color: #ff0000;\">http://</span></a><a href=\"http://map.yanue.net/geo.html\"><span style=\"color: #ff0000;\">map</span></a>.<a href=\"http://map.yanue.net/geo.html\"><span style=\"color: #ff0000;\">www.yanue.net/</span></a><a href=\"http://map.yanue.net/geo.html\"><span style=\"color: #ff0000;\">geo.html</span></a></span></p><h2><strong>使用说明：</strong></h2><p>1.受当地法律限制与实际GPS经纬度略有偏差</p><p>2.建议使用IE8以上或使用Google Chrome或Firefox浏览器。</p><p>3.导入任务后，每秒查询2次(可以暂停操作)。</p><p>4.由于‘墙’的原因，地图可能会加载很满，如果长时间没有反应，请重新载入</p><p>5.地名查询经纬度时，每个<span style=\"color: #ff0000;\">地名</span>按行输入,并点击‘解析地名’按钮即可</p><p>6.经纬度查询地名时，请以&quot;<span style=\"color: #ff0000;\">纬度,经度</span>&quot;的格式<span style=\"color: #ff0000;\">按行输入</span>,并点击‘解析经纬度’按钮即可</p><p>以上是详细介绍，另外，这个版本只能返回最佳的匹配地名或者经纬度。如果你需要解析出来的数据进行精确处理。请详见我的另外一篇文章：</p><p><a href=\"http://www.yanue.net/archives/32.html\">http://www.yanue.net/archives/32.html</a></p><p>代码中主要是使用谷歌地图google.maps.Geocoder类进行地名或经纬度处理，该类具体使用方法见我的另我一篇文章</p><p><span style=\"color: #993300;\"><a title=\"谷歌地图地理解析和反解析geocode.geocoder详解\" href=\"http://www.yanue.net/archives/217.html\"><span style=\"color: #993300;\">http://www.yanue.net/archives/217.html</span></a></span></p><p>最后我贴出实现代码，基本上都很详细的说明，非常简单，具体不明白可以联系我qq 642399406，欢迎大家拍砖</p><p><strong>下载地址：</strong><span style=\"color: #993300;\"><a title=\"Google map地理（批量）解析反解析源码\" href=\"http://map.yanue.net/geoBatch.rar\"><span style=\"color: #993300;\">http://map.yanue.net/geoBatch.rar</span></a></span></p><h2><strong>实现代码：</strong></h2><p>(你可以复制到本地试试)</p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta charset=&quot;UTF-8&quot;&gt;\n&lt;script src=&quot;http://maps.google.com/maps/api/js?sensor=false&amp;libraries=places&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\n&lt;title&gt;google map 经纬度批量在线查询工具 google map查询地名返回经纬度&lt;/title&gt;\n&lt;meta name=&quot;author&quot; content=&quot;yanue&quot; /&gt;\n&lt;meta name=&quot;copyright&quot; content=&quot;powered by yanue&quot; /&gt;\n&lt;link rel=&quot;site&quot; href=&quot;http://www.yanue.net/map&quot; /&gt;\n&lt;script type=&quot;text/javascript&quot;&gt;\n	window.onload = function() {\n		var geo = new  geoEach();\n		var toLatLngBtn = document.getElementById(\'toLatLngBtn\');\n		//批量解析地名到经纬度\n		toLatLngBtn.onclick = function(){\n			var area = document.getElementById(\'addrs\').value;\n		  area=area.split(\'\\n\');\n			var sh;\n			var i = 0;\n			sh = window.setInterval(function() {\n				if (i &lt; area.length) {\n					geo.toLatLng(area[i]);\n			} else {\n				window.clearInterval(sh);\n			}\n			i++;\n			}, 500);\n		}\n		//批量解析经纬度到地名\n		var toAddressBtn = document.getElementById(\'toAddressBtn\');\n		toAddressBtn.onclick = function(){\n			var latLngs = document.getElementById(\'latLngs\').value;\n		  latLngs = latLngs.split(\'\\n\');\n			var sh;\n			var i = 0;\n			var sh = window.setInterval(function() {\n				if (i &lt; latLngs.length) {\n					geo.toAddress(latLngs[i]);\n				} else {\n					window.clearInterval(sh);\n				}\n				i++;\n			}, 500);\n		}\n	}\n	/*\n	* 函数名：  geoEach()\n	* 功能：地名解析成经纬度,经纬度解析成地名\n	* 作者：yanue\n	* 使用方法：\n	  //初始化\n	  var geo = new  geoEach();\n	  // 解析地名 传入值地名 结果：纬度lat,经度lng\n	  geo.toLatLng(地名);\n	  // 解析经纬度 传入值（纬度lat,经度lng）：26.57, 106.72 结果是地名\n	  geo.toAddress(经纬度字符串);\n	*/\n	function  geoEach() {\n		//初始化地图\n		 geoEach.map = new google.maps.Map(document.getElementById(&quot;map_canvas&quot;),{\n					center : new google.maps.LatLng(26.57, 106.72),\n					zoom : 8,\n					mapTypeId : google.maps.MapTypeId.ROADMAP\n		});\n		//添加一个marker\n		 geoEach.marker = new google.maps.Marker({map:  geoEach.map,position: new google.maps.LatLng(26.57, 106.72)});\n		//实例化Geocoder服务\n		 geoEach.geocoder = new google.maps.Geocoder();\n	}\n	 geoEach.address = null;//需要解析的地名\n	 geoEach.latLng = null;//需要解析的经纬度字符串\n	 geoEach.prototype = {\n		//解析地名\n		toLatLng : function(address) {\n			//接收\n			 geoEach.address = address;\n			//执行geocode解析地名\n			 geoEach.geocoder.geocode({\n				//传入地名\n				\'address\' :  geoEach.address\n			}, function(results, status) {\n				//create div\n				var newElement = window.document.createElement(\'p\');\n				if (status == google.maps.GeocoderStatus.OK) {\n					//获取解析后的经纬度\n					var location = results[0].geometry.location;\n					//切换地图位置\n					 geoEach.map.setCenter(location);\n					 geoEach.marker.setPosition(location);\n\n					// location is like (26.647449, 106.63014299999998) so we should clear \'(\' in zhe start of this string and \')\' in end;\n					var latLng = location.toString().substr(1,location.toString().indexOf(\')\') - 1);\n					// insert innerHTML\n					newElement.innerHTML =  geoEach.address + &quot;：&quot; + latLng;\n				} else {\n					// insert error innerHTML\n					newElement.innerHTML =  geoEach.address + &quot;：error &quot; + status;\n				}\n				//append child\n				document.getElementById(\'showResults\').appendChild(newElement);\n			});\n		},\n		//解析经纬度\n		toAddress:function(latLng){\n			 geoEach.latLng = latLng.toString();\n			//去除中间所有空格，将中文\'，\'号替换成英文\',\'并按\',\'分割\n			 geoEach.latLng =  geoEach.latLng.replace(/[(^\\s+)(\\s+$)]/g,&quot;&quot;).replace(\'，\',\',\').split(\',\');\n			//第一个值为纬度并转化为float类型\n			var lat = parseFloat( geoEach.latLng[0]);\n			//第二个值为经度并转化为float类型\n			var lng = parseFloat( geoEach.latLng[1]);\n			//执行geocode解析经纬度\n		   geoEach.geocoder.geocode({\n		  	//传入经纬度\n				\'location\' : new google.maps.LatLng(lat, lng)\n			},function(results, status){\n				//create div to show result\n				var newElement = window.document.createElement(\'p\')\n			  if (status == google.maps.GeocoderStatus.OK) {\n			  	//获取解析后的经纬度\n					var location = results[0].geometry.location;\n					//切换地图位置\n					 geoEach.map.setCenter(location);\n					 geoEach.marker.setPosition(location);\n			  	//获取解析后的地址\n			  	var address = results[0].formatted_address;\n			    // insert result innerHTML\n					newElement.innerHTML =  geoEach.latLng + &quot;：&quot; + address;\n			  } else {\n					// insert error innerHTML\n					newElement.innerHTML =  geoEach.latLng + &quot;：error &quot; + status;\n				}\n				//append child\n			  document.getElementById(\'showResults\').appendChild(newElement);\n			});\n		}\n	}\n&lt;/script&gt;\n&lt;style type=&quot;text/css&quot;&gt;\n *{\n  margin:0;\n  padding:0;\n }\n body{\n   font-size:12px;\n   line-height:160%;\n }\n #showResults{\n   float:left;\n }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n	&lt;h2&gt;批量解析地名&lt;/h2&gt;\n	请从下面输入你要解析的地名（每个地名隔一行）&lt;br /&gt;\n	输入完成后按‘批量解析’按钮&lt;br /&gt;\n	&lt;textarea name=&quot;&quot; id=&quot;addrs&quot; cols=&quot;50&quot; rows=&quot;5&quot;&gt;贵阳&lt;/textarea&gt;\n	&lt;button id=\'toLatLngBtn\'&gt;解析地名&lt;/button&gt;\n	&lt;br /&gt;\n	请从下面输入你要解析的经纬度（每个经纬度隔一行）格式（纬度lat,经度lng）&lt;br /&gt;\n	输入完成后按‘批量解析’按钮&lt;br /&gt;\n	&lt;h2&gt;批量解析经纬度&lt;/h2&gt;\n	&lt;textarea name=&quot;&quot; id=&quot;latLngs&quot; cols=&quot;30&quot; rows=&quot;5&quot;&gt;26.57, 106.72&lt;/textarea&gt;\n	&lt;button id=\'toAddressBtn\'&gt;解析经纬度&lt;/button&gt;\n	&lt;div id=&quot;map_canvas&quot; style=\'width: 300px; height: 200px;\'&gt;&lt;/div&gt;\n	&lt;div id=&quot;showResults&quot;&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre>&nbsp;&nbsp;','1339221240','1395896773','','1','0','0','8771','207');
INSERT INTO `post` VALUES('140','17','[{\"id\":26,\"name\":\"fcitx\"},{\"id\":67,\"name\":\"sougou\"}]','Fedora 20安装Fcitx输入法并安装搜狗资源包','','yanue','','','<p>为方便操作，先以用root账户登录系统</p><h2>1、先卸载系统自带的Ibus输入法</h2><div><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo yum remove ibus\ngsettings set org.gnome.settings-daemon.plugins.keyboard active false</pre></div><h2>2、安装Fcitx输入法</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo yum install fcitx*</pre><h2>3、配置一下Fcitx、在~/.bashrc中添加:如下内容</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">export GTK_IM_MODULE=fcitx  \nexport QT_IM_MODULE=fcitx  \nexport XMODIFIERS=&quot;@im=fcitx&quot;</pre><h2>4、注销或重启后完成安装</h2><p>上面步骤完成之后其实就可以使用Fcitx输入法</p><p>不过看到搜狗输入法都已经出deb包了</p><p>所以就想着安装个搜狗输入法到Fcitx上去。</p><h2>5.安装搜狗资源包</h2><p>从下面的连接地址下载对应的deb包、32位系统用i386.deb、64位系统用amd64.deb</p><p><a title=\"http://mirror.sohu.com/deepin/pool/non-free/f/fcitx-sogoupinyin-release/\" href=\"http://mirror.sohu.com/deepin/pool/non-free/f/fcitx-sogoupinyin-release/\" style=\"margin: 0px; padding: 0px;\">http://mirror.sohu.com/deepin/pool/non-free/f/fcitx-sogoupinyin-release/</a></p><p style=\"margin: 0px 0px 10px; padding: 0px;\">随便在从如下地址下载一个搜狗输入法的皮肤</p><p style=\"margin: 0px 0px 10px; padding: 0px;\"><a title=\"http://mirror.sohu.com/deepin/pool/main/f/fcitx-skins/\" href=\"http://mirror.sohu.com/deepin/pool/main/f/fcitx-skins/\" style=\"margin: 0px; padding: 0px;\">http://mirror.sohu.com/deepin/pool/main/f/fcitx-skins/</a></p><h4 style=\"margin: 0px 0px 5px; padding: 0px;\"></h4><h2>6、下载完成之后双击打开amd64.deb、蒋里面的data.tar.bz提取出来、然后到解压压缩文件</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo tar zxvf data.tar.gz -C /</pre><p style=\"margin: 0px 0px 10px; padding: 0px;\">接着我们把解压出来的.so文件移动到Fcitx的指定目录即可(64位为例)</p><pre class=\"prettyprint linenums prettyprinted lang-php \">cp /usr/lib/x86_64-linux-gnu/fcitx/fcitx-sogoupinyin.so /usr/lib64/fcitx/</pre><p>来自：http://www.hiadmin.org/linux/fedora19-fcitx</p>','1397398236','1397797251','','1','0','0','91','0');
INSERT INTO `post` VALUES('23','5','[{\"id\":14,\"name\":\"map\"},{\"id\":77,\"name\":\"geocoder\"}]','(原创)谷歌地图地理解析和反解析geocode.geocoder详解','谷歌地图地理解析和反解析geocode.geocoder详解 谷歌Geocoder服务 实例代码','yanue','','','<p>地址解析就是将地址(如：贵州省贵阳市)转换为地理坐标(如经度：106.71，纬度：26.57)的过程。地理反解析和上面的过程相反是将地理坐标(如纬度：26.57，经度：106.71)转换为地址(中国贵州省贵阳市南明区翠微巷7号 邮政编码: 550002)的过程。受当地法律限制及各方面原因，国内很多地图并不包含地理解析和反解析功能（地理解析和反解析功能功能不够强悍），Google永远是最棒的。废话不多说要使用到Google map 地理解析和反解析功能，我们需要了解google.maps.Geocoder类，谷歌地图给我们提供了强大的api，下面我们来实现</p><h2><strong>1.初始化地图</strong>(最基本的，不解释)</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">//初始化地图\nvar map = new google.maps.Map(document.getElementById(&quot;map_canvas&quot;),{\n	center : new google.maps.LatLng(26.57, 106.72),\n	zoom : 8,\n	mapTypeId : google.maps.MapTypeId.ROADMAP\n});</pre><h2><strong>2.实例化谷歌Geocoder服务</strong></h2><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">//实例化Geocoder服务\nvar geocoder = new google.maps.Geocoder();</pre></pre><p>这样我们就可以进行地理解析和反解析了，使用代码：<br /></p><pre class=\"lang_php decode_true\"><span style=\"font-family: Arial, Helvetica, sans-serif;\"><strong></strong></span><pre class=\"prettyprint linenums prettyprinted lang-php \">geocoder.geocode(request:GeocoderRequest, callback:function(Array.<geocoderresult>, GeocoderStatus))\n</geocoderresult></pre><pre class=\"lang_php decode_true\"><span style=\"font-family: Arial, Helvetica, sans-serif;\"><strong>i. </strong></span><span style=\"font-family: Arial, Helvetica, sans-serif;\">数据请求：</span><span style=\"font-family: Arial, Helvetica, sans-serif;\">其中需要进行请求的数据GeocoderRequest可为4种属性：</span><strong>\r\n</strong></pre></pre><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>address</code></td><td><code>string</code></td><td>需要解析的地名. 可选.</td></tr><tr><td><code>bounds</code></td><td><code>LatLngBounds</code></td><td>经纬度搜索范围. 可选.（我没有具体试用过）</td></tr><tr><td><code>location</code></td><td><code>LatLng（注意类型）</code></td><td>需要解析的经纬度. 可选.</td></tr><tr><td><code>region</code></td><td><code>string</code></td><td>国家代码. 可选.（我没有具体试用过）</td></tr></tbody></table><p>对于解析我们使用address，反解析使用location(注意传入的类型)，请求的话，至少选择一种。</p><p><strong>ii:结果处理：</strong>而对于回掉函数（即解析后返回的处理函数）包含两个内容，GeocoderResult（解析结果，数组类型）和GeocoderStatus（解析状态）</p><p>1.<span style=\"color: #ff0000;\">解析状态</span>是使用Geocoder()进行解析后返回的状态，包含5种：</p><p>ERROR（谷歌地图服务可能出错）</p><p>INVALID_REQUEST（GeocoderRequest无效，即输入的请求是错误的，可能是没有选择，或者属性写错）</p><p>OK（解析完成，并有相应数据）</p><p>OVER_QUERY_LIMIT（响应超时）</p><p>REQUEST_DENIED（网页被禁止geocoder解析）</p><p>UNKNOWN_ERROR（未知错误）</p><p>ZERO_RESULTS（零结果）</p><p>我们能用的就是<span style=\"color: rgb(255, 0, 0);\">状态为OK</span>的情况</p><p>2.<span style=\"color: #ff0000;\">解析结果</span></p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>address_components</code></td><td><code>Array.&lt;<a href=\"https://developers.google.com/maps/documentation/javascript/reference#GeocoderAddressComponent\">GeocoderAddressComponent</a>&gt;</code></td><td><code>GeocoderAddressComponent</code>s数组</td></tr><tr><td><code>formatted_address</code></td><td><code>string</code></td><td>格式化后的最佳匹配地址（地名可小到街道）</td></tr><tr><td><code>geometry</code></td><td><code><a href=\"https://developers.google.com/maps/documentation/javascript/reference#GeocoderGeometry\">GeocoderGeometry</a></code></td><td><code>GeocoderGeometry</code> 对象</td></tr><tr><td><code>types</code></td><td><code>Array.<string></string></code></td><td>一个表示返回的地理编码元素的类型的字符串数组</td></tr></tbody></table><p>其中每一次解析成功后都会有上面的信息，我们最需要的就两样formatted_address和geometry。而address_components是一个地名数组，包含long_name（比如只返回省市名称），short_name和types，可以自己去试一下。</p><p>a. 格式化后的地名formatted_address，只需直接调用即可b.geometry返回一个<code>GeocoderGeometry</code> 对象，其中又包含有4个属性</p><table><thead><tr><th>Properties</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>bounds</code></td><td><code><a href=\"https://developers.google.com/maps/documentation/javascript/reference#LatLngBounds\">LatLngBounds</a></code></td><td>解析出来的精确的界限</td></tr><tr><td><code>location</code></td><td><code><a href=\"https://developers.google.com/maps/documentation/javascript/reference#LatLng\">LatLng</a></code></td><td>纬度/经度坐标</td></tr><tr><td><code>location_type</code></td><td><code><a href=\"https://developers.google.com/maps/documentation/javascript/reference#GeocoderLocationType\">GeocoderLocationType</a></code></td><td>返回的<code>location类型</code></td></tr><tr><td><code>viewport</code></td><td><code><a href=\"https://developers.google.com/maps/documentation/javascript/reference#LatLngBounds\">LatLngBounds</a></code></td><td>解析结果的视图范围</td></tr></tbody></table><p>至此，所有关于地理解析和反解析就差不多说明完了，具体api参见<a href=\"https://developers.google.com/maps/documentation/javascript/reference#Geocoder\">https://developers.google.com/maps/documentation/javascript/reference#Geocoder</a>。感觉说的好晕！基于此我做了一个关于批量解析和反解析的应用，详见：<span style=\"color: rgb(255, 0, 0);\"><a href=\"http://map.yanue.net/geo.html\"><span style=\"color: #ff0000;\">http://map.yanue.net/geo.html</span></a></span>，<a href=\"http://map.yanue.net/geo.html\">http://map.yanue.net/toLatLng</a>&nbsp;.使用详解：<span style=\"color: #ff0000;\"><span style=\"color: #ff0000;\"><a href=\"http://www.yanue.net/archives/207.html\">http://www.yanue.net/archives/207.html</a>&nbsp;</span></span></p><h2><span style=\"color: #ff0000;\"><span style=\"color: #ff0000;\">下面我们来实例一下</span></span><span style=\"color: #ff0000;\">实例代码：</span></h2><p>（你有必要复制到本地试一下）</p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta charset=&quot;UTF-8&quot;&gt;\n&lt;script src=&quot;http://maps.google.com/maps/api/js?sensor=false&amp;libraries=places&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\n&lt;title&gt;谷歌地图地理解析和反解析geocode.geocoder详解&lt;/title&gt;\n&lt;meta name=&quot;author&quot; content=&quot;yanue&quot; /&gt;\n&lt;meta name=&quot;copyright&quot; content=&quot;powered by yanue&quot; /&gt;\n&lt;link rel=&quot;site&quot; href=&quot;http://map.yanue.net/&quot; /&gt;\n&lt;script type=&quot;text/javascript&quot;&gt;\nwindow.onload = function() {\n//初始化地图\nvar map = new google.maps.Map(document.getElementById(&quot;map_canvas&quot;),{\n	center : new google.maps.LatLng(26.57, 106.72),\n	zoom : 8,\n	mapTypeId : google.maps.MapTypeId.ROADMAP\n});\n//实例化Geocoder服务\nvar geocoder = new google.maps.Geocoder();\n\n//1.地理解析过程\n//请求数据GeocoderRequest为address，值为\'贵阳\'\ngeocoder.geocode({address:\'贵阳\'},function geoResults(results, status){\n  //这里是回掉函数(即结果处理函数)\n  //状态为Ok说明有结果\n  if (status == google.maps.GeocoderStatus.OK) {\n  	//一般情况下会有多个结果\n  	//第一个结果为最佳匹配的结果（匹配地名最全的结果），这里只去第一个，其他的可以根据需要自己循环出来\n  	//格式化过后的地址\n  	alert(\'地理解析结果：\'+results[0].formatted_address);\n  	//geometry是一个包含bounds（界限），location（纬度/经度坐标）,location_type和viewport（视图范围）\n  	//获取解析后的经纬度  	\n		alert(\'地理解析结果：\'+results[0].geometry.location);\n  }else{\n    alert(&quot;：error &quot; + status);\n  }\n});\n\n//2.地理反解析过程\n//请求数据GeocoderRequest为location，值类型为LatLng因此我们要实例化经纬度\ngeocoder.geocode({location:new google.maps.LatLng(26.57, 106.72)},function geoResults(results, status){\n  //这里处理结果和上面一模一样\n  if (status == google.maps.GeocoderStatus.OK) {\n  	alert(\'地理反解析结果：\'+results[0].formatted_address);\n		alert(\'地理反解析结果：\'+results[0].geometry.location);\n  }else{\n    alert(&quot;：error &quot; + status);\n  }\n});\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n	&lt;div id=&quot;map_canvas&quot; style=\'width: 300px; height: 200px;\'&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre><br />至此，文章完','1339228856','1397978833','','1','1','11','13606','217');
INSERT INTO `post` VALUES('24','0','','JQuery获取和设置Select选项方法','','yanue','','','JQuery获取和设置Select选项\r\n\r\n获取Select ：\r\n\r\n获取select 选中的 text:\r\n\r\n$(\"#select_id\").find(\"option:selected\").text();\r\n\r\n获取select选中的 value:\r\n\r\n$(\"#select_id option:selected\").val();\r\n($(\"#select_id\").val();这个方法是错误的)\r\n\r\n获取select选中的索引:\r\n\r\n$(\"#select_id \").get(0).selectedIndex;\r\n\r\n设置select:\r\n\r\n设置select 选中的索引：\r\n\r\n$(\"#select_id \").get(0).selectedIndex=index;//index为索引值\r\n\r\n设置select 选中的value：\r\n\r\n$(\"#select_id \").attr(\"value\",\"Normal“);\r\n\r\n$(\"#select_id \").val(\"Normal\");\r\n\r\n$(\"#select_id \").get(0).value = value;\r\n\r\n设置select 选中的text:\r\n\r\n\r\n\r\nvar count=$(\"#select_id \").find(\"option\").length;\r\n\r\nfor(var i=0;i&lt;count;i++)\r\n{           if($(\"#select_id \").get(0).options[i].text == text)\r\n{\r\n$(\"#select_id \").get(0).options[i].selected = true;\r\n\r\nbreak;\r\n}\r\n}\r\n\r\nselect根据value默认选中\r\n$(\"#SelectID option[value=\'selectValue\']\").attr(\"selected\",true)\r\n\r\n\r\n\r\n清空 Select:\r\n\r\n$(\"#select_id \").empty();\r\n\r\n$(\"#veg1\").find(\"option\").clone().appendTo(\"#veg2\");   添加另一个select option\r\n$(\"#veg2\").get(0).selectedIndex=2; 设置选中项','1340510205','1340512052','','1','0','0','2003','311');
INSERT INTO `post` VALUES('25','0','','mysql中left join,right join,inner join用法分析与实例','','yanue','','','<span style=\"font-size: small;\"><strong>1</strong><strong>．内联结、外联结、左联结、右联结的含义及区别：</strong><strong></strong></span>\r\n\r\n<span style=\"font-size: small;\">在SQL标准中规划的（Join）联结大致分为下面四种：</span>\r\n\r\n<span style=\"font-size: small;\">1．  内联结：将两个表中存在联结关系的字段符合联结关系的那些记录形成记录集的联结。</span>\r\n\r\n<span style=\"font-size: small;\">2．  外联结：分为外左联结和外右联结。</span>\r\n\r\n<span style=\"font-size: small;\">左联结A、B表的意思就是将表A中的全部记录和表B中联结的字段与表A的联结字段符合联结条件的那些记录形成的记录集的联结，这里注意的是最后出来的记录集会包括表A的全部记录。</span>\r\n\r\n<span style=\"font-size: small;\">右联结A、B表的结果和左联结B、A的结果是一样的，也就是说：</span>\r\n\r\n<span style=\"font-size: small;\">Select A.name B.name From A Left Join B On A.id=B.id </span>\r\n\r\n<span style=\"font-size: small;\">和Select A.name B.name From B Right Join A on B.id=A.id执行后的结果是一样的。</span>\r\n\r\n<span style=\"font-size: small;\">3．全联结：将两个表中存在联结关系的字段的所有记录取出形成记录集的联结（这个不需要记忆，只要是查询中提到了的表的字段都会取出，无论是否符合联结条件，因此意义不大）。</span>\r\n\r\n<span style=\"font-size: small;\">4．无联结：不用解释了吧，就是没有使用联结功能呗，也有自联结的说法。</span>\r\n\r\n<span style=\"font-size: small;\">   有个比较简便的记忆方法，内外联结的区别是内联结将去除所有不符合条件的记录，而外联结则保留其中部分。外左联结与外右联结的区别在于如果用A左联结B则A中所有记录都会保留在结果中，此时B中只有符合联结条件的记录，而右联结相反，这样也就不会混淆了。</span>\r\n\r\n<span style=\"font-size: small;\"><strong>2．  </strong><strong>MySQL</strong><strong>联结（</strong><strong>Join</strong><strong>）的语法</strong><strong></strong></span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">MySQL支持Select和某些Update和Delete情况下的Join语法，具体语法上的细节有：</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">table_references:</span>\r\n\r\n<span style=\"font-size: small;\">    table_reference [, table_reference] …</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">table_reference:</span>\r\n\r\n<span style=\"font-size: small;\">    table_factor</span>\r\n\r\n<span style=\"font-size: small;\">  | join_table</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">table_factor:</span>\r\n\r\n<span style=\"font-size: small;\">    tbl_name [[AS] alias]</span>\r\n\r\n<span style=\"font-size: small;\">        [{USE|IGNORE|FORCE} INDEX (key_list)]</span>\r\n\r\n<span style=\"font-size: small;\">  | ( table_references )</span>\r\n\r\n<span style=\"font-size: small;\">  | { OJ table_reference LEFT OUTER JOIN table_reference</span>\r\n\r\n<span style=\"font-size: small;\">        ON conditional_expr }</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">join_table:</span>\r\n\r\n<span style=\"font-size: small;\">    table_reference [INNER | CROSS] JOIN table_factor [join_condition]</span>\r\n\r\n<span style=\"font-size: small;\">  | table_reference STRAIGHT_JOIN table_factor</span>\r\n\r\n<span style=\"font-size: small;\">  | table_reference STRAIGHT_JOIN table_factor ON condition</span>\r\n\r\n<span style=\"font-size: small;\">  | table_reference LEFT [OUTER] JOIN table_reference join_condition</span>\r\n\r\n<span style=\"font-size: small;\">  | table_reference NATURAL [LEFT [OUTER]] JOIN table_factor</span>\r\n\r\n<span style=\"font-size: small;\">  | table_reference RIGHT [OUTER] JOIN table_reference join_condition</span>\r\n\r\n<span style=\"font-size: small;\">  | table_reference NATURAL [RIGHT [OUTER]] JOIN table_factor</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">join_condition:</span>\r\n\r\n<span style=\"font-size: small;\">    ON conditional_expr | USING (column_list)</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">上面的用法摘自权威资料，不过大家看了是否有点晕呢？呵呵，应该问题主要还在于table_reference是什么，table_factor又是什么？这里的table_reference其实就是表的引用的意思，因为在MySQL看来，联结就是一种对表的引用，因此把需要联结的表定义为table_reference，同时在SQL Standard中也是如此看待的。而table_factor则是MySQL对这个引用的功能上的增强和扩充，使得引用的表可以是括号内的一系列表，如下面例子中的JOIN后面括号：</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">SELECT * FROM t1 LEFT JOIN (t2, t3, t4) ON (t2.a=t1.a AND t3.b=t1.b AND t4.c=t1.c)</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">这个语句的执行结果和下面语句其实是一样的：</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">SELECT * FROM t1 LEFT JOIN (t2 CROSS JOIN t3 CROSS JOIN t4) </span>\r\n\r\n<span style=\"font-size: small;\">                 ON (t2.a=t1.a AND t3.b=t1.b AND t4.c=t1.c)</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">这两个例子不仅让我们了解了MySQL中table_factor和table_reference含义，同时能理解一点CROSS JOIN的用法，我要补充的是在MySQL现有版本中CROSS JOIN的作用和INNER JOIN是一样的（虽然在SQL Standard中是不一样的，然而在MySQL中他们的区别仅仅是INNER JOIN需要附加ON参数的语句，而CROSS JOIN不需要）。</span>\r\n\r\n<span style=\"font-size: small;\">既然说到了ON语句，那就解释一下吧，ON语句其实和WHERE语句功能大致相当，只是这里的ON语句是专门针对联结表的，ON语句后面的条件的要求和书写方式和WHERE语句的要求是一样的，大家基本上可以把ON当作WHERE用。</span>\r\n\r\n<span style=\"font-size: small;\">大家也许也看到了OJ table_reference LEFT OUTER JOIN table_reference这个句子，这不是MySQL的标准写法，只是为了和ODBC的SQL语法兼容而设定的，我很少用，Java的人更是不会用，所以也不多解释了。</span>\r\n\r\n<span style=\"font-size: small;\">那下面就具体讲讲简单的JOIN的用法了。首先我们假设有2个表A和B，他们的表结构和字段分别为：</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">表A：</span>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">ID</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Name</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">1</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Tim</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">2</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Jimmy</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">3</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">John</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">4</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Tom</span></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<span style=\"font-size: small;\">表B：</span>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">ID</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Hobby</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">1</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Football</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">2</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Basketball</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">2</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Tennis</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">4</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Soccer</span></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">1．  内联结：</span>\r\n\r\n<span style=\"font-size: small;\">Select A.Name B.Hobby from A, B where A.id = B.id，这是隐式的内联结，查询的结果是：</span>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Name</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Hobby</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Tim</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Football</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Jimmy</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Basketball</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Jimmy</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Tennis</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Tom</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Soccer</span></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<span style=\"font-size: small;\">它的作用和 Select A.Name from A INNER JOIN B ON A.id = B.id是一样的。这里的INNER JOIN换成CROSS JOIN也是可以的。</span>\r\n\r\n<span style=\"font-size: small;\">2．  外左联结</span>\r\n\r\n<span style=\"font-size: small;\">Select A.Name from A Left JOIN B ON A.id = B.id，典型的外左联结，这样查询得到的结果将会是保留所有A表中联结字段的记录，若无与其相对应的B表中的字段记录则留空，结果如下：</span>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Name</span></td>\r\n<td valign=\"top\" width=\"120\"><span style=\"font-size: small;\">Hobby</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Tim</span></td>\r\n<td valign=\"top\" width=\"120\"><span style=\"font-size: small;\">Football</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Jimmy</span></td>\r\n<td valign=\"top\" width=\"120\"><span style=\"font-size: small;\">Basketball，Tennis</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">John</span></td>\r\n<td valign=\"top\" width=\"120\"><span style=\"font-size: small;\"> </span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Tom</span></td>\r\n<td valign=\"top\" width=\"120\"><span style=\"font-size: small;\">Soccer</span></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<span style=\"font-size: small;\">所以从上面结果看出，因为A表中的John记录的ID没有在B表中有对应ID，因此为空，但Name栏仍有John记录。</span>\r\n\r\n<span style=\"font-size: small;\">3．  外右联结</span>\r\n\r\n<span style=\"font-size: small;\">如果把上面查询改成外右联结：Select A.Name from A Right JOIN B ON A.id = B.id，则结果将会是：</span>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Name</span></td>\r\n<td valign=\"top\" width=\"84\"><span style=\"font-size: small;\">Hobby</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Tim</span></td>\r\n<td valign=\"top\" width=\"84\"><span style=\"font-size: small;\">Football</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Jimmy</span></td>\r\n<td valign=\"top\" width=\"84\"><span style=\"font-size: small;\">Basketball</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Jimmy</span></td>\r\n<td valign=\"top\" width=\"84\"><span style=\"font-size: small;\">Tennis</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Tom</span></td>\r\n<td valign=\"top\" width=\"84\"><span style=\"font-size: small;\">Soccer</span></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<span style=\"font-size: small;\">这样的结果都是我们可以从外左联结的结果中猜到的了。</span>\r\n\r\n<span style=\"font-size: small;\">说到这里大家是否对联结查询了解多了？这个原本看来高深的概念一下子就理解了，恍然大悟了吧（呵呵，开玩笑了）？最后给大家讲讲MySQL联结查询中的某些参数的作用：</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">1．USING (column_list)：其作用是为了方便书写联结的多对应关系，大部分情况下USING语句可以用ON语句来代替，如下面例子：</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">a LEFT JOIN b USING (c1,c2,c3)，其作用相当于下面语句</span>\r\n\r\n<span style=\"font-size: small;\">a LEFT JOIN b ON a.c1=b.c1 AND a.c2=b.c2 AND a.c3=b.c3</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">只是用ON来代替会书写比较麻烦而已。</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">2．NATURAL [LEFT] JOIN：这个句子的作用相当于INNER JOIN，或者是在USING子句中包含了联结的表中所有字段的Left JOIN（左联结）。</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">3．STRAIGHT_JOIN：由于默认情况下MySQL在进行表的联结的时候会先读入左表，当使用了这个参数后MySQL将会先读入右表，这是个MySQL的内置优化参数，大家应该在特定情况下使用，譬如已经确认右表中的记录数量少，在筛选后能大大提高查询速度。</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">最后要说的就是，在MySQL5.0以后，运算顺序得到了重视，所以对多表的联结查询可能会错误以子联结查询的方式进行。譬如你需要进行多表联结，因此你输入了下面的联结查询：</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">SELECT t1.id,t2.id,t3.id </span>\r\n\r\n<span style=\"font-size: small;\">    FROM t1,t2 </span>\r\n\r\n<span style=\"font-size: small;\">    LEFT JOIN t3 ON (t3.id=t1.id)</span>\r\n\r\n<span style=\"font-size: small;\">    WHERE t1.id=t2.id;</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">但是MySQL并不是这样执行的，其后台的真正执行方式是下面的语句：</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">SELECT t1.id,t2.id,t3.id </span>\r\n\r\n<span style=\"font-size: small;\">    FROM t1,(  t2 LEFT JOIN t3 ON (t3.id=t1.id)  )</span>\r\n\r\n<span style=\"font-size: small;\">    WHERE t1.id=t2.id;</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">这并不是我们想要的效果，所以我们需要这样输入：</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">SELECT t1.id,t2.id,t3.id </span>\r\n\r\n<span style=\"font-size: small;\">    FROM (t1,t2)</span>\r\n\r\n<span style=\"font-size: small;\">    LEFT JOIN t3 ON (t3.id=t1.id)</span>\r\n\r\n<span style=\"font-size: small;\">    WHERE t1.id=t2.id;</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">在这里括号是相当重要的，因此以后在写这样的查询的时候我们不要忘记了多写几个括号，至少这样能避免很多错误（因为这样的错误是很难被开发人员发现的）。</span>','1340525503','1340525503','','1','0','0','936','315');
INSERT INTO `post` VALUES('26','0','','E6中支持min-height的解决方案','','yanue','','','本文和大家重点讨论一下IE6不支持min-height的解决办法，这里主要包括两种解决方案，相信本文介绍一定会让你有所收获。\r\n\r\nIE6不支持min-height的解决办法\r\n\r\n最小高度min-height是很有用的，但IE6却不支持。真烦人。有没有办法呢？\r\n\r\n第一种方法：我们可以利用IE6不识别!important来实现：\r\n<pre class=\"lang_php decode_true\">height:auto!important; \r\nheight:500px; \r\nmin-height:500px;</pre>\r\n这3句代码就让IE6也有了高度min-height的效果，大家可以把下面的代码复制保存成网页文件看看效果。\r\n\r\nHTML代码\r\n<pre class=\"lang_php decode_true\">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; \r\n&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt; \r\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt; \r\n&lt;head&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=gb2312&quot; /&gt; \r\n&lt;title&gt;残缺 完美 生活&lt;/title&gt; \r\n&lt;/head&gt; \r\n&lt;style type=&quot;text/css&quot;&gt; *{ margin:0; padding:0; } \r\nbody{ font-family:Arial, Helvetica,宋体,sans-serif; font-size:12px; \r\n\r\ntext-align:center; background-color:#D4D5CC; } \r\n#wrapper{ height:auto!important; \r\nheight:500px; min-height:500px; \r\nwidth:760px; background-color:#e5e5e5; border:1px solid #fff; \r\ntext-align:left; line-height:150%; padding:20px; margin:10px auto; } \r\n&lt;/style&gt; &lt;body&gt; &lt;div id=&quot;wrapper&quot;&gt; \r\nThe Furthest Distance In The World &lt;br /&gt; 世界上最遥远的距离 &lt;br /&gt; \r\nTagore泰戈尔 &lt;br /&gt; The furthest distance in the world &lt;br /&gt; \r\n世界上最遥远的距离 &lt;br /&gt; Is not between life and death &lt;br /&gt; \r\n不是生与死 &lt;br /&gt; But when I stand in front of you &lt;br /&gt; \r\n而是 我就站在你面前 &lt;br /&gt; Yet you don&#039;t know that I love you &lt;br /&gt; \r\n你却不知道我爱你 &lt;br /&gt; \r\n&lt;/div&gt; \r\n&lt;/body&gt; \r\n&lt;/html&gt;</pre>\r\n◆还有一种方法：在IE6IE5IE7FF测试竟然正常，而且能通过W3C检测的,方法如下:\r\n\r\nHTML代码\r\n<pre class=\"lang_php decode_true\">#test { min-height:100px; background:#BBB; _height:100px; overflow: visible; }</pre>\r\n说明一下上面这段CSS的意思。\r\n\r\nmin-height:100px;这一句在ie7和FF已经可以正常显示了。。\r\n_height:100px这一句在ie6，ie5测试显示正常。但不能过W3C验证:L\r\noverflow:visible;这一句为了注明#test当内容超过100px时就自动延长。\r\n\r\n注意：你必须保证#test以外的都要是overflow:visible。否则还是不会显示超出。','1340567611','1340567611','','1','0','0','778','317');
INSERT INTO `post` VALUES('27','0','','PHP正则表达式的几个函数详解','','yanue','','','preg_match: 字符串比对解析。\r\n\r\npreg_match_all: 字符串整体比对解析。\r\npreg_replace: 字符串比对解析并取代。\r\npreg_split: 将字符串依指定的规则切开。\r\n\r\n具体用法：\r\n\r\n<strong>1. preg_match 字符串比对解析。</strong>\r\n\r\n语法: int preg_match(string pattern, string subject, array [matches]);\r\n\r\n返回值: 整数/数组\r\n\r\n函数种类: 资料处理\r\n\r\n内容说明: 本函数以 pattern 的规则来解析比对字符串 subject。比对结果返回的值放在数组参数 matches 之中，matches[0] 内容就是原字符串 subject、matches[1] 为第一个合乎规则的字符串、matches[2] 就是第二个合乎规则的字符串，余类推。若省略参数 matches，则只是单纯地比对，找到则返回值为 true。\r\n\r\n<strong>2.preg_match_all字符串整体比对解析。</strong>\r\n\r\n语法: int preg_match_all(string pattern, string subject, array matches, int [order]);\r\n\r\n返回值: 整数\r\n\r\n函数种类: 资料处理\r\n\r\n内容说明: 本函数以 pattern 的规则来整体解析比对字符串 subject。比对结果返回的值放在数组参数 matches 之中，并依顺序值 order 排序。参数 order 的值有 PREG_PATTERN_ORDER 及 PREG_SET_ORDER 二种。若没有 order 值，则系统自动以 PREG_PATTERN_ORDER 代入 order 值中。返回值为合乎比对结果的数目，若没有或错误则返回 false 值。\r\n\r\nPREG_PATTERN_ORDER 的例子\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\npreg_match_all(&quot;|&lt;[^&gt;]+&gt;(.*)&lt;/[^&gt;]+&gt;|U&quot;, &quot;&lt;div align=left&gt;a test&lt;/div&gt;&quot;, $out, PREG_PATTERN_ORDER);\r\nprint $out[0][0].&quot;, &quot;.$out[0][1].&quot;n&quot;;\r\nprint $out[1][0].&quot;, &quot;.$out[1][1].&quot;n&quot;\r\n?&gt;</pre>\r\n<strong>3.preg_replace字符串比对解析并取代。</strong>\r\n\r\n语法: mixed preg_replace(mixed pattern, mixed replacement, mixed subject);\r\n\r\n返回值: 混合类型资料\r\n\r\n函数种类: 资料处理\r\n\r\n内容说明: 本函数以 pattern 的规则来解析比对字符串 subject，欲取而代之的字符串为参数 replacement。返回值为混合类型资料，为取代后的字符串结果。\r\n\r\n使用范例\r\n\r\n下例返回值为 $startDate = 6/19/1969\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\n$patterns = array(&quot;/(19|20d{2})-(d{1,2})-(d{1,2})/&quot;, &quot;/^s*{(w+)}s*=/&quot;);\r\n$replace = array(&quot;3/4/1&quot;, &quot;$1 =&quot;);\r\nprint preg_replace($patterns, $replace, &quot;{startDate} = 1969-6-19&quot;);\r\n?&gt;</pre>\r\n<strong>4.preg_split将字符串依指定的规则切开。</strong>\r\n\r\n语法: array preg_split(string pattern, string subject, int [limit]);\r\n\r\n返回值: 数组\r\n\r\n函数种类: 资料处理\r\n\r\n内容说明: 本函数可将字符串依指定的规则分开。切开后的返回值为数组变量。参数 pattern 为指定的规则字符串、参数 subject 则为待处理的字符串、参数 limit 可省略，表示欲处理的最多合乎值。','1340820330','1340820330','','1','0','0','758','319');
INSERT INTO `post` VALUES('28','0','','(原创)php长文章分页思路及实例','','yanue','','','对于长文章的分页，实现思路非常简单，将正文按照一定字符串进行分割，分割后在按照页码进行数组索引，将当前页码对应数组的值输出即可，好像说得够晕的，下面来个实例：\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\n$str = &quot;asd啊&lt;b&gt;是&lt;/b&gt;大叔大叔asd杀毒发[NextPage]生的啊师傅 &lt;a href=\\&quot;asd\\&quot;&gt;asd&lt;/a&gt; 啊师傅asd a速度发啥地方&quot;;\r\n//接收页码(如果不存在就为1)\r\n$page = $_REQUEST[&#039;page&#039;] ? $_REQUEST[&#039;page&#039;] : 1;\r\n//通过分割符分割内容\r\n$arr = explode(&quot;[NextPage]&quot;,$str);\r\n//如果分割出来的数组大小为1即未进行分页\r\nif(count($arr)==1){\r\n	echo $str;\r\n}else{\r\n	//按页码输出相应的内容\r\n	echo $arr[$page-1];\r\n	//分页页码\r\n	for($i=1;$i&lt;=count($arr);$i++){	\r\n		if($page == $i){//当前页\r\n			echo &quot;&lt;a href=&#039;?page=&quot;.$i.&quot;&#039; class=&#039;current&#039;&gt;&quot;.$i.&quot;&lt;/a&gt; &quot;;\r\n		}else{\r\n		  echo &quot;&lt;a href=&#039;?page=&quot;.$i.&quot;&#039; &gt;&quot;.$i.&quot;&lt;/a&gt; &quot;;\r\n		}\r\n	}\r\n}\r\n?&gt;</pre>','1340825214','1340826974','','1','0','0','799','321');
INSERT INTO `post` VALUES('29','0','','(原创)PHP正则匹配日期和时间，php时间戳转换','','yanue','','','php+mysql一般情况下存储时间都为时间戳，但实际需要的时候，我们很可能需要对时间进行修改，这就需要由时间戳转换到时间格式，再时间格式转换为时间戳，而php需要一定的时间格式才能转换成时间戳（表示从格林威治时间1970年01月01日00时00分00秒起至现在的总秒数），因此需要进行正则判断，下面贴出代码：\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\n//匹配时间格式为2012-02-16或2012-02-16 23:59:59前面为0的时候可以不写\r\n$time = &quot;2012-02-16 23:59:59&quot;;\r\n$patten = &quot;/^\\d{4}[\\-](0?[1-9]|1[012])[\\-](0?[1-9]|[12][0-9]|3[01])(\\s+(0?[0-9]|1[0-9]|2[0-3])\\:(0?[0-9]|[1-5][0-9])\\:(0?[0-9]|[1-5][0-9]))?$/&quot;;\r\nif (preg_match ( $patten, $time )) {\r\n			echo $timestro = strtotime ( $time );\r\n		} else {\r\n			echo &quot;error&quot;;\r\n		}\r\n?&gt;</pre>\r\n对该正则的分析：\r\n/^\\d{4}[\\-](0?[1-9]|1[012])[\\-](0?[1-9]|[12][0-9]|3[01])(\\s+(0?[0-9]|[12][0-3])\\:(0?[0-9]|[1-5][1-9])\\:(0?[0-9]|[1-5][1-9]))?$/\r\n\r\n/是表达式开始符 最后面的/是表达式的结束符\r\n^字符串的开始，即以***开始\r\n$表示字符串的结尾，即表示已***结尾\r\n|表示或者\r\n()表示一个单元\r\nd{4}匹配一个4位数，\r\n(\\-)匹配一个“-”号，\r\n(0?[1-9]|1[012])匹配月份，\r\n(0?[1-9]|[12][0-9]|3[01])匹配天，\r\n(\\s+(0?[0-9]|1[0-9]|2[0-3])\\:(0?[0-9]|[1-5][0-9])\\:(0?[0-9]|[1-5][0-9]))?整个匹配时分秒部分，?表示有或者没有。\r\n\r\n最后一步就是对匹配成功的进行时间戳转换\r\n\r\n当前转换结果为：1329407999','1341035155','1341359683','','1','0','0','2219','326');
INSERT INTO `post` VALUES('30','0','','GoAgent翻墙利器图文设置教程','','yanue','','','<h3><strong>第一步 -</strong>下载goagent客户端（<a href=\"http://code.google.com/p/goagent/\" target=\"_blank\">Download</a>）；</h3>\r\n<strong>第二步 -</strong>修改local\\proxy.ini中的<tt>[gae]</tt>下的appid=你的appid(多appid请用|隔开)，即前面创建创建Application所设定的Application ID，如我设定的mr7wen；\r\n\r\n&nbsp;\r\n\r\n<strong><a href=\"http://www.mrwen.net/wp-content/uploads/2012/05/change-your-appid.jpg\" rel=\"example4\"><img title=\"change-your-appid\" src=\"http://www.mrwen.net/wp-content/uploads/2012/05/change-your-appid-300x241.jpg\" alt=\"\" width=\"300\" height=\"241\" /></a></strong>\r\n\r\n<strong>第三步 -</strong>双击server\\uploader.bat（Windows 7或Windows 8用户最好以管理员身份运行），根据提示依次输入Application ID，邮箱地址，和修改谷歌账号两步验证Step 8中生成的16位密码。（注，输入密码时，文字是不可见的，确定输入后回车确认即可。\r\n\r\n<a href=\"http://www.mrwen.net/wp-content/uploads/2012/05/upload.jpg\" rel=\"example4\"><img title=\"upload\" src=\"http://www.mrwen.net/wp-content/uploads/2012/05/upload-300x116.jpg\" alt=\"\" width=\"300\" height=\"116\" /></a>\r\n<h3>     开始使用GoAgent</h3>\r\n使用GoAgent上网前，你必须运行local\\goagent.exe（以管理员身份运行），就刚才下载的goagent压缩包里面的文件。\r\n\r\n<strong>如果你使用的是Chrome，请参考以下教程：</strong>\r\n\r\n<strong>第一）</strong>chrome请安装<a href=\"https://chrome.google.com/webstore/detail/dpplabbmogkhghncfbfdeeokoefdjegm\" rel=\"nofollow\">SwitchySharp</a>插件；\r\n<strong>     第二）</strong>导入SwitchySharp配置，下载地址<a href=\"http://goagent.googlecode.com/files/SwitchyOptions.bak\" rel=\"nofollow\">http://goagent.googlecode.com/files/SwitchyOptions.bak</a>，进入SwitchySharp设置界面，点击“导入/导出”-“从文件恢复”，导入刚才下载的SwitchyOptions.bak\r\n\r\n&nbsp;\r\n\r\n<strong></strong> <a href=\"http://www.mrwen.net/wp-content/uploads/2012/05/switchysharp.jpg\" rel=\"example4\"><img title=\"switchysharp\" src=\"http://www.mrwen.net/wp-content/uploads/2012/05/switchysharp-300x283.jpg\" alt=\"\" width=\"300\" height=\"283\" /></a>\r\n\r\n<strong>第三）</strong>使用Chrome浏览Twitter、Facebook，YouTube等网站时，记得切换到GoAgent\r\n\r\n&nbsp;\r\n\r\n<strong><a href=\"http://www.mrwen.net/wp-content/uploads/2012/05/chrome-goagent.jpg\" rel=\"example4\"><img title=\"chrome-goagent\" src=\"http://www.mrwen.net/wp-content/uploads/2012/05/chrome-goagent-300x273.jpg\" alt=\"\" width=\"300\" height=\"273\" /></a></strong>\r\n\r\n<strong>如果你使用的是Firefox，请参考以下教程：</strong>\r\n\r\n<strong>第一）</strong>安装火狐附加组件<a href=\"https://addons.mozilla.org/zh-cn/firefox/addon/autoproxy/\" rel=\"nofollow\">AutoProxy</a>；安装完毕后重启Firefox，提示规则列表，记得选中确定；\r\n\r\n&nbsp;\r\n\r\n<strong><a href=\"http://www.mrwen.net/wp-content/uploads/2012/05/gfwlist.jpg\" rel=\"example4\"><img title=\"gfwlist\" src=\"http://www.mrwen.net/wp-content/uploads/2012/05/gfwlist-300x51.jpg\" alt=\"\" width=\"300\" height=\"51\" /></a></strong>\r\n\r\n<strong>第二）</strong>FireFox-&gt;选项-&gt;高级-&gt;加密-&gt;查看证书-&gt;证书机构-&gt;导入证书, 选择local\\ca.crt, 勾选所有项，导入。\r\n\r\n&nbsp;\r\n\r\n<strong><a href=\"http://www.mrwen.net/wp-content/uploads/2012/05/certificate.jpg\" rel=\"example4\"><img title=\"certificate\" src=\"http://www.mrwen.net/wp-content/uploads/2012/05/certificate-300x163.jpg\" alt=\"\" width=\"300\" height=\"163\" /></a></strong>\r\n\r\n<strong>第三）</strong>添加代理设置，点击AutoProxy图标旁边的三角按钮，在下拉菜单中选择“preferences”或者使用快捷键Ctrl+Alt+P进入附加组件首选项设置，然后点击Proxy Server，选择Edit Proxy Server，添加代理地址，如下图：\r\n\r\n&nbsp;\r\n\r\n<strong></strong> <a href=\"http://www.mrwen.net/wp-content/uploads/2012/05/Edit-Proxy-Server.jpg\" rel=\"example4\"><img title=\"Edit-Proxy-Server\" src=\"http://www.mrwen.net/wp-content/uploads/2012/05/Edit-Proxy-Server-300x241.jpg\" alt=\"\" width=\"300\" height=\"241\" /></a>\r\n\r\n<strong>第四）</strong>修改默认代理，同样是“preferences”界面点击Proxy Server，选择Choose Proxy Server，将默认的Proxy改成刚才添加的；\r\n\r\n&nbsp;\r\n\r\n<strong><a href=\"http://www.mrwen.net/wp-content/uploads/2012/05/choose-proxy-server.jpg\" rel=\"example4\"><img title=\"choose-proxy-server\" src=\"http://www.mrwen.net/wp-content/uploads/2012/05/choose-proxy-server-300x108.jpg\" alt=\"\" width=\"300\" height=\"108\" /></a></strong>\r\n\r\n<strong>第五）</strong>使用AutoProxy会自动根据已定规则决定是否使用Proxy的。碉堡了。\r\n\r\n都设置好了就可以任你游了。速度刚刚的。\r\n\r\n<a title=\"老文乱谈\" href=\"http://www.mrwen.net/\">老文</a>上YouTube看720P视频居然完全不需要缓冲。\r\n\r\n&nbsp;\r\n\r\n遇到问题？请登录<a href=\"http://code.google.com/p/goagent/\">http://code.google.com/p/goagent/</a>或者留言。\r\n\r\n如果你使用的是linux或者mac，请阅读https://code.google.com/p/goagent/的FAQ。\r\n\r\n切记需要连接外网时运行文件夹local下的goagent.exe，否则无法连接外网。','1341525836','1342746144','','1','0','0','2322','332');
INSERT INTO `post` VALUES('31','0','','PHP获取文件后缀多种方法','','yanue','','','PHP取得文件后缀，关于获取文件的扩展名有很多种方式，下面提供三种获取文件后缀的方法，大家可以研究下，具体代码就不解释了。直接看代码吧。\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\n//方法一:\r\nfunction extend_1($file_name)\r\n{\r\n$retval=&quot;&quot;;\r\n$pt=strrpos($file_name, &quot;.&quot;);\r\nif ($pt) $retval=substr($file_name, $pt+1, strlen($file_name) - $pt);\r\nreturn ($retval);\r\n}\r\n\r\n//方法二\r\nfunction extend_2($file_name)\r\n{\r\n$extend = pathinfo($file_name);\r\n$extend = strtolower($extend[&quot;extension&quot;]);\r\nreturn $extend;\r\n}\r\n\r\n//方法三\r\nfunction extend_3($file_name)\r\n{\r\n$extend =explode(&quot;.&quot; , $file_name);\r\n$va=count($extend)-1;\r\nreturn $extend[$va];\r\n}\r\n?&gt;</pre>\r\n&nbsp;','1341899336','1341899336','','1','0','0','760','337');
INSERT INTO `post` VALUES('32','0','','PHP static之静态变量和属性方法','','yanue','','','静态变量只存在于函数作用域内，也就是说，静态变量只存活在栈中。一般的函数内变量在函数结束后会释放，比如局部变量，但是静态变量却不会。就是说，下次再调用这个函数的时候，该变量的值会保留下来。\r\n\r\n只要在变量前加上关键字static，该变量就成为静态变量了。\r\n<div id=\"highlighter_722157\">\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\n	function test()\r\n	{\r\n		static $nm = 1;\r\n		$nm = $nm * 2;\r\n		print $nm.&quot;&lt;br /&gt;&quot;;\r\n	}\r\n\r\n    // 第一次执行，$nm = 2\r\n	test();\r\n    // 第一次执行，$nm = 4\r\n	test();\r\n    // 第一次执行，$nm = 8\r\n	test();\r\n?&gt;</pre>\r\n</div>\r\n程序运行结果：\r\n<div id=\"highlighter_401974\">\r\n<pre class=\"lang_php decode_true\">2\r\n4\r\n8</pre>\r\n</div>\r\n函数test()执行后，变量$nm的值都保存了下来了。\r\n\r\n在class中经常使用到静态属性，比如静态成员、静态方法。\r\n<h4>Program List：类的静态成员</h4>\r\n静态变量$nm属于类nowamagic，而不属于类的某个实例。这个变量对所有实例都有效。\r\n\r\n::是作用域限定操作符，这里用的是self作用域，而不是$this作用域，$this作用域只表示类的当前实例，self::表示的是类本身。\r\n<div id=\"highlighter_450489\">\r\n<pre class=\"lang_php decode_true\">    \r\n&lt;?php\r\n	class nowamagic \r\n	{\r\n		public static $nm = 1;\r\n\r\n		function nmMethod() \r\n		{\r\n			self::$nm += 2;\r\n			echo self::$nm . &#039;&lt;br /&gt;&#039;;\r\n		}\r\n	}\r\n\r\n	$nmInstance1 = new nowamagic();\r\n	$nmInstance1 -&gt; nmMethod();\r\n\r\n	$nmInstance2 = new nowamagic();\r\n	$nmInstance2 -&gt; nmMethod();\r\n?&gt;</pre>\r\n</div>\r\n程序运行结果：\r\n<div id=\"highlighter_881653\">\r\n<pre class=\"lang_php decode_true\">3\r\n5</pre>\r\n</div>\r\n<h4>Program List：静态属性</h4>\r\n<div id=\"highlighter_911652\">\r\n<pre class=\"lang_php decode_true\">    \r\n&lt;?php\r\n	class NowaMagic\r\n	{\r\n    	public static $nm = &#039;www.yanue.net&#039;;\r\n\r\n    	public function nmMethod() \r\n		{\r\n        	return self::$nm;\r\n    	}\r\n	}\r\n\r\n	class Article extends NowaMagic\r\n	{\r\n    	public function articleMethod() \r\n		{\r\n        	return parent::$nm;\r\n    	}\r\n	}\r\n\r\n	// 通过作用于限定操作符访问静态变量\r\n	print NowaMagic::$nm . &quot;&lt;br /&gt;&quot;;\r\n\r\n	// 调用类的方法\r\n	$nowamagic = new NowaMagic();\r\n	print $nowamagic-&gt;nmMethod() . &quot;&lt;br /&gt;&quot;;\r\n\r\n	print Article::$nm . &quot;&lt;br /&gt;&quot;;\r\n\r\n	$nmArticle = new Article();\r\n	print $nmArticle-&gt;nmMethod() . &quot;&lt;br /&gt;&quot;;\r\n?&gt;</pre>\r\n</div>\r\n程序运行结果：\r\n<div id=\"highlighter_269277\">\r\n<pre class=\"lang_php decode_true\">www.yanue.net\r\nwww.yanue.net\r\nwww.yanue.net\r\nwww.yanue.net</pre>\r\n</div>\r\n<h4>Program List：简单的静态构造器</h4>\r\nPHP没有静态构造器，你可能需要初始化静态类，有一个很简单的方法，在类定义后面直接调用类的Demonstration()方法。\r\n<div id=\"highlighter_502543\">\r\n<pre class=\"lang_php decode_true\">    \r\n&lt;?php\r\nfunction Demonstration()\r\n{\r\n    return &#039;This is the result of demonstration()&#039;;\r\n}\r\n\r\nclass MyStaticClass\r\n{\r\n    //public static $MyStaticVar = Demonstration(); //!!! FAILS: syntax error\r\n    public static $MyStaticVar = null;\r\n\r\n    public static function MyStaticInit()\r\n    {\r\n        //this is the static constructor\r\n        //because in a function, everything is allowed, including initializing using other functions\r\n\r\n        self::$MyStaticVar = Demonstration();\r\n    }\r\n} MyStaticClass::MyStaticInit(); //Call the static constructor\r\n\r\necho MyStaticClass::$MyStaticVar;\r\n//This is the result of demonstration()\r\n?&gt;</pre>\r\n</div>\r\n程序运行结果：\r\n<div id=\"highlighter_220462\">\r\n<pre class=\"lang_php decode_true\">This is the result of demonstration()</pre>\r\n</div>','1343206054','1370541646','','1','0','0','847','344');
INSERT INTO `post` VALUES('33','0','','PHP可变变量、变量引用与销毁','','yanue','','','一切尽在注释里（来源于网络）\r\n<pre class=\"lang_php decode_true\">$long=&quot;big_long_variable_name&quot;;\r\n$$long=&quot;PHP&quot;; /* 用存放在变量$long里的字符串作为新变量的变量名，等同于$big_long_variable_name=&quot;PHP&quot;; */\r\n$short=&amp; $big_long_variable_name; /* 取变量$big_long_variable_name的值赋给变量$short，此时$short的值为&quot;PHP&quot;，等同于$short=&amp; $$long; */\r\nprint &quot;01 /$short is $short.&quot;; /* &quot;/$&quot;是转义序列，表示输出一个美元符号$，下同。本语句的作用是输出：01 $short is PHP. */\r\nprint &quot;02 Long is $big_long_variable_name.&quot;; /* 输出：02 Long is PHP. */\r\n?&gt;\r\n\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n\r\n&lt;?php $big_long_variable_name.=&quot; rocks!&quot;; /* 重新对$big_long_variable_name赋值。重新赋值过程中，由于在$big_long_variable_name的后面添加了.（点号），因而变量$big_long_variable_name此时的值应为原值（&quot;PHP&quot;）+新值（&quot; rocks!&quot;），即变量$big_long_variable_name当前完整的值为&quot;PHP rocks!&quot;。下同。*/\r\nprint &quot;03 /$short is $short&quot;; /* 输出：03 $short is PHP rocks! */\r\nprint &quot;04 Long is $big_long_variable_name&quot;; /* 输出：04 Long is PHP rocks! */\r\n?&gt;\r\n\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n\r\n05 $short is PHP rocks!\r\n06 Long is PHP rocks!\r\n\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n\r\n&lt;?php $short.=&quot;Programming $short&quot;; /* 重新对变量$short赋值。由于在$short后面添加了.（点号），因此请参考上例分析$short的值。*/\r\nprint &quot;07 /$short is $short&quot;; /* 输出：07 $short is PHP rocks!Programming PHP rocks! */\r\nprint &quot;08 Long is $big_long_variable_name&quot;; /* 由于变量$short被重新赋值为Programming PHP rocks!，因而变量$big_long_variable_name的值也与$short一同被改变为&quot;PHP rocks!Programming PHP rocks!&quot;。本语句输出：08 Long is PHP rocks!Programming PHP rocks!注意，如果是对具有相同值的一个变量进行销毁unset( )，则另一个变量不适用于此种情况，即不会随之被一同销毁。*/\r\n?&gt;\r\n\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n\r\n09 $short is Programming PHP rocks!\r\n10 Long is Programming PHP rocks!\r\n\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n\r\n&lt;?php $big_long_variable_name.=&quot;Web Programming $short&quot;; /* 变量$big_long_variable_name被重新赋值，此时它完整的值应为PHP rocks!Programming PHP rocks!Web Programming PHP rocks!Programming PHP rocks!。变量$short的值此时与变量$big_long_variable_name一致。请分别参考第5处、第10处注释进行分析。*/\r\nprint &quot;11 /$short is $short&quot;; /* 输出：11 PHP rocks!Programming PHP rocks!Web Programming PHP rocks!Programming PHP rocks! */\r\nprint &quot;12 Long is $big_long_variable_name&quot;;\r\n?&gt;\r\n\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n\r\n&lt;?php\r\nunset($big_long_variable_name); /* 用unset( )销毁变量$big_long_variable_name，变量$short不会因此受到任何影响。*/\r\nprint &quot;13 /$short is $short&quot;; /* 虽然销毁了变量$big_long_variable_name，但$short没有受到影响，它的值仍是最近一次被赋予的PHP rocks!Programming PHP rocks!Web Programming PHP rocks!Programming PHP rocks! */\r\nprint &quot;14 Long is $big_long_variable_name.&quot;; /* 变量$big_long_variable_name已被销毁，故而无值。输出：14 Long is. */\r\nsnow; \r\n?&gt;\r\n\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n\r\n&lt;?php $short=&quot;No point TEST1&quot;; /* 重新对变量$short赋值。由于这次没有在$short后面添加.（点号），因此$short当前的值为&quot;No point TEST1&quot;。*/\r\nprint &quot;15 /$short is $short.&quot;; /* 输出：15 $short is No point TEST1. */\r\n$short=&quot;No point TEST2 $short&quot;; /* 重新对变量$short赋值。没在$short的后面添加.（点号），但引用了它自身最近一次的值&quot;No point TEST1&quot;。*/\r\nprint &quot;16 /$short is $short.&quot;; /* 输出：16 $short is No point TEST2 No point TEST1. */</pre>','1343206717','1343206871','','1','0','0','682','346');
INSERT INTO `post` VALUES('34','0','','PHP数组函数及说明','','yanue','','','<strong>数组操作的基本函数</strong>\r\n数组的键名和值\r\n<pre class=\"lang_php decode_true\">array_values($arr);//获得数组的值\r\narray_keys($arr);//获得数组的键名\r\narray_flip($arr);//数组中的值与键名互换（如果有重复前面的会被后面的覆盖）\r\nin_array(&quot;apple&quot;,$arr);//在数组中检索apple\r\narray_search(&quot;apple&quot;,$arr);//在数组中检索apple ，如果存在返回键名\r\narray_key_exists(&quot;apple&quot;,$arr);//检索给定的键名是否存在数组中\r\nisset($arr[apple]);//检索给定的键名是否存在数组中</pre>\r\n数组的内部指针\r\n<pre class=\"lang_php decode_true\">current($arr);//返回数组中的当前单元\r\npos($arr);//返回数组中的当前单元\r\nkey($arr);//返回数组中当前单元的键名\r\nprev($arr);//将数组中的内部指针倒回一位\r\nnext($arr);//将数组中的内部指针向前移动一位\r\nend($arr);//将数组中的内部指针指向最后一个单元\r\nreset($arr;//将数组中的内部指针指向第一个单元\r\neach($arr);//将返回数组当前元素的一个键名/值的构造数组，并使数组指针向前移动一位\r\nlist($key,$value)=each($arr);//获得数组当前元素的键名和值</pre>\r\n数组和变量之间的转换\r\n<pre class=\"lang_php decode_true\">extract($arr);//用于把数组中的元素转换成变量导入到当前文件中，键名当作变量名，值作为变量值\r\n//注：（第二个参数很重要，可以看手册使用）使用方法 echo $a;\r\ncompact(var1,var2,var3);//用给定的变量名创建一个数组</pre>\r\n二、数组的分段和填充\r\n数组的分段\r\n<pre class=\"lang_php decode_true\">array_slice($arr,0,3);//可以将数组中的一段取出，此函数忽略键名\r\narray_splice($arr,0,3，array(&quot;black&quot;,&quot;maroon&quot;));//可以将数组中的一段取出，与上个函数不同在于返回的序列从原数组中删除</pre>\r\n分割多个数组\r\n<pre class=\"lang_php decode_true\">array_chunk($arr,3,TRUE);//可以将一个数组分割成多个，TRUE为保留原数组的键名</pre>\r\n数组的填充\r\n<pre class=\"lang_php decode_true\">array_pad($arr,5,&#039;x&#039;);//将一个数组填补到制定长度</pre>\r\n三、数组与栈\r\n<pre class=\"lang_php decode_true\">array_push($arr,&quot;apple&quot;,&quot;pear&quot;);//将一个或多个元素压入数组栈的末尾（入栈），返回入栈元素的个数\r\narray_pop($arr);//将数组栈的最后一个元素弹出（出栈）</pre>\r\n四、数组与列队\r\n<pre class=\"lang_php decode_true\">array_shift($arr);//数组中的第一个元素移出并作为结果返回（数组长度减1，其他元素向前移动一位，数字键名改为从零技术，文字键名不变）\r\narray_unshift($arr,&quot;a&quot;,array(1,2));//在数组的开头插入一个或多个元素</pre>\r\n五、回调函数\r\n<pre class=\"lang_php decode_true\">array_walk($arr,&#039;function&#039;,&#039;words&#039;);//使用用户函数对数组中的每个成员进行处理（第三个参数传递给回调函数function）\r\narray_map(&quot;function&quot;,$arr1,$arr2);//可以处理多个数组（当使用两个或更多数组时，他们的长度应该相同）\r\narray_filter($arr,&quot;function&quot;);//使用回调函数过滤数组中的每个元素，如果回调函数为TRUE，数组的当前元素会被包含在返回的结果数组中，数组的键名保留不变\r\narray_reduce($arr,&quot;function&quot;,&quot;*&quot;);//转化为单值函数（*为数组的第一个值）</pre>\r\n六、数组的排序\r\n通过元素值对数组排序\r\n<pre class=\"lang_php decode_true\">sort($arr);//由小到大的顺序排序（第二个参数为按什么方式排序）忽略键名的数组排序\r\nrsort($arr);//由大到小的顺序排序（第二个参数为按什么方式排序）忽略键名的数组排序\r\nusort($arr,&quot;function&quot;);//使用用户自定义的比较函数对数组中的值进行排序（function中有两个参数，0表示相等，正数表示第一个大于第二个，负数表示第一个小于第二个）忽略键名的数组排序\r\nasort($arr);//由小到大的顺序排序（第二个参数为按什么方式排序）保留键名的数组排序\r\narsort($arr);//由大到小的顺序排序（第二个参数为按什么方式排序）保留键名的数组排序\r\nuasort($arr,&quot;function&quot;);//使用用户自定义的比较函数对数组中的值进行排序（function中有两个参数，0表示相等，正数表示第一个大于第二个，负数表示第一个小于第二个）保留键名的数组排序</pre>\r\n通过键名对数组排序\r\n<pre class=\"lang_php decode_true\">ksort($arr);//按照键名正序排序\r\nkrsort($arr);//按照键名逆序排序\r\nuksort($arr,&quot;function&quot;);//使用用户自定义的比较函数对数组中的键名进行排序（function中有两个参数，0表示相等，正数表示第一个大于第二个，负数表示第一个小于第二个）</pre>\r\n自然排序法排序\r\n<pre class=\"lang_php decode_true\">natsort($arr);//自然排序（忽略键名）\r\nnatcasesort($arr);//自然排序（忽略大小写，忽略键名）</pre>\r\n七、数组的计算\r\n数组元素的求和\r\n<pre class=\"lang_php decode_true\">array_sum($arr);//对数组内部的所有元素做求和运算</pre>\r\n数组的合并\r\n<pre class=\"lang_php decode_true\">array_merge($arr1,$arr2);//合并两个或多个数组（相同的字符串键名，后面的覆盖前面的，相同的数字键名，后面的不会做覆盖操作，而是附加到后面）\r\n“+”$arr1+$arr2;对于相同的键名只保留后一个\r\narray_merge_recursive($arr1,$arr2);//递归合并操作，如果数组中有相同的字符串键名，这些值将被合并到一个数组中去。如果一个值本身是一个数组，将按照相应的键名把它合并为另一个数组。当数组具有相同的数组键名时，后一个值将不会覆盖原来的值，而是附加到后面</pre>\r\n数组的差集\r\n<pre class=\"lang_php decode_true\">array_diff($arr1,$arr2);//返回差集结果数组\r\narray_diff_assoc($arr1,$arr2,$arr3);//返回差集结果数组，键名也做比较</pre>\r\n数组的交集\r\n<pre class=\"lang_php decode_true\">array_intersect($arr1,$arr2);//返回交集结果数组\r\narray_intersect_assoc($arr1,$arr2);//返回交集结果数组，键名也做比较</pre>\r\n八、其他的数组函数\r\n<pre class=\"lang_php decode_true\">range(0,12);//创建一个包含指定范围单元的数组\r\narray_unique($arr);//移除数组中重复的值，新的数组中会保留原始的键名\r\narray_reverse($arr,TRUE);//返回一个单元顺序与原数组相反的数组，如果第二个参数为TRUE保留原来的键名\r\n//srand((float)microtime()*10000000); //随机种子触发器\r\narray_rand($arr,2);//从数组中随机取出一个或 多个元素\r\nshuffle($arr);//将数组的顺序打乱</pre>','1343279110','1343279110','','1','0','0','771','349');
INSERT INTO `post` VALUES('35','0','','纯css实现div左右等高','','yanue','','','纯css实现div左右等高原理很简单，看了就知道\r\n\r\n主要使用margin负值+padding正值来实现，外层超出隐藏就ok了，具体看实例\r\n<pre class=\"lang_php decode_true\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;meta charset=utf-8&quot; /&gt;\r\n&lt;title&gt;纯css实现div左右等高&lt;/title&gt;\r\n&lt;style type=&quot;text/css&quot;&gt;\r\n*{\r\n margin:0;\r\n padding:0;\r\n}\r\n#wrap{\r\n overflow:hidden;\r\n width:1000px;\r\n margin:0 auto;\r\n}\r\n#left,#center{\r\n margin-bottom:-10000px;\r\n padding-bottom:10000px;\r\n}\r\n#left{\r\n float:left;\r\n width:250px;\r\n background:#00FFFF;\r\n }\r\n#center{\r\n float:left;\r\n width:500px;\r\n background:#FF0000;\r\n }\r\n\r\n&lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;div id=&quot;wrap&quot;&gt;\r\n &lt;div id=&quot;left&quot;&gt;\r\n  &lt;p&gt;left&lt;/p&gt;\r\n  &lt;p&gt;left&lt;/p&gt;\r\n  &lt;p&gt;left&lt;/p&gt;\r\n  &lt;p&gt;left&lt;/p&gt;\r\n  &lt;p&gt;left&lt;/p&gt;\r\n &lt;/div&gt;\r\n &lt;div id=&quot;center&quot;&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n &lt;/div&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>','1345860354','1345860354','','1','0','0','2197','357');
INSERT INTO `post` VALUES('36','0','','带头像三级评论回复html+css代码','','yanue','','','带头像三级评论回复html+css代码，模式和qq空间里面的说说一样，留一个备用\r\n<pre class=\"lang:php decode:true \">&lt;!DOCTYPE HTML&gt;\r\n&lt;html lang=\"zh-CN\"&gt;\r\n    &lt;head&gt;\r\n        &lt;meta charset=\"UTF-8\"&gt;\r\n        &lt;title&gt;带头像三级评论回复html+css代码&lt;/title&gt;\r\n        &lt;style type=\"text/css\"&gt;\r\n            @CHARSET \"UTF-8\";\r\n            * {\r\n                margin: 0;\r\n                padding: 0;\r\n            }\r\n\r\n            .feed {\r\n                font-family: \"微软雅黑\";\r\n                width: 720px;\r\n                margin: 8px 0;\r\n            }\r\n\r\n            .avatar {\r\n                width: 50px;\r\n                float: left;\r\n                margin: 0 8px 0 0;\r\n                box-shadow: 0 0 3px #e0e0e0;\r\n                border-radius: 5px;\r\n                border: 1px solid #e0e0e0;\r\n            }\r\n\r\n            .feed .avatar img {\r\n                width: 50px;\r\n                height: 50px;\r\n            }\r\n\r\n            .feed .box1 {\r\n                width: 640px;\r\n                float: left;\r\n                background: #f6f6f6;\r\n                border: 1px solid #e0e0e0;\r\n                border-radius: 5px;\r\n            }\r\n\r\n            .feed .box1 .current {\r\n                font-size: 14px;\r\n                margin: 8px;\r\n            }\r\n\r\n            .feed .box1 .info {\r\n                margin: 0 8px;\r\n            }\r\n\r\n            .feed .box1 .info span {\r\n                float: right;\r\n            }\r\n\r\n            .feed .box1 .line {\r\n                padding: 8px 0 0 0;\r\n                border-bottom: 1px solid #e0e0e0;\r\n            }\r\n\r\n            .feed .box1 .box2 {\r\n                margin: 8px;\r\n                padding: 0 0 8px 0;\r\n                border-bottom: 1px dashed #ccc;\r\n            }\r\n\r\n            .feed .box1 .box2_comments {\r\n                width: 560px;\r\n                overflow: hidden;\r\n                float: left;\r\n            }\r\n\r\n            .feed .box1 .say {\r\n                margin: 0 0 8px;\r\n            }\r\n\r\n            .clear {\r\n                clear: both;\r\n            }\r\n\r\n            .feed .box1 .box2_comments .box3 {\r\n                margin: 8px 0;\r\n            }\r\n\r\n            .feed .box1 .box2_comments .box3_comments {\r\n                float: left;\r\n                width: 500px;\r\n            }\r\n\r\n            .reply_area {\r\n                border: 1px solid #e0e0e0;\r\n                height: 30px;\r\n                line-height: 30px;\r\n                width: 620px;\r\n                margin: 8px;\r\n                color: #666;\r\n                font-size: 12px;\r\n                font-family: \"微软雅黑\";\r\n                clear: both;\r\n            }\r\n\r\n        &lt;/style&gt;\r\n    &lt;/head&gt;\r\n    &lt;body&gt;\r\n        &lt;ul&gt;\r\n            &lt;li class=\"feed\"&gt;\r\n                &lt;div class=\"avatar\"&gt;\r\n                    &lt;img src=\"images/user.jpg\" alt=\"\" /&gt;\r\n                &lt;/div&gt;&lt;!--第一层循环start--&gt;\r\n                &lt;div class=\"box1\"&gt;\r\n                    &lt;p class=\'current\'&gt;\r\n                        &lt;a href=\"\"&gt;user&lt;/a&gt;\r\n                        说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容\r\n                    &lt;/p&gt;\r\n                    &lt;p class=\'info\'&gt;\r\n                        &lt;span&gt;&lt;a href=\"\"&gt;删除&lt;/a&gt;&lt;a href=\"\"&gt;评论&lt;/a&gt;&lt;/span&gt;\r\n                        &lt;strong&gt;刚刚&lt;/strong&gt;\r\n                        通过QQ空间 \r\n                    &lt;/p&gt;\r\n                    &lt;p class=\"line\"&gt;\r\n                    &lt;/p&gt;\r\n                    &lt;!--第二层循环start--&gt;\r\n                    &lt;div class=\"box2\"&gt;\r\n                        &lt;div class=\"avatar\"&gt;\r\n                            &lt;img src=\"images/user.jpg\" alt=\"\" /&gt;\r\n                        &lt;/div&gt;\r\n                        &lt;div class=\"box2_comments\"&gt;\r\n                            &lt;p class=\'say\'&gt;\r\n                                &lt;a href=\"\"&gt;user&lt;/a&gt;\r\n                                说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容\r\n                            &lt;/p&gt;\r\n                            &lt;p&gt;\r\n                                &lt;strong&gt;刚刚&lt;/strong&gt;\r\n                                &lt;a href=\"\"&gt;删除&lt;/a&gt;\r\n                                &lt;a href=\"\"&gt;回复&lt;/a&gt;\r\n                            &lt;/p&gt;\r\n                            &lt;!--第三层循环start--&gt;\r\n                            &lt;div class=\"box3\"&gt;\r\n                                &lt;div class=\"avatar\"&gt;\r\n                                    &lt;img src=\"images/user.jpg\" alt=\"\" /&gt;\r\n                                &lt;/div&gt;\r\n                                &lt;div class=\"box3_comments\"&gt;\r\n                                    &lt;p class=\'say\'&gt;\r\n                                        &lt;a href=\"\"&gt;user&lt;/a&gt;\r\n                                        说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容\r\n                                    &lt;/p&gt;\r\n                                    &lt;p&gt;\r\n                                        &lt;strong&gt;刚刚&lt;/strong&gt;\r\n                                        &lt;a href=\"\"&gt;删除&lt;/a&gt;\r\n                                        &lt;a href=\"\"&gt;回复&lt;/a&gt;\r\n                                    &lt;/p&gt;\r\n                                &lt;/div&gt;\r\n                                &lt;div class=\"clear\"&gt;\r\n                                &lt;/div&gt;\r\n                            &lt;/div&gt;\r\n                            &lt;!--第三层循环end--&gt;\r\n                        &lt;/div&gt;\r\n                        &lt;div class=\"clear\"&gt;\r\n                        &lt;/div&gt;\r\n                    &lt;/div&gt;\r\n                    &lt;div class=\"box2\"&gt;\r\n                        &lt;div class=\"avatar\"&gt;\r\n                            &lt;img src=\"images/user.jpg\" alt=\"\" /&gt;\r\n                        &lt;/div&gt;\r\n                        &lt;div class=\"box2_comments\"&gt;\r\n                            &lt;p class=\'say\'&gt;\r\n                                &lt;a href=\"\"&gt;user&lt;/a&gt;\r\n                                说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容\r\n                            &lt;/p&gt;\r\n                            &lt;p&gt;\r\n                                &lt;strong&gt;刚刚&lt;/strong&gt;\r\n                                &lt;a href=\"\"&gt;删除&lt;/a&gt;\r\n                                &lt;a href=\"\"&gt;回复&lt;/a&gt;\r\n                            &lt;/p&gt;\r\n                            &lt;!--第三层循环start--&gt;\r\n                            &lt;div class=\"box3\"&gt;\r\n                                &lt;div class=\"avatar\"&gt;\r\n                                    &lt;img src=\"images/user.jpg\" alt=\"\" /&gt;\r\n                                &lt;/div&gt;\r\n                                &lt;div class=\"box3_comments\"&gt;\r\n                                    &lt;p class=\'say\'&gt;\r\n                                        &lt;a href=\"\"&gt;user&lt;/a&gt;\r\n                                        说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容\r\n                                    &lt;/p&gt;\r\n                                    &lt;p&gt;\r\n                                        &lt;strong&gt;刚刚&lt;/strong&gt;\r\n                                        &lt;a href=\"\"&gt;删除&lt;/a&gt;\r\n                                        &lt;a href=\"\"&gt;回复&lt;/a&gt;\r\n                                    &lt;/p&gt;\r\n                                &lt;/div&gt;\r\n                                &lt;div class=\"clear\"&gt;\r\n                                &lt;/div&gt;\r\n                            &lt;/div&gt;\r\n                            &lt;div class=\"box3\"&gt;\r\n                                &lt;div class=\"avatar\"&gt;\r\n                                    &lt;img src=\"images/user.jpg\" alt=\"\" /&gt;\r\n                                &lt;/div&gt;\r\n                                &lt;div class=\"box3_comments\"&gt;\r\n                                    &lt;p class=\'say\'&gt;\r\n                                        &lt;a href=\"\"&gt;user&lt;/a&gt;\r\n                                        说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容\r\n                                    &lt;/p&gt;\r\n                                    &lt;p&gt;\r\n                                        &lt;strong&gt;刚刚&lt;/strong&gt;\r\n                                        &lt;a href=\"\"&gt;删除&lt;/a&gt;\r\n                                        &lt;a href=\"\"&gt;回复&lt;/a&gt;\r\n                                    &lt;/p&gt;\r\n                                &lt;/div&gt;\r\n                                &lt;div class=\"clear\"&gt;\r\n                                &lt;/div&gt;\r\n                            &lt;/div&gt;\r\n                            &lt;!--第三层循环end--&gt;\r\n                        &lt;/div&gt;\r\n                        &lt;div class=\"clear\"&gt;\r\n                        &lt;/div&gt;\r\n                    &lt;/div&gt;\r\n                    &lt;!--第二层循环end--&gt;\r\n                    &lt;p class=\"line\"&gt;\r\n                    &lt;/p&gt;\r\n                    &lt;textarea name=\"\" class=\"reply_area\"&gt;\r\n                        我也说两句\r\n                    &lt;/textarea&gt;\r\n                &lt;/div&gt;\r\n                &lt;!--第一层循环end--&gt;\r\n                &lt;div class=\"clear\"&gt;\r\n                &lt;/div&gt;\r\n            &lt;/li&gt;\r\n        &lt;/ul&gt;\r\n    &lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n&nbsp;','1345860739','1386783576','','1','0','3','16003','359');
INSERT INTO `post` VALUES('37','0','','jquery判断点击事件是否在目标区域','','yanue','','','很多时候需要在鼠标点击非目标区域div将目标div隐藏的效果，这是需要判断点击事件是否在目标区域内，\r\n\r\njquery的实现方法是：(最近更新,未测)\r\n<pre class=\"lang_php decode_true\">$(document).click(function(e){ \r\n	e = window.event || e; // 兼容IE7\r\n	obj = $(e.srcElement || e.target);\r\n 	  if ($(obj).is(&quot;#elem,#elem *&quot;)) { \r\n 	   // alert(&#039;内部区域&#039;); \r\n  	} else {\r\n  		alert(&#039;你的点击不在目标区域&#039;);\r\n	} \r\n});</pre>\r\n这样就可以进行其他效果的操作了,另外一种类似思路:<a href=\"http://www.yanue.net/archives/439.html\" target=\"_blank\">jquery判断点击区域 隐藏/显示其他区域</a>\r\n\r\n原始写法:(不兼容ff)\r\n<pre class=\"lang_php decode_true\">$(document).click(function(){ \r\n 	  if ($(event.srcElement).is(&quot;#elem,#elem *&quot;)) { \r\n 	   // alert(&#039;内部区域&#039;); \r\n  	  } else {\r\n  		alert(&#039;你的点击不在目标区域&#039;);\r\n	  } \r\n});</pre>\r\n&nbsp;','1345861276','1357891855','','1','0','4','2841','362');
INSERT INTO `post` VALUES('38','0','','PHP解析URL参数','','yanue','','','<pre class=\"lang_php decode_true\"></pre>\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\n//例举一个URL格式的字符串:\r\n$str = &#039;http://test.com/testdir/index.php?param1=10&amp;param2=20&amp;param3=30&amp;param4=40&amp;param5=50&amp;param6=60&#039;;\r\n\r\n//1.0 用parse_url解析URL,此处是$str\r\n$arr = parse_url($str);\r\nvar_dump($arr);\r\n\r\n\r\n//2.0 将URL中的参数取出来放到数组里\r\n$arr_query = convertUrlQuery($arr[&#039;query&#039;]);\r\nvar_dump($arr_query);\r\n\r\n\r\n//3.0 将 参数数组 再变回 字符串形式的参数格式\r\nvar_dump(getUrlQuery($arr_query));\r\n\r\n\r\n/** \r\n * Returns the url query as associative array \r\n * \r\n * @param    string    query \r\n * @return    array    params \r\n */ \r\nfunction convertUrlQuery($query)\r\n{ \r\n    $queryParts = explode(&#039;&amp;&#039;, $query); \r\n    \r\n    $params = array(); \r\n    foreach ($queryParts as $param) \r\n	{ \r\n        $item = explode(&#039;=&#039;, $param); \r\n        $params[$item[0]] = $item[1]; \r\n    } \r\n    \r\n    return $params; \r\n}\r\n\r\nfunction getUrlQuery($array_query)\r\n{\r\n	$tmp = array();\r\n	foreach($array_query as $k=&gt;$param)\r\n	{\r\n		$tmp[] = $k.&#039;=&#039;.$param;\r\n	}\r\n	$params = implode(&#039;&amp;&#039;,$tmp);\r\n	return $params;\r\n}</pre>','1348096029','1348096029','','1','0','0','1735','371');
INSERT INTO `post` VALUES('39','0','','seajs打包部署工具spm的使用总结','','yanue','','','相信使用seajs的好处大家都是知道的，接触seajs好像是在半年前，当时还不知道页面阻塞问题，这里不带多余的话了。\r\n\r\nseajs实现了模块化的开发，一个网站如果分了很多很多模块的话，等开发完成了，发现有很大一堆的js需要加载，即使使用了seajs优化加载了，但是过多的http请求会造成服务器的压力，影响加载等等。这时候我们需要将模块进行压缩和合并。这时候spm工具派上用场了。\r\n\r\n<strong><span style=\"color: #ff0000;\">1.安装spm</span></strong>\r\n\r\nspm工具是基于node（nodejs的服务平台）的,因此我们需要<span style=\"color: #ff0000;\">先安装</span> node 和 npm 下载地址：<a title=\"nodejs\" href=\"http://nodejs.org/#download\">http://nodejs.org/#download</a>.下载完成后安装即可。\r\n\r\nnode安装完成后，找到cmd命令文件以管理员的方式打开，输入以下命令进行安装：\r\n<pre class=\"lang_php decode_true\">npm install spm -g</pre>\r\n在此过程中，可能需要你很长的时间等待。（偶尔可能连接失败了，你需要关闭cmd后重新开启并执行同样的命令，过程将继续）\r\n\r\n<a href=\"http://www.yanue.net/archives/398.html/unnamed\" rel=\"attachment wp-att-404\"><img class=\"alignnone  wp-image-404\" title=\"安装spm\" alt=\"\" src=\"http://www.yanue.net/wp-content/uploads/2012/10/Unnamed.jpg\" width=\"618\" height=\"400\" /></a>\r\n\r\n安装完成后，恭喜你，可以使用了。\r\n\r\n<span style=\"color: #ff0000;\"><strong>2.spm的使用</strong><strong>：</strong></span>\r\n\r\n使用spm其实就是执行cmd命令，安装完成后，你就可以使用命令了 (当然有很多命令的)，输入：\r\n<pre class=\"lang_php decode_true\">spm help</pre>\r\n你会看到所有的命令。我们主要用的命令就是\r\n<pre class=\"lang_php decode_true\">spm build</pre>\r\n<span style=\"color: #ff0000;\">当然得注意两点：</span>\r\n\r\n(1).需要将执行目录切换到项目。比如你的项目js目录在D:/www/spm/js下；则需要先用cmd命令切换到D:/www/spm/js.见下图\r\n\r\n(2).项目的js目录结构里面必须包含src目录，即未合并和压缩的js文件（seajs模块文件）。<a title=\"spm目录结构约定\" href=\"https://github.com/spmjs/spm/wiki/Spm-build-%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84\">目录结构约定传送门</a>。\r\n\r\n<a href=\"http://www.yanue.net/archives/398.html/unnamed-2\" rel=\"attachment wp-att-405\"><img class=\"alignnone  wp-image-405\" title=\"spm build过程\" alt=\"\" src=\"http://www.yanue.net/wp-content/uploads/2012/10/Unnamed1.jpg\" width=\"545\" height=\"371\" /></a>\r\n\r\n最后，这些只是将了我接触的时候遇到的问题，具体spm命令及使用细节请见<a title=\"SPM使用文档\" href=\"https://github.com/spmjs/spm/wiki/_pages\">官方文档</a>','1349671303','1359409313','','1','0','4','9936','398');
INSERT INTO `post` VALUES('40','0','','(原创)jquery模拟实现confirm效果的两种思路一','','yanue','','','大家知道，js弹出的警告框非常难看，这跟据浏览器自身情况又不一样。很多情况下，根据系统的整体结构，我们需要更友好，更美化的展示给用户才是最好的体验。废话不多说。\r\n\r\n以前一直纠结，不知道怎么实现，看了人家代码也没搞清楚，后来在项目中同事的写法提醒了我，于是记下来。\r\n\r\n实现由两种思路：\r\n\r\n<span style=\"color: #ff0000;\">思路1</span>：将确定和取消后需要执行的函数直接作为两个button的click事件回掉函数，有一个缺点是调用过后需要手动隐藏层\r\n\r\n<span style=\"color: #ff0000;\">思路2</span>：事件点击后先将帮顶在该dom上的其他事件移除，然后绑定上警告框事件，在根据用户在警告事件里的选择来确定需要执行的事件。\r\n\r\n可能说的很绕。下面对思路1做一个demo\r\n<pre class=\"lang_php decode_true\">&lt;!DOCTYPE HTML&gt;\r\n&lt;html lang=&quot;zh-CN&quot;&gt;\r\n    &lt;head&gt;\r\n        &lt;meta charset=&quot;UTF-8&quot;&gt;\r\n        &lt;meta name=&quot;author&quot; content=&quot;yanue&quot; /&gt;\r\n        &lt;meta name=&quot;generator&quot; content=&quot;www.yanue.net&quot; /&gt;\r\n        &lt;meta name=&quot;copyright&quot; content=&quot;powered by yanue&quot; /&gt;\r\n        &lt;title&gt;jquery模拟实现confirm效果的两种思路一&lt;/title&gt;\r\n        &lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js&quot;&gt;\r\n        &lt;/script&gt;\r\n    &lt;/head&gt;\r\n    &lt;body style=&#039;font-size:12px;font-family:&quot;microsoft yahei&quot;;color:#333;&#039;&gt;\r\n        &lt;h1&gt;jquery模拟实现confirm效果的两种思路一&lt;/h1&gt;\r\n        &lt;p&gt;\r\n            思路：将确定和取消后需要执行的函数直接作为两个button的click事件回掉函数\r\n        &lt;/p&gt;\r\n        &lt;p&gt;\r\n            将两个函数作为参数传入便于封装\r\n        &lt;/p&gt;\r\n        &lt;div class=&quot;confirm&quot; style=&#039;display:none;border:1px solid #ccc;width:200px;&#039;&gt;\r\n            &lt;p&gt;\r\n                提示信息\r\n            &lt;/p&gt;\r\n            &lt;p&gt;\r\n                &lt;a href=&quot;javascript:;&quot; id=&quot;cancel_btn&quot;&gt;取消&lt;/a&gt;\r\n                &lt;a href=&quot;javascript:;&quot; id=&quot;ok_btn&quot;&gt;确定&lt;/a&gt;\r\n            &lt;/p&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;del&quot;&gt;\r\n            &lt;a href=&quot;javascript:;&quot;&gt;点击这里删除我&lt;/a&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;status&quot;&gt;\r\n        &lt;/div&gt;\r\n        &lt;script type=&quot;text/javascript&quot;&gt;\r\n            //思路：将确定和取消后需要执行的函数直接作为两个button的click事件回掉函数\r\n            //将两个函数作为参数传入便于封装\r\n            //缺点：调用过后需要手动隐藏层\r\n            function myconfirm(func, cancel_callback){\r\n                $(&quot;.confirm&quot;).fadeIn();\r\n                if (typeof(func) == &#039;function&#039;) \r\n                    $(&#039;#ok_btn&#039;).click(func);\r\n                if (typeof(cancel_callback) == &#039;function&#039;) \r\n                    $(&#039;#cancel_btn&#039;).click(cancel_callback);\r\n            }\r\n\r\n            //点击确定后需要执行的函数\r\n            function ok(){\r\n                //alert(&#039;you clicked ok&#039;);\r\n                $(&#039;.del&#039;).html(&#039;你居然敢删除我？&#039;).fadeOut(2000);\r\n                $(&#039;.status&#039;).html(&#039;你点击了&quot;确定&quot;按钮&#039;);\r\n                //隐藏提示框(需要手动，不方便)\r\n                $(&quot;.confirm&quot;).hide();\r\n            }\r\n\r\n            //点击取消后需要执行的函数，一般情况下直接隐藏confirm\r\n            function cancel(){\r\n                //alert(&#039;you clicked cancel&#039;);\r\n                //隐藏提示框(需要手动，不方便)\r\n                $(&#039;.status&#039;).html(&#039;你点击了&quot;取消&quot;按钮&#039;);\r\n                $(&quot;.confirm&quot;).hide();\r\n            }\r\n\r\n            $(function(){\r\n                $(&#039;.del&#039;).click(function(){\r\n                    //弹出警告框\r\n                    myconfirm(ok, cancel);\r\n                });\r\n            })\r\n        &lt;/script&gt;\r\n    &lt;/body&gt;\r\n&lt;/html&gt;</pre>','1349672380','1349889773','','1','0','1','4498','407');
INSERT INTO `post` VALUES('41','0','','php开发性能调试工具xdebug','','yanue','','','调试是一门艺术，在项目开发过程中，调试是很关键的一步。php中一般使用die,exit()控制断点并使用echo、print_r()、var_dump()、printf()输出结果来调试。一般情况下以上就可以满足开发者调试的目的了。下面来介绍一下xdebug工具。\r\n<p align=\"left\">Xdebug是一个开放源代码的PHP程序调试器(即一个Debug工具)，可以用来跟踪，调试和分析PHP程序的运行状况。</p>\r\n<span style=\"color: #ff0000;\"><strong>安装Xdebug</strong></span>\r\n<p align=\"left\">1． 打开<a href=\"http://www.xdebug.org/download.php\">http://www.xdebug.org/download.php</a>下载对应的版本（根据你自己安装的服务器版本进行下载）</p>\r\n<p align=\"left\">2.   将下载的dll文件放到相应的目录中。比如D:\\server\\php\\ext下面；</p>\r\n<p align=\"left\">3.   配置php.ini文件，在ini文件里面追加下面代码</p>\r\n\r\n<pre class=\"lang_php decode_true\">[Xdebug] \r\nzend_extension=&quot;D:\\Program Files\\phpStudy\\PHP5\\ext\\php_xdebug.dll&quot; //dll文件位置\r\nxdebug.profiler_output_dir=&quot;D:\\xdebug&quot;  //\r\nxdebug.profiler_enable=On \r\nxdebug.profiler_enable_trigger=1 \r\nxdebug.default_enable=On \r\nxdebug.show_exception_trace=On \r\nxdebug.show_local_vars=1 \r\nxdebug.max_nesting_level=50 \r\nxdebug.var_display_max_depth=6 \r\nxdebug.dump_once=1 \r\nxdebug.dump_globals=1 \r\nxdebug.dump_undefined=On \r\nxdebug.dump.REQUEST=* \r\nxdebug.dump.SERVER=REQUEST_METHOD,REQUEST_URI,HTTP_USER_AGENT \r\nxdebug.trace_output_dir=&quot;D:\\xdebug&quot; \r\nxdebug.remote_enable=true     //Xdebug允许远程IDE连接\r\nxdebug.remote_host=127.0.0.1   //允许连接的zend studio的IP地址\r\nxdebug.remote_port=9000       //反向连接zend studio使用的端口\r\nxdebug.remote_handler=dbgp    //用于zend studio远程调试的应用层通信协议</pre>\r\n重启Apache后就完成安装了。你可以使用phpinfo查看是否安装成功\r\n\r\n<img class=\"alignnone\" title=\"检测xdebug是否安装成功\" src=\"http://images.cnblogs.com/cnblogs_com/mo-beifeng/image003.png\" alt=\"\" width=\"623\" height=\"222\" />\r\n\r\n<span style=\"color: #ff0000;\"><strong>调试：</strong></span>\r\n\r\n安装完成后，xdebug会输出相应的（错误）调试信息。\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\necho aa;</pre>\r\n<a href=\"http://www.yanue.net/archives/411.html/uumuneqxqvi32g6h41l4\" rel=\"attachment wp-att-412\"><img class=\"alignnone  wp-image-412\" title=\"xdebug调试信息\" src=\"http://www.yanue.net/wp-content/uploads/2012/10/UUM@UNEQXQVI32G6H41L4.jpg\" alt=\"\" width=\"611\" height=\"205\" /></a>\r\n\r\n上面显示出错误类型http请求耗时等等，这是最基本的\r\n\r\nxdebug给我们提供了很多调试的方法，比如<strong>脚本执行时间</strong>，内存占用等等\r\n\r\n实例：测试脚本执行时间和内存占用：\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\n$t =  xdebug_time_index();\r\nfor ($i = 0; $i &lt; 250000; $i++)\r\n{\r\n    // do nothing\r\n}\r\necho &quot;执行时间：&quot;.xdebug_time_index()-$t.&quot;&lt;br/&gt;&quot;;\r\n\r\necho &quot;使用内存：&quot;xdebug_memory_usage();</pre>\r\n还有很多调试功能，自己去体验吧.\r\n\r\nThe end.','1349811434','1349811630','','1','0','0','1360','411');
INSERT INTO `post` VALUES('42','13','[{\"id\":16,\"name\":\"gps\"}]','GPS坐标转换经纬度及换算方法','','yanue','','http://img.yanue.net/png/A8/F7/a8f7c8f2979722cfa1626eb70de1bec3.png','<address></address><h1 class=\"post-title\" style=\"margin: 0px 0px 6px; padding: 0px; border: 0px; outline: 0px; font-size: 20px; vertical-align: baseline; background-color: transparent; line-height: 36px; font-weight: normal; position: relative; font-family: \'Microsoft JhengHei\';\"><p style=\"margin-bottom: 1.3em; color: rgb(51, 51, 51); font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 14px; line-height: 21px;\">GPS坐标和经纬度的算法和概率不太一样，但是我们可能会将他们互通起来用，下面先贴上我做的转换工具：<a title=\"GPS坐标转经纬度\" href=\"http://map.yanue.net/gps.html\" target=\"_blank\" data-mce-href=\"http://map.yanue.net/gps.html\">http://map.yanue.net/gps.html</a>。里面实现了gps到谷歌地图百度地图经纬度的转换。不含糊，下面将他们之间的联系。</p><p style=\"margin-bottom: 1.3em; color: rgb(51, 51, 51); font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 14px; line-height: 21px;\">GPS坐标系我本身不太了解它跟谷歌地图经纬度有多大区别，于是搜了一下，看看他们的区别：</p><p style=\"margin-bottom: 1.3em; color: rgb(51, 51, 51); font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 14px; line-height: 21px;\"><strong>地形图坐标系：</strong>我国的地形图采用高斯－克吕格平面直角坐标系。在该坐标系中，横轴：赤道，用Ｙ表示；纵轴：中央经线，用Ｘ表示；坐标原点：中央经线与赤 道的交点，用0表示。赤道以南为负，以北为正；中央经线以东为正，以西为负。我国位于北半球，故纵坐标均为正值，但为避免中央经度线以西为负值的情况，将 坐标纵轴西移500公里。</p><p style=\"margin-bottom: 1.3em; color: rgb(51, 51, 51); font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 14px; line-height: 21px;\">北京54坐标系：1954年我国在北京设立了大地坐标原点，采用克拉索夫斯基椭球体，依此计算出来的各大地控制点的坐标，称为北京54坐标系。<br />GS84坐标系：即世界通用的经纬度坐标系。</p><p style=\"margin-bottom: 1.3em; color: rgb(51, 51, 51); font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 14px; line-height: 21px;\"><strong>经纬度表示：</strong>1884年国际经度会议规定，以通过英国伦敦格林威治天文台子午仪中心的经线为0°经线。从0°经线往东叫东经，往西叫西经，东、西各分180°。习惯 上以西经20°和东经160°为分界把地球分为东西两个半球。假如从地轴的正中间将地球切成南北两半，上边的一半叫北半球，下边的一半叫南半球。被切的这 个平面，叫赤道面。赤道面与地球表面相交的线叫赤道。纬线从赤道往两极越来越短，到了两极就缩小成一个点了。科学家们把赤道定为0°纬线，从赤道向两极各 分为90°，赤道以南叫南纬，赤道以北叫北纬。在计算机或GPS上经纬度经常用度、分、秒和度.度、分.分、秒.秒的混合方式进行表示，度、分、秒间的进 制是60进制，度.度、分.分、秒.秒的进制是100进制，换算时一定要注意。可以近似地认为每个纬度之间的距离是不变的111KM,每分间 1.85KM，每秒间31.8M。经度间的距离随纬度增高逐渐减小，可按以下公式计算：</p><p style=\"margin-bottom: 1.3em; color: rgb(51, 51, 51); font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 14px; line-height: 21px;\">经度1°长度=111.413cosφ一0.094cos3φ公里(纬度φ处)。<br />一般从GPS得到的数据是经纬度。经纬度有多种表示方法。<br />1.)&nbsp; ddd.ddddd， 度 . 度的十进制小数部分（5位）例如：31.12035º<br />2.) ddd.mm.mmm，度 . 分 . 分的十进制小数部分（3位）例如 31º10.335\'<br />3.) ddd.mm.ss, 度 . 分 . 秒 例如 31º12\'42&quot;<br />地球上任何一个固定的点都可以用确定的经纬度表示出来。</p><p style=\"margin-bottom: 1.3em; color: rgb(51, 51, 51); font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 14px; line-height: 21px;\"><strong>关于经纬度坐标转换的方法</strong><br />一、十进制转换成经纬度<br />把经纬度转换成十进制的方法很简单<br />如下就可以了<br />Decimal Degrees = Degrees + minutes/60 + seconds/3600<br />例：57°55\'56.6&quot; =57+55/60+56.6/3600=57.9323888888888<br />114°65\'24.6&quot;=114+65/60+24.6/3600=结果自己算!</p><p style=\"margin-bottom: 1.3em; color: rgb(51, 51, 51); font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 14px; line-height: 21px;\">如把经纬度 (longitude，latitude) (205.395583333332，57.9323888888888)<br />转换据成坐标(Degrees,minutes,seconds)(205°23\'44.1&quot;，57°55\'56.6&quot;)。<br />步骤如下：</p><p style=\"margin-bottom: 1.3em; color: rgb(51, 51, 51); font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 14px; line-height: 21px;\">1， 直接读取&quot;度&quot;：205<br />2，(205.395583333332-205)*60=23.734999999920 得到&quot;分&quot;：23<br />3，(23.734999999920-23)*60=44.099999995200 得到&quot;秒&quot;：44.1</p><p style=\"margin-bottom: 1.3em; color: rgb(51, 51, 51); font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 14px; line-height: 21px;\">采用同样的方法可以得到纬度坐标：57°55\'56.6&quot;</p><p style=\"margin-bottom: 1.3em; color: rgb(51, 51, 51); font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 14px; line-height: 21px;\">好大一篇，都是别的地方copy过来的，有兴趣就自己看看吧</p><p style=\"margin-bottom: 1.3em; color: rgb(51, 51, 51); font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 14px; line-height: 21px;\">The end</p><br /></h1>','1349839526','1394727232','','1','0','3','13575','413');
INSERT INTO `post` VALUES('43','6','[{\"id\":34,\"name\":\"jquery\"},{\"id\":35,\"name\":\"插件\"}]','jquery全屏漂浮广告插件，可点击关闭(原创)','jquery全屏漂浮广告插件 兼容主流浏览器 实现简单 调用简单 在线预览 源码下载','yanue','','http://img.yanue.net/gif/C3/40/c34089d27b2992f1a00aeece44c91cc4.gif','<h2>jquery全屏漂浮广告插件 兼容主流浏览器 实现非常简单</h2><p><strong>说明</strong>：jquery在1.9开始不支持.live()方法的写法而改用.on()，见<a href=\"http://jquery.com/upgrade-guide/1.9/#live-removed\" data-mce-href=\"http://jquery.com/upgrade-guide/1.9/#live-removed\">http://jquery.com/upgrade-guide/1.9/#live-removed</a>.该插件中关闭图片链接使用了.live().请根据自己情况自行修改.</p><p>在线预览：</p><p><a href=\"http://demo.yanue.net/floatAd/\" data-mce-href=\"http://demo.yanue.net/floatAd/\">http://demo.yanue.net/floatAd/</a></p><p></p><h2>插件源码：</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">(function($){\n	$.fn.floatAd = function(options){\n		var defaults = {\n			imgSrc : &quot;http://wenwen.soso.com/p/20100204/20100204193850-483274619.jpg&quot;, //漂浮图片路径\n			url : &quot;http://map.yanue.net&quot;, //图片点击跳转页\n			openStyle : 1, //跳转页打开方式 1为新页面打开  0为当前页打开\n			speed : 10 //漂浮速度 单位毫秒\n		};\n		var options = $.extend(defaults,options);\n		var _target = options.openStyle == 1 ?  &quot;target=\'_blank\'&quot; : \'\' ;\n		var html = &quot;&lt;div id=\'float_ad\' style=\'position:absolute;left:0px;top:0px;z-index:1000000;cleat:both;\'&gt;&quot;;\n            html += &quot;  &lt;a href=\'&quot; + options.imgJumpToUrl + &quot;\' &quot; + _target + &quot;&gt;&lt;img src=\'&quot; + options.imgSrc + &quot;\' border=\'0\' class=\'float_ad_img\'/&gt;&lt;/a&gt; &lt;a href=\'javascript:;\' id=\'close_float_ad\' style=\'\'&gt;x&lt;/a&gt;&quot;;\n            html += &quot;&lt;/div&gt;&quot;;\n\n        $(\'body\').append(html);\n\n		function init(){\n			var x = 0,y = 0 \n			var xin = true, yin = true \n			var step = 1 \n			var delay = 10 \n			var obj=$(&quot;#float_ad&quot;) \n			obj.find(\'img.float_ad_img\').load(function(){\n				var float = function(){\n				    var L = T = 0;\n					var OW = obj.width();//当前广告的宽\n					var OH = obj.height();//高\n					var DW = $(document).width(); //浏览器窗口的宽\n					var DH = $(document).height(); \n\n 				    x = x + step *( xin ? 1 : -1 ); \n					if (x &lt; L) { \n						xin = true; x = L\n					} \n					if (x &gt; DW-OW-1){//-1为了ie\n						xin = false; x = DW-OW-1\n					} \n\n					y = y + step * ( yin ? 1 : -1 ); \n					if (y &gt; DH-OH-1) { \n\n						yin = false; y = DH-OH-1 ;\n					}\n					if (y &lt; T) {\n						yin = true; y = T\n					} \n\n					var left = x ; \n					var top = y; \n\n					obj.css({\'top\':top,\'left\':left});\n				}\n				var itl = setInterval(float,options.speed);\n				$(\'#float_ad\').mouseover(function(){clearInterval(itl)}); \n				$(\'#float_ad\').mouseout(function(){itl=setInterval(float, options.speed)} )\n			});\n			// 点击关闭\n			$(\'#close_float_ad\').live(\'click\',function(){\n			    $(\'#float_ad\').hide();\n			});\n		}\n\n	   init();\n\n	}; //floatAd\n\n})(jQuery);</pre><p></p><h2>调用方法</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;script type=&quot;text/javascript&quot; src=&quot;http://code.jquery.com/jquery-1.8.2.min.js&quot;&gt;&lt;/script&gt;\n	&lt;script type=&quot;text/javascript&quot; src=&quot;floatAd.js&quot;&gt;&lt;/script&gt;\n	&lt;script type=&quot;text/javascript&quot;&gt;\n		$(function(){\n			//调用漂浮插件\n			$(&quot;body&quot;).floatAd({\n				imgSrc : \'http://wenwen.soso.com/p/20100204/20100204193850-483274619.jpg\',\n				url:\'http://www.yanue.net\'\n			});\n		})\n	&lt;/script&gt;</pre>','1349844543','1394727726','','1','1','3','9771','417');
INSERT INTO `post` VALUES('44','0','','vim常用快捷键','','yanue','','','一. <strong>移动</strong>：\r\nh,j,k,l: 左，下，上，右。\r\nw: 下一个词的词首。W:下一个单词(不含标点)。\r\ne:下一个词的词尾。E:不含标点。\r\nb:上一个词的词首。B:不含标点。\r\n&lt;&gt;: v 模式选中后进行缩进。\r\n二. <strong>跳转</strong>：\r\n%: 可以匹配{},\"\",(),[]之间跳转。\r\nH、M、L：直接跳转到当前屏幕的顶部、中部、底部。\r\n#H：跳转到当前屏的第#行。\r\n#L：跳转到当前屏的倒数第#行。\r\nzt: 当前编辑行置为屏顶。\r\nzz: 当前编辑行置为屏中。\r\nzb: 当前编辑行置为屏底。\r\nG：直接跳转到文件的底部。\r\ngg: 跳转到文件首。\r\ngd: 跳转到光标所在函数和变量的定义。\r\n():跳转到当前的行首、行尾。\r\n{}：向上、向下跳转到最近的空行。\r\n[{：跳转到目前区块开头。\r\n]}：跳转到目前区块结尾。\r\n: 跳转到行首。\r\n$: 跳转到行尾。\r\n$: 跳转到下一行的行尾。\r\n#：跳转到该行的第#个位置。\r\n#G: 15G,跳转到15行。\r\n:#：跳转到#行。\r\n三.<strong> 选择</strong>：\r\n.v: 开启可视模式。 V: 开启逐行可视模式。\r\n.^V: 矩形选择。\r\n.v3w: 选择三个字符。\r\n.ab：包括括号和()内的区域。\r\n.aB：包括括号和{}内的区域。\r\n.ib：括号()内的区域。\r\n.iB：括号{}内的区域。\r\n.aw：标记一个单词。\r\n四. <strong>编辑</strong>：\r\n. 新增：\r\ni: 光标前插入。\r\nI: 在当前行首插入。\r\na: 光标后插入。\r\nA: 当前行尾插入。\r\nO: 在当前行之前插入新行。\r\no: 在当前行之后插入新行。\r\n. 修改 c(change) 为主：\r\nr: 替换光标所在处的字符。\r\nR：替换光标所到之处的字符。\r\ncw: 更改光标所在处的字到字尾处。\r\nc#w: c3w 修改3个字符。\r\nC：修改到行尾。\r\nci\'：修改配对标点符号中的文本内容。\r\ndi\'：删除配对标点符号中的文本内容。\r\nyi\'：复制配对标点符号中的文本内容。\r\nvi\'：选中配对标点符号中的文本内容。\r\ns：替换当前一个光标所处字符。\r\n#S：删除 # 行，并以新文本代替。\r\n. 删除 d(delete) 为主：\r\nD：删除到行尾。\r\nX: 每按一次，删除光标所在位置的前面一个字符。\r\nx: 每按一次，删除光标所在位置的后面一个字符。\r\n#x: 删除光标所在位置后面6个字符。\r\nd^: 删至行首。\r\nd$: 删至行尾。\r\ndd:(剪切)删除光标所在行。\r\ndw: 删除一个单词/光标之后的单词剩余部分。\r\nd4w: 删除4个word。\r\n#dd: 从光标所在行开始删除#行。\r\ndaB: 删除{}及其内的内容。\r\ndiB: 删除{}中的内容。\r\nn1,n2 d：将n1,n2行之间的内容删除。\r\n. 查找：\r\n/： 输入关键字，发现不是要找的，直接在按n，向后查找直到找到为止。\r\n?： 输入关键字，发现不是要找的，直接在按n，向前查找直到找到为止。\r\n*: 在当前页向后查找同一字。\r\n#: 在当前页向前查找同一字。\r\n. 复制 y(yank)为主：\r\nyw: 将光标所在之处到字尾的字符复制到缓冲区中。\r\n#yw: 复制#个字到缓冲区。\r\nY：相当于yy, 复制整行。\r\n#yy:表示复制从光标所在的该行往下数#行文字。\r\np: 粘贴。所有与y相关的操作必用p来结合粘贴。\r\n]p：粘贴到合适的缩进处。\r\nn1,n2 co n3：复制第n1行到第n2行之间的内容到第n3行后面。\r\n. 大小写转换：\r\ngUU: 将当前行的字母改为大写。\r\nguu: 将当前行的字母改为小写。\r\ngUw: 将当前光标下的单词改为大写。\r\nguw: 将当前光标下的单词改为小写。\r\na. 整篇大写:\r\nggguG\r\ngg: 光标到文件第一个字符。\r\ngu: 把选择范围全部小写。\r\nG: 到文件结束。\r\nb. 整篇小写：gggUG\r\n. 其它：\r\nJ：当前行和下一行合并成一行。\r\n. 移动：\r\nn1,n2 m n3：将n1行到n2行之间的内容移至n3行下。','1351240669','1351240844','','1','0','0','1918','419');
INSERT INTO `post` VALUES('45','0','','PHP判断mysql中表是否存在','','yanue','','','<span style=\"font-family: 微软雅黑; font-size: large;\"><span style=\"color: #ff0000;\"><strong>PHP中判断表是否存在的方法：</strong></span>\r\n</span>\r\n<pre class=\"lang_php decode_true\">if(mysql_num_rows(mysql_query(&quot;SHOW TABLES LIKE &#039;&quot;.$table.&quot;&#039;&quot;)==1) {\r\necho &quot;Table exists&quot;;\r\n} else {\r\necho &quot;Table does not exist&quot;;\r\n}</pre>\r\n<span style=\"font-family: 微软雅黑; font-size: large;\"><strong><span style=\"color: #ff0000;\">\r\nMySQL中判断表是否存在的方法：</span></strong>\r\n</span>\r\n<pre class=\"lang_php decode_true\">1. SHOW   TABLES   LIKE   &#039;%tb_bp_d_case%&#039;;  \r\n2. select `TABLE_NAME` from `INFORMATION_SCHEMA`.`TABLES` where `TABLE_SCHEMA`=&#039;dbname&#039; and `TABLE_NAME`=&#039;tablename&#039; ;\r\n3. 如果表不存在就建立这个表，那么可以直接用 create table if not exists tablename 这样的指令来建立，不需要先去查询表是否存在。\r\n4. 从模板表创建表：create table if not exists like old_table_name;</pre>\r\n<span style=\"font-family: 微软雅黑; font-size: large;\">\r\n</span>','1351287923','1351287923','','1','0','0','1965','424');
INSERT INTO `post` VALUES('46','0','','js正则去除特殊字符','','yanue','','','js正则去除特殊字符\r\n<pre class=\"lang_php decode_true\">// js正则去除特殊字符\r\nvar pattern = /[\\@\\#\\$\\%\\^\\&amp;\\*\\(\\)\\{\\}\\:\\&quot;\\&lt;\\&gt;\\?\\[\\]]/;  \r\n    if (pattern.test(title)){\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }</pre>\r\njquery 去除两边空格\r\n<pre class=\"lang_php decode_true\">//去除两边空格\r\n$.trim(&quot;    hello, how are you?    &quot;);</pre>','1357883697','1357883939','','1','0','0','1221','430');
INSERT INTO `post` VALUES('47','0','','MySQL 存储php中json_encode格式中文问题及解决','','yanue','','','MySQL 存储php中json_encode格式信息  ,遇到中文时, 会变成一堆类似uxxxx信息.\r\n<h4><strong>1. 原因分析:</strong></h4>\r\n在存储到数据库时！MySQL 不会存储 unicode 字符：\r\n\r\nMySQL 仅支持从基本的多语种平面字符 (0x0000-0xFFFF)。请尝试存储一个同义词相反:）\r\n\r\n更新： MySQL 5.5.3 上 （其中尚未 GA), 支持补充字符如果您使用 UTF8MB4 编码。\r\n\r\njson_encode中文的时候，会把每个中文字符encode成“\\uxxxx”\r\n而存进数据库的时候，“\\”被屏蔽了，直接变成”uxxxx”\r\n\r\n<b>2. 解决问题：</b>\r\n\r\n知道是什么原因就好解决问题了，你可以选择其他存储方式;\r\n或者再对症下药进一步转义\"\\\"为“\\\\”，以保留\"\\\"\r\n我们的解决方案：\r\n\r\n1. 避免json_encode将中文转换unicode编码.\r\nPHP5.4版本，已经给Json新增了一个选项: JSON_UNESCAPED_UNICODE。加上这个选项后，就不会自动把中文编码了。\r\n<div>\r\n<pre class=\"lang_php decode_true\">  $test = json_encode(&quot;深圳&quot;, JSON_UNESCAPED_UNICODE);</pre>\r\n</div>\r\n<div>2. 先将中文字段urlencode，json_encode后，再用urldecode，也可以保证中文不会被转成unicode。</div>\r\n<div>\r\n<pre class=\"lang_php decode_true\">  $test =urldecode(json_encode(array(&#039;brief&#039;=&gt;urlencode(&#039;简介&#039;),&#039;title&#039;=&gt;urlencode(标题)));</pre>\r\n</div>\r\n<div>3. 进一步转义\"\\\"为“\\\\” 避免unicode中文前\'\\\'被mysql当成特殊字符去除</div>\r\n<div>\r\n<pre class=\"lang_php decode_true\">  $test = addslashes(json_encode(&#039;中文&#039;));</pre>\r\n</div>\r\n以上都可以直接插入mysql,问题解决','1357885608','1357885768','','1','0','0','2023','431');
INSERT INTO `post` VALUES('48','0','','电话号码正则验证(多种)','','yanue','','','((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)\r\n\r\n匹配格式：\r\n11位手机号码\r\n3-4位区号，7-8位直播号码，1－4位分机号\r\n如：12345678901、1234-12345678-1234\r\n\r\n&nbsp;\r\n\r\nif(/^(1[3,5,8,7]{1}[\\d]{9})|(((400)-(\\d{3})-(\\d{4}))|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{3,7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)$|^([ ]?)$/.test(str)) return true;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n匹配格式：\r\n11位手机号码\r\n3-4位区号，7-8位直播号码，1－4位分机号\r\n\r\n400号码\r\n如：12345678901、1234-12345678-1234 400-886-9998','1357886293','1357886293','','1','0','0','1035','432');
INSERT INTO `post` VALUES('49','0','','php创建文件及文件夹','','yanue','','','<pre class=\"lang_php decode_true\">php创建打开文件和文件夹简单实例\r\n实例:\r\n&lt;?php\r\n$dir = &#039;logs/&#039;;\r\n$file = $dir.&#039;log_&#039;.date(&#039;Ymd&#039;).&#039;.txt&#039;;\r\nif (! file_exists ( $dir )) {\r\nmkdir ( $dir );\r\n}\r\nif(!file_exists($file)){	    //如果文件不存在（默认为当前目录下）\r\n$fs = fopen($file,&#039;w+&#039;);\r\n}else{\r\n$fs = fopen($file,&#039;a+&#039;);\r\n}\r\n\r\nfwrite($fs,&#039;asd&#039;);\r\nfclose($fs);	    //关闭文件\r\n\r\n?&gt;</pre>','1357886703','1357886703','','1','0','0','823','433');
INSERT INTO `post` VALUES('50','0','','php获取网站基础路径baseUrl的两种方法','','yanue','','','<strong>php获取网站基础路径baseUrl的两种方法</strong>\r\n\r\n<strong>方法一:</strong>\r\n<pre class=\"lang:php decode:true\">// baseUrl\r\nfunction baseUrl($uri=\'\'){\r\n	$baseUrl = ( isset($_SERVER[\'HTTPS\']) &amp;&amp; $_SERVER[\'HTTPS\'] != \'off\') ? \'https://\' : \'http://\';\r\n	$baseUrl .= isset($_SERVER[\'HTTP_HOST\']) ? $_SERVER[\'HTTP_HOST\'] : getenv(\'HTTP_HOST\');\r\n	$baseUrl .= isset($_SERVER[\'SCRIPT_NAME\']) ? dirname($_SERVER[\'SCRIPT_NAME\']) : dirname(getenv(\'SCRIPT_NAME\'));\r\n	return $baseUrl.\'/\'.$uri;\r\n}</pre>\r\n<strong>方法二:</strong>\r\n<pre class=\"lang_php decode_true\">    /**\r\n     * Suppose, you are browsing in your localhost\r\n     * http://localhost/myproject/index.php?id=8\r\n     */\r\n    function baseUrl()\r\n    {\r\n        // output: /myproject/index.php\r\n        $currentPath = $_SERVER[\'PHP_SELF\'];\r\n\r\n        // output: Array ( [dirname] =&gt; /myproject [basename] =&gt; index.php [extension] =&gt; php [filename] =&gt; index )\r\n        $pathInfo = pathinfo($currentPath);\r\n\r\n        // output: localhost\r\n        $hostName = $_SERVER[\'HTTP_HOST\'];\r\n\r\n        // output: http://\r\n        $protocol = strtolower(substr($_SERVER[\"SERVER_PROTOCOL\"],0,5))==\'https://\' ? \'https://\' : \'http://\';\r\n\r\n        // return: http://localhost/myproject/\r\n        return $protocol.$hostName.$pathInfo[\'dirname\'].\"/\";\r\n    }</pre>\r\n最后贴上: <a title=\"php获取当前页面完整url\" href=\"http://www.yanue.net/archives/666.html\">php获取当前页面完整url</a>的方法.','1357887590','1374526279','','1','0','0','1361','434');
INSERT INTO `post` VALUES('51','0','','php实现页面跳转及限时跳转的几种方法','','yanue','','','php实现页面跳转及限时跳转的几种方法\r\n\r\n<strong>1.使用php里head函数进行跳转</strong>\r\n\r\n注意:head跳转前不要有任何输出,不然可能不能跳转.\r\n<pre class=\"lang:php decode:true\">header(\"refresh:3;url=http://www.yanue.net\");//限时跳转\r\nheader(\'location:http://www.yanue.net\');//立即跳转</pre>\r\n<div>\r\n\r\n<strong>2. HTML meta refresh 刷新与跳转(重定向)页面</strong>\r\n\r\nrefresh 属性值 -- 刷新与跳转(重定向)页面\r\n<div>\r\n<ul>\r\n	<li><strong>refresh</strong>用于刷新与跳转(重定向)页面</li>\r\n	<li>refresh出现在http-equiv属性中，使用content属性表示刷新或跳转的开始时间与跳转的网址</li>\r\n</ul>\r\n</div>\r\n<div>\r\n<pre class=\"lang_php decode_true crayon-selected\">&lt;meta http-equiv=\"refresh\" content=\"3; url=http://www.yanue.net\"&gt;</pre>\r\n</div>\r\n<div><strong>3.js实现页面跳转</strong></div>\r\n<div>js实现跳转主要用到location对象</div>\r\n<div>\r\n<pre class=\"lang:php decode:true  crayon-selected\">&lt;script type=\'text/javascript\'&gt;\r\n	// 立即跳转\r\n	window.location.href = \'http://www.yanue.net\';\r\n	// 限时跳转\r\n	setTimeout(function(){\r\n		// 3秒后跳转\r\n		window.location.href = \'http://www.yanue.net\';\r\n	},3000);\r\n&lt;/script&gt;</pre>\r\n</div>\r\n</div>','1357889770','1374606252','','1','0','0','1148','438');
INSERT INTO `post` VALUES('52','0','','jquery判断点击区域 隐藏/显示其他区域','','yanue','','','前面发布一文 <a href=\"http://www.yanue.net/archives/362.html\" target=\"_blank\">jquery判断点击事件是否在目标区域</a> 也是来源于网络,没经过仔细测试,最后发现ff大哥不兼容.\r\n\r\n下面这个该是兼容了.\r\n<pre class=\"lang_php decode_true\">// 判断点击区域 隐藏/显示其他区域\r\ndocument.onclick = function(e) {\r\n	e = window.event || e; // 兼容IE7\r\n	obj = $(e.srcElement || e.target);\r\n	// 点击区域位于当前节点\r\n	if (obj.attr(&#039;id&#039;) == &#039;more_groups&#039;) {\r\n		if ($(&#039;.groups_list&#039;).is(&#039;:visible&#039;)) {\r\n			$(&#039;.groups_list&#039;).show();\r\n		} else {\r\n			$(&#039;.groups_list&#039;).hide();\r\n		}\r\n	}else{\r\n		//不是当前节点\r\n		$(&#039;.groups_list&#039;).hide();	\r\n	}\r\n};</pre>','1357891419','1357891419','','1','0','0','1463','439');
INSERT INTO `post` VALUES('53','0','','php根据高宽比及显示窗口大小重置图片样式','','yanue','','','PHP重置根据图片显示大小及位置\r\n重置图片高宽和位置，溢出隐藏\r\n<pre class=\"lang:php decode:true \">&lt;?php\r\n/*\r\n重置图片高宽和位置，溢出隐藏\r\n保证在规定窗口满窗显示\r\n直接在图片style上使用输出\r\n参数：\r\n$ratio : 需要定义图片的宽高比\r\n$w : 外框的宽度\r\n$h : 外框的高度\r\n$type : 返回值类型，1.组合好的css字串，2.图片新的高宽值数组 \r\n返回值：\r\n例：width:200px;height:521px;margin-top:-260px;\r\n*/\r\n\r\nfunction resizeImgStyle($ratio,$w=200,$h=160,$type=1){\r\n	$width = $w != 0 ? $w : 200;\r\n	$height = $h != 0 ? $h : 200;\r\n	$frameRatio= $w/$h;//外框大小比例\r\n	$offestX = 0;\r\n	$offestY = 0;\r\n	$newImgWidth = 0;\r\n	$newImgHeight = 0;\r\n	if($frameRatio&gt;=$ratio){\r\n		//宽一点 最小边高 取高\r\n		$newImgWidth = $width;\r\n		$newImgHeight = $width/$ratio;\r\n		$offestX = 0;\r\n		$offestY = ($newImgHeight-$height)/2;\r\n	}else{\r\n		//窄一点 最小边宽 取宽\r\n		$newImgHeight = $height;\r\n		$newImgWidth = $height*$ratio;\r\n		$offestX = ($newImgWidth-$width)/2;\r\n		$offestY = 0;\r\n	}\r\n\r\n	if($type==2){\r\n		// 返回数组\r\n		$style = array(\'img_width\'=&gt;(int)$newImgWidth,\'img_height\'=&gt;(int)$newImgHeight);\r\n	}else{\r\n		// 判断\r\n		$offsetStyle = \'\';\r\n		$offsetStyle .= $offestY&gt;0 ? \'margin-top:-\'.(int)$offestY .\'px;\' : \'\' ;\r\n		$offsetStyle .= $offestX&gt;0 ? \'margin-left:-\'.(int)$offestY.\'px;\' : \'\' ;\r\n\r\n		$style =  \'width:\'.(int)$newImgWidth.\'px;\'.\'height:\'.(int)$newImgHeight.\'px;\'.$offsetStyle;\r\n	}\r\n\r\n	return $style;\r\n}\r\n?&gt;</pre>\r\n&nbsp;','1357892676','1381887025','','1','0','0','1094','440');
INSERT INTO `post` VALUES('54','0','','网页CSS常用中英文字体(预览)','','yanue','','','<strong>Windows的中文字体：</strong>黑体：SimHei\r\n宋体：SimSun\r\n新宋体：NSimSun\r\n仿宋：FangSong\r\n楷体：KaiTi\r\n仿宋_GB2312：FangSong_GB2312\r\n楷体_GB2312：KaiTi_GB2312\r\n微软雅黑体：Microsoft YaHei\r\n<div style=\"font-size: 16px;\">\r\n\r\n<strong>英文字体：</strong>\r\n\r\n<strong>PmingLiu</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'PmingLiu\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Impact</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'Impact\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Georgia</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'Georgia\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Tahoma</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'Tahoma\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Arial</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'Arial\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Book Antiqua</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'Arial\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Century Gothic</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'Century Gothic\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Courier New</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'Courier New\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Times New Roman</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'Times New Roman\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Verdana</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'Verdana\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>','1357893029','1357895202','','1','0','0','4138','441');
INSERT INTO `post` VALUES('55','0','','解决vim中文出现乱码','','yanue','','','<strong>vim乱码解决方法</strong>：\r\n\r\n只想改当前文件的编码方式的话，只需要在命令模式下输入：\r\n:set encoding=utf-8\r\n:set fileencoding=utf-8\r\n在根目录下新建一个.vimrc文件，在里面写上\r\n<div>let &amp;termencoding=&amp;encoding\r\nset fileencodings=utf-8,gbk,ucs-bom,cp936</div>\r\n<div>\r\n\r\n或者找到文件.vimrc后，将下面代码加入即可：\r\n<div>\r\n<div id=\"highlighter_867218\">\r\n<pre class=\"lang_php decode_true\">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\r\n&quot;解决windows下的中文乱码问题\r\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\r\nset encoding=utf-8\r\n&quot;set termencoding=utf-8\r\nset fileencodings=ucs-bom,utf-8,chinese,latin-1\r\nif has(&quot;win32&quot;)\r\nset fileencoding=chinese\r\nelse\r\nset fileencoding=utf-8\r\nendif\r\n\r\n&quot;解决中文菜单乱码\r\nset langmenu=zh_CN.utf-8\r\nsource $VIMRUNTIME/delmenu.vim\r\nsource $VIMRUNTIME/menu.vim\r\n\r\n&quot;解决console输出乱码\r\nlanguage messages zh_cn.utf-8</pre>\r\n</div>\r\n</div>\r\n注：Vim中有几个选项会影响对多字节编码的支持：\r\n<strong>encoding（enc）</strong>：encoding是Vim的内部使用编码，encoding的设置会影响Vim内部的 Buffer、消息文字等。在Unix环境下，encoding的默认设置等于locale；Windows环境下会和当前代码页相同。在中文 Windows环境下encoding的默认设置是cp936（GBK）。\r\n<strong>fileencodings（fencs）</strong>：Vim在打开文件时会根据fileencodings选项来识别文件编码，fileencodings可以同时设置多个编码，Vim会根据设置的顺序来猜测所打开文件的编码。\r\n<strong>fileencoding（fenc） </strong>：Vim在保存新建文件时会根据fileencoding的设置编码来保存。如果是打开已有文件，Vim会根据打开文件时所识别的编码来保存，除非在保存时重新设置fileencoding。\r\n<strong>termencodings（tenc）</strong>：在终端环境下使用Vim时，通过termencoding项来告诉Vim终端所使用的编码。\r\n\r\n</div>','1357894770','1357895137','','1','0','0','2131','442');
INSERT INTO `post` VALUES('56','0','','php人性化时间(类似微博)转换两组','','yanue','','','php时间转换函数(把时间显示人性化)\r\n\r\n<strong>1.很详细</strong>\r\n<pre class=\"lang_php decode_true\">// 严格按照离当前时间的间隔来输出\r\n\r\nfunction formatTime($time)\r\n{\r\n	$t = time() - $time;\r\n	$f = array(\r\n		&#039;31536000&#039; =&gt; &#039;年&#039;,\r\n		&#039;2592000&#039; =&gt; &#039;个月&#039;,\r\n		&#039;604800&#039; =&gt; &#039;星期&#039;,\r\n		&#039;86400&#039; =&gt; &#039;天&#039;,\r\n		&#039;3600&#039; =&gt; &#039;小时&#039;,\r\n		&#039;60&#039; =&gt; &#039;分钟&#039;,\r\n		&#039;1&#039; =&gt; &#039;秒&#039;\r\n	);\r\n	foreach ($f as $k =&gt; $v) {\r\n		if (0 != $c = floor($t / (int)$k)) {\r\n			$m = floor($t % $k);\r\n			foreach ($f as $x =&gt; $y) {\r\n				if (0 != $r = floor($m / (int)$x)) {\r\n					return $c.$v.$r.$y.&#039;前&#039;;\r\n				}\r\n			}\r\n			return $c.$v.&#039;前&#039;;\r\n		}\r\n	}\r\n}\r\n//实例\r\n$times=time()-254;  \r\necho formatTime($times);</pre>\r\n<strong>2.到前天</strong>\r\n<pre class=\"lang_php decode_true\">//时间转换函数(把时间显示人性化)\r\nfunction formatTime($time)\r\n{     \r\n	$rtime = date(&quot;m-d H:i&quot;,$time);     \r\n	$htime = date(&quot;H:i&quot;,$time);           \r\n	$time = time() - $time;       \r\n	if ($time &lt; 60)\r\n	{         \r\n		$str = &#039;刚刚&#039;;     \r\n	}elseif($time &lt; 60 * 60){         \r\n		$min = floor($time/60);         \r\n		$str = $min.&#039;分钟前&#039;;     \r\n	}elseif($time &lt; 60 * 60 * 24){         \r\n		$h = floor($time/(60*60));         \r\n		$str = $h.&#039;小时前 &#039;.$htime;     \r\n	}elseif($time &lt; 60 * 60 * 24 * 3){         \r\n		$d = floor($time/(60*60*24));         \r\n		if($d==1){\r\n			$str = &#039;昨天 &#039;.$rtime;\r\n		}else{\r\n			$str = &#039;前天 &#039;.$rtime;     \r\n		}\r\n	}else{         \r\n		$str = $rtime;     \r\n	}     \r\n	return $str; \r\n}\r\n//实例\r\n$times=time()-254;  \r\necho formatTime($times);</pre>','1357895696','1357895702','','1','0','0','1214','445');
INSERT INTO `post` VALUES('57','0','','php即时(刷新缓存)输出内容','','yanue','','','通常的情况下用PHP输出内容会先缓存, 到最后全部输出. 如果有一个多步的耗时操作, 所有的结果都要等到页面执行完后才能看到. 中间漫长的过程只有等待. 能不能立即都看到每步的结果呢\r\n\r\n<strong>ob_flush 是刷新PHP自身的缓冲区。</strong>\r\nflush 只有在PHP做为apache的Module(handler或者filter)安装的时候，才有实际作用，它是刷新WebServer(可以认为特指apache)的缓冲区，即刷新到浏览器输出。\r\n\r\n有些Apache的模块，比如mod_gzip，可能自己进行输出缓存，这将导致flush()函数产生的结果不会立即被发送到客户端浏览器。 而 IE浏览器 只有当接受到的 4096个字节以后才开始显示该页面，所以必须发送一些额外的空格来让这些浏览器显示页面内容（原因：Nginx有fastcgi 缓冲区，数据超出缓冲区大小、或程序执行完，才会将内容输出到客户端： fastcgi_buffer_size 4k; ）。正确使用俩者的顺序是. 先ob_flush, 然后flush,当然, 在其他sapi下, 不调用flush也可以, 只不过为了保证你代码的可移植性, 建议配套使用.\r\n\r\n<strong>PHP实时显示输出</strong>：\r\n<pre class=\"lang_php decode_true\">//实时显示输出\r\nob_end_flush(); //关闭php缓存，或者在flush前ob_flush();\r\necho str_repeat(&quot; &quot;, 1024); //ie下 需要先发送256个字节, firefox 1024, chrome 2048\r\nset_time_limit(0);\r\nfor($i=0; $i&lt;10; $i++)\r\n{\r\necho &quot;Now Index is :&quot;. $i.&quot;&lt;br&gt;&quot;;\r\n//ob_flush(); //把php缓存推送到apache去，前面已经关闭了php缓存了，这里再推就报错了\r\nflush(); //把apache缓存推送到浏览器去\r\nsleep(1);\r\n}</pre>','1361659661','1361659661','','1','0','0','1302','450');
INSERT INTO `post` VALUES('58','0','','Vim中^M的移除替换','','yanue','','','如果用某些windows编辑器编辑的文件，很可能就会产生多余的^M转义符合，当然这些符号在win下是看不到的。\r\n\r\n用vim打开，发现文件中很多^M.\r\n\r\nVim中可以通过以下命令设置换行符：\r\n<pre class=\"lang_php decode_true\">:%s/^M//g</pre>\r\n当出现多种换行符的时候我们可以全能替换命令统一换行符\r\n<pre class=\"lang_php decode_true\">set fileformat=dos\r\n:%s/\\r\\(\\n\\)/\\r/g</pre>\r\n&nbsp;','1361660250','1361660250','','1','0','0','728','452');
INSERT INTO `post` VALUES('59','0','','在vim中使用的替换命令','','yanue','','','<strong>在vim中使用的替换命令如下：</strong>\r\n将第n行和第m行之间的old字符都替换为new字符\r\n<pre class=\"lang_php decode_true\">:n,ms/old/new/g</pre>\r\n将当前行中所有old字符都替换为new字符\r\n<pre class=\"lang_php decode_true\">:s/old/new/g</pre>\r\n将文中所有old字符都替换为new字符， 1表示开始，$表示文件结束\r\n<pre class=\"lang_php decode_true\">:1,$s/old/new/g</pre>\r\n也可以这样：\r\n<pre class=\"lang_php decode_true\">:%s/old/new/g</pre>','1361660687','1361660687','','1','0','0','695','453');
INSERT INTO `post` VALUES('60','0','','php中pdo的mysql事务处理实例','','yanue','','','<strong>php+mysql事务处理的几个步骤:</strong>\r\n1.关闭自动提交\r\n2.开启事务处理\r\n3.有异常就自动抛出异常提示再回滚\r\n4.开启自动提交\r\n\r\n<strong>注意:</strong>mysql只有这个InnoDB驱动是支持事务处理的，默认MyIsAM驱动不支持.\r\n下面是实例代码：\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\n    try{\r\n        $pdo=new pdo(&quot;mysql:host=localhost;dbname=mydb&quot;, &quot;root&quot;, &quot;root&quot;, array(PDO::ATTR_AUTOCOMMIT=&gt;0));//最后是关闭自动提交\r\n        //$pdo-&gt;setAttribute(PDO::ATTR_AUTOCOMMIT, 0);//这个是通过设置属性方法进行关闭自动提交和上面的功能一样\r\n        $pdo-&gt;setAttribute(PDO::ATTR_ERRMODE,  PDO::ERRMODE_EXCEPTION);//开启异常处理\r\n    }catch(PDOException $e){\r\n        echo &quot;数据库连接失败：&quot;.$e-&gt;getMessage();\r\n        exit;\r\n    }\r\n    /*\r\n     * 事务处理\r\n     *\r\n     *   张三从李四那里买了一台 2000 元的电脑\r\n     *     从张三帐号中扣出 2000元\r\n     *     向李四账号中加入 2000元\r\n     *     从商品表中减少一台电脑\r\n     *     MyIsAM  InnoDB\r\n     */\r\n    try{\r\n        $pdo-&gt;beginTransaction();//开启事务处理       \r\n        $price=500;\r\n        $sql=&quot;update zhanghao set price=price-{$price} where id=1&quot;;\r\n        $affected_rows=$pdo-&gt;exec($sql);\r\n        if(!$affected_rows)\r\n            throw new PDOException(&quot;张三转出失败&quot;);//那个错误抛出异常\r\n        $sql=&quot;update zhanghao set price=price+{$price} where id=3&quot;;\r\n        $affected_rows=$pdo-&gt;exec($sql);      \r\n        if(!$affected_rows)\r\n            throw new PDOException(&quot;向李四转入失败&quot;);\r\n        echo &quot;交易成功！&quot;;\r\n        $pdo-&gt;commit();//交易成功就提交\r\n    }catch(PDOException $e){\r\n        echo $e-&gt;getMessage();\r\n        $pdo-&gt;rollback();\r\n    }  \r\n    $pdo-&gt;setAttribute(PDO::ATTR_AUTOCOMMIT, 1);//自动提交，如果最后不自动提交，转账是不成功的  \r\n    //设置错误报告模式 ERRMODE_SILENT    ERRMODE_WARNING</pre>','1361661290','1361661388','','1','0','0','1222','454');
INSERT INTO `post` VALUES('61','0','','网站统计中名词解释','','yanue','','','PV(访问量)：即Page View, 即页面浏览量或点击量，用户每次刷新即被计算一次。\r\n\r\nUV(独立访客)：即Unique Visitor,访问您网站的一台电脑客户端为一个访客。00:00-24:00内相同的客户端只被计算一次。\r\n\r\nIP(独立IP)：指独立IP数。00:00-24:00内相同IP地址只被计算一次。\r\n\r\n新访客：某客户端首次访问为一个新访客。\r\n\r\n最近访客：最近一段时间内访问您网站的客户端。目前显示50条。\r\n\r\n当前在线人数：15分钟内在线访问的UV数。\r\n\r\n24小时独立IP：指每小时独立的IP地址。因为该数据每个小时是独立去重，所以叫24小时独立的IP。\r\n\r\n例如192.168.1.1 0点-1点 访问了您网站 在这个时段算一个IP。\r\n\r\n例如192.168.1.1 0点-1点 访问了您网站 在这个时段算一个IP。\r\n\r\n如果192.168.1.1 0点-1点 再次访问您的网站 去重不计算IP。\r\n\r\n如果192.168.1.1 1点-2点 又访问您的网站 在这个时段也算一个IP。\r\n\r\n最高IP : 指选择时间段范围内，某日访问IP最多的数值。\r\n\r\n最高PV：指选择时间段范围内，某日访问量最高的数值。\r\n\r\n日均流量：指选择时间范围内，平均每日流量。 (日均流量=总访问量/总天数)\r\n\r\n人均访问量：指选择时间范围内，每个访客访问网站的PV数。(计算公式：人均访问量=访问量/唯一访客数)。\r\n\r\n访问过程：每个访问者从进入您的网站开始访问，一直到最后离开您的网站，整个过程中发生的一切点击访问行为，称为一次访问过程。\r\n\r\n访问入口：每次访问过程中，用户进入的第一个页面为访问入口页面。\r\n\r\n访问出口：每次访问过程中，用户结束访问，离开前点击的最后一个页面为访问出口页面。\r\n\r\n平均停留时间：所有访客的访问过程，访问持续时间的平均值。\r\n\r\n平均访问页数：所有访客的访问过程，连续访问页面数的平均值。\r\n\r\n贡献用户数：每个访问来源带来的独立访客数，即UV数；\r\n\r\n贡献IP数：每个访问来源带来的独立IP数。\r\n\r\n贡献PV数：每个访问来源带来的访客的一切后续访问行为所产生的PV数。','1361661683','1374445857','','1','0','0','672','455');
INSERT INTO `post` VALUES('62','2','[{\"id\":\"58\",\"name\":\"时间\"},{\"id\":24,\"name\":\"php\"}]','php计算两个时间之间月份差','','yanue','','','php计算两个时间之间月份差实例代码：<pre class=\"prettyprint linenums prettyprinted lang-php \">$yourdate=&quot;2012-10-20&quot;;\n$yourdate_unix=strtotime($yourdate);\necho (date(&quot;Y&quot;,$yourdate_unix)-date(&quot;Y&quot;))*12+(date(&quot;m&quot;,$yourdate_unix)-date(&quot;m&quot;));</pre>','1361662012','1395325576','','1','0','0','1056','456');
INSERT INTO `post` VALUES('63','12','\"\"','MySQL大数据量之导入导出命令','','yanue','','','<p>面对大数据量，大文件的sql操作，我们需要借助mysql强大的命令操作：</p><p><span style=\"font-weight: bold;\">1.&nbsp;数据库导入命令</span><br /></p><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">mysql -h localhost -u root -p   \nuse dbname\nsource backup.sql</pre></pre><p><strong>说明：</strong>需要使用命令连接上数据库并选择相应数据库才能使用。<br /></p><p><span style=\"font-weight: bold;\">2. 数据库备份命令</span><br /></p><p>MySQL的导出命令mysqldump，<br /></p><p>基本用法是：<br /></p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">mysqldump [OPTIONS] database [tables]</pre><p></p><p><strong>说明：</strong>不能先连接数据库，是直接连接数据库导出<br /></p><p><strong>简单实例</strong>：<br /></p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">mysqldump -h localhost -u root -p dbname &gt; backup.sql</pre><p></p><p><a href=\"http://www.yanue.net/post-64.html\">mysqldump用法详解</a></p>','1361663345','1395325543','','1','0','0','934','457');
INSERT INTO `post` VALUES('64','12','[{\"id\":57,\"name\":\"dump\"}]','mysqldump常见用法详解','','yanue','','','<p>MySQL的mysqldump命令</p><p>基本用法是：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">mysqldump [OPTIONS] database [tables]</pre><h2><span style=\"font-weight: bold;\">说明：</span></h2><div>1. &nbsp;通过执行mysqldump&nbsp;--help，你能得到你mysqldump的版本支持的使用帮助信息。<br /></div><div>2. 如果端口为默认的3306时，可省略 -P {端口号} 这一项。</div><div>3. 命令行格式中 { } 中的内容都是变量</div><div>主机名 : {hostname}</div><div>端&nbsp;&nbsp; 口：{port}&nbsp;&nbsp;&nbsp; （一般默认3306，可缺省）</div><div>用户名：{user} {username} （如root）</div><div>密&nbsp;&nbsp; 码：{password}</div><div>数据库名 ：{database}</div><div>表&nbsp;&nbsp; 名：{table}&nbsp; {table1}&nbsp; {table2}</div><div>文件名：{backup.sql}<br /></div><h2>常用操作:</h2><p><span style=\"font-weight: bold;\">备份MySQL整个数据库：</span><br /></p><strong></strong><pre class=\"prettyprint linenums prettyprinted lang-php \">mysqldump -h主机名 -P端口 -u用户名 -p密码 (–database) 数据库名 &gt; 文件名.sql\nmysqldump -h{hostname} -P{port} -u{username} -p{password} {database} &gt; {backup.sql}</pre><p><strong>说明：</strong>参数及值可以分开如-P3306可以写成-P 3306，密码可以先不填写，以确保安全。<br /></p><p><strong>MySQL数据库压缩备份：</strong></p><pre class=\"prettyprint linenums prettyprinted lang-php \">mysqldump -h{hostname} -u{username} -p{password} {database} | gzip &gt; {backup.sql.gz}\n</pre><p><span style=\"font-family: Arial, Helvetica, sans-serif;\">备份MySQL数据库某个(些)表:</span></p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">mysqldump -h主机名  -P端口 -u用户名 -p密码 (–tables | –quick) 数据库名 表名1 (表名2 …) &gt; 文件名.sql (括号中的可缺省)。\n</pre><p></p><p><span style=\"font-family: Arial, Helvetica, sans-serif;\">#实例：</span></p><pre class=\"prettyprint linenums prettyprinted lang-php \">mysqldump -u root -p myadmindb admin_group admin_group_right admin_logs admin_user_right admin_users &gt; tmp.sql</pre><p><strong>同时备份多个MySQL数据库:</strong></p><pre class=\"prettyprint linenums prettyprinted lang-php \">mysqldump -h{hostname} -P{port} -u{username} -p{password} –databases {database1} {database2} {database3} &gt; multibackfile.sql\n</pre><p><span style=\"font-family: Arial, Helvetica, sans-serif;\">还原MySQL数据库的命令:</span></p><pre class=\"prettyprint linenums prettyprinted lang-php \">mysql -h{hostname} -u{username} -p{password} {database} &lt; {backup.sql}\n</pre><p><span style=\"font-family: Arial, Helvetica, sans-serif;\">还原压缩的MySQL数据库:</span></p><pre class=\"prettyprint linenums prettyprinted lang-php \">gunzip &lt; {backup.sql.gz} | mysql –u{username} –p{password} {database}\n</pre><p><span style=\"font-family: Arial, Helvetica, sans-serif;\">将数据库转移到新服务器:</span></p><pre class=\"prettyprint linenums prettyprinted lang-php \">mysqldump –u{username} –p{password} {database} | mysql –host={hostname} –C {database}</pre>','1361666890','1395325419','','1','0','0','813','458');
INSERT INTO `post` VALUES('65','2','[{\"id\":56,\"name\":\"回掉\"},{\"id\":24,\"name\":\"php\"}]','php回调函数call_user_func_array,call_user_func使用','','yanue','','','<h2><span style=\"font-weight: normal;\">php回调函数call_user_func_array,call_user_func使用及区别：</span></h2><p>call_user_func函数和call_user_func_array函数都支持引用，这让他们和普通的函数调用更趋于功能一致:<br /></p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?php\nfunction a($b)   \n{   \n	$b++;   \n}   \n$c = 0;   \ncall_user_func(\'a\', $c);   \necho $c;//显示 1   \ncall_user_func_array(\'a\', array($c));   \necho $c;//显示 2\n?&gt;</pre><p></p><p>另：call_user_func函数和call_user_func_array函数都支持引用。<br /></p><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?php\nfunction increment(&amp;$var)\n{\n    $var++;\n}\n$a = 0;\ncall_user_func(\'increment\', $a);\necho $a; // 0\ncall_user_func_array(\'increment\', array(&amp;$a)); // You can use this instead\necho $a; // 1\n?&gt;</pre></pre>','1361667813','1395325040','','1','0','0','702','461');
INSERT INTO `post` VALUES('66','2','[{\"id\":24,\"name\":\"php\"},{\"id\":41,\"name\":\"json\"}]','php中json_decode注意事项','','yanue','','','<p><span style=\"font-weight: bold;\">php中json_decode注意事项:</span><br /></p><div>下面三种json写法都是错的，你能看出错在哪里吗？<br /></div><div><blockquote><pre class=\"lang_php decode_true\">$bad_json = &quot;{ \'bar\': \'baz\' }&quot;;\n$bad_json = \'{ bar: &quot;baz&quot; }\';\n$bad_json = \'{ &quot;bar&quot;: &quot;baz&quot;, }\';</pre></blockquote>对这三个字符串执行json_decode()都将返回null，并且报错。</div><div>第一个的错误是，json的分隔符（delimiter）只允许使用双引号，不能使用单引号。</div><div>第二个的错误是，json名值对的&quot;名&quot;（冒号左边的部分），任何情况下都必须使用双引号。</div><div>第三个的错误是，最后一个值之后不能添加逗号（trailing comma）。</div><div>另外，json只能用来表示对象（object）和数组（array），如果对一个字符串或数值使用json_decode()，将会返回null。<blockquote><pre class=\"lang_php decode_true\">var_dump(json_decode(&quot;Hello World&quot;)); //null</pre></blockquote></div>','1361668023','1395324934','','1','0','0','661','462');
INSERT INTO `post` VALUES('67','6','[{\"id\":34,\"name\":\"jquery\"}]','jquery中live事件hover实现方法mouseenter,mouseleave','','yanue','','','<p>jquery中live是一个很不错的事件处理方法，但主要是针对标准响应事件处理的函数。</p><p>因为hover不是标准的事件，因此无法直接使用live进行处理，故使用以下方法代替，效果一样。</p><p>要求 jQuery 1.4.3+</p><h2><strong>实现方法</strong>：</h2><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">$(&quot;table tr&quot;).live({\n        mouseenter:\n           function()\n           {\n\n           },\n        mouseleave:\n           function()\n           {\n\n           }\n       }\n    );</pre><br /></pre>','1361668590','1395324869','','1','0','0','848','463');
INSERT INTO `post` VALUES('68','12','[{\"id\":12,\"name\":\"mysql\"}]','mysql批量删除相同前缀的表和修改表名','','yanue','','','<p>如果有很多表需要删除，而表中有相同的前缀，我们可能需要如下语句：<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">drop table pre_tablename1;\ndrop table pre_tablename2;\ndrop table pre_tablename3;\n.......</pre><p>如果我们手动写，可能需要很多重复性的工作而且可能还不知道表名称。因此我们可以通过sql语句输出上面的删除表语句</p><p><strong>执行sql语句：</strong></p><pre class=\"prettyprint linenums prettyprinted lang-php \">Select CONCAT( \'drop table \', table_name, \';\' ) \nFROM information_schema.tables \nWhere table_name LIKE \'pre_%\';</pre><p></p><p><strong>注意:</strong>&nbsp;like \'pre_%\' 其中&nbsp;pre_是你需要替换的表前缀.当然你也可以根据自己的情况写规则。</p><p>执行查询,会自动把匹配的表生成出 drop table table_name这样的SQL语句.</p><p>批量复制一下到记事本或者&nbsp;et之类的编辑工具中,确定你的sql语句是否正确.这么一来也可以安全的审核一下语句,避免误操作</p><p>当然这只是一种思路，也可以用在其他问题中。</p><p>如批量修改表名的操作方法：<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">Select CONCAT( \'ALTER TABLE \', table_name, \'RENAME TO \', table_name,\';\' ) \nFROM information_schema.tables \nWhere table_name LIKE \'uc_%\';</pre><p></p><p>执行查询，会得到结果：<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">ALTER TABLE uc_aaa RENAME TO uc_aaa; \nALTER TABLE uc_bbb RENAME TO uc_bbb;</pre><p>批量复制一下到记事本或者&nbsp;et之类的编辑工具中,然后批量替换&nbsp;RENAME&nbsp;TO&nbsp;uc&nbsp;成&nbsp;RENAME&nbsp;TO&nbsp;你想要的表前缀完成后&nbsp;再执行<br /></p>','1362894270','1395324811','','1','0','0','932','473');
INSERT INTO `post` VALUES('69','12','[{\"id\":12,\"name\":\"mysql\"},{\"id\":55,\"name\":\"alter\"}]','mysql更新数据表结构命令','','yanue','','','<p>mysql中<strong>alter</strong>命令的用法,用于编辑表结构</p><p><span style=\"font-weight: bold;\">修改表名</span><br /></p><pre class=\"prettyprint linenums prettyprinted lang-php\">alter table test rename test1;</pre><p><span style=\"font-weight: bold;\">修改字段类型&nbsp;</span><br /></p><pre class=\"prettyprint linenums prettyprinted lang-php\">alter table employee change depno depno int(5) not null;</pre><p>&nbsp;<strong>加索引&nbsp;</strong><br /></p><pre class=\"prettyprint linenums prettyprinted lang-php\">alter table 表名 add index 索引名 (字段名1[，字段名2 …]);</pre><p>例子：<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php\">alter table employee add index emp_name (name);</pre><p>&nbsp;<strong>加主关键字的索引</strong><br /></p><pre class=\"prettyprint linenums prettyprinted lang-php\">alter table 表名 add primary key (字段名);</pre><p>例子：<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php\">alter table employee add primary key(id);</pre><p>&nbsp;<strong>加唯一限制条件的索引&nbsp;</strong><br /></p><pre class=\"prettyprint linenums prettyprinted lang-php\">alter table 表名 add unique&nbsp;索引名&nbsp;(字段名);</pre><p>例子：<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php\">alter table employee add unique emp_name2(cardnumber);</pre><p>&nbsp;<strong>查看某个表的索引&nbsp;</strong><br /></p><pre class=\"prettyprint linenums prettyprinted lang-php\">show index from 表名;</pre><p>例子：<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php\">show index from employee;</pre><p>&nbsp;<strong>删除某个索引&nbsp;</strong><br /></p><pre class=\"prettyprint linenums prettyprinted lang-php\">alter table 表名 drop index 索引名;</pre><p>例子：<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php\">alter table employee drop index emp_name;</pre><p>&nbsp;<strong>增加表字段</strong>：</p><pre class=\"prettyprint linenums prettyprinted lang-php\">ALTER TABLE table_name ADD field_name field_type;</pre><p>查看表：<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php\">SELECT * FROM table_name;</pre><p>&nbsp;<strong>修改原字段名称及类型</strong>：<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php\">ALTER TABLE table_name CHANGE old_field_name new_field_name field_type;</pre><p>删除字段：<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php\">ALTER TABLE table_name DROP field_name;</pre>','1362894880','1395324634','','1','0','0','765','474');
INSERT INTO `post` VALUES('70','11','[{\"id\":13,\"name\":\"ubuntu\"},{\"id\":54,\"name\":\"乱码\"}]','linux ubuntu中rar乱码问题解决','','yanue','','','<p><span style=\"color:#ff0000;\">ubuntu</span>下用file-roller,也就是归档管理器打开.rar文件，里面的中文目录文件名总是乱码(一般情况只是win平台创建的rar包中文文件名乱码)。</p><p><strong>原因</strong>在于该rar文件中的编码与ubuntu的不同。</p><h2><strong>解决办法</strong></h2><p>很简单，卸载掉当前系统中的rar 软件，再使用源中的<code>unrar</code>包，或者使用&nbsp;<a href=\"http://www.rarlab.com/download.htm\">rar for linux</a>，或者安装p7zip-rar就可解决。<br /></p><p>第一步：（卸载原来rar）<br /></p><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo apt-get remove rar</pre></pre><p>第二步：（安装unrar或p7zip-rar）<br /></p><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo apt-get install unrar\n或\nsudo apt-get install p7zip-rar</pre></pre>','1365281074','1395324500','','1','0','0','784','478');
INSERT INTO `post` VALUES('71','2','[{\"id\":53,\"name\":\"位运算\"},{\"id\":24,\"name\":\"php\"}]','php位运算及实现权限控制','','yanue','','','<h2><strong><span style=\"color:#ff0000;\">位运算</span></strong>&nbsp;</h2><p>就是把数值转化成二进制数来进行运算</p><p>常用的位运算符详下表：</p><p></p><table><caption><strong>位运算符</strong></caption><thead><tr><th>例子</th><th>名称</th><th>结果</th></tr></thead><tbody><tr><td>$a &amp; $b</td><td>And（按位与）</td><td>将把 $a 和 $b 中都为 1 的位设为 1。</td></tr><tr><td>$a | $b</td><td>Or（按位或）</td><td>将把 $a 或者 $b 中为 1 的位设为 1。</td></tr><tr><td>$a ^ $b</td><td>Xor（按位异或）</td><td>将把 $a 和 $b 中不同的位设为 1。</td></tr><tr><td>~ $a</td><td>Not（按位非）</td><td>将 $a 中为 0 的位设为 1，反之亦然。</td></tr><tr><td>$a &lt;&lt; $b</td><td>Shift left（左移）</td><td>将 $a 中的位向左移动 $b 次（每一次移动都表示“乘以 2”）。</td></tr><tr><td>$a &gt;&gt; $b</td><td>Shift right（右移）</td><td>将 $a 中的位向右移动 $b 次（每一次移动都表示“除以 2”）。</td></tr></tbody></table><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?php						\n	$a=12;			/* 转化为二进制数为1100 */		\n	$b=9;			/* 转化为二进制数为1001 */		\n	$c=2;					\n	echo &quot;a=$a b=$b c=$c&quot;;	\n	echo &quot;&lt;br&gt;$a &amp; $b =&quot;;	\n	echo $a &amp; $b;				\n	echo &quot;&lt;br&gt;$a | $b =&quot;;	\n	echo $a | $b;				\n	echo &quot;&lt;br&gt;$a&lt;&lt;$c=&quot;;		\n	echo $a&lt;&lt;$c;				\n?&gt;</pre><p></p><h2>优点和缺陷</h2><p>位运算的运算对象是二进制的位，速度快，效率高，而且节省存储空间，位运算做权限控制又相当地灵活。</p><p>但是，位运算也有很大的局限，因为在32位计算机上，位移不能超过32次，这就要求权限数量不超过32种。</p><p>例子：</p><h2>通过位运算简单实现权限控制。</h2><pre class=\"lang_php decode_true\"><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?\n// 赋予权限值--&gt;删除：8、上传：4、写入：2、只读：1\ndefine(&quot;mDELETE&quot;,8);\ndefine(&quot;mUPLOAD&quot;,4);\ndefine(&quot;mWRITE&quot;,2);\ndefine(&quot;mREAD&quot;,1);\n//==========使用说明==================\n//部门经理的权限为(假设它拥有此部门的所有权限)，| 是位或运行符，不熟悉的就查查资料\necho mDELETE|mUPLOAD|mWRITE|mREAD ,&quot;&lt;br&gt;&quot;;// 相当于是把上面的权限值加起来：8+4+2+1=15\n// 设我只有 upload 和 read 权限，则\necho mUPLOAD|mREAD ,&quot;&lt;br&gt;&quot;;//相当于是把上传、只读的权限值分别相加：4+1=5\n/*\n*赋予它多个权限就分别取得权限值相加，又比如某位员工拥有除了删除外的权限其余都拥有，那它的权限值是多少?\n*应该是：4+2+1＝7\n*明白了怎么赋值给权限吧?\n*/\n//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n//判断某人的权限可用，设权限值在$key中\n/*\n*判断权限用&amp;位与符，\n*/\n#$key = 15;//13＝8+4+1\n$key = mDELETE|mUPLOAD|mWRITE|mREAD;\necho $key &amp; mDELETE;\nif($key &amp; mDELETE) echo &quot;有删除权限&lt;br&gt;&quot;; //8\nif($key &amp; mUPLOAD) echo &quot;有上传权限&lt;br&gt;&quot;; //4\nif($key &amp; mWRITE) echo &quot;有写权限&lt;br&gt;&quot;; //无此权限\nif($key &amp; mREAD) echo &quot;有读权限&lt;br&gt;&quot;; //1\n#取消某个权限\n$key = $key ^ mDELETE;\necho \'-----------------------------\';\nif($key &amp; mDELETE) echo &quot;有删除权限&lt;br&gt;&quot;; //8\nif($key &amp; mDELETE) echo &quot;有删除权限&lt;br&gt;&quot;; //8\nif($key &amp; mUPLOAD) echo &quot;有上传权限&lt;br&gt;&quot;; //4\nif($key &amp; mWRITE) echo &quot;有写权限&lt;br&gt;&quot;; //无此权限\nif($key &amp; mREAD) echo &quot;有读权限&lt;br&gt;&quot;; //1\n?&gt;</pre><pre class=\"lang_php decode_true\"><span style=\"font-family: Arial, Helvetica, sans-serif;\">继续</span>\n</pre></pre><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?\n// 赋予权限值--&gt;删除：8、上传：4、写入：2、只读：1\ndefine(&quot;mDELETE&quot;,8);\ndefine(&quot;mUPLOAD&quot;,4);\ndefine(&quot;mWRITE&quot;,2);\ndefine(&quot;mREAD&quot;,1);\n//==========使用说明==================\n//部门经理的权限为(假设它拥有此部门的所有权限)，| 是位或运行符，不熟悉的就查查资料\necho mDELETE|mUPLOAD|mWRITE|mREAD ,&quot;&lt;br&gt;&quot;;// 相当于是把上面的权限值加起来：8+4+2+1=15\n// 设我只有 upload 和 read 权限，则\necho mUPLOAD|mREAD ,&quot;&lt;br&gt;&quot;;//相当于是把上传、只读的权限值分别相加：4+1=5\n/*\n*赋予它多个权限就分别取得权限值相加，又比如某位员工拥有除了删除外的权限其余都拥有，那它的权限值是多少?\n*应该是：4+2+1＝7\n*明白了怎么赋值给权限吧?\n*/\n//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n//判断某人的权限可用，设权限值在$key中\n/*\n*判断权限用&amp;位与符，\n*/\n#$key = 15;//13＝8+4+1\n$key = mDELETE|mUPLOAD|mWRITE|mREAD;\necho $key &amp; mDELETE;\nif($key &amp; mDELETE) echo &quot;有删除权限&lt;br&gt;&quot;; //8\nif($key &amp; mUPLOAD) echo &quot;有上传权限&lt;br&gt;&quot;; //4\nif($key &amp; mWRITE) echo &quot;有写权限&lt;br&gt;&quot;; //无此权限\nif($key &amp; mREAD) echo &quot;有读权限&lt;br&gt;&quot;; //1\n#取消某个权限\n$key = $key ^ mDELETE;\necho \'-----------------------------\';\nif($key &amp; mDELETE) echo &quot;有删除权限&lt;br&gt;&quot;; //8\nif($key &amp; mDELETE) echo &quot;有删除权限&lt;br&gt;&quot;; //8\nif($key &amp; mUPLOAD) echo &quot;有上传权限&lt;br&gt;&quot;; //4\nif($key &amp; mWRITE) echo &quot;有写权限&lt;br&gt;&quot;; //无此权限\nif($key &amp; mREAD) echo &quot;有读权限&lt;br&gt;&quot;; //1\n?&gt;</pre><br /></pre><pre class=\"lang_php decode_true\"></pre>','1365368104','1395324413','','1','0','0','809','481');
INSERT INTO `post` VALUES('72','12','\"\"','MySQL常用内部函数列表','','yanue','','','<p>bin() 十进制转二进制<br /></p><p>ascii() 字符串最左边的字母的ascii</p><p>oct() 十进制变八进制</p><p>hex() 变十六进制</p><p>char() 把每个ASCII值转成对应字母</p><p>char(77,121,83,\'81.3\',\'76\')</p><p>char_length() 返回字符个数</p><p>length() 返回字符串的字节数</p><p>concat(str1,str2...) 将参数连接成字符串返回，如有任何一个为null，则返回值为null</p><p>locate(\'bar\',\'foobarbar\') 返回bar第一次出现的位置</p><p>instr(\'foobarbar\',\'bar\') 同上，参数位置颠倒</p><p>lpad(\'hi\',4,\'?\') 左填充</p><p>rpad(\'hi\',4,\'?.\') 右填充</p><p>left(\'dfsdfds sdfd\',5) 从左截5个字符</p><p>right(\'dfsdfds sdfd\',5) 从右截5个字符</p><p>substring(\'sdfsdfsda fdsaf sdf\',5,6) 从5个字符开始向右截6个，中间可以为负，从左开始数</p><p>mid() 同substring()</p><p>ltrim(\' ?fdsfsd ?\') 拿掉左边的空格</p><p>rtrim(\' ?fdsfsd \') 拿掉右边的空格</p><p>trim(both \'x\' from \'xxfdfxx\')自定义拿</p><p>space(6) 得到6个空格的一个串</p><p>repeat(\'mysql\',3) 重复3次mysql</p><p>replace(\'www.sdfsd.com\',\'w\',\'ww\')将文本中w替换成ww</p><p>reverse(\'abc\') 翻转字符串</p><p>lcase() low() 把字符串变成小写</p><p>ucase() upper() 把字符串变成大写</p><p>load_file(file_name) 读入文件</p><p>mod(a,b) 取模 a%b</p><p>ceiling(x) 取大于x的最小整数</p><p>round(x) 将x四舍五入到最近整数</p><p>exp(x)返回值e的x次方</p><p>ln(x)</p><p>log(x,b) x为底</p><p>pi() 常值π</p><p>cos(x)</p><p>sin(x)</p><p>tan(x)</p><p>rand()产生一个在0-1.0之间的随机值 rand(x) x为随机数的种子</p><p>时间日期函数</p><p><strong>字符串相关mysql内部函数</strong>：<a href=\"http://dev.mysql.com/doc/refman/5.6/en/string-functions.html\">http://dev.mysql.com/doc/refman/5.6/en/string-functions.html</a>。</p><p><strong>数字相关mysql内部函数</strong>：<a href=\"http://dev.mysql.com/doc/refman/5.6/en/numeric-functions.html\">http://dev.mysql.com/doc/refman/5.6/en/numeric-functions.html</a>。</p><p><strong>时间和日期相关mysql内部函数</strong>：<a href=\"http://dev.mysql.com/doc/refman/5.6/en/date-and-time-functions.html\">http://dev.mysql.com/doc/refman/5.6/en/date-and-time-functions.html</a></p>','1365454143','1395324226','','1','0','0','801','482');
INSERT INTO `post` VALUES('73','2','[{\"id\":40,\"name\":\"时间戳\"}]','php判断星期几','','yanue','','','<p>php日期函数date里面有个参数w代表周几w分别表示为: 0 周日 1 周一 2 周二 ... 6 周六</p><p>所以我们判断今天是周几的话&nbsp;</p><h2><span style=\"font-weight: normal;\">实现代码:</span></h2><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">$w = date(\'w\');\n//注意上面返回的都是 数字,0123456.所以如果要显示中文的星期，可以定义下面的数组就可以了。\n$weekarray=array(&quot;日&quot;,&quot;一&quot;,&quot;二&quot;,&quot;三&quot;,&quot;四&quot;,&quot;五&quot;,&quot;六&quot;); //0表示星期日\necho \'周\'.$weekarray[$w];</pre></pre><p>而判断某天是星期几 &nbsp;格式为date(\'w\',unix时间毫秒)<br /></p><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">echo date(\'w\',strtotime(\'2012-05-09 12:23:30\'));\n</pre>&nbsp;<br /></pre>','1365541917','1395324111','','1','0','0','936','483');
INSERT INTO `post` VALUES('74','6','[{\"id\":34,\"name\":\"jquery\"},{\"id\":38,\"name\":\"js\"}]','js和jquery中json对象合并的方法','','yanue','','','<p>如果需要将下面的json对象合并：<br /></p><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">var a ={&quot;a&quot;:&quot;1&quot;,&quot;b&quot;:&quot;2&quot;}\nvar b ={&quot;c&quot;:&quot;3&quot;,&quot;d&quot;:&quot;4&quot;,&quot;e&quot;:&quot;5&quot;}</pre></pre><p>想得到结果：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">var c ={&quot;a&quot;:&quot;1&quot;,&quot;b&quot;:&quot;2&quot;,&quot;c&quot;:&quot;3&quot;,&quot;d&quot;:&quot;4&quot;,&quot;e&quot;:&quot;5&quot;}</pre><p>直接使用js的话，可以用一下方法：<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;script&gt;\nfunction extend(des, src, override){\n   if(src instanceof Array){\n       for(var i = 0, len = src.length; i &lt; len; i++)\n            extend(des, src[i], override);\n   }\n   for( var i in src){\n       if(override || !(i in des)){\n           des[i] = src[i];\n       }\n   } \n   return des;\n}\nvar a ={&quot;a&quot;:&quot;1&quot;,&quot;b&quot;:&quot;2&quot;}\nvar b ={&quot;c&quot;:&quot;3&quot;,&quot;d&quot;:&quot;4&quot;,&quot;e&quot;:&quot;5&quot;}\nvar c = extend({}, [a,b]);\nalert(c.a);\n&lt;/script&gt;</pre><p>当然如果你加载了jquery,那就更方便了。可以使用$.extend()方法，该方法有两种模式;<br /></p><h4><a id=\"jQuery-extend-target-object1-objectN\" href=\"http://api.jquery.com/jQuery.extend/#jQuery-extend-target-object1-objectN\">jQuery.extend( target [, object1 ] [, objectN ] )</a>&nbsp;&nbsp;#将后面的对象合并到新的对象中{}<br /></h4><h4><a id=\"jQuery-extend-deep-target-object1-objectN\" href=\"http://api.jquery.com/jQuery.extend/#jQuery-extend-deep-target-object1-objectN\">jQuery.extend( [deep ], target, object1 [, objectN ] )</a>&nbsp;&nbsp;#将后面的对象合并到新的对象中{},如果深度deep为true则将递归合并成为新对象.<br /></h4><h2><span style=\"font-weight: bold;\">实例：</span></h2><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;script type=&quot;text/javascript&quot;&gt;\n    # 请记得先加载jquery\n    var a ={&quot;a&quot;:&quot;1&quot;,&quot;b&quot;:&quot;2&quot;}\n    var b ={&quot;c&quot;:&quot;3&quot;,&quot;d&quot;:&quot;4&quot;,&quot;e&quot;:&quot;5&quot;}\n    var c = $.extend({}, a,b);\n    console.log(c);\n&lt;/script&gt;</pre>','1365626597','1395324047','','1','0','0','1677','484');
INSERT INTO `post` VALUES('75','12','[{\"id\":12,\"name\":\"mysql\"}]','mysql获取group by的总记录行数:SQL_CALC_FOUND_ROWS','','yanue','','','<p>mysql获取group by内部可以获取到某字段的记录分组统计总数，而无法统计出分组的记录数。</p><p>因此可以配合mysql自带的SQL_CALC_FOUND_ROWS和FOUND_ROWS()函数可以实现。<br /></p><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">SELECT SQL_CALC_FOUND_ROWS t3.id, a,bunch,of,other,stuff FROM t1, t2, t3 WHERE(associate t1,t2,and t3 with each other) GROUPBY t3.id LIMIT 10,20\nSELECT FOUND_ROWS() as count;</pre></pre><p>使用以上两个语句即可完成满足group by的总记录行数。另附：group by 的简单使用方法：<pre class=\"prettyprint linenums prettyprinted lang-php \">\'SELECT column_id,count(*) as count FROM my_table group by column_id\';</pre></p><p>官方文档：<a href=\"http://dev.mysql.com/doc/refman/5.6/en/group-by-functions.html\">http://dev.mysql.com/doc/refman/5.6/en/group-by-functions.html</a><br /></p>','1365713216','1395323818','','1','0','0','1405','485');
INSERT INTO `post` VALUES('76','3','\"\"','Linux终端使用技巧','','yanue','','','<h2>Linux下的终端用的快捷键:</h2><p></p><p>Shift+Ctrl+T:新建标签页</p><p>Shift+Ctrl+W:关闭标签页</p><p>Ctrl+PageUp:前一标签页</p><p>Ctrl+PageDown:后一标签页</p><p>Shift+Ctrl+PageUp:标签页左移</p><p>Shift+Ctrl+PageDown:标签页右移</p><p>Alt+1:切换到标签页1</p><p>Alt+2:切换到标签页2</p><p>Alt+3:切换到标签页3</p><p></p><p>Shift+Ctrl+N:新建窗口</p><p>Shift+Ctrl+Q:关闭终端</p><p></p><h2>终端中的复制／粘贴:</h2><p>Shift+Ctrl+C:复制</p><p>Shift+Ctrl+V:粘贴</p><p></p><h2>终端改变大小：</h2><p>F11：全屏</p><p>Ctrl+plus:放大</p><p>Ctrl+minus:减小</p><p>Ctrl+0:原始大小</p>','1365971752','1395323749','','1','0','0','672','487');
INSERT INTO `post` VALUES('77','1','[{\"id\":52,\"name\":\"html\"},{\"id\":43,\"name\":\"正则\"}]','正则HTML标签规则','','yanue','','','<table cellspacing=\"0\" cellpadding=\"5\"><tbody><tr><th scope=\"row\">正则表达式</th><td><div>&lt;(\\S*?) [^&gt;]*&gt;.*?&lt;/\\1&gt;|&lt;.*? /&gt;</div></td></tr><tr><th scope=\"row\">匹配</th><td>&lt;html&gt;hello&lt;/html&gt;|&lt;a&gt;abcd&lt;/a&gt;</td></tr><tr><th scope=\"row\">不匹配</th><td>abc|123|&lt;html&gt;ddd</td></tr></tbody></table>&nbsp;<table cellspacing=\"0\" cellpadding=\"5\"><tbody><tr><th scope=\"row\">正则表达式</th><td><div>^[^&lt;&gt;`~!/@\\#}$%:;)(_^{&amp;*=|\'+]+$</div></td></tr><tr><th scope=\"row\">匹配</th><td>This is a test</td></tr><tr><th scope=\"row\">不匹配</th><td>&lt;href = | &lt;br&gt; | That\'s it</td></tr></tbody></table>&nbsp;<table cellspacing=\"0\" cellpadding=\"5\"><tbody><tr><th scope=\"row\">正则表达式</th><td><div>&amp;lt;!--.*?--&amp;gt;</div></td></tr><tr><th scope=\"row\">匹配</th><td>&amp;lt;!-- &amp;lt;h1&amp;gt;this text has been removed&amp;lt;/h1&amp;gt; --&amp;gt; | &amp;lt;!-- yada --&amp;gt;</td></tr><tr><th scope=\"row\">不匹配</th><td>&amp;lt;h1&amp;gt;this text has not been removed&amp;lt;/h1&amp;gt;</td></tr></tbody></table>&nbsp;<table cellspacing=\"0\" cellpadding=\"5\"><tbody><tr><th scope=\"row\">正则表达式</th><td><div>(\\[(\\w+)\\s*(([\\w]*)=(\'|&amp;quot;)?([a-zA-Z0-9|:|\\/|=|-|.|\\?|&amp;amp;]*)(\\5)?)*\\])([a-zA-Z0-9|:|\\/|=|-|.|\\?|&amp;amp;|\\s]+)(\\[\\/\\2\\])</div></td></tr><tr><th scope=\"row\">匹配</th><td>[link url=&amp;quot;http://www.domain.com/file.extension?getvar=value&amp;amp;secondvar=value&amp;quot;]Link[/li</td></tr><tr><th scope=\"row\">不匹配</th><td>[a]whatever[/b] | [a var1=something var2=somethingelse]whatever[/a] | [a]whatever[a]</td></tr></tbody></table>&nbsp;<table cellspacing=\"0\" cellpadding=\"5\"><tbody><tr><th scope=\"row\">正则表达式</th><td><div>href=[\\&quot;\\\'](http:\\/\\/|\\.\\/|\\/)?\\w+(\\.\\w+)*(\\/\\w+(\\.\\w+)?)*(\\/|\\?\\w*=\\w*(&amp;\\w*=\\w*)*)?[\\&quot;\\\']</div></td></tr><tr><th scope=\"row\">匹配</th><td>href=&quot;www.yahoo.com&quot; | href=&quot;http://localhost/blah/&quot; | href=&quot;eek&quot;</td></tr><tr><th scope=\"row\">不匹配</th><td>href=&quot;&quot; | href=eek | href=&quot;bad example&quot;</td></tr></tbody></table>&nbsp;<table cellspacing=\"0\" cellpadding=\"5\"><tbody><tr><th scope=\"row\">正则表达式</th><td><div>&amp;quot;([^&amp;quot;](?:\\\\.|[^\\\\&amp;quot;]*)*)&amp;quot;</div></td></tr><tr><th scope=\"row\">匹配</th><td>&amp;quot;This is a \\&amp;quot;string\\&amp;quot;.&amp;quot;</td></tr><tr><th scope=\"row\">不匹配</th><td>&amp;quot;This is a \\&amp;quot;string\\&amp;quot;.</td></tr></tbody></table>&nbsp;<table cellspacing=\"0\" cellpadding=\"5\"><tbody><tr><th scope=\"row\">正则表达式</th><td><div>(?i:on(blur|c(hange|lick)|dblclick|focus|keypress|(key|mouse)(down|up)|(un)?load|mouse(move|o(ut|ver))|reset|s(elect|ubmit)))</div></td></tr><tr><th scope=\"row\">匹配</th><td><table cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><th scope=\"row\"><br /></th><td><div>onclick | onsubmit | onmouseover</div></td></tr></tbody></table></td></tr><tr><th scope=\"row\">不匹配</th><td>click | onandon | mickeymouse</td></tr></tbody></table>&nbsp;<table cellspacing=\"0\" cellpadding=\"5\"><tbody><tr><th scope=\"row\">正则表达式</th><td><div>(?s)/\\*.*\\*/</div></td></tr><tr><th scope=\"row\">匹配</th><td>/* .................... */ | /* imagine lots of lines here */</td></tr><tr><th scope=\"row\">不匹配</th><td>*/ malformed opening tag */ | /* malformed closing tag /*</td></tr></tbody></table>&nbsp;<table cellspacing=\"0\" cellpadding=\"5\"><tbody><tr><th scope=\"row\">正则表达式</th><td><div>&lt;(\\S*?) [^&gt;]*&gt;.*?&lt;/\\1&gt;|&lt;.*? /&gt;</div></td></tr><tr><th scope=\"row\">匹配</th><td>&lt;html&gt;hello&lt;/html&gt;|&lt;a&gt;abcd&lt;/a&gt;</td></tr><tr><th scope=\"row\">不匹配</th><td>abc|123|&lt;html&gt;ddd</td></tr></tbody></table>&nbsp;<table cellspacing=\"0\" cellpadding=\"5\"><tbody><tr><th scope=\"row\">正则表达式</th><td><div>\\xA9</div></td></tr><tr><th scope=\"row\">匹配</th><td>&copy;</td></tr><tr><th scope=\"row\">不匹配</th><td>anything</td></tr></tbody></table>&nbsp;<table cellspacing=\"0\" cellpadding=\"5\"><tbody><tr><th scope=\"row\">正则表达式</th><td><div>src[^&amp;gt;]*[^/].(?:jpg|bmp|gif)(?:\\&amp;quot;|\\\')</div></td></tr><tr><th scope=\"row\">匹配</th><td>src=&amp;quot;../images/image.jpg&amp;quot; | src=&amp;quot;http://domain.com/images/image.jpg&amp;quot; | src=\'d:\\w</td></tr><tr><th scope=\"row\">不匹配</th><td>src=&amp;quot;../images/image.tif&amp;quot; | src=&amp;quot;cid:value&amp;quot;</td></tr></tbody></table>&nbsp;<table cellspacing=\"0\" cellpadding=\"5\"><tbody><tr><th scope=\"row\">正则表达式</th><td><div>/\\*[\\d\\D]*?\\*/</div></td></tr><tr><th scope=\"row\">匹配</th><td>/* my comment */ | /* my multiline comment */ | /* my nested comment */</td></tr><tr><th scope=\"row\">不匹配</th><td>*/ anything here /* | anything between 2 seperate comments | \\* *\\</td></tr></tbody></table>&nbsp;<table cellspacing=\"0\" cellpadding=\"5\"><tbody><tr><th scope=\"row\">正则表达式</th><td><div>&lt;[a-zA-Z]+(\\s+[a-zA-Z]+\\s*=\\s*(&quot;([^&quot;]*)&quot;|\'([^\']*)\'))*\\s*/&gt;</div></td></tr><tr><th scope=\"row\">匹配</th><td>&lt;img src=&quot;test.gif&quot;/&gt;</td></tr><tr><th scope=\"row\">不匹配</th><td>&lt;img src=&quot;test.gif&quot;&gt; | &lt;img src=&quot;test.gif&quot;a/&gt;</td></tr></tbody></table>','1366058933','1395323685','','1','0','0','666','489');
INSERT INTO `post` VALUES('78','2','[{\"id\":43,\"name\":\"正则\"}]','常用正则表达式','','yanue','','','<p>说明：正则表达式通常用于两种任务：1.验证，2.搜索/替换。用于验证时，通常需要在前后分别加上^和$，以匹配整个待验证字符串；搜索/替换时是否加上此限定则根据搜索的要求而定，此外，也有可能要在前后加上\\b而不是^和$。此表所列的常用正则表达式，除个别外均未在前后加上任何限定，请根据需要，自行处理。<br /></p><h2>下面是常用的正则表达式</h2><p>(规则不是唯一的,根据自己的情况来使用)<br /></p><table width=\"100%\"><tbody><tr><td>网址（URL）</td><td>[a-zA-z]+://[^\\s]*</td></tr><tr><td>IP地址(IP Address)</td><td>((2[0-4]\\d|25[0-5]|[01]?\\d\\d?)\\.){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)</td></tr><tr><td>电子邮件(Email)</td><td>\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*</td></tr><tr><td>QQ号码</td><td>[1-9]\\d{4,}</td></tr><tr><td>HTML标记(包含内容或自闭合)</td><td>&lt;(.*)(.*)&gt;.*&lt;\\/\\1&gt;|&lt;(.*) \\/&gt;</td></tr><tr><td>密码(由数字/大写字母/小写字母/标点符号组成，四种都必有，8位以上)</td><td>(?=^.{8,}$)(?=.*\\d)(?=.*\\W+)(?=.*[A-Z])(?=.*[a-z])(?!.*\\n).*$</td></tr><tr><td>日期(年-月-日)</td><td>(\\d{4}|\\d{2})-((0?([1-9]))|(1[1|2]))-((0?[1-9])|([12]([1-9]))|(3[0|1]))</td></tr><tr><td>日期(月/日/年)</td><td>((0?[1-9]{1})|(1[1|2]))/(0?[1-9]|([12][1-9])|(3[0|1]))/(\\d{4}|\\d{2})</td></tr><tr><td>时间(小时:分钟, 24小时制)</td><td>((1|0?)[0-9]|2[0-3]):([0-5][0-9])</td></tr><tr><td>汉字(字符)</td><td>[\\u4e00-\\u9fa5]</td></tr><tr><td>中文及全角标点符号(字符)</td><td>[\\u3000-\\u301e\\ufe10-\\ufe19\\ufe30-\\ufe44\\ufe50-\\ufe6b\\uff01-\\uffee]</td></tr><tr><td>中国大陆固定电话号码</td><td>(\\d{4}-|\\d{3}-)?(\\d{8}|\\d{7})</td></tr><tr><td>中国大陆手机号码</td><td>1\\d{10}</td></tr><tr><td>中国大陆邮政编码</td><td>[1-9]\\d{5}</td></tr><tr><td>中国大陆身份证号(15位或18位)</td><td>\\d{15}(\\d\\d[0-9xX])?</td></tr><tr><td>非负整数(正整数或零)</td><td>\\d+</td></tr><tr><td>正整数</td><td>[0-9]*[1-9][0-9]*</td></tr><tr><td>负整数</td><td>-[0-9]*[1-9][0-9]*</td></tr><tr><td>整数</td><td>-?\\d+</td></tr><tr><td>小数</td><td>(-?\\d+)(\\.\\d+)?</td></tr></tbody></table>','1366750666','1395323648','','1','0','1','712','496');
INSERT INTO `post` VALUES('79','15','[{\"id\":38,\"name\":\"js\"},{\"id\":51,\"name\":\"mvc\"}]','最热门的JavaScript MVC框架','','yanue','','','<p>随着越来越多的的逻辑结构在浏览器中执行，使JavaScript的前端代码库越来越大，更难以维持。<br /></p><p>作为一种方式来解决这个问题，开发商已承诺提高生产力和维护的代码的MVC框架。</p><p>下面是目前最新热门的mvc框架：</p><ul><li><a href=\"http://backbonejs.org/\">Backbone.js</a>:Provides models with key-value binding and custom events, collections, and connects it all to your existing API over a RESTful JSON interface.</li><li><a href=\"http://angularjs.org/\">AngularJS</a>: A toolset based on extending the HTML vocabulary for your application.</li><li><a href=\"http://emberjs.com/\">Ember.js</a>: Provides template written in the Handlebars templating language, views, controllers, models and a router.</li><li><a href=\"http://knockoutjs.com/\">Knockout</a>: Aims to simplify JavaScript UIs by applying the Model-View-View Model (MVVM) pattern.</li><li><a href=\"http://agilityjs.com/\">Agility.js</a>: Aims to let developers write maintainable and reusable browser code without the verbose or infrastructural overhead found in other MVC libraries.</li><li><a href=\"http://canjs.us/\">CanJS</a>: Focuses on striking a balance between size, ease of use, safety, speed and flexibility.</li><li><a href=\"http://spinejs.com/\">Spine</a>: A lightweight framework that strives to have the most friendly documentation for any JavaScript framework available.</li><li><a href=\"https://github.com/petermichaux/maria\">Maria</a>: Based on the original MVC flavor as it was used in Smalltalk - aka &quot;the Gang of Four MVC&quot;.</li><li><a href=\"http://www.sencha.com/products/extjs\">ExtJS</a>: Amongst other things offers plugin-free charting, and modern UI widgets.</li><li><a href=\"http://sammyjs.org/\">Sammy.js</a>: A small JavaScript framework developed to provide a basic structure for developing JavaScript applications.</li><li><a href=\"http://hay.github.com/stapes/\">Stapes.js</a>: A tiny framework that aims to be easy to fit in an existing codebase, and because of its size it\'s suitable for mobile development.</li><li><a href=\"https://github.com/DimitarChristoff/Epitome\">Epitome</a>: Epitome is a MVC* (MVP) framework for MooTools.</li><li><a href=\"http://somajs.github.com/somajs/\">soma.js</a>: Tries help developers to write loosely-coupled applications to increase scalability and maintainability.</li><li><a href=\"https://github.com/rhysbrettbowen/PlastronJS\">PlastronJS</a>: MVC framework for Closure Library and Closure Compiler.</li><li><a href=\"http://www.rappidjs.com/\">rAppid.js</a>: Lets you encapsulate complexity into components which can be easy used like HTML elements in your application.</li><li><a href=\"https://github.com/elabs/serenade.js\">Serenade.js</a>: Tries to follow the ideas of classical MVC than competing frameworks.</li><li><a href=\"http://www.kendoui.com/\">Kendo UI</a>: Combines jQuery-based widgets, an MVVM framework, themes, templates, and more.</li></ul><p>以上框架简介都是英文，你可以通过链接去官方了解。<br /></p><div id=\"decidify-container\"></div>','1368830615','1395323554','','1','0','0','956','501');
INSERT INTO `post` VALUES('80','15','\"\"','js颜色阶梯过渡（均匀渐变）Gradient算法','','yanue','','','<p>html中颜色可以使用<span style=\"color:#ff0000;\">rgb和hex</span>方式来表示。<br /></p><p>在色彩中，色相、明度、纯度也都可以产生渐变效果，并会表现出具有丰富层次的美感。本文主要讲述两种颜色RGB数值的梯级渐变算法。</p><p>其中如如16进制颜色如#336600分别表示rgb模式中r的值为16进制33（即），g的值为16进制的66，和b为16进制的00，转换后用rgb完整表述为：rgb(51,102,0)。<br /></p><p>其中使用16进制进行加减乘除不方便，尤其还使用了rgb的16进制颜色组合（#336600）。因此我们可以将16进制转换为rgb单个进行梯级运算在进行组合。<br /></p><p>已知：RStart=50，REnd=200，RStart、REnd之间平均分成3份（Step=3），求每份的数值（StepN）分别是多少。</p><p>公式：<span style=\"color: #00008b; font-family: \'Times New Roman\';font-size:16px;\">Gradient = RStart+ (REnd-RStart) / Step * N <span style=\"color: #000000;\">（第N步的颜色rgb中R的值）</span></span></p><p>实现方法非常简单，只是需要将颜色从rgb到hex的互转。<br /></p><h2><span style=\"font-weight: normal;\">实现代码：</span></h2><pre class=\"lang:php decode:true  crayon-selected\">&lt;script type=&quot;text/javascript&quot;&gt;\n   /*\n	// 作者 yanue\n	// 参数：\n	// startColor：开始颜色hex\n	// endColor：结束颜色hex\n    // step:几个阶级（几步）\n   */\n   function gradientColor(startColor,endColor,step){\n       startRGB = this.colorRgb(startColor);//转换为rgb数组模式\n       startR = startRGB[0];\n       startG = startRGB[1];\n       startB = startRGB[2];\n\n       endRGB = this.colorRgb(endColor);\n       endR = endRGB[0];\n       endG = endRGB[1];\n       endB = endRGB[2];\n\n       sR = (endR-startR)/step;//总差值\n       sG = (endG-startG)/step;\n       sB = (endB-startB)/step;\n\n       var colorArr = [];\n       for(var i=0;i&lt;step;i++){\n		   //计算每一步的hex值 \n           var hex = this.colorHex(\'rgb(\'+parseInt((sR*i+startR))+\',\'+parseInt((sG*i+startG))+\',\'+parseInt((sB*i+startB))+\')\');\n           colorArr.push(hex);\n       }\n       return colorArr;\n   }\n\n   // 将hex表示方式转换为rgb表示方式(这里返回rgb数组模式)\n   gradientColor.prototype.colorRgb = function(sColor){\n       var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;\n       var sColor = sColor.toLowerCase();\n       if(sColor &amp;&amp; reg.test(sColor)){\n           if(sColor.length === 4){\n               var sColorNew = &quot;#&quot;;\n               for(var i=1; i&lt;4; i+=1){\n                   sColorNew += sColor.slice(i,i+1).concat(sColor.slice(i,i+1));\n               }\n               sColor = sColorNew;\n           }\n           //处理六位的颜色值\n           var sColorChange = [];\n           for(var i=1; i&lt;7; i+=2){\n               sColorChange.push(parseInt(&quot;0x&quot;+sColor.slice(i,i+2)));\n           }\n           return sColorChange;\n       }else{\n           return sColor;\n       }\n   };\n\n   // 将rgb表示方式转换为hex表示方式\n   gradientColor.prototype.colorHex = function(rgb){\n       var _this = rgb;\n       var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;\n       if(/^(rgb|RGB)/.test(_this)){\n           var aColor = _this.replace(/(?:(|)|rgb|RGB)*/g,&quot;&quot;).split(&quot;,&quot;);\n           var strHex = &quot;#&quot;;\n           for(var i=0; i&lt;aColor.length; i++){\n               var hex = Number(aColor[i]).toString(16);\n               hex = hex&lt;10 ? 0+\'\'+hex :hex;// 保证每个rgb的值为2位\n               if(hex === &quot;0&quot;){\n                   hex += hex;\n               }\n               strHex += hex;\n           }\n           if(strHex.length !== 7){\n               strHex = _this;\n           }\n           return strHex;\n       }else if(reg.test(_this)){\n           var aNum = _this.replace(/#/,&quot;&quot;).split(&quot;&quot;);\n           if(aNum.length === 6){\n               return _this;\n           }else if(aNum.length === 3){\n               var numHex = &quot;#&quot;;\n               for(var i=0; i&lt;aNum.length; i+=1){\n                   numHex += (aNum[i]+aNum[i]);\n               }\n               return numHex;\n           }\n       }else{\n           return _this;\n       }\n   }\n\n   var gradient = new gradientColor(\'#013548\',\'#554851\',10);\n   console.log(gradient);//控制台输出\n   alert(gradient);\n&lt;/script&gt;</pre>','1368833170','1395323490','','1','0','1','1575','502');
INSERT INTO `post` VALUES('81','14','[{\"id\":50,\"name\":\"svn\"}]','命令模式坚决svn树冲突（local unversioned, incoming add upon update）','','yanue','','','<p>当工作目录修改删除过时更新使用svn更新就容易发生树冲突“<span style=\"color:#ff0000;\">Tree Confilict</span>”.会出现类似提示。<br /></p><pre><pre class=\"prettyprint linenums prettyprinted lang-php \">local unversioned, incoming add upon update</pre></pre><p>如果使用图形化客户端可以通过对比文件和解决冲突按钮进行解决，如果是使用命令行的，情况类似如下：（其中&nbsp;removed_directory 是你工作的某个目录）<br /></p><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">$svn status\nD     C removed_directory\n&gt;   local unversioned, incoming add upon update\nSummary of conflicts:\nTree conflicts: 1</pre></pre><h2><span style=\"font-weight: normal;\">这种情况我们可以通过以下命令解决：</span></h2><pre class=\"prettyprint linenums prettyprinted lang-php \">$ svn resolve --accept working removed_directory\nResolved conflicted state of \'removed_directory\'\n$ svn revert removed_directory\nReverted \'removed_directory\'\n$ svn status\n$</pre><br />','1368834036','1395323299','','1','0','2','2939','503');
INSERT INTO `post` VALUES('82','15','[{\"id\":\"49\",\"name\":\"原创\"},{\"id\":38,\"name\":\"js\"}]','RGB格式颜色和十六进制（hex）互转','','yanue','','','<p>进行颜色处理时，经常会用到颜色各种表示方法之间的转换。</p><p>如颜色阶梯渐变Gradient算法见：<a title=\"js颜色阶梯过渡（均匀渐变）Gradient算法-半叶寒羽\" href=\"http://www.yanue.net/post-80.html\">js颜色阶梯过渡（均匀渐变）Gradient算法</a></p><h2>下面是RGB格式颜色和十六进制（hex）互转代码：</h2><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;script&gt;\n// 将hex表示方式转换为rgb表示方式(这里返回rgb数组组合)\nfunction colorRgb(sColor){\n   var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;\n   var sColor = sColor.toLowerCase();\n   if(sColor &amp;&amp; reg.test(sColor)){\n	   if(sColor.length === 4){\n		   var sColorNew = &quot;#&quot;;\n		   for(var i=1; i&lt;4; i+=1){\n			   sColorNew += sColor.slice(i,i+1).concat(sColor.slice(i,i+1));\n		   }\n		   sColor = sColorNew;\n	   }\n	   //处理六位的颜色值\n	   var sColorChange = [];\n	   for(var i=1; i&lt;7; i+=2){\n		   sColorChange.push(parseInt(&quot;0x&quot;+sColor.slice(i,i+2)));\n	   }\n	   return sColorChange;\n   }else{\n	   return sColor;\n   }\n};\n// 将rgb表示方式转换为hex表示方式\nfunction colorHex(rgb){\n   var _this = rgb;\n   var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;\n   if(/^(rgb|RGB)/.test(_this)){\n	   var aColor = _this.replace(/(?:\\(|\\)|rgb|RGB)*/g,&quot;&quot;).split(&quot;,&quot;);\n	   var strHex = &quot;#&quot;;\n	   for(var i=0; i&lt;aColor.length; i++){\n		   var hex = Number(aColor[i]).toString(16);\n		   hex = hex&lt;10 ? 0+\'\'+hex :hex;// 保证每个rgb的值为2位\n		   if(hex === &quot;0&quot;){\n			   hex += hex;\n		   }\n		   strHex += hex;\n	   }\n	   if(strHex.length !== 7){\n		   strHex = _this;\n	   }\n	   return strHex;\n   }else if(reg.test(_this)){\n	   var aNum = _this.replace(/#/,&quot;&quot;).split(&quot;&quot;);\n	   if(aNum.length === 6){\n		   return _this;\n	   }else if(aNum.length === 3){\n		   var numHex = &quot;#&quot;;\n		   for(var i=0; i&lt;aNum.length; i+=1){\n			   numHex += (aNum[i]+aNum[i]);\n		   }\n		   return numHex;\n	   }\n   }else{\n	   return _this;\n   }\n}\nconsole.log(colorRgb(\'#043869\'));\nconsole.log(colorHex(\'rgb(150,01,89)\'));\n&lt;/script&gt;</pre><br /></pre>','1368835021','1395323147','','1','0','0','1025','504');
INSERT INTO `post` VALUES('83','6','[{\"id\":34,\"name\":\"jquery\"}]','jquery中live绑定toggle的方法','','yanue','','','<h2>toggle不支持事件代理的解决办法： jquery live绑定toggle</h2><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">$(&quot;.xxx&quot;).live(&quot;click&quot;, function () {\n   $(this).toggle(function () {},function () {});\n   //  立即执行点击事件\n   $(this).trigger(\'click\');\n});</pre></pre>','1368835231','1395323074','','1','0','0','777','505');
INSERT INTO `post` VALUES('137','14','[{\"id\":60,\"name\":\"npm\"},{\"id\":59,\"name\":\"nodejs\"}]','使用npm国内镜像解决npm install慢的问题','','yanue','','','使用npm国内镜像解决npm install慢的问题<h2>npm国内镜像介绍</h2><div>cnpmjs.org 国产npm的逆袭<br /></div><p></p><p style=\"box-sizing: border-box; margin: 20px 0px;\">Q: 我所在的企业有自己的包不方便发布到官方的npm?<br style=\"box-sizing: border-box;\" />A: 使用cnpmjs.org 搭建一个企业内部的私有npm吧, 还能按需实时同步.</p><p style=\"box-sizing: border-box; margin: 20px 0px;\">Q: couchdb 好难部署...<br style=\"box-sizing: border-box;\" />A: cnpmjs.org 已经使用node和mysql实现了npm registry 的所有api了. 跟 couchdb say goodbye.</p><p style=\"box-sizing: border-box; margin: 20px 0px;\">Q: tgz包下载好慢<br style=\"box-sizing: border-box;\" />A: cnpmjs.org 开源版本已经直接使用七牛云存储了, 下载速度唰唰的.</p><p style=\"box-sizing: border-box; margin: 20px 0px;\">Q: ...<br style=\"box-sizing: border-box;\" />A: 还犹豫什么?</p><p style=\"box-sizing: border-box; margin: 20px 0px;\">cnpm cli</p><p style=\"box-sizing: border-box; margin: 20px 0px;\">对于国内用户, 完全可以使用cnpm替代官方的npm来使用</p><p style=\"box-sizing: border-box; margin: 20px 0px;\">直接安装cnpm clie<pre class=\"prettyprint linenums prettyprinted lang-php \">npm install -g cnpm</pre></p><p style=\"box-sizing: border-box; margin: 20px 0px;\">或者完全不需要安装也行</p><h2>镜像使用方法</h2><p>（三种办法任意一种都能解决问题，建议使用第三种，将配置写死，下次用的时候配置还在）: <br /></p><p style=\"margin: 0px 0px 10px; word-break: break-word; word-wrap: break-word;\">1.通过config命令</p><pre class=\"prettyprint linenums prettyprinted lang-php \">npm config set registry http://registry.cnpmjs.org \nnpm info underscore （如果上面配置正确这个命令会有字符串response）</pre><p></p><p style=\"margin: 0px 0px 10px; word-break: break-word; word-wrap: break-word;\">2.命令行指定</p><pre class=\"prettyprint linenums prettyprinted lang-php \">npm --registry http://registry.cnpmjs.org info underscore </pre><p></p><p style=\"margin: 0px 0px 10px; word-break: break-word; word-wrap: break-word;\">3.编辑 <span style=\"font-family: Monaco, Menlo, Consolas, \'Courier New\', monospace; color: rgb(127, 127, 127);\"><span style=\"padding: 1px 4px; border-top-left-radius: 1px; border-top-right-radius: 1px; border-bottom-right-radius: 1px; border-bottom-left-radius: 1px; white-space: nowrap; margin-right: 1px; margin-left: 1px; box-shadow: rgb(126, 126, 126) 0px 0px 1px; background-position: 0px 0px;\">~/.npmrc</span></span> 加入下面内容</p><pre class=\"prettyprint linenums prettyprinted lang-php \">registry = http://registry.cnpmjs.org</pre><p></p><p style=\"margin: 0px 0px 10px; word-break: break-word; word-wrap: break-word;\">搜索镜像: <a href=\"http://cnpmjs.org/\" target=\"_blank\" style=\"max-width: 600px; overflow: hidden; display: inline-block; text-overflow: ellipsis; vertical-align: middle;\">http://cnpmjs.org</a></p><p style=\"margin: 0px 0px 10px; word-break: break-word; word-wrap: break-word;\">建立或使用镜像,参考: <a href=\"https://github.com/fenmgk2/cnpmjs.org\" target=\"_blank\" style=\"max-width: 600px; overflow: hidden; display: inline-block; text-overflow: ellipsis; vertical-align: middle;\">https://github.com/fenmgk2/cnpmjs.org</a></p>参考：<p>1.&nbsp;<a href=\"http://cnodejs.org/topic/4f9904f9407edba21468f31e\">http://cnodejs.org/topic/4f9904f9407edba21468f31e</a></p><p>2.&nbsp;<a href=\"http://segmentfault.com/a/1190000000362110\">http://segmentfault.com/a/1190000000362110</a><br /></p><p><br /></p>','1395730331','1395730385','','1','0','0','149','0');
INSERT INTO `post` VALUES('85','15','[{\"id\":38,\"name\":\"js\"}]','js小数点操作方法(两位小数点)总结','','yanue','','','<h2>用Javascript取float型小数点后两位</h2><p>例22.127456取成22.13,如何做？</p><p>1. 最笨的办法:<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">function get()\n{\n    var s = 22.127456 + &quot;&quot;;\n    var str = s.substring(0,s.indexOf(&quot;.&quot;) + 3);\n    alert(str);\n}</pre><p></p><p>2. 正则表达式效果不错:<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;script type=&quot;text/javascript&quot;&gt;\nwindow.onload = function(){\n    var a = &quot;23.456322&quot;;\n    var aNew;\n    var re = /([0-9]+\\.[0-9]{2})[0-9]*/;\n    aNew = a.replace(re,&quot;$1&quot;);\n    alert(aNew);\n}\n&lt;/script&gt;</pre><p>3. 他就比较聪明了:<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;script&gt;\n    var num=22.127456;\n    alert( Math.round(num*100)/100);\n&lt;/script&gt;</pre><p>4.会用新鲜东西的朋友....... 但是需要 IE5.5+才支持。<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;script&gt;\n    var num=22.127456;\n    alert( num.toFixed(2));\n&lt;/script&gt;</pre><p>5. 数字舍入toFixed()其中是利用一个函数toFixed 来取小数点几位的!<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;script language=&quot;javascript&quot;&gt;\n    var a = &quot;0.11&quot;;\n    var b = &quot;0.2801&quot;;\n    var c = &quot;1.002&quot;;\n    var sum1 = parseFloat(a)+parseFloat(b)+parseFloat(c);\n    var sum2 = (parseFloat(a)+parseFloat(b)+parseFloat(c)).toFixed(4)\n    document.write(&quot;a+b+c=&quot;+sum1);\n    document.write(&quot;&lt;br/&gt;&quot;)\n    document.write(&quot;a+b+c=&quot;+sum2)\n&lt;/script&gt;</pre><p>a，b，c相加本来为1.3921，但sum1得出的结果为：1.3921000000000001，显然不正确，通过toFixed(n)方法修正后（n是精确的小数点位数），得到正确结果。<br /></p><p>例如：<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">parseFloat(1.392143).toFixed(3)=1.392;</pre><p></p><h2>顺便附上php获取小数点后两位的方法:</h2><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?php\n    echo round(12.566921,2);\n    echo \'&lt;br /&gt;\';\n    echo round(12.561921,2);\n?&gt;</pre><br /></pre>','1369080184','1395322979','','1','0','0','699','507');
INSERT INTO `post` VALUES('86','3','[{\"id\":47,\"name\":\"linux\"}]','linux获取精准进程PID之pgrep命令','','yanue','','','<p><span style=\"color:#ff0000;\">pgrep</span> 是通过程序的名字来查询进程的工具，一般是用来判断程序是否正在运行。在服务器的配置和管理中，这个工具常被应用，简单明了。</p><p></p><h2>用法：</h2><p>#pgrep [选项] [程序名]</p><p></p><p><pre class=\"prettyprint linenums prettyprinted lang-php \">pgrep [-flvx] [-n | -o] [-d delim] [-P ppidlist] [-g pgrplist] [-s sidlist] [-u euidlist] [-U uidlist] [-G gidlist] [-J projidlist] [-t termlist] [-T taskidlist] [-c ctidlist] [-z zoneidlist] [pattern]</pre></p><p></p><p><strong>常用参数</strong></p><p></p><p>-l 列出程序名和进程ID；</p><p>-o 进程起始的ID；</p><p>-n 进程终止的ID；</p><p></p><p><strong>例如：</strong><pre class=\"prettyprint linenums prettyprinted lang-php \">[yanue@server ~]$ pgrep -lo nginx\n28433 nginx\n[yanue@server ~]$ pgrep -l nginx\n28433 nginx\n28541 nginx\n28542 nginx\n28543 nginx\n28544 nginx\n[yanue@server ~]$ pgrep -ln nginx\n28544 nginx\n[yanue@server ~]$ pgrep nginx\n28433\n28541\n28542\n28543\n28544</pre></p><p>另外，还可以使用另外一个ps命令：（点击查看<a title=\"ps命令详解\" href=\"http://www.yanue.net/post-87.html\" target=\"_blank\">ps命令详解</a>）<pre class=\"prettyprint linenums prettyprinted lang-php \">ps x | grep xxx  | awk \'{print $1}\'</pre></p><p></p><p>实例：<pre class=\"prettyprint linenums prettyprinted lang-php \">ps x | grep java | awk  \'{print $1}\'</pre></p><p></p><h2>注释：</h2><p></p><p>1、xxx为执行的命令名称</p><p></p><p>2、举个例子，获取当前用户下的java进程 【pid】<pre class=\"prettyprint linenums prettyprinted lang-php \">[admin@vm168a ~]$ ps x | grep java | awk ?\'{print $1}\'\n16920</pre></p><p></p><p>3、用到三个命令，ps、grep、awk。</p><p></p><p>要是这样获取不到的话，可以使用ps命令：<pre class=\"prettyprint linenums prettyprinted lang-php \">ps -ef | grep xxx | grep -v \'grep\' | awk \'{print $2}\'\n[yanue@server ~]$ ps -ef | grep nginx | grep -v \'grep\' | awk \'{print $2}\'\n28433\n28541\n28542\n28543\n28544</pre></p>','1371935169','1395322779','','1','0','0','532','519');
INSERT INTO `post` VALUES('87','3','[{\"id\":47,\"name\":\"linux\"}]','linux之ps命令详解','','yanue','','','<p><span style=\"color:#ff0000;\">linux中ps(process status) 命令</span>是LINUX下最常用的也是非常强大的进程查看命令，运用该命令可以确定有哪些进程正在运行和运行地状态、进程是否结束、进程有没有僵死、哪些进程占用了过多地资源等等。 ps命令最常用的是用于监控后台进程的工作情况。</p><h2><span style=\"font-weight: normal;\">Linux 查看进程ps命令及其参数：</span></h2><p></p><p><strong> 使用方式：</strong>ps  [options]  [--help]</p><p></p><p><strong> 语　　法：</strong></p><pre class=\"prettyprint linenums prettyprinted lang-php \">ps [-aAcdefHjlmNVwy][acefghLnrsSTuvxX][-C &lt;指令名称&gt;][-g &lt;群组名称&gt;][-G &lt;群组识别码&gt;][-p &lt;程序识别码&gt;][p &lt;程序识别码&gt;][-s &lt;阶段作业&gt;][-t &lt;终端机编号&gt;][t &lt;终端机编号&gt;][-u &lt;用户识别码&gt;][-U &lt;用户识别码&gt;][U &lt;用户名称&gt;][-&lt;程序识别码&gt;][--cols &lt;每列字符数&gt;][--columns &lt;每列字符数&gt;][--cumulative][--deselect][--forest][--headers][--help][--info][--lines &lt;显示列数&gt;][--no-headers][--group &lt;群组名称&gt;][-Group &lt;群组识别码&gt;][--pid &lt;程序识别码&gt;][--rows &lt;显示列数&gt;][--sid &lt;阶段作业&gt;][--tty &lt;终端机编号&gt;][--user &lt;用户名称&gt;][--User &lt;用户识别码&gt;][--version][--width &lt;每列字符数&gt;]</pre><p></p><p></p><p><strong>参　　数：</strong></p><p></p><p>-a 　显示所有终端机下执行的程序，除了阶段作业领导者之外。</p><p>a 　显示现行终端机下的所有程序，包括其他用户的程序。</p><p>-A 　显示所有程序。</p><p>-c 　显示CLS和PRI栏位。</p><p>c 　列出程序时，显示每个程序真正的指令名称，而不包含路径，参数或常驻服务的标示。</p><p>-C &lt;指令名称&gt; 　指定执行指令的名称，并列出该指令的程序的状况。</p><p>-d 　显示所有程序，但不包括阶段作业领导者的程序。</p><p>-e 　此参数的效果和指定&quot;A&quot;参数相同。</p><p>e 　列出程序时，显示每个程序所使用的环境变量。</p><p>-f 　显示UID,PPIP,C与STIME栏位。</p><p>f 　用ASCII字符显示树状结构，表达程序间的相互关系。</p><p>-g&lt;群组名称&gt; 　此参数的效果和指定&quot;-G&quot;参数相同，当亦能使用阶段作业领导者的名称来指定。</p><p>g 　显示现行终端机下的所有程序，包括群组领导者的程序。</p><p>-G &lt;群组识别码&gt; 　列出属于该群组的程序的状况，也可使用群组名称来指定。</p><p>h 　不显示标题列。</p><p>-H 　显示树状结构，表示程序间的相互关系。</p><p>-j或j 　采用工作控制的格式显示程序状况。</p><p>-l或l 　采用详细的格式来显示程序状况。</p><p>L 　列出栏位的相关信息。</p><p>-m或m 　显示所有的执行绪。</p><p>n 　以数字来表示USER和WCHAN栏位。</p><p>-N 　显示所有的程序，除了执行ps指令终端机下的程序之外。</p><p>-p &lt;程序识别码&gt; 　指定程序识别码，并列出该程序的状况。</p><p>p &lt;程序识别码&gt; 　此参数的效果和指定&quot;-p&quot;参数相同，只在列表格式方面稍有差异。</p><p>r 　只列出现行终端机正在执行中的程序。</p><p>-s &lt;阶段作业&gt; 　指定阶段作业的程序识别码，并列出隶属该阶段作业的程序的状况。</p><p>s 　采用程序信号的格式显示程序状况。</p><p>S 　列出程序时，包括已中断的子程序资料。</p><p>-t &lt;终端机编号&gt; 　指定终端机编号，并列出属于该终端机的程序的状况。</p><p>t &lt;终端机编号&gt; 　此参数的效果和指定&quot;-t&quot;参数相同，只在列表格式方面稍有差异。</p><p>-T 　显示现行终端机下的所有程序。</p><p>-u &lt;用户识别码&gt; 　此参数的效果和指定&quot;-U&quot;参数相同。</p><p>u 　以用户为主的格式来显示程序状况。</p><p>-U &lt;用户识别码&gt; 　列出属于该用户的程序的状况，也可使用用户名称来指定。</p><p>U &lt;用户名称&gt; 　列出属于该用户的程序的状况。</p><p>v 　采用虚拟内存的格式显示程序状况。</p><p>-V或V 　显示版本信息。</p><p>-w或w 　采用宽阔的格式来显示程序状况。</p><p>x 　显示所有程序，不以终端机来区分。</p><p>X 　采用旧式的Linux i386登陆格式显示程序状况。</p><p>-y 　配合参数&quot;-l&quot;使用时，不显示F(flag)栏位，并以RSS栏位取代ADDR栏位　。</p><p>-&lt;程序识别码&gt; 　此参数的效果和指定&quot;p&quot;参数相同。</p><p>--cols &lt;每列字符数&gt; 　设置每列的最大字符数。</p><p>--columns &lt;每列字符数&gt; 　此参数的效果和指定&quot;--cols&quot;参数相同。</p><p>--cumulative 　此参数的效果和指定&quot;S&quot;参数相同。</p><p>--deselect 　此参数的效果和指定&quot;-N&quot;参数相同。</p><p>--forest 　此参数的效果和指定&quot;f&quot;参数相同。</p><p>--headers 　重复显示标题列。</p><p>--help 　在线帮助。</p><p>--info 　显示排错信息。</p><p>--lines &lt;显示列数&gt; 　设置显示画面的列数。</p><p>--no-headers 　此参数的效果和指定&quot;h&quot;参数相同，只在列表格式方面稍有差异。</p><p>--group &lt;群组名称&gt; 　此参数的效果和指定&quot;-G&quot;参数相同。</p><p>--Group &lt;群组识别码&gt; 　此参数的效果和指定&quot;-G&quot;参数相同。</p><p>--pid &lt;程序识别码&gt; 　此参数的效果和指定&quot;-p&quot;参数相同。</p><p>--rows &lt;显示列数&gt; 　此参数的效果和指定&quot;--lines&quot;参数相同。</p><p>--sid &lt;阶段作业&gt; 　此参数的效果和指定&quot;-s&quot;参数相同。</p><p>--tty &lt;终端机编号&gt; 　此参数的效果和指定&quot;-t&quot;参数相同。</p><p>--user &lt;用户名称&gt; 　此参数的效果和指定&quot;-U&quot;参数相同。</p><p>--User &lt;用户识别码&gt; 　此参数的效果和指定&quot;-U&quot;参数相同。</p><p>--version 　此参数的效果和指定&quot;-V&quot;参数相同。</p><p>--widty &lt;每列字符数&gt; 　此参数的效果和指定&quot;-cols&quot;参数相同。</p><p></p><h2><span style=\"font-weight: normal;\">常用的参数：</span></h2><p></p><p>ps命令常用用法（方便查看系统进程）</p><p></p><p>1）ps a 显示现行终端机下的所有程序，包括其他用户的程序。</p><p>2）ps -A 显示所有进程。</p><p>3）ps c 列出程序时，显示每个程序真正的指令名称，而不包含路径，参数或常驻服务的标示。</p><p>4）ps -e 此参数的效果和指定&quot;A&quot;参数相同。</p><p>5）ps e 列出程序时，显示每个程序所使用的环境变量。</p><p>6）ps f 用ASCII字符显示树状结构，表达程序间的相互关系。</p><p>7）ps -H 显示树状结构，表示程序间的相互关系。</p><p>8）ps -N 显示所有的程序，除了执行ps指令终端机下的程序之外。</p><p>9）ps s 采用程序信号的格式显示程序状况。</p><p>10）ps S 列出程序时，包括已中断的子程序资料。</p><p>11）ps -t&lt;终端机编号&gt; 　指定终端机编号，并列出属于该终端机的程序的状况。</p><p>12）ps u 　以用户为主的格式来显示程序状况。</p><p>13）ps x 　显示所有程序，不以终端机来区分。</p><p></p><h2><span style=\"font-weight: normal;\">常用组合：</span></h2><p></p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">ps axjf\nps aux\nps -ef\nps -lA</pre><p></p><p></p><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">[yanue@server ~]$ ps aux\nUSER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND\nroot 1 0.0 0.0 10368 176 Ss May25 0:24 init [3]\nroot 2 0.0 0.0 0 0 S May25 0:00 [kthreadd/2336]\nroot 3 0.0 0.0 0 0 S May25 0:00 [khelper/2336]\nroot 135 0.0 0.0 12636 320 S&lt;s May25 0:00 /sbin/udevd -d\nroot 569 0.0 0.0 5928 464 Ss May25 1:07 syslogd -m 0\nroot 580 0.0 0.1 62684 640 Ss May25 0:48 /usr/sbin/sshd</pre></pre><p><strong>Head 标头：</strong></p><p></p><p>  USER：该 process 属于那个使用者账号的？</p><p></p><p>  PID ：该 process 的号码。</p><p></p><p>  %CPU：该 process 使用掉的 CPU 资源百分比；</p><p></p><p>  %MEM：该 process 所占用的物理内存百分比；</p><p></p><p>  VSZ ：该 process 使用掉的虚拟内存量 (Kbytes)</p><p></p><p>  RSS ：该 process 占用的固定的内存量 (Kbytes)</p><p></p><p>  TTY ：该 process 是在那个终端机上面运作，若与终端机无关，则显示  ，另外， tty1-tty6 是本机上面的登入者程序，若为 pts/0 等等的，则表示为由网络连接进主机的程序。</p><p></p><p>  STAT：该程序目前的状态，主要的状态有：</p><p></p><p>R ：该程序目前正在运作，或者是可被运作；</p><p></p><p>S ：该程序目前正在睡眠当中 (可说是 idle 状态啦！)，但可被某些讯号 (signal) 唤醒。</p><p></p><p>T ：该程序目前正在侦测或者是停止了；</p><p></p><p>Z ：该程序应该已经终止，但是其父程序却无法正常的终止他，造成 zombie (疆尸) 程序的状态</p><p></p><p>  START：该 process 被触发启动的时间；</p><p></p><p>  TIME ：该 process 实际使用 CPU 运作的时间。</p><p></p><p>  COMMAND：该程序的实际指令为何？</p><p></p><h2><span style=\"font-weight: normal;\">linux上进程有5种状态:</span></h2><p>1. 运行(正在运行或在运行队列中等待)</p><p>2. 中断(休眠中, 受阻, 在等待某个条件的形成或接受到信号)</p><p>3. 不可中断(收到信号不唤醒和不可运行, 进程必须等待直到有中断发生)</p><p>4. 僵死(进程已终止, 但进程描述符存在, 直到父进程调用wait4()系统调用后释放)</p><p>5. 停止(进程收到SIGSTOP, SIGSTP, SIGTIN, SIGTOU信号后停止运行运行)</p><p></p><p><strong>使用ps格式输出来查看进程状态:</strong></p><p></p><div><pre class=\"prettyprint linenums prettyprinted lang-php \">ps -eo user,stat..,cmd\nuser 用户名\nuid 用户号\npid 进程号\nppid 父进程号\nsize 内存大小, Kbytes字节.\nvsize 总虚拟内存大小, bytes字节(包含code+data+stack)\nshare 总共享页数\nnice 进程优先级(缺省为0, 最大为-20)\npriority(pri) 内核调度优先级\npmem 进程分享的物理内存数的百分比\ntrs 程序执行代码驻留大小\nrss 进程使用的总物理内存数, Kbytes字节\ntime 进程执行起到现在总的CPU暂用时间\nstat 进程状态\ncmd(args) 执行命令的简单格式</pre></div><p></p><p></p><div></div><p></p><p></p><h2><span style=\"font-weight: normal;\">例子:</span></h2><p></p><p></p><div>查看当前系统进程的uid,pid,stat,pri, 以uid号排序.<pre class=\"prettyprint linenums prettyprinted lang-php \">ps -eo pid,stat,pri,uid –sort uid</pre></div><p></p><p></p><div></div><p></p><p></p><div>查看当前系统进程的user,pid,stat,rss,args, 以rss排序.<pre class=\"prettyprint linenums prettyprinted lang-php \">ps -eo user,pid,stat,rss,args –sort rss</pre></div><p></p>','1371934946','1395322528','','1','0','0','564','520');
INSERT INTO `post` VALUES('88','3','[{\"id\":47,\"name\":\"linux\"}]','Linux下磁盘管理du命令','','yanue','','','<p><span style=\"color:#ff0000;\">du的英文原义为“disk usage”</span>，含义为显示磁盘空间的使用情况，统计目录（或文件）所占磁盘空间的大小。</p><p>该命令的功能是逐级进入指定目录的每一个子目录并显示该目录占用文件系统数据块（1024字节）的情况。若没有给出指定目录，则对当前目录进行统计。</p><p></p><p><strong>功能：</strong>统计目录（或文件）所占磁盘空间的大小。</p><p></p><p><strong>语法：</strong>du?[选项][文件或目录]</p><p></p><p><strong>参数：</strong></p><p>-s：对每个Names参数只给出占用的数据块总数。</p><p></p><p>  -a：递归地显示指定目录中各文件及子目录中各文件占用的数据块数。若既不指定-s，也不指定-a，则只显示Names中的每一个目录及其中的各子目录所占的磁盘块数。</p><p>  -b：以字节为单位列出磁盘空间使用情况（系统默认以k字节为单位）。</p><p>  -k：以1024字节为单位列出磁盘空间使用情况。</p><p>  -c：最后再加上一个总计（系统默认设置）。</p><p>  -l：计算所有的文件大小，对硬链接文件，则计算多次。</p><p>  -x：跳过在不同文件系统上的目录不予统计。</p><h2>简单实例：</h2><p></p><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">[yanue@server www]$ du -h --max-depth=1\n676K ./avatar\n7.9M ./wp-includes\n6.4M ./wp-admin\n18M ./wp-content\n33M .</pre></pre><h2>使用实例：</h2><p></p><p>实例1. 显示目录或者文件所占空间</p><pre class=\"prettyprint linenums prettyprinted lang-php \"> du  [文件或目录]</pre><p></p><p></p><p>实例2：显示多个文件所占空间</p><pre class=\"prettyprint linenums prettyprinted lang-php \"> du  [文件或目录]  [文件或目录]</pre><p></p><p></p><p>实例3：显示几个文件或目录各自占用磁盘空间的大小，还统计它们的总和</p><pre class=\"prettyprint linenums prettyprinted lang-php \"> du  -c  [文件或目录]  [文件或目录]</pre><p></p><p></p><p>实例4：按照空间大小排序</p><pre class=\"prettyprint linenums prettyprinted lang-php \">du|sort -nr|more</pre><p></p><p></p>','1371939738','1395322073','','1','0','0','516','522');
INSERT INTO `post` VALUES('89','3','\"\"','Linux磁盘管理命令df和du区别','','yanue','','','磁盘是Linux系统中一项非常重要的资源，如何对其进行有效的管理直接关系到整个系统的性能问题。磁盘管理有df、du和fdisk三个常用命令：df用于检查文件系统磁盘占用情况，du检查磁盘空间占用情况，而fdisk用于磁盘分区。<p></p><h2><strong>1．df</strong></h2><p></p><p>df命令可以获取硬盘被占用了多少空间，目前还剩下多少空间等信息，它也可以显示所有文件系统对i节点和磁盘块的使用情况。</p><p></p><p>df命令各个选项的含义如下：</p><p></p><pre>  -a：显示所有文件系统的磁盘使用情况，包括0块（block）的文件系统，如/proc文件系统。</pre><p></p><p>  -k：以k字节为单位显示。</p><p>  -i：显示i节点信息，而不是磁盘块。</p><p>  -t：显示各指定类型的文件系统的磁盘空间使用情况。</p><p>  -x：列出不是某一指定类型文件系统的磁盘空间使用情况（与t选项相反）。</p><p>  -T：显示文件系统类型。</p><h2><strong>2． du</strong>（<a title=\"Linux下磁盘管理du命令\" href=\"http://www.yanue.net/post-88.html\" target=\"_blank\">详细使用方法及介绍</a>）</h2><p></p><p>du的英文原义为“disk usage”，含义为显示磁盘空间的使用情况，统计目录（或文件）所占磁盘空间的大小。该命令的功能是逐级进入指定目录的每一个子目录并显示该目录占用文件系统数据块（1024字节）的情况。若没有给出指定目录，则对当前目录进行统计。</p><p></p><p>df命令的各个选项含义如下：</p><p></p><pre>  -s：对每个Names参数只给出占用的数据块总数。</pre><p></p><p>  -a：递归地显示指定目录中各文件及子目录中各文件占用的数据块数。若既不指定-s，也不指定-a，则只显示Names中的每一个目录及其中的各子目录所占的磁盘块数。</p><p>  -b：以字节为单位列出磁盘空间使用情况（系统默认以k字节为单位）。</p><p>  -k：以1024字节为单位列出磁盘空间使用情况。</p><p>  -c：最后再加上一个总计（系统默认设置）。</p><p>  -l：计算所有的文件大小，对硬链接文件，则计算多次。</p><p>  -x：跳过在不同文件系统上的目录不予统计。</p><h2>df与du命令区别解析:</h2><p></p><p><span style=\"color: #ff00ff;font-size:18px;\"><span style=\"color: #000000;\">1、句柄相关的基础知识</span><strong></strong></span></p><p>句柄包含：文件、目录、socket等，一个进程能够打开的文件句柄总数是一定的，可以通过ulimit –n 进行查看，一般是1024个。此参数也可以修改，以root用户运行以下命令：ulimit -HSn 4096 以上命令中，H指定了硬性大小，S指定了软性大小，n表示设定单个进程最大的打开文件句柄数量。个人觉得最好不要超过4096，毕竟打开的文件句柄数越多响应时间肯定会越慢。设定句柄数量后，<span style=\"color: #ff00ff;\">系统重启后，又会恢复默认值。</span>如果想永久保存下来，可以修改.bash_profile文件，可以修改 /etc/profile ，把命令ulimit -HSn 4096 加到最后。</p><p></p><p><span style=\"color: #000000;font-size:18px;\">2、句柄泄漏的危害</span></p><p></p><p>出现句柄泄漏，进程会逐渐消耗完进程可打开的句柄，导致进程再也不能打开新的句柄，系统可能不能再正常工作。</p><p></p><p><span style=\"color: #000000;\"><span style=\"font-size:18px;\">3、句柄泄露，为什么会导致磁盘空间不足:</span></span></p><p></p><p></p><p>一个文件创建，就新生成了一个inode节点，且inode节点的引用计数为1。当文件被一个进程打开，则在内存中缓冲建立此inode节点缓存，且其引用计数加1。一个文件可以被多次打开，创建多个文件描述符，但对应的inode节点只有一个，对应的磁盘存储只有一个，只是引用计数每打开一次加1。</p><p></p><p><span style=\"color: #0000ff;\">当文件被rm，在操作系统内部其实是调用了unlink操作，其目录项被删除，</span><span style=\"color: #ff00ff;\">如果</span>其对应的inode节点的引用计数为0，则删除对应的inode节点和清除inode节点位图中对应的位，<span style=\"color: #0000ff;\">其对应磁盘可被再申请</span>；<span style=\"color: #ff00ff;\">但如果</span>此文件被其他进程打开，<span style=\"color: #0000ff;\">则其对应的inode节点的引用</span><span style=\"color: #ff00ff;\">计数不为0</span>，则<span style=\"color: #ff00ff;\">不会删除对应</span>的inode节点和清除inode节点位图中对应的位，<span style=\"color: #0000ff;\">其对应磁盘不能被再申请</span>，<span style=\"color: #ff00ff;\">也就是在lsof下可以看到deleted句柄</span>；<span style=\"color: #0000ff;\">当前文件被所有使用进程close后</span>，系统删除对应的inode节点和清除inode节点位图中对应的位，其对应磁盘可被再申请。</p><p></p><p><span style=\"color: #000000;font-size:18px;\">4、du和df的区别::</span></p><p></p><p>du的英文原义为“disk usage”，含义为显示磁盘空间的使用情况。该命令逐级进入指定目录的每一个子目录并显示该目录占用文件系统数据块（1024字节）的情况。若没有给出Names，则对当前目录进行统计。</p><p>df命令参数功能：检查文件系统的磁盘空间占用情况，利用所有文件系统对i节点来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。</p><p></p><p>这也是为什么：</p><p></p><p><span style=\"color: #0000ff;\">一个被进程打开的文件被rm后，其<span style=\"color: #ff0000;\">目录项</span>被删除了，在du命令下是<span style=\"color: #ff0000;\">不能被统计到，</span>?而<span style=\"color: #ff0000;\">其inode没有被删除，在df命令下是可以被统计到的</span>，这就是在du和df存在差别的原因。</span></p><p></p><p><strong>1、正常情况下，df和du输出结果都会有差距。</strong></p><p></p><p>du -sh命令通过将指定文件系统中所有的目录、符号链接和文件使用的块数累加得到该文件系统使用的总块数；</p><p>df命令通过查看文件系统磁盘块分配图得出总块数与剩余块数。</p><p>文件系统分配其中的一些磁盘块用来记录它自身的一些数据，如i节点，磁盘分布图，间接块，超级块等。这些数据对大多数用户级的程序来说是不可见的，通常称为Meta Data。</p><p>du命令是用户级的程序，它不考虑Meta Data，</p><p>df命令则查看文件系统的磁盘分配图并考虑Meta Data。</p><p>因此正常情况下，df计算的USED空间会比du计算的结果要稍大。</p><p></p><p><span style=\"color: #000000;\"><strong>2、异常情况下，df计算的USED空间会比du大很多。</strong></span></p><p></p><p>原因在于du是以文件名、目录名为依据计算空间使用的，而df是以硬盘块使用情况来计算空间使用的。</p><p></p><p>当一个应用程序正在写一个大文件的时候，我们RM或者MV了这个文件（UNIX是允许这么干的，WINDOWS在这一点上傻有傻福），应用程序会占有句柄，并根据句柄所指磁盘位置直接写磁盘，而不会检查该文件是否被删除。</p>','1371939885','1395321898','','1','0','0','591','523');
INSERT INTO `post` VALUES('90','3','[{\"id\":47,\"name\":\"linux\"}]','Linux下su与su -命令的本质区别','','yanue','','','<p>问题现象：Linux系统下用普通用户登录，然后用su命令切换到超级用户，再输入ifconfig命令，报错：command not find。而如果用su -命令切换到超级用户，再输入ifconfig命令则能成功执行。</p><p>解决方案：大部分Linux发行版的默认账户是普通用户，而更改系统文件或者执行某些命令，需要root身份才能进行，这就需要从当前用户切换到root用户,Linux中切换用户的命令是su或su -,下面就su命令和su -命令最大的本质区别给大家详解一下：</p><p>前者只是切换了root身份，但Shell环境仍然是普通用户的Shell；而后者连用户和Shell环境一起切换成root身份了。只有切换了Shell环境才不会出现PATH环境变量错误。su切换成root用户以后，pwd一下，发现工作目录仍然是普通用户的工作目录；而用su -命令切换以后，工作目录变成root的工作目录了。用echo $PATH命令看一下su和su -以后的环境变量有何不同。以此类推，要从当前用户切换到其它用户也一样，应该使用su -命令。</p><p>打个比方：在普通用户下输入：<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">$pwd\n/home/test (当前用户目录)\n$su\n******        (输入密码)\n#pwd         (再次查看路径)\n/home/test (还是当前用户目录)</pre><pre>但是如果换成 su - 的话\n</pre><pre>结果如下：\n</pre><pre><pre class=\"prettyprint linenums prettyprinted lang-php \">$pwd\n/home/test(当前用户目录)\n$su -\n******        (输入密码)\n#pwd         (再次查看路径)\n/root    (切换到超级用户目录)</pre><br /></pre>','1371941106','1395321686','','1','0','0','426','526');
INSERT INTO `post` VALUES('91','3','[{\"id\":47,\"name\":\"linux\"},{\"id\":48,\"name\":\"rpm\"}]','linux rpm命令详细介绍','','yanue','','','<p>rpm，全称RPM Package Manager，是RedHat发布的，针对特定硬件，已经编译好的软件包。安装之后就可以使用，不需要自行编译，以及之前对软件和硬件的检测，目录的配置等动作</p><p></p><p></p><p>－ivh：安装显示安装进度--install--verbose--hash</p><p></p><p>－Uvh：升级软件包--Update；</p><p></p><p>－qpl：列出RPM软件包内的文件信息[Query Package list]；</p><p></p><p>－qpi：列出RPM软件包的描述信息[Query Package install package(s)]；</p><p></p><p>－qf：查找指定文件属于哪个RPM软件包[Query File]；</p><p></p><p>－Va：校验所有的RPM软件包，查找丢失的文件[View Lost]；</p><p></p><p>－e：删除包</p><p></p><h2><strong>一、安装</strong></h2><p></p><p>命令格式：</p><p></p><p>rpm -i ( or --install) options file1.rpm ... fileN.rpm</p><p></p><p>参数：</p><p></p><p>file1.rpm ... fileN.rpm 将要安装的RPM包的文件名</p><p></p><p>详细选项：</p><p></p><p>-h (or --hash) 安装时输出hash记号 (``#\'\')</p><p>--test 只对安装进行测试，并不实际安装。</p><p>--percent 以百分比的形式输出安装的进度。</p><p>--excludedocs 不安装软件包中的文档文件</p><p>--includedocs 安装文档</p><p>--replacepkgs 强制重新安装已经安装的软件包</p><p>--replacefiles 替换属于其它软件包的文件</p><p>--force 忽略软件包及文件的冲突</p><p>--noscripts 不运行预安装和后安装脚本</p><p>--prefix &lt;path&gt; 将软件包安装到由 &lt;path&gt; 指定的路径下</p><p>--ignorearch 不校验软件包的结构</p><p>--ignoreos 不检查软件包运行的操作系统</p><p>--nodeps 不检查依赖性关系</p><p>--ftpproxy &lt;host&gt; 用 &lt;host&gt; 作为 FTP代理</p><p>--ftpport &lt;port&gt; 指定FTP的端口号为 &lt;port&gt;</p><p></p><p>通用选项</p><p></p><p>-v 显示附加信息</p><p>-vv 显示调试信息</p><p>--root &lt;path&gt; 让RPM将&lt;path&gt;指定的路径做为&quot;根目录&quot;，这样预安装程序和后安</p><p>装程序都会安装到这个目录下</p><p>--rcfile &lt;rcfile&gt; 设置rpmrc文件为 &lt;rcfile&gt;</p><p>--dbpath &lt;path&gt; 设置RPM 资料库存所在的路径为 &lt;path&gt;</p><p></p><h2><strong>二、删除</strong></h2><p></p><p>命令格式：</p><p></p><p>rpm -e ( or --erase) options pkg1 ... pkgN</p><p></p><p>参数</p><p></p><p>pkg1 ... pkgN ：要删除的软件包</p><p></p><p>详细选项</p><p></p><p>--test 只执行删除的测试</p><p>--noscripts 不运行预安装和后安装脚本程序</p><p>--nodeps 不检查依赖性</p><p></p><p>通用选项</p><p></p><p>-vv 显示调试信息</p><p>--root &lt;path&gt; 让RPM将&lt;path&gt;指定的路径做为&quot;根目录&quot;，这样预安装程序和后安装</p><p>程序都会安装到这个目录下</p><p>--rcfile &lt;rcfile&gt; 设置rpmrc文件为 &lt;rcfile&gt;</p><p>--dbpath &lt;path&gt; 设置RPM 资料库存所在的路径为 &lt;path&gt;</p><p></p><h2><strong>三、升级</strong></h2><p></p><p>命令格式</p><p></p><p>rpm -U ( or --upgrade) options file1.rpm ... fileN.rpm</p><p></p><p>参数</p><p></p><p>file1.rpm ... fileN.rpm 软件包的名字</p><p></p><p>详细选项</p><p></p><p>-h (or --hash) 安装时输出hash记号 (``#\'\')</p><p>--oldpackage 允许&quot;升级&quot;到一个老版本</p><p>--test 只进行升级测试</p><p>--excludedocs 不安装软件包中的文档文件</p><p>--includedocs 安装文档</p><p>--replacepkgs 强制重新安装已经安装的软件包</p><p>--replacefiles 替换属于其它软件包的文件</p><p>--force 忽略软件包及文件的冲突</p><p>--percent 以百分比的形式输出安装的进度。</p><p>--noscripts 不运行预安装和后安装脚本</p><p>--prefix &lt;path&gt; 将软件包安装到由 &lt;path&gt; 指定的路径下</p><p>--ignorearch 不校验软件包的结构</p><p>--ignoreos 不检查软件包运行的操作系统</p><p>--nodeps 不检查依赖性关系</p><p>--ftpproxy &lt;host&gt; 用 &lt;host&gt; 作为 FTP代理</p><p>--ftpport &lt;port&gt; 指定FTP的端口号为 &lt;port&gt;</p><p></p><p>通用选项</p><p></p><p>-v 显示附加信息</p><p>-vv 显示调试信息</p><p>--root &lt;path&gt; 让RPM将&lt;path&gt;指定的路径做为&quot;根目录&quot;，这样预安装程序和后安装程序都会安装到这个目录下</p><p>--rcfile &lt;rcfile&gt; 设置rpmrc文件为 &lt;rcfile&gt;</p><p>--dbpath &lt;path&gt; 设置RPM 资料库存所在的路径为 &lt;path&gt;</p><p></p><h2><strong>四、查询</strong></h2><p></p><p>命令格式：</p><p></p><p>rpm -q ( or --query) options</p><p></p><p>参数：</p><p></p><p>pkg1 ... pkgN ：查询已安装的软件包</p><p></p><p>详细选项</p><p></p><p>-p &lt;file&gt;(or ``-\'\') 查询软件包的文件</p><p>-f &lt;file&gt; 查询&lt;file&gt;属于哪个软件包</p><p>-a 查询所有安装的软件包</p><p>--whatprovides &lt;x&gt; 查询提供了 &lt;x&gt;功能的软件包</p><p>-g &lt;group&gt; 查询属于&lt;group&gt; 组的软件包</p><p>--whatrequires &lt;x&gt; 查询所有需要 &lt;x&gt; 功能的软件包</p><p></p><p>信息选项</p><p></p><p>&lt;null&gt; 显示软件包的全部标识</p><p>-i 显示软件包的概要信息</p><p>-l 显示软件包中的文件列表</p><p>-c 显示配置文件列表</p><p>-d 显示文档文件列表</p><p>-s 显示软件包中文件列表并显示每个文件的状态</p><p>--scripts 显示安装、卸载、校验脚本</p><p>--queryformat (or --qf) 以用户指定的方式显示查询信息</p><p>--dump 显示每个文件的所有已校验信息</p><p>--provides 显示软件包提供的功能</p><p>--requires (or -R) 显示软件包所需的功能</p><p></p><p>通用选项</p><p></p><p>-v 显示附加信息</p><p>-vv 显示调试信息</p><p>--root &lt;path&gt; 让RPM将&lt;path&gt;指定的路径做为&quot;根目录&quot;，这样预安装程序和后安装程序都会安装到这个目录下</p><p>--rcfile &lt;rcfile&gt; 设置rpmrc文件为 &lt;rcfile&gt;</p><p>--dbpath &lt;path&gt; 设置RPM 资料库存所在的路径为 &lt;path&gt;</p><p></p><h2><strong>五、校验已安装的软件包</strong></h2><p></p><p>命令格式：</p><p></p><p>rpm -V ( or --verify, or -y) options</p><p></p><p>参数</p><p></p><p>pkg1 ... pkgN 将要校验的软件包名</p><p></p><p>软件包选项</p><p></p><p>-p &lt;file&gt; Verify against package file &lt;file&gt;</p><p>-f &lt;file&gt; 校验&lt;file&gt;所属的软件包</p><p>-a Verify 校验所有的软件包</p><p>-g &lt;group&gt; 校验所有属于组 &lt;group&gt; 的软件包</p><p></p><p>详细选项</p><p></p><p>--noscripts 不运行校验脚本</p><p>--nodeps 不校验依赖性</p><p>--nofiles 不校验文件属性</p><p></p><p>通用选项</p><p></p><p>-v 显示附加信息</p><p>-vv 显示调试信息</p><p>--root &lt;path&gt; 让RPM将&lt;path&gt;指定的路径做为&quot;根目录&quot;，这样预安装程序和后安装程序都会安装到这个目录下</p><p>--rcfile &lt;rcfile&gt; 设置rpmrc文件为 &lt;rcfile&gt;</p><p>--dbpath &lt;path&gt; 设置RPM 资料库存所在的路径为 &lt;path&gt;</p><p></p><h2><strong>六、校验软件包中的文件</strong></h2><p></p><p>语法：</p><p></p><p>rpm -K ( or --checksig) options file1.rpm ... fileN.rpm</p><p></p><p>参数：</p><p></p><p>file1.rpm ... fileN.rpm 软件包的文件名</p><p></p><p>Checksig--详细选项</p><p></p><p>--nopgp 不校验PGP签名</p><p></p><p>通用选项</p><p></p><p>-v 显示附加信息</p><p>-vv 显示调试信息</p><p>--rcfile &lt;rcfile&gt; 设置rpmrc文件为 &lt;rcfile&gt;</p><p></p><h2><strong>七、其它RPM选项</strong></h2><p></p><p>--rebuilddb 重建RPM资料库</p><p>--initdb 创建一个新的RPM资料库</p><p>--quiet 尽可能的减少输出</p><p>--help 显示帮助文件</p><p>--version 显示RPM的当前版本</p>','1371942125','1395321417','','1','0','0','462','527');
INSERT INTO `post` VALUES('92','2','[{\"id\":24,\"name\":\"php\"},{\"id\":46,\"name\":\"router\"}]','php路由实现的两种方式','','yanue','','','<h2>1.什么是php的路由机制</h2>1、路由机制就是把某一个特定形式的URL结构中提炼出来系统对应的参数。举个例子,如：<a title=\"Link added by VigLink\" href=\"http://main.wopop.com/article/1\" rel=\"nofollow\">http://main.wopop.com/article/1</a>&nbsp;&nbsp;其中：/article/1&nbsp;&nbsp;-&gt;&nbsp;?_m=article&amp;id=1。2、然后将拥有对应参数的URL转换成特定形式的URL结构，是上面的过程的逆向过程。<h2><a name=\"_Toc5893\"></a>2.PHP的URL路由方式</h2><p>总体来说就是：获取路径信息-&gt;处理路径信息URL路由方式：</p><p>第一种是通过url参数进行映射的方式，一般是两个参数，分别代表控制器类和方法比如index.php?c=index&amp;m=index映射到的是index控制器的index方法。</p><p>第二种，是通过url-rewrite的方式，这样的好处是可以实现对非php结尾的其他后缀进行映射，当然通过rewrite也可以实现第一种方式，不过纯使用rewrite的也比较常见，一般需要配置apache或者nginx的rewrite规则</p><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;IfModule mod_rewrite.c&gt;\n    RewriteEngine On\n    RewriteBase /\n    RewriteRule ^index.php$ - [L]\n    RewriteCond %{REQUEST_FILENAME} !-f\n    RewriteCond %{REQUEST_FILENAME} !-d\n    RewriteRule . /index.php [L]\n&lt;/IfModule&gt;</pre></pre><p>第三种，就是通过pathinfo的方式，所谓的pathinfo，就是形如这样的url。<a title=\"Link added by VigLink\" href=\"http://xxx.com/index.php/c/index/aa/cc\" rel=\"nofollow\">xxx.com/index.php/c/index/aa/cc</a>，apache在处理这个url的时候会把index.php后面的部分输入到环境变量$_SERVER[\'PATH_INFO\']，它等于/c/index/aa/cc。然后我们的路由器再通过解析这个串进行分析就可以了，后面的部分放入到参数什么地方的，就依据各个框架不同而不同了。<br /></p><h2><a name=\"_Toc20384\"></a>3.&nbsp;一个简单的PHP路由实现</h2><h3><a name=\"_Toc21476\"></a>3.1&nbsp;修改htaccess文件</h3>编写服务器apache或IIS自带的rewrite文件，将URL结构导入指定文件比如：index.php。开启rewrite：htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。启用.htaccess，需要修改apache/conf/httpd.conf，启用AllowOverride，并可以用AllowOverride限制特定命令的使用。<pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;Directory /&gt;\nOptions FollowSymLinks\nAllowOverride None\n&lt;/Directory&gt;</pre></pre>改为<pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;Directory /&gt;\nOptions FollowSymLinks\nAllowOverride All\n&lt;/Directory&gt;</pre><br />然后我写了这样的rewrite：<pre class=\"prettyprint linenums prettyprinted lang-php \">RewriteEngine on #rewriteengine为重写引擎开关on为开启off为关闭\n#RewriteCond $1 !^(index.php.php|images|robots.txt)\nRewriteRule ([a-zA-Z]{1,})-([0-9]{1,}).html$ sharexie/test.php?action=$1&amp;id=$2\n#([a-zA-Z]{1,})-([0-9]{1,}).html$是规则，sharexie/test.php?action=$1&amp;id=$2是要替换的格式，$1代表第一个括号匹配的值，$2代表第二个。</pre>上面的代码就是将URL结构导入sharexie/test.php中。把这些保存为.htaccess文件放在网站的根目录就行了。test.php<pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?php\necho \'你的Action是：\' . $_GET[\'action\'];\necho \'&lt;br/&gt;\';\necho \'你的ID是：\' . $_GET[\'id\'];\n?&gt;</pre><p>好了，我们现在在浏览器中输入：</p><p><span style=\"background-color: rgb(204, 204, 204);\">127.0.0.1/view-12.html</span></p><p><strong>输出的是：</strong></p><p><span style=\"background-color: rgb(204, 204, 204);\">你的Action是：view</span></p><p><span style=\"background-color: rgb(204, 204, 204);\">你的ID是：12</span></p><p><strong>1、讲解一下RewriteRule：</strong></p><p>RewriteRule是重写规则，支持正则表达式的，上面的([0-9]{1,})是指由数字组成的，$是结束标志，说明是以数字结束！</p><p><strong>2、RewriteRule配置参数</strong></p><p>1)&nbsp;R&nbsp;强制外部重定向</p><p>2)&nbsp;F&nbsp;禁用URL,返回403HTTP状态码。</p><p>3)&nbsp;G&nbsp;强制URL为GONE，返回410HTTP状态码。</p><p>4)&nbsp;P&nbsp;强制使用代理转发。</p><p>5)&nbsp;L&nbsp;表明当前规则是最后一条规则，停止分析以后规则的重写。</p><p>6)&nbsp;N&nbsp;重新从第一条规则开始运行重写过程。</p><p>7)&nbsp;C&nbsp;与下一条规则关联</p><p>8)&nbsp;T=MIME-type(force&nbsp;MIME&nbsp;type)&nbsp;强制MIME类型</p><p>9)&nbsp;NS&nbsp;&nbsp;只用于不是内部子请求</p><p>10)&nbsp;NC&nbsp;不区分大小写</p><p>11)&nbsp;QSA&nbsp;追加请求字符串</p><p>12)&nbsp;NE&nbsp;不在输出转义特殊字符&nbsp;&nbsp;&nbsp;%3d$1&nbsp;&nbsp;等价于&nbsp;=$1</p><h2>举例：</h2><p>1、将xianglc将定到&nbsp;index.php?c=myuser&amp;m=itime&amp;domain=xianglc</p><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">RewriteRule ^([a-zA-Z0-9]){6,20}/?$ index.php?c=myuser&amp;m=itime&amp;domain=$0 [L]</pre></pre><p>2、#RewriteRule&nbsp;^/index.html$&nbsp;/1.php&nbsp;[L]<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">RewriteRule ^/index-(.*?)-(.*?)-(.*?)-(.*?)-(.*?)-(.*?)-(.*?)-(.*?)-(.*?)$ $9&amp;a=$1&amp;b=$2&amp;c=$3&amp;d=$4&amp;e=$5&amp;f=$6&amp;g=$7&amp;h=$8 [C,NC]\nRewriteRule ^(.*?)-(.*?)-(.*?)-(.*?)-(.*?)-(.*?).html(.*?)$ /1.php?$7&amp;i=$1&amp;j=$2&amp;k=$3&amp;l=$4&amp;m=$5&amp;n=$6 [QSA,L,NC]</pre><p>Php内容：</p><p><strong>3.2&nbsp;一个路由解析器，用来解析规则，匹配和转换URL。</strong></p><p>先将所有的链接转到index.php中，在index.php中进行路由分发，按照类和方法分配到相应的类文件中的函数上去。用$_SERVER[\'REQUEST_URI\']取出URL中的<a title=\"Link added by VigLink\" href=\"http://www.yanue.net/\" rel=\"nofollow\">www.xx.com/</a>后面的部分，按照相关规则分别区分为class和mothod以及参数key=&gt;value的值。最后include该类文件，执行其中的函数。</p><h2>实例如下：</h2><pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?php\nerror_reporting(0);\ndate_default_timezone_set(&quot;Asia/Shanghai&quot;);\n$_DocumentPath = $_SERVER[\'DOCUMENT_ROOT\'];\n$_RequestUri = $_SERVER[\'REQUEST_URI\'];\n$_UrlPath = $_RequestUri;\n$_FilePath = __FILE__;\n$_AppPath = str_replace($_DocumentPath, \'\', $_FilePath);    //==&gt;routerindex.php\n$_AppPathArr = explode(DIRECTORY_SEPARATOR, $_AppPath);\nfor ($i = 0; $i &lt; count($_AppPathArr); $i++) {\n       $p = $_AppPathArr[$i];\n       if ($p) {\n           $_UrlPath = preg_replace(\'/^/\'.$p.\'//\', \'/\', $_UrlPath, 1);\n       }\n    }\n   $_UrlPath = preg_replace(\'/^//\', \'\', $_UrlPath, 1);\n   $_AppPathArr = explode(&quot;/&quot;, $_UrlPath);\n   $_AppPathArr_Count = count($_AppPathArr);\n   $arr_url = array(\n       \'controller\' =&gt; \'sharexie/test\',\n       \'method\' =&gt; \'index\',\n       \'parms\' =&gt; array()\n   );\n   $arr_url[\'controller\'] = $_AppPathArr[0];\n   $arr_url[\'method\'] = $_AppPathArr[1];\n   if ($_AppPathArr_Count &gt; 2 and $_AppPathArr_Count % 2 != 0) {\n       die(\'参数错误\');\n   } else {\n       for ($i = 2; $i &lt; $_AppPathArr_Count; $i += 2) {\n           $arr_temp_hash = array(strtolower($_AppPathArr[$i])=&gt;$_AppPathArr[$i + 1]);\n           $arr_url[\'parms\'] = array_merge($arr_url[\'parms\'], $arr_temp_hash);\n       }\n   }\n   $module_name = $arr_url[\'controller\'];\n   $module_file = $module_name.\'.class.php\';\n   $method_name = $arr_url[\'method\'];\n   if (file_exists($module_file)) {\n       include $module_file;\n       $obj_module = new $module_name();\n       if (!method_exists($obj_module, $method_name)) {\n           die(&quot;要调用的方法不存在&quot;);\n       } else {\n           if (is_callable(array($obj_module, $method_name))) {\n               $obj_module -&gt; $method_name($module_name, $arr_url[\'parms\']);\n               $obj_module -&gt; printResult();\n           }\n       }\n   } else {\n       die(&quot;定义的模块不存在&quot;);\n   }\n?&gt;</pre></pre><p>参考文档：<a href=\"http://httpd.apache.org/docs/2.2/rewrite/\">http://httpd.apache.org/docs/2.2/rewrite/</a><a href=\"http://www.cnblogs.com/xiangxiaodong/archive/2012/07/19/2600138.html\">http://www.cnblogs.com/xiangxiaodong/archive/2012/07/19/2600138.html</a><br /></p><p>转自:<a href=\"http://www.cnblogs.com/fredshare/archive/2012/09/17/2688944.html\">http://www.cnblogs.com/fredshare/archive/2012/09/17/2688944.html</a></p>','1373392941','1395321189','','1','0','0','682','543');
INSERT INTO `post` VALUES('93','2','[{\"id\":24,\"name\":\"php\"}]','phpDoccument文档标记标签及注释规范','','yanue','','','<h2>文档标记:</h2><p>文档标记的使用范围是指该标记可以用来修饰的关键字，或其他文档标记。</p><p>所有的文档标记都是在每一行的 * 后面以@开头。如果在一段话的中间出来@的标记，这个标记将会被当做普通内容而被忽略掉。</p><p><strong>@access</strong></p><p>使用范围：class,function,var,define,module</p><p>该标记用于指明关键字的存取权限：private、public或proteced</p><p><strong>@author</strong></p><p>指明作者</p><p><strong>@copyright</strong></p><p>使用范围：class，function，var，efine，module，use</p><p>指明版权信息</p><p><strong>@deprecated</strong></p><p>使用范围：class，function，var，define，module，constent，global，include</p><p>指明不用或者废弃的关键字</p><p><strong>@example</strong></p><p>该标记用于解析一段文件内容，并将他们高亮显示。Phpdoc会试图从该标记给的文件路径中读取文件内容</p><p><strong>@const</strong></p><p>使用范围：define</p><p>用来指明php中define的常量</p><p><strong>@final</strong></p><p>使用范围：class,function,var</p><p>指明关键字是一个最终的类、方法、属性，禁止派生、修改。</p><p><strong>@filesource</strong></p><p>和example类似，只不过该标记将直接读取当前解析的php文件的内容并显示。</p><p><strong>@global</strong></p><p>指明在此函数中引用的全局变量</p><p><strong>@ingore</strong></p><p>用于在文档中忽略指定的关键字</p><p><strong>@license</strong></p><p>相当于html标签中的例如</p><p>,首先是URL，接着是要显示的内容</p><p>可以写作 @license?<a title=\"半叶寒羽\" href=\"http://yanue.net/\" rel=\"nofollow\">http://yanue.net/</a>?半叶寒羽</p><p><strong>@link</strong></p><p>类似于license</p><p>但还可以通过link指到文档中的任何一个关键字</p><p><strong>@name</strong></p><p>为关键字指定一个别名。</p><p><strong>@package</strong></p><p>使用范围：页面级别的-&gt; define，function，include</p><p>类级别的-&gt;class，var，methods</p><p>用于逻辑上将一个或几个关键字分到一组。</p><p><strong>@abstrcut</strong></p><p>说明当前类是一个抽象类</p><p><strong>@param</strong></p><p>指明一个函数的参数</p><p><strong>@return</strong></p><p>指明一个方法或函数的返回指</p><p><strong>@static</strong></p><p>指明关建字是静态的。</p><p><strong>@var</strong></p><p>指明变量类型</p><p><strong>@version</strong></p><p>指明版本信息</p><p><strong>@todo</strong></p><p>指明应该改进或没有实现的地方</p><p><strong>@throws</strong></p><p>指明此函数可能抛出的错误异常,极其发生的情况</p><p>上面提到过，普通的文档标记标记必须在每行的开头以@标记，除此之外，还有一种标记叫做inline tag,用{@}表示，具体包括以下几种：</p><p><strong>{@link}</strong></p><p>用法同@link</p><p><strong>{@source}</strong></p><p>显示一段函数或方法的内容</p><h2>一些注释规范</h2><p><strong>a.</strong>注释必须是</p><pre>/**\n* XXXXXXX\n*/\n</pre>的形式<p><strong>b.</strong>对于引用了全局变量的函数，必须使用glboal标记。</p><p><strong>c.</strong>对于变量，必须用var标记其类型（int,string,bool...）</p><p><strong>d.</strong>函数必须通过param和return标记指明其参数和返回值</p><p><strong>e.</strong>对于出现两次或两次以上的关键字，要通过ingore忽略掉多余的，只保留一个即可</p><p><strong>f.</strong>调用了其他函数或类的地方，要使用link或其他标记链接到相应的部分，便于文档的阅读。</p><p><strong>g.</strong>必要的地方使用非文档性注释，提高代码易读性。</p><p><strong>h.</strong>描述性内容尽量简明扼要，尽可能使用短语而非句子。</p><p><strong>i.</strong>全局变量，静态变量和常量必须用相应标记说明</p><p></p><h2>附录</h2><p></p><p>附录1 能够被phpdoc识别的关键字：</p><p><span style=\"color:#ff0000;\">Include</span></p><p><span style=\"color:#ff0000;\">Require</span></p><p><span style=\"color:#ff0000;\">include_once</span></p><p><span style=\"color:#ff0000;\">require_once</span></p><p><span style=\"color:#ff0000;\">define</span></p><p><span style=\"color:#ff0000;\">function</span></p><p><span style=\"color:#ff0000;\">global</span></p><p><span style=\"color:#ff0000;\">class</span></p><h3>附录2 文档中可以使用的标签:</h3><pre>&lt;b&gt;\n&lt;code&gt;\n&lt;br&gt;\n&lt;kdb&gt;\n&lt;li&gt;\n&lt;pre&gt;\n&lt;ul&gt;\n&lt;SAMP&gt;\n&lt;var&gt;\n</pre>','1373494069','1395320616','','1','0','0','504','546');
INSERT INTO `post` VALUES('94','2','[{\"id\":24,\"name\":\"php\"}]','phpdoc文档注释实例','','yanue','','','<p>Phpdocumentor文档规范及文档标签见:<a href=\"http://www.yanue.net/post-93.html\">http://www.yanue.net/post-93.html</a>.</p><h2>注释实例:</h2><pre class=\"lang_php decode_true brush: php; gutter: true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?php\n\n//----- 文档块 ----------------------------\n/**\n * 以 / ** 开头的注释是一个文档块(DocBlock)\n */\n\nfunction a0() {}\n\n//----- 文档块描述细节 --------------------\n\n// 文档块包括哪些？\n/**\n * 文档块按顺序包括3个部分\n * 1. 短描述\n * 2. 长描述\n * 3. tag段\n */\n\nfunction a1() {}\n\n//比如\n/**\n * 短描述\n *\n * 这是一个长描述。\n * 继续长描述。\n * 如果短描述超过3行，则会只去第一行，作为短描述。\n *\n * 另起一段：因为上面的空行\n */\n\nfunction a2() {}\n// &lt;p&gt;的例子\n/**\n * 短描述\n *\n * &lt;p&gt;这是一个长描述。\n * 继续长描述。\n * 用p标签包围的长描述&lt;/p&gt;\n * &lt;p&gt;另起一段&lt;/p&gt;\n * &lt;p&gt;再另起一段&lt;/p&gt;\n */\nfunction a3() {}\n\n/**\n * phpdoc 不支持html的标签，但是可以用下面的几个标签(注意加&lt;&gt;)\n * \n * b -- &lt;b&gt; 加粗 &lt;/b&gt;\n *\n * br -- 换行，&lt;br&gt;可能被某些转换器忽略 &lt;br&gt;\n *\n * i -- &lt;i&gt; 斜体 &lt;/i&gt;\n *\n * kbd -- &lt;kbd&gt; 标示 键盘输入/屏幕输出 &lt;/kbd&gt;\n *\n * ul -- 没有顺序的列表\n *\n * li -- 列表项\n *\n * ol -- 顺序列表\n *\n * p -- 如果成对使用，则表明一个段，否则只是一个字符串&lt;p&gt;\n * &lt;p&gt;这是一个段&lt;/p&gt;\n *\n * pre -- \n * &lt;pre&gt;原样输出，即使是各种标签&lt;b&gt;加粗&lt;/b&gt;，相当于XML的CDATA\n * 注意输出成HTML后，会有效果\n * &lt;/pre&gt;\n *\n * var -- 变量名\n *\n * samp -- 非php的示例\n *\n * &lt;code&gt; 加粗 &lt;/code&gt;\n *\n * 不要把这些标签想成是字符串，它们应解析器的不同，而被解析成各种形式\n * 如：b标签在DocBook中是&lt;emphasis&gt;，p标签在PDF中是4个空格\n * 这些都在模板的options.ini文件中定义\n *\n * 要显示带前后尖括号的b标签，可以用《《XXX》》(小写尖括号), 如&lt;&lt;b&gt;&gt;\n *\n * 要用@标签，如果行的开头，则用@，其他地方不需要加反斜杠 \n * 如：\n *\n * &lt;code&gt;\n * @return abc\n * 这是一个标签 @name\n * &lt;/code&gt;\n */ \n\nfunction a4() {}\n\n/**\n * 简单的列表(不允许嵌套，因为它不再简单)\n *\n * 这是一个简单的列表(以-、+、#、o)\n * - item 1\n * - item 2, this one\n *   is multi-line\n * 这是一个简单的列表(以-、+、#、o)\n * + item 1\n * + item 2\n * 这是一个简单的列表(以-、+、#、o)\n * # item 1\n * # item 2\n * 这是一个简单的列表(以-、+、#、o)\n * o item 1\n * o item 2\n * 列表结束。下面是顺序列表(以数字开头)\n * 1 ordered item 1\n * 2 ordered item 2\n * 列表结束。下面是还是顺序列表(以数字开头，并且有个点)\n * 1. ordered item 1\n * 2. ordered item 2\n */\nfunction a5() {}\n\n/**\n * 有嵌套的列表\n *\n * 使用ul li ol等标签创建复杂的嵌套列表\n * &lt;ul&gt;\n * &lt;li&gt;outer item 1&lt;/li&gt;\n * &lt;li&gt;outer item 2, this one\n *   is multi-line&lt;/li&gt;\n * &lt;li&gt;item 3 is a nested inner list\n * &lt;ul&gt;\n * &lt;li&gt;inner item 1&lt;/li&gt;\n * &lt;li&gt;inner item 2&lt;/li&gt;\n * &lt;/ul&gt;\n * &lt;li&gt;outer item 4&lt;/li&gt;\n * &lt;/ul&gt;\n */\nfunction a6() {}\n\n/**\n * 在todo标签中的列表\n * @todo My Simple TODO List\n *     - item 1\n *     - item 2\n *     - item 3\n *      - item 3\n * @todo My Complex TODO List\n *     &lt;ol&gt;\n *       &lt;li&gt;item 1.0&lt;/li&gt;\n *       &lt;li&gt;item 2.0&lt;/li&gt;\n *       &lt;li&gt;item 3.0&lt;/li&gt;\n *       &lt;li&gt;\n *         &lt;ol&gt;\n *           &lt;li&gt;item 3.1&lt;/li&gt;\n *           &lt;li&gt;item 3.2&lt;/li&gt;\n *         &lt;/ol&gt;\n *       &lt;li&gt;\n *       &lt;li&gt;item 4.0&lt;/li&gt;\n *     &lt;/ol&gt;\n */\nfunction a7() {}\n\n//----- Tags ------------------------------------\n\n// Tags：以@开头的标示\n// 下面是常用的Tag\n\n/**\n * 简单的描述\n *\n * 你可以任意扩展描述，成千上万行都可以\n *\n * 用 {@link ellement} 指向一个 element\n * 比如：指向a1: {@link a1}\n * \n * 用 {@link url} 指向一个站点\n * 比如：{@link http://www.sina.com.cn 新浪网}\n * \n * 用 {@source} 显示源代码.\n * 比如：显示函数的代码：\n * {@source } \n * \n * 可用Tag列表:\n * type 是PHP类型：integer, array, mixed, string等\n *\n * - @abstract\n * - @access       public or private\n * - @author       作者 &lt;author@email&gt;\n * - @copyright    版权\n * - @deprecated   废弃\n * - @deprec       deprecated的简写\n * - @example      指向例子\n * - @exception    兼容javadoc\n * - @global       type $globalvarname\n * - @global       type 函数中的全局变量描述\n * - @ignore\n * - @internal     给高级程序员看的内部细节描述\n * - @param        type [$varname] 描述\n * - @return       type 描述\n * - @link         URL\n * - @name         procpagealias [不懂]\n * - @name         $globalvaralias\n * - @magic        兼容phpdoc.de\n * - @package      包名\n * - @see          指向其他元素的名字，如函数名，类方法等\n * - @since        一个版本号或日期\n * - @static\n * - @staticvar    type 函数中的静态变量的描述\n * - @subpackage   子包\n * - @throws       兼容Javadoc\n * - @todo         待办列表，兼容phpdoc.de\n * - @var          type    类变量的类型\n * - @version      版本\n */\nfunction if_there_is_an_inline_source_tag_this_must_be_a_function()\n{\n// ...\n}\n\n//----- 可以文档的源代码元素 ------------------------------------\n\n//-- 包 \n\n/*\n * Phpdoc划分包的逻辑：\n * 函数、常量、全局变量属于包\n * 方法、类变量属于类\n * 包可以包含多个类\n *\n * 一个文件中不要包含多个包\n */\n\n//--- 程序文件级 --------------------\n/*\n * 文件的第一个块就是 文件级的文档块(page-level Docblock)\n * 或者包含@package标签\n * 它可以有这些元素：\n *   标准标签\n *   @package\n *   @subpackage\n *\n */\n\n//--- Include/Require 语句 ----------\n/*\n * 它可以有这些元素：\n *   标准标签\n */ \n\n//--- define 语句 -------------------\n/*\n * 它可以有这些元素：\n *   标准标签\n *   @name\n */ \n\n//--- function 声明 -------------------\n/*\n * 它可以有这些元素：\n *   标准标签\n *   @global\n *   @param\n *   @return\n *   @staticvar\n *   inline {@source}\n */ \n\n//--- 全局变量 ------------------------\n/*\n * 它可以有这些元素：\n *   标准标签\n *   @name\n */ \n\n//--- class 声明 -------------------\n/*\n * 它可以有这些元素：\n *   标准标签\n *   @package\n *   @subpackage\n *   @static\n */ \n\n//--- class 变量 -------------------\n/*\n * 它可以有这些元素：\n *   标准标签\n *   @var\n */ \n\n//--- class 变量 -------------------\n/*\n * 它可以有这些元素：\n *   标准标签\n *   @global\n *   @param\n *   @return\n *   @static\n *   @staticvar\n *   inline {@source}\n */ \n\n/*\n * 标准文档标签\n * 常用的：\n *   @author\n *   @copyright\n *   @version\n *   @since\n *   @link\n *   @see\n * 其他：\n *   @tutorial\n *   @example\n *   @access\n *   @deprecated\n *   @ignore\n *   @internal\n *   inline {@internal}}\n *   inline {@inheritdoc}\n *   inline {@link}\n */\n\n/*\n * 文档标签的继承关系\n *\n * Class子类可以继承父类的文档，几个简单的规则：\n *\n * @author, @version, @copyright 自动继承，除非显示指明\n * @package and @subpackage 也会继承，但是建议显示申明，以避免名字冲突\n * 如果没有简单描述，则会继承\n * 如果没有长简单描述，则会继承\n * 如果有长描述，想继承父类的描述，则使用inline标签 {@inheritdoc}\n */\n\n//----- 命令行参数说明 ------------------------------------\n// phpdoc -h 查看帮助, 参数如下：\n//\n/* -c --config 载入配置文件，如：-c defualt ;载入default.ini文件\n * -cp --converterparams 动态扩展转换器的参数，多个值用逗号分割\n * -ct --customtags 自定义tag，多个值用逗号分割；如：-ct mgtag,yourtag  =&gt; @mytag @yourtag\n * -d --directory 指定要解析的目录\n * -dc --defaultcategoryname 指定默认分类名，默认值为:defaul\n * -dh --hidden 相当于-dh on，让phpdoc解析以.开头的隐藏文件和目录\n * -dn --defaultpackagename 指定默认包名，默认是：default\n * -ed --examplesdir 例子文件寻找路径，如：-ed /full/path/to/example\n * -f --filename 要解析的源文件名，用,分割，可以使用 * ?\n * -i --ignore 不解析的文件名或目录，用,分割，可以使用 * ? ；\n *    - -i  忽略 /path/to/here/tests/* 和 /path/tests/*\n *    - -i *.inc 忽略所有的 .inc 文件 *\n *    - -i *path/to/* 忽略 /path/path/to/my/* 和 /path/to/*\n *    - -i *test* 忽略 /path/tests/* 和 /path/here/my_test.php\n * -is --ignoresymlinks 忽略任何链接文件，这个只在Linux/Unix下有效，因为Win下没有链接文件\n * -it --ignore-tags 忽略某些tag；通常用于创建不同版本的文档；如给普通用户的文档，就不需要@todo标签\n *    忽略inline标签，加上大括号，如--ignore-tags {@internal}\n *    参数是完整名字，如-it @todo，  -it todo 是错误的写法\n * -j --javadocdesc 使用javadoc兼容标签\n * -o --output 指定要使用的转换器和模板；默认可选：\n *   HTML:frames:* - 输出带框架的HTML页面\n *     HTML:frames:default - 类Javadoc模板，没有太多格式\n *     HTML:frames:earthli - Marco von Ballmoos写的模板，非常漂亮\n *     HTML:frames:l0l33t - 非常漂亮的模板\n *     HTML:frames:phpdoc.de - 类phpdoc.de\'s PHPDoc\n *     HTML:frames:phphtmllib - 非常好的用户发行模板\n *      以上模板都有javascript增强版本：HTML:frames:DOM/name 其中name表示 default, l0l33t, phpdoc.de, 等等\n *     HTML:frames:phpedit - 基于PHPEdit帮助生成器\n *\n *   HTML:Smarty:* - 输出不带框架的HTML\n *     HTML:Smarty:default - 用css控制页面布局的模板\n *     HTML:Smarty:HandS - Layout is based on PHP, but more refined, with logo image\n *     HTML:Smarty:PHP - Layout is identical to the PHP website\n *\n *   CHM:default:* - 输出成CHM格式，需要用Windows的Help软件编译\n *     CHM:default:default - 基于HTML:frames:l0l33t\n *\n *   PDF:default:* - 输出成PDF文档\n *     PDF:default:default - 标准格式\n *\n *   XML:DocBook:* - 输出成XML--DocBook格式\n *     XML:DocBook/peardoc2:default - pear.php.net（第2版）\n *\n * -p --pear Parse a PEAR-style repository (package is directory, _members are @access private) on/off default off \n * -po --packageoutput output documentation only for selected packages. Use a comma-delimited list \n * -pp --parseprivate 开启；默认不显示@access private的文档\n * -q --quiet 关闭多余信息；用法：-q on --不显示  -q off --显示，默认值\n * -ric --readmeinstallchangelog Specify custom filenames to parse like README, INSTALL or CHANGELOG files \n * -s --sourcecode generate highlighted sourcecode for every parsed file (PHP 4.3.0+ only) on/off default off \n * -t --target 要输出的路径\n * -ti --title 文档的标题\n * -tb --templatebase 指定自己的模板目录\n * -ue --undocumentedelements 为没有文档的元素 产生警告; 用法：-ue on  -ue off (默认值)\n */\n\n/*\n * phpdoc -t /path/to/output -d path/to/directory1,/another/path,/third/path \n *   -f /path/to/anotherfile.php -i *test.php,tests/ -pp on -ti My Title -o HTML:frames:phpedit\n *\n * phpdoc -c myconfig\n */\n\n?&gt;</pre></pre><p>来自: http://sofire.iteye.com/blog/120007<br /></p>','1373495740','1395319948','','1','0','0','632','549');
INSERT INTO `post` VALUES('95','12','[{\"id\":12,\"name\":\"mysql\"}]','MySQL之替换字符串函数replace()的使用','','yanue','','','最近更换了博客的代码高亮插件，以前用的是SyntaxHighlighter:代码格式：<pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;pre class=&quot;brush: php; gutter: true&quot;&gt;\n//代码区\n......\n&lt;/pre&gt;</pre></pre>现在换成了Crayon Syntax Highlighter:<pre class=\"lang_php decode_true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;pre class=&quot;lang_php decode_true&quot;&gt;\n//代码区\n......\n&lt;/pre&gt;</pre></pre>代码高亮的区域不一样，又有很多文章需要改，好吧，mysql肯定有替换功能函数，于是找了一下mysql的replace()函数资料:<h2>replace()函数语法:</h2><pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">update [table_name] set [field_name] = replace([field_name],\'[string_to_find]\',\'[string_to_replace]\');</pre></pre>实例：<pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">mysql&gt; SELECT REPLACE(\'www.yanue.net\', \'www\', \'map\');\n+----------------------------------------+\n| REPLACE(\'www.yanue.net\', \'www\', \'map\') |\n+----------------------------------------+\n| map.yanue.net |\n+----------------------------------------+\n1 row in set (0.00 sec)</pre><br /></pre>因此一个函数可以replace()函数就十分方便的解决问题了：<pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">UPDATE wp_posts \nSET post_content = REPLACE(post_content, \'&lt;pre class=&quot;brush: php; gutter: true&quot;&gt;\', \'&lt;pre class=&quot;lang_php decode_true&quot;&gt;\');</pre></pre>文章完.','1374225568','1395319797','','1','0','0','482','584');
INSERT INTO `post` VALUES('96','12','[{\"id\":45,\"name\":\"GRANT\"},{\"id\":12,\"name\":\"mysql\"}]','MySQL查看用户权限的两种方法','','yanue','','','<p>MySQL查看用户权限命令的两方法:</p><h2><strong>一. 使用MySQL&nbsp;grants&nbsp;</strong></h2><p>MySQL&nbsp;grant详细用法见:<a title=\"mysql grant使用详解\" href=\"http://yanue.net/post-97.html\">http://yanue.net/post-97.html</a>使用方法:</p><pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">mysql&gt; show grants for username@localhost;</pre></pre>实例:<pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">mysql&gt; show grants for root@localhost;\n+---------------------------------------------------------------------+\n| Grants for root@localhost                                           |\n+---------------------------------------------------------------------+\n| GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'localhost\' WITH GRANT OPTION |\n+---------------------------------------------------------------------+\n1 row in set (0.01 sec)</pre></pre><h2><strong>&nbsp;二. 直接通过mysql select查询语句:</strong></h2><pre class=\"lang:php decode:true crayon-selected\"><pre class=\"prettyprint linenums prettyprinted lang-php \">mysql&gt; select * from mysql.user where user=\'test\' and host=\'127.0.0.1\' \\G;\n*************************** 1. row ***************************\n                  Host: 127.0.0.1\n                  User: test\n              Password: *EB3C643405D7F53BD4BF7FBA98DCF5641E228833\n           Select_priv: N\n           Insert_priv: N\n           Update_priv: N\n           Delete_priv: N\n           Create_priv: N\n             Drop_priv: N\n           Reload_priv: N\n         Shutdown_priv: N\n          Process_priv: N\n             File_priv: N\n            Grant_priv: N\n       References_priv: N\n            Index_priv: N\n            Alter_priv: N\n          Show_db_priv: N\n            Super_priv: N\n Create_tmp_table_priv: N\n      Lock_tables_priv: N\n          Execute_priv: N\n       Repl_slave_priv: N\n      Repl_client_priv: N\n      Create_view_priv: N\n        Show_view_priv: N\n   Create_routine_priv: N\n    Alter_routine_priv: N\n      Create_user_priv: N\n            Event_priv: N\n          Trigger_priv: N\nCreate_tablespace_priv: N\n              ssl_type: \n            ssl_cipher: \n           x509_issuer: \n          x509_subject: \n         max_questions: 0\n           max_updates: 0\n       max_connections: 0\n  max_user_connections: 0\n                plugin: mysql_native_password\n authentication_string: \n      password_expired: N\n1 row in set (0.00 sec)</pre></pre><p>可以看到Select_priv,Insert_priv,Update_priv...等为N表示没有权限,该用户权限一目了然.这时可以使用命令</p><p><strong>给用户加权限:</strong></p><p>见<a title=\"MYSQL里给用户加权限\" href=\"http://www.yanue.net/post-97.html\">http://www.yanue.net/post-97.html</a></p><pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">grant all privileges on *.* to \'test\'@\'127.0.0.1\' identified by \'passwd\';\nflush privileges;</pre></pre><strong>另外:show可以看到很多东西:</strong><pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">show databases;\nshow tables;\nshow create database dbname;  // 这个可以看到创建数据库时用到的一些参数。\nshow create table tablename;   // 可以看到创建表时用到的一些参数</pre></pre>','1374264730','1395319701','','1','0','0','679','597');
INSERT INTO `post` VALUES('97','12','[{\"id\":12,\"name\":\"mysql\"},{\"id\":45,\"name\":\"GRANT\"}]','MYSQL用户权限管理GRANT使用','','yanue','','','<h2>GRANT语句的语法：</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">mysql&gt; grant 权限1,权限2,…权限n on 数据库名称.表名称 to 用户名@用户地址 identified by &quot;连接口令&quot;;</pre><p>看上去像这样：<br /></p><pre class=\"lang:php decode:true \"><pre class=\"prettyprint linenums prettyprinted lang-php \">GRANT privileges (columns) ON what TO user IDENTIFIED BY &quot;password&quot; WITH GRANT OPTION</pre><pre class=\"lang:php decode:true \"><span style=\"font-family: Arial, Helvetica, sans-serif;\">当权限1,权限2,…权限n被all privileges或者all代替，表示赋予用户全部权限。</span>\n</pre></pre><pre class=\"lang:php decode:true \"><span style=\"font-family: Arial, Helvetica, sans-serif;\">当数据库名称.表名称被*.*代替，表示赋予用户操作服务器上所有数据库所有表的权限。</span>\n</pre><pre class=\"lang:php decode:true \"><span style=\"font-family: Arial, Helvetica, sans-serif;\">用户地址可以是localhost，也可以是ip地址、机器名字、域名。也可以用’%\'表示从任何地址连接。</span>\n</pre><pre class=\"lang:php decode:true \"><span style=\"font-family: Arial, Helvetica, sans-serif;\">‘连接口令’不能为空，否则创建失败。</span>\n</pre><pre class=\"lang:php decode:true \"><span style=\"font-family: Arial, Helvetica, sans-serif;\">要使用该语句，你需要填写下列部分：</span>\n</pre><pre class=\"lang:php decode:true \"><strong><span style=\"color:#ff0000;\">privileges</span></strong>&nbsp;\n</pre><p>授予用户的权限，下表列出可用于GRANT语句的权限指定符：</p><p>权限指定符<br /></p><p>权限允许的操作<br /></p><p>ALTER 修改表和索引<br /></p><p>CREATE 创建数据库和表<br /></p><p>DELETE 删除表中已有的记录<br /></p><p>DROP 抛弃（删除）数据库和表<br /></p><p>INDEX 创建或抛弃索引<br /></p><p>INSERT 向表中插入新行<br /></p><p>REFERENCE 未用<br /></p><p>SELECT 检索表中的记录<br /></p><p>UPDATE 修改现存表记录<br /></p><p>FILE 读或写服务器上的文件<br /></p><p>PROCESS 查看服务器中执行的线程信息或杀死线程<br /></p><p>RELOAD 重载授权表或清空日志、主机缓存或表缓存。<br /></p><p>SHUTDOWN 关闭服务器<br /></p><p>ALL 所有；ALL PRIVILEGES同义词<br /></p><p>USAGE 特殊的“无权限”权限<br /></p><p>上表显示在第一组的权限指定符适用于数据库、表和列，第二组数管理权限。一般，这些被相对严格地授权，因为它们允许用户影响服务器的操作。第三组权限特殊，ALL意味着“所有权限”，UASGE意味着无权限，即创建用户，但不授予权限。<br /></p><p><strong><span style=\"color:#ff0000;\">columns</span></strong>&nbsp;<br /></p><p>权限运用的列，它是可选的，并且你只能设置列特定的权限。如果命令有多于一个列，应该用逗号分开它们。<br /></p><p><strong><span style=\"color:#ff0000;\">what</span></strong></p><p>权限运用的级别。权限可以是全局的（适用于所有数据库和所有表）、特定数据库（适用于一个数据库中的所有表）或特定表的。可以通过指定一个columns字句是权限是列特定的。<br /></p><p><strong><span style=\"color:#ff0000;\">user</span></strong></p><p>权限授予的用户，它由一个用户名和主机名组成。在MySQL中，你不仅指定谁能连接，还有从哪里连接。这允许你让两个同名用户从不同地方连接。MySQL让你区分他们，并彼此独立地赋予权限。<br /></p><p>MySQL中的一个用户名就是你连接服务器时指定的用户名，该名字不必与你的Unix登录名或Windows名联系起来。缺省地，如果你不明确指定一个名字，客户程序将使用你的登录名作为MySQL用户名。这只是一个约定。你可以在授权表中将该名字改为nobody，然后以nobody连接执行需要超级用户权限的操作。<br /></p><p><strong><span style=\"color:#ff0000;\">password</span></strong><br /></p><p>赋予用户的口令，它是可选的。如果你对新用户没有指定IDENTIFIED BY子句，该用户不赋给口令（不安全）。对现有用户，任何你指定的口令将代替老口令。如果你不指定口令，老口令保持不变，当你用IDENTIFIED BY时，口令字符串用改用口令的字面含义，GRANT将为你编码口令，不要象你用SET PASSWORD 那样使用password()函数。</p><p>WITH GRANT OPTION子句是可选的。如果你包含它，用户可以授予权限通过GRANT语句授权给其它用户。你可以用该子句给与其它用户授权的能力。</p><p>用户名、口令、数据库和表名在授权表记录中是大小写敏感的，主机名和列名不是。<br /></p><h2>实例</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">mysql&gt;grant select,insert,update,delete,create,drop on vtdc.employee to joe@10.163.225.87 identified by ‘123′;</pre><p>给来自10.163.225.87的用户joe分配可对数据库vtdc的employee表进行select,insert,update,delete,create,drop等操作的权限，并设定口令为123。<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">mysql&gt;grant all privileges on vtdc.* to joe@10.163.225.87 identified by ‘123′;</pre><p>给来自10.163.225.87的用户joe分配可对数据库vtdc所有表进行所有操作的权限，并设定口令为123。<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">mysql&gt;grant all privileges on *.* to joe@10.163.225.87 identified by ‘123′;</pre><p>给来自10.163.225.87的用户joe分配可对所有数据库的所有表进行所有操作的权限，并设定口令为123。</p><pre class=\"prettyprint linenums prettyprinted lang-php \">mysql&gt;grant all privileges on *.* to joe@localhost identified by ‘123′;</pre><p>给本机用户joe分配可对所有数据库的所有表进行所有操作的权限，并设定口令为123。</p>','1378586722','1395319421','','1','0','0','445','603');
INSERT INTO `post` VALUES('98','0','','WordPress主题制作完整教程','','yanue','','','创建 WordPress 主题其实不难，只要你从现在开始认真学习这个教程，从零一步一步开始，你就会成为一个 WordPress 主题制作高手，至少你会修改现有主题。\r\n\r\nWordPress 主题教程：从零开始制作 WordPress 主题（作者：我爱水煮鱼）\r\n\r\n<a style=\"font-size: 1.5em;\" href=\"http://blog.wpjam.com/series/wordpress-theme-tutorials/\">WordPress 主题教程</a>\r\n<ul>\r\n	<li><a title=\"WordPress 主题教程：从零开始制作 WordPress 主题\" href=\"http://blog.wpjam.com/2007/06/04/so-you-want-to-create-wordpress-themes-huh/\">WordPress 主题教程：从零开始制作 WordPress 主题</a></li>\r\n	<li><a title=\"WordPress 主题教程 #1：介绍\" href=\"http://blog.wpjam.com/2007/06/04/wp-theme-lesson-1-intro/\">WordPress 主题教程 #1：介绍</a></li>\r\n	<li><a title=\"WordPress 主题教程 #2：模板文件和模板\" href=\"http://blog.wpjam.com/2007/06/04/wp-theme-lesson-2-template-files-and-templates/\">WordPress 主题教程 #2：模板文件和模板</a></li>\r\n	<li><a title=\"WordPress 主题教程 #3：开始 Index.php\" href=\"http://blog.wpjam.com/2007/06/04/wp-theme-lesson-3-starting-indexphp/\">WordPress 主题教程 #3：开始 Index.php</a></li>\r\n	<li><a title=\"WordPress 主题教程 #4a：Header 模板\" href=\"http://blog.wpjam.com/2007/06/04/wp-theme-lesson-4-header-template/\">WordPress 主题教程 #4a：Header 模板</a></li>\r\n	<li><a title=\"WordPress 主题教程 #4b：Header 模板 2\" href=\"http://blog.wpjam.com/2007/06/05/wp-theme-lesson-4b-header-template-continues/\">WordPress 主题教程 #4b：Header 模板 2</a></li>\r\n	<li><a title=\"WordPress 主题教程 #5：主循环\" href=\"http://blog.wpjam.com/2007/06/05/wp-theme-lesson-5-the-loop/\">WordPress 主题教程 #5：主循环</a></li>\r\n	<li><a title=\"WordPress 主题教程 #5b：日志内容\" href=\"http://blog.wpjam.com/2007/06/06/wp-theme-lesson-5b-the-content/\">WordPress 主题教程 #5b：日志内容</a></li>\r\n	<li><a title=\"WordPress 主题教程 #5c：日志元数据\" href=\"http://blog.wpjam.com/2007/06/07/wp-theme-lesson-5c-postmetadata/\">WordPress 主题教程 #5c：日志元数据</a></li>\r\n	<li><a title=\"WordPress 主题教程 #5d：Else，日志 ID，链接标题\" href=\"http://blog.wpjam.com/2007/06/08/wp-theme-lesson-5d-else-post-id-link-title/\">WordPress 主题教程 #5d：Else，日志 ID，链接标题</a></li>\r\n	<li><a title=\"WordPress 主题教程 #5e：日志导航链接\" href=\"http://blog.wpjam.com/2007/06/09/wp-theme-lesson-5e-posts-nav-link/\">WordPress 主题教程 #5e：日志导航链接</a></li>\r\n	<li><a title=\"WordPress 主题教程 #6：侧边栏\" href=\"http://blog.wpjam.com/2007/06/10/wp-theme-lesson-6-sidebar/\">WordPress 主题教程 #6：侧边栏</a></li>\r\n	<li><a title=\"WordPress 主题教程 #6b：页面链接列表\" href=\"http://blog.wpjam.com/2007/06/11/wp-theme-lesson-6b-page-link-listing/\">WordPress 主题教程 #6b：页面链接列表</a></li>\r\n	<li><a title=\"WordPress 主题教程 #6c：存档和链接列表\" href=\"http://blog.wpjam.com/2007/06/12/wp-theme-lesson-6c-get-archives-and-links/\">WordPress 主题教程 #6c：存档和链接列表</a></li>\r\n	<li><a title=\"WordPress 主题教程 #6d：搜索框和日历\" href=\"http://blog.wpjam.com/2007/06/13/wp-theme-lesson-6d-search-form-and-calendar/\">WordPress 主题教程 #6d：搜索框和日历</a></li>\r\n	<li><a title=\"WordPress 主题教程 #6e：窗体化侧边栏\" href=\"http://blog.wpjam.com/2007/06/13/wp-theme-lesson-6e-widgetizing-sidebar/\">WordPress 主题教程 #6e：窗体化侧边栏</a></li>\r\n	<li><a title=\"WordPress 主题教程 #7：尾部\" href=\"http://blog.wpjam.com/2007/06/13/wp-theme-lesson-7-footer/\">WordPress 主题教程 #7：尾部</a></li>\r\n	<li><a title=\"WordPress 主题教程 #8：验证 XHTML\" href=\"http://blog.wpjam.com/2007/06/13/wp-theme-lesson-8-how-to-validate/\">WordPress 主题教程 #8：验证 XHTML</a></li>\r\n	<li><a title=\"WordPress 主题教程 #9：Style.css 和 CSS 介绍\" href=\"http://blog.wpjam.com/2007/06/16/wp-theme-lesson-9-stylecss-and-css-intro/\">WordPress 主题教程 #9：Style.css 和 CSS 介绍</a></li>\r\n	<li><a title=\"WordPress 主题教程 #10：十六进制颜色代码和样式化链接\" href=\"http://blog.wpjam.com/2007/06/17/wp-theme-lesson-10-hex-codes-and-styling-links/\">WordPress 主题教程 #10：十六进制颜色代码和样式化链接</a></li>\r\n	<li><a title=\"WordPress 主题教程 #11：宽度和布局\" href=\"http://blog.wpjam.com/2007/06/21/wp-theme-lesson-11-widths-and-floats/\">WordPress 主题教程 #11：宽度和布局</a></li>\r\n	<li><a title=\"WordPress 主题教程 #12：日志样式化和其他杂项\" href=\"http://blog.wpjam.com/2007/06/29/wp-theme-lesson-12-post-formatting-and-miscellaneous/\">WordPress 主题教程 #12：日志样式化和其他杂项</a></li>\r\n	<li><a title=\"WordPress 主题教程 #13：样式化侧边栏\" href=\"http://blog.wpjam.com/2007/07/07/wp-theme-lesson-13-styling-sidebar/\">WordPress 主题教程 #13：样式化侧边栏</a></li>\r\n	<li><a title=\"WordPress 主题教程 #14：底部和拆分 Index\" href=\"http://blog.wpjam.com/2007/07/09/wp-theme-lesson-14-footer-and-dividing-index/\">WordPress 主题教程 #14：底部和拆分 Index</a></li>\r\n	<li><a title=\"WordPress 主题教程 #15：子模板文件\" href=\"http://blog.wpjam.com/2007/07/11/wp-theme-lesson-15-sub-template-files/\">WordPress 主题教程 #15：子模板文件</a></li>\r\n	<li><a title=\"WordPress 主题教程 #16：留言模板\" href=\"http://blog.wpjam.com/2007/07/13/wp-theme-lesson-16-comments-template/\">WordPress 主题教程 #16：留言模板</a></li>\r\n	<li><a title=\"erdaoo 的 WP Theme 教程学习笔记\" href=\"http://blog.wpjam.com/2007/07/20/wp-theme-tutorial-learning-notes-by-erdaoo/\">erdaoo 的 WP Theme 教程学习笔记</a></li>\r\n	<li><a title=\"WordPress 主题教程电子书下载\" href=\"http://blog.wpjam.com/article/wordpress-theme-tutorials-ebook/\">WordPress 主题教程电子书下载</a></li>\r\n</ul>','1374308158','1374442890','','1','0','0','498','620');
INSERT INTO `post` VALUES('99','2','[{\"id\":24,\"name\":\"php\"},{\"id\":33,\"name\":\"异常\"}]','register_shutdown_function 函数详解','','yanue','','','<p>php开发测试及线上的时候可以根据不同情况设定错误和异常处理需要用到有<br /></p><h2>设定错误和异常处理三函数</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">register_shutdown_function(array(‘Debug’,\'fatalError’)); //定义PHP程序执行完成后执行的函数\nset_error_handler(array(‘Debug’,\'appError’)); // 设置一个用户定义的错误处理函数\nset_exception_handler(array(‘Debug’,\'appException’)); //自定义异常处理。</pre><p>下面讲一下register_shutdown_function() 函数.<br /></p><p></p><p><strong><span>功能</span>:</strong>register_shutdown_function() 函数可实现当程序执行完成后执行的函数，<span>其功能为可实现程序执行完成的后续操作</span>。程序在运行的时候可能存在执行超时，或强制关闭等情况，但这种情况下默认的提示是非常不友好的，如果使用register_shutdown_function()函数捕获异常，就能提供更加友好的错误展示方式，同时可以实现一些功能的后续操作，如执行完成后的临时数据清理，包括临时文件等。</p><h2>可以这样理解调用条件：</h2><p>1、当页面被用户强制停止时</p><p>2、当程序代码运行超时时</p><p>3、当ＰＨＰ代码执行完成时，代码执行存在异常和错误、警告</p><h2>实例说明</h2><p>1. 一个简介的例子 ， 调用一个函数</p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?php\nfunction test() {\n    echo &quot;test()&quot;;\n}\nregister_shutdown_function(array(&quot;test&quot;));\necho &quot;show: &quot;;\n?&gt;</pre><p></p><p></p><p>这个例子输出 &nbsp;</p><pre class=\"prettyprint linenums prettyprinted lang-php \"> show: test()    </pre> 这个函数的作用就是在退出脚本前，调用已经注册的函数，并执行该函数。<p></p><p>2. 在类中用一个数组作为一个参数</p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?php\n    class ClassDemo {\n        public function __construct() {\n            register_shutdown_function(array($this, &quot;f&quot;));\n        }\n \n        public function f() {\n            echo &quot;f()&quot;;\n        }\n    }\n \n    $demo = new ClassDemo();\n    echo &quot;before &lt;/br&gt;&quot;;\n?&gt;</pre><p>输出：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">before\nf()</pre><p></p><p>3. 带有参数的例子：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?php\nfunction f($str) {\n        echo $str.&quot;&lt;br&gt;&quot;;\n}\n \nregister_shutdown_function(&quot;f&quot;,&quot;hello&quot;);\n\n    class ClassDemo {\n        public function __construct() {\n            register_shutdown_function(array($this, &quot;f&quot;),&quot;hello&quot;);\n        }\n \n        public function f($str) {\n            echo &quot;f():&quot;.$str;\n        }\n    }\n \n   $demo = new ClassDemo();\n   echo &quot;before &lt;/br&gt;&quot;;   \n?&gt;</pre><p></p><h2>注意事项</h2><div>1，register_shutdown_function()函数可重复调用，但执行的顺序与注册的顺序相同<br />2，如果在调用register_shutdown_function()函数之前有exit()函数调用，register_shutdown_function()函数将不能执行<br />3，PHP4后支持注册函数参数传递<br />4，在某些服务端，如Apache，当前目录在register_shutdown_function()函数中能够改变<br />5，register_shutdown_function()函数执行在headers发送之后</div>','1374439284','1394726845','','1','0','0','990','627');
INSERT INTO `post` VALUES('100','2','[{\"id\":32,\"name\":\"内存\"},{\"id\":24,\"name\":\"php\"}]','PHP获取当前内存memory_get_usage函数','','yanue','','','<p>PHP性能优化过程中避免不了需要获取PHP内存消耗，使用memory_get_usage()函数可获取当前的内存消耗情况，函数使用简单</p><p>下面以示例的形式介绍下使用 memory_get_usage() 函数获取当前PHP内存消耗量的用法。</p><h2>&nbsp;memory_get_usage() 函数</h2><p>一，函数原型</p><p>int memory_get_usage ([ bool $real_usage=false ] )</p><p>二，版本兼容</p><p>PHP 4 &gt;= 4.3.2,PHP 5</p><p>三，基础用法与实例</p><p>1，获取当前的内存消耗量</p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?php\necho memory_get_usage();\n$var=str_repeat(&quot;www.yanue.net&quot;,10000);\necho \' \'.memory_get_usage();\nunset($var);\necho \' \'.memory_get_usage();\n?&gt;</pre><p></p><p>结果输出：315144 445232 315144</p><p>说明：memory_get_usage() 函数输出的数值为 bytes 单位</p><p>2，格式化 memory_get_usage() 结果以 KB 为单位输出</p><pre class=\"prettyprint linenums prettyprinted lang-php \">function convertSize($size){\n        $unit=array(\'byte\',\'kb\',\'mb\',\'gb\',\'tb\',\'pb\');\n        return round($size/pow(1024,($i=floor(log($size,1024)))),2).\' \'.$unit[$i];\n}</pre><p>3，自定义函数获取数组或变量值大小</p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?php\nfunction array_size($arr){\n    ob_start();\n    print_r($arr);\n    $mem=ob_get_contents();\n    ob_end_clean();\n    $mem=preg_replace(&quot;/n +/&quot;,&quot;&quot;,$mem);\n    $mem=strlen($mem);\n    return $mem;\n}\n$memEstimate=array_size($GLOBALS);\n?&gt;</pre><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">可以看出，要想减少内存的占用，可以使用 PHP unset() 函数把不再需要使用的变量删除。类似的还有：PHP mysql_free_result() 函数，可以清空不再需要的查询数据库得到的结果集，这样也能得到更多可用内存。</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">PHP memory_get_usage()还可以有个参数，$real_usage，其值为布尔值。默认为 FALSE，表示得到的内存使用量不包括该函数（PHP 内存管理器）占用的内存；当设置为 TRUE 时，得到的内存为包括该函数（PHP 内存管理器）占用的内存。</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">所以在实际编程中，可以用PHP memory_get_usage()比较各个方法占用内存的高低，来选择使用哪种占用内存小的方法。</p><p></p><p><span>另外:</span></p><p>比较有用的php内存函数:memory_get_peak_usage() 可以获取php运行过程由PHP分配的内存高峰.</p><p>查看手册:&nbsp;<a href=\"http://php.net/manual/en/function.memory-get-usage.php\">http://php.net/manual/en/function.memory-get-usage.php</a></p><a href=\" http://php.net/manual/en/function.memory-get-usage.php\"></a>','1374440433','1394726343','','1','0','0','531','636');
INSERT INTO `post` VALUES('101','2','[{\"id\":24,\"name\":\"php\"},{\"id\":31,\"name\":\"url\"}]','php获取当前页面完整url','','yanue','','','<p>项目开发过程中经常需要用到当前页面完整url和baseUrl等进行url跳转操作.</p><p>前面已经讲过:<a title=\"php获取网站基础路径baseUrl的两种方法\" href=\"http://yanue.net/post-50.html\">php获取网站基础路径baseUrl的两种方法</a>.</p><p>下面说明一下</p><p></p><h2>获取当前页面完整路径的方法:</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?php\nfunction getFullUrl(){\n    # 解决通用问题\n    $requestUri = \'\';\n    if (isset($_SERVER[\'REQUEST_URI\'])) { #$_SERVER[&quot;REQUEST_URI&quot;] 只有 apache 才支持,\n        $requestUri = $_SERVER[\'REQUEST_URI\'];\n    } else {\n        if (isset($_SERVER[\'argv\'])) {\n            $requestUri = $_SERVER[\'PHP_SELF\'] .\'?\'. $_SERVER[\'argv\'][0];\n        } else if(isset($_SERVER[\'QUERY_STRING\'])) {\n            $requestUri = $_SERVER[\'PHP_SELF\'] .\'?\'. $_SERVER[\'QUERY_STRING\'];\n        }\n    }\n//    echo $requestUri.\'&lt;br /&gt;\';\n    $scheme = empty($_SERVER[&quot;HTTPS&quot;]) ? \'\' : ($_SERVER[&quot;HTTPS&quot;] == &quot;on&quot;) ? &quot;s&quot; : &quot;&quot;;\n    $protocol = strstr(strtolower($_SERVER[&quot;SERVER_PROTOCOL&quot;]), &quot;/&quot;,true) . $scheme;\n    $port = ($_SERVER[&quot;SERVER_PORT&quot;] == &quot;80&quot;) ? &quot;&quot; : (&quot;:&quot;.$_SERVER[&quot;SERVER_PORT&quot;]);\n    # 获取的完整url\n    $_fullUrl = $protocol . &quot;://&quot; . $_SERVER[\'SERVER_NAME\'] . $port . $requestUri;\n    return $_fullUrl;\n}\n\necho getFullUrl();</pre><p></p><p><strong>注: </strong>由于php没有内置的函数.我们需要对url上的参数进行组合,从而实现整个url.<br /><br /></p>','1374526109','1394725985','','1','0','0','530','666');
INSERT INTO `post` VALUES('102','2','[{\"id\":30,\"name\":\"数组\"},{\"id\":24,\"name\":\"php\"}]','php一维二维数组键之冒泡排序','','yanue','','','<strong></strong><h2><span>php一维二维数组键之冒泡排序</span></h2><p><span><strong>功能:</strong></span>对数组进行重新排序.</p><p><span><strong>说明:</strong></span>冒泡排序 (一维数组)(二维数组某个健排序)</p><p>两两比较待排序数据元素的大小,发现两个数据元素的次序相反时即进行交换,直到没有反序的数据元素为止</p><p>设想被排序的数组R[1..N] 垂直竖立,将每个数据元素看作有重量的气泡,从下往上扫描数组,凡扫描违反原则的轻气泡,就使其向上”漂浮”.如此反复进行.直到最后任何两个气都是轻者在上,重者在下为止.</p><p></p><h2> 冒泡排序 (一维数组)(二维数组某个健排序)	</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">/**\n     * 冒泡排序 (一维数组)(二维数组某个健排序)\n     * 两两比较待排序数据元素的大小,发现两个数据元素的次序相反时即进行交换,直到没有反序的数据元素为止\n     * 设想被排序的数组R[1..N] 垂直竖立,将每个数据元素看作有重量的气泡,从下往上扫描数组,凡扫描违反原则的轻气泡,就使其向上&quot;漂浮&quot;.如此反复进行.\n     * 直到最后任何两个气都是轻者在上,重者在下为止.\n     */\n\nfunction bubble_sort($array,$key=null) {\n        $count = count($array);\n        if($count &lt; 0) {\n            return false;\n        }\n        for($i = 0; $i &lt; $count; $i++) {\n            for($j = $count - 1; $j &gt; $i; $j--) {\n                if($key &amp;&amp; isset($array[$key])){//二维数组健存在\n                    if($array[$j][$key] &lt; $array[$j - 1][$key]) {\n                        $tmp = $array[$j];\n                        $array[$j] = $array[$j - 1];\n                        $array[$j - 1] = $tmp;\n                    }\n                }else{ //一维数组\n                    if($array[$j] &lt; $array[$j - 1]) {\n                        $tmp = $array[$j];\n                        $array[$j] = $array[$j - 1];\n                        $array[$j - 1] = $tmp;\n                    }\n                }\n            }\n        }\n        return $array;\n    }</pre><br /><p></p><p><br /></p>','1374526741','1394725802','','1','0','1','539','676');
INSERT INTO `post` VALUES('103','2','[{\"id\":29,\"name\":\"ip\"},{\"id\":24,\"name\":\"php\"}]','php读取操作IP地址数据库文件QQWry.dat','','yanue','','','<p>我们统计流量的时候需要可以获取用户ip,根据用户ip之后可以通过纯ip真数据库QQWry.dat,获取出用户IP 所在的地理位置,这样可以做出更有意义的统计信息.&nbsp;QQWry.dat请自行搜索下载.</p><p>下面看下如何解析QQWry.dat文件:</p><h2>首先看看<span>QQWry.Data文件的内容结构</span>&nbsp;，以及<span>解读方式</span>&nbsp;。</h2><p>一、<span>文件结构</span><br />文件主要分三个结构<br />1、文件头，8个字节；<br />2、数据记录区，不定长度；<br />3、索引区，长度为&nbsp;7&nbsp;的整数倍；</p><p>二、<span>文件头</span><br />文件头的8个字节分两部分，每个部分4个字节，分别指定了索引区的开始地址和结束地址。所以可以通过两个地址的差值&nbsp;除&nbsp;7&nbsp;后&nbsp;加&nbsp;1&nbsp;可以计算出总的记录数。</p><p>二、<span>记录区</span><br />记录区的数据需要通过索引区的数据来获得各个数据的起始位置；本区数据记录了IP地址的结束地址和地区字符串；所有地区字符串都以&nbsp;0×00&nbsp;为结束。</p><p>三、<span>索引区</span><br />检索IP对应的地区，关键就是找到IP起始地址对应的索引内容。一个IP索引数据包含7个字节，前4个字节是IP地址起始值，后3个字节是对应的IP数据&nbsp;记录在文件内的偏移地址；IP数据记录中，前&nbsp;4&nbsp;个字节是IP结束地址；紧跟的数据有两种模式:&nbsp;0×01&nbsp;模式&nbsp;和&nbsp;0×02&nbsp;模式。</p><p>0×01模式，即在IP数据的第5个字节是&nbsp;0×01，则在后面的&nbsp;3&nbsp;个字节是国家地区数据的偏移地址；国家地区数据包括国家和地区这两个字符串。即<br />—————————————————————<br />4字节&nbsp;|&nbsp;3字节&nbsp;重定向&nbsp;0x&nbsp;NN&nbsp;NN&nbsp;NN&nbsp;-&gt;&nbsp;国家地区数据的文件偏移地址<br />—————————————————————</p><p>0×02模式，即在IP数据的第5个字节是&nbsp;0×02，则在后面的&nbsp;3&nbsp;个字节是国家数据的偏移地址，地区数据是再往后的字符串，以&nbsp;0×00&nbsp;截至。即<br />—————————————————————————–<br />4字节&nbsp;|&nbsp;3字节&nbsp;重定向&nbsp;0x&nbsp;NN&nbsp;NN&nbsp;NN&nbsp;-&gt;&nbsp;国家数据的文件偏移地址&nbsp;|&nbsp;地区字符串&nbsp;|&nbsp;0×00<br />—————————————————————————–</p><p>对于&nbsp;0×01&nbsp;模式所得到的&nbsp;国家地区数据中，它可能又带有一个重定向结构，即<br />————————————–<br />国家字符串&nbsp;|&nbsp;0×00&nbsp;|&nbsp;地区字符串&nbsp;|&nbsp;0×00<br />————————————–<br />或<br />————————————————————————-<br />国家字符串&nbsp;|&nbsp;0×00&nbsp;|&nbsp;0×02&nbsp;|&nbsp;3字节&nbsp;0x&nbsp;NN&nbsp;NN&nbsp;NN&nbsp;-&gt;&nbsp;地区字符串的文件偏移地址<br />————————————————————————-</p><p>对于前一种情况，比较简单，直接读出两个字符串数据就可以了；对于后一种情况，需要再次重定向到地区字符串的偏移地址，然后读取到&nbsp;0×00&nbsp;为字符串结尾。</p><p>对于这种采取地址映射实际字符串值的方式，主要作用是避免重复记录字符串值。在整个IP地址库文件中，有太多相同字符串记录了，采用&nbsp;3&nbsp;字节的映射地址要比重复记录字符串值节省太多空间了。</p><h2>IP 地理位置查询类</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?php\n\n/**\n * IP 地理位置查询类\n *\n * @author 马秉尧\n * @version 1.5\n * @copyright 2005 CoolCode.CN\n */\nclass IpLocation {\n    /**\n     * QQWry.Dat文件指针\n     * @var resource\n     */\n    var $fp;\n    /**\n     * 第一条IP记录的偏移地址\n     * @var int\n     */\n    var $firstip;\n    /**\n     * 最后一条IP记录的偏移地址\n     * @var int\n     */\n    var $lastip;\n    /**\n     * IP记录的总条数（不包含版本信息记录）\n     * @var int\n     */\n    var $totalip;\n    /**\n     * 构造函数，打开 QQWry.Dat 文件并初始化类中的信息\n     * @param string $filename\n     * @return IpLocation\n     */\n    function __construct($filename = &quot;qqwry.dat&quot;) {\n        $this-&gt;fp = 0;\n        if (($this-&gt;fp = @fopen($filename, \'rb\')) !== false) {\n            $this-&gt;firstip = $this-&gt;getlong();\n            $this-&gt;lastip = $this-&gt;getlong();\n            $this-&gt;totalip = ($this-&gt;lastip - $this-&gt;firstip) / 7;\n//注册析构函数，使其在程序执行结束时执行\n            register_shutdown_function(array(&amp;$this, \'__construct\'));\n        }\n    }\n    /**\n     * 返回读取的长整型数\n     * @access private\n     * @return int\n     */\n    function getlong() {\n//将读取的little-endian编码的4个字节转化为长整型数\n        $result = unpack(\'Vlong\', fread($this-&gt;fp, 4));\n        return $result[\'long\'];\n    }\n    /**\n     * 返回读取的3个字节的长整型数\n     *\n     * @access private\n     * @return int\n     */\n    function getlong3() {\n//将读取的little-endian编码的3个字节转化为长整型数\n        $result = unpack(\'Vlong\', fread($this-&gt;fp, 3).chr(0));\n        return $result[\'long\'];\n    }\n    /**\n     * 返回压缩后可进行比较的IP地址\n     *\n     * @access private\n     * @param string $ip\n     * @return string\n     */\n    function packip($ip) {\n// 将IP地址转化为长整型数，如果在PHP5中，IP地址错误，则返回False，\n// 这时intval将Flase转化为整数-1，之后压缩成big-endian编码的字符串\n        return pack(\'N\', intval(ip2long($ip)));\n    }\n    /**\n     * 返回读取的字符串\n     *\n     * @access private\n     * @param string $data\n     * @return string\n     */\n    function getstring($data = &quot;&quot;) {\n        $char = fread($this-&gt;fp, 1);\n        while (ord($char) &gt; 0) { // 字符串按照C格式保存，以结束\n            $data .= $char; // 将读取的字符连接到给定字符串之后\n            $char = fread($this-&gt;fp, 1);\n        }\n        return $data;\n    }\n    /**\n     * 返回地区信息\n     *\n     * @access private\n     * @return string\n     */\n    function getarea() {\n        $byte = fread($this-&gt;fp, 1); // 标志字节\n        switch (ord($byte)) {\n            case 0: // 没有区域信息\n                $area = &quot;&quot;;\n                break;\n            case 1:\n            case 2: // 标志字节为1或2，表示区域信息被重定向\n                fseek($this-&gt;fp, $this-&gt;getlong3());\n                $area = $this-&gt;getstring();\n                break;\n            default: // 否则，表示区域信息没有被重定向\n                $area = $this-&gt;getstring($byte);\n                break;\n        }\n        return $area;\n    }\n    /**\n     * 根据所给 IP 地址或域名返回所在地区信息\n     * @access public\n     * @param string $ip\n     * @return array\n     */\n    function getlocation($ip) {\n        if (!$this-&gt;fp) return null; // 如果数据文件没有被正确打开，则直接返回空\n        $location[\'ip\'] = gethostbyname($ip); // 将输入的域名转化为IP地址\n        $ip = $this-&gt;packip($location[\'ip\']); // 将输入的IP地址转化为可比较的IP地址\n// 不合法的IP地址会被转化为255.255.255.255\n// 对分搜索\n        $l = 0; // 搜索的下边界\n        $u = $this-&gt;totalip; // 搜索的上边界\n        $findip = $this-&gt;lastip; // 如果没有找到就返回最后一条IP记录（QQWry.Dat的版本信息）\n        while ($l &lt;= $u) { // 当上边界小于下边界时，查找失败\n            $i = floor(($l + $u) / 2); // 计算近似中间记录\n            fseek($this-&gt;fp, $this-&gt;firstip + $i * 7);\n            $beginip = strrev(fread($this-&gt;fp, 4)); // 获取中间记录的开始IP地址\n// strrev函数在这里的作用是将little-endian的压缩IP地址转化为big-endian的格式\n// 以便用于比较，后面相同。\n            if ($ip &lt; $beginip) { // 用户的IP小于中间记录的开始IP地址时\n                $u = $i - 1; // 将搜索的上边界修改为中间记录减一\n            }\n            else {\n                fseek($this-&gt;fp, $this-&gt;getlong3());\n                $endip = strrev(fread($this-&gt;fp, 4)); // 获取中间记录的结束IP地址\n                if ($ip &gt; $endip) { // 用户的IP大于中间记录的结束IP地址时\n                    $l = $i + 1; // 将搜索的下边界修改为中间记录加一\n                }\n                else { // 用户的IP在中间记录的IP范围内时\n                    $findip = $this-&gt;firstip + $i * 7;\n                    break; // 则表示找到结果，退出循环\n                }\n            }\n        }\n//获取查找到的IP地理位置信息\n        fseek($this-&gt;fp, $findip);\n        $location[\'beginip\'] = long2ip($this-&gt;getlong()); // 用户IP所在范围的开始地址\n        $offset = $this-&gt;getlong3();\n        fseek($this-&gt;fp, $offset);\n        $location[\'endip\'] = long2ip($this-&gt;getlong()); // 用户IP所在范围的结束地址\n        $byte = fread($this-&gt;fp, 1); // 标志字节\n        switch (ord($byte)) {\n            case 1: // 标志字节为1，表示国家和区域信息都被同时重定向\n                $countryOffset = $this-&gt;getlong3(); // 重定向地址\n                fseek($this-&gt;fp, $countryOffset);\n                $byte = fread($this-&gt;fp, 1); // 标志字节\n                switch (ord($byte)) {\n                    case 2: // 标志字节为2，表示国家信息又被重定向\n                        fseek($this-&gt;fp, $this-&gt;getlong3());\n                        $location[\'country\'] = $this-&gt;getstring();\n                        fseek($this-&gt;fp, $countryOffset + 4);\n                        $location[\'area\'] = $this-&gt;getarea();\n                        break;\n                    default: // 否则，表示国家信息没有被重定向\n                        $location[\'country\'] = $this-&gt;getstring($byte);\n                        $location[\'area\'] = $this-&gt;getarea();\n                        break;\n                }\n                break;\n            case 2: // 标志字节为2，表示国家信息被重定向\n                fseek($this-&gt;fp, $this-&gt;getlong3());\n                $location[\'country\'] = $this-&gt;getstring();\n                fseek($this-&gt;fp, $offset + 8);\n                $location[\'area\'] = $this-&gt;getarea();\n                break;\n            default: // 否则，表示国家信息没有被重定向\n                $location[\'country\'] = $this-&gt;getstring($byte);\n                $location[\'area\'] = $this-&gt;getarea();\n                break;\n        }\n        if ($location[\'country\'] == &quot; CZ88.NET&quot;) { // CZ88.NET表示没有有效信息\n            $location[\'country\'] = &quot;未知&quot;;\n        }\n        if ($location[\'area\'] == &quot; CZ88.NET&quot;) {\n            $location[\'area\'] = &quot;&quot;;\n        }\n        return $location;\n    }\n    /**\n     * 析构函数，用于在页面执行结束后自动关闭打开的文件。\n     *\n     */\n    function __desctruct() {\n        if ($this-&gt;fp) {\n            fclose($this-&gt;fp);\n        }\n        $this-&gt;fp = 0;\n    }\n}</pre><p></p>','1374612923','1394725624','','1','0','0','861','685');
INSERT INTO `post` VALUES('104','2','[{\"id\":24,\"name\":\"php\"},{\"id\":12,\"name\":\"mysql\"},{\"id\":29,\"name\":\"ip\"}]','IP地址转换为整型数字的PHP方法,mysql方法','','yanue','','','<p>IP地址转换为整型数字的PHP方法,mysql方法<br /></p><h2>转换原理</h2><p>假设IP为：w.x.y.z，则IP地址转为整型数字的计算公式为：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">intIP = 256*256*256*w + 256*256*x + 256*y + z</pre><p></p><h2>PHP的互转</h2><div>PHP的转换方式比较简单，它内置了两个函数</div><div><pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">int ip2long ( string $ip_address ) //ip转换成整型数值\nstring long2ip ( string $proper_address ) // 整型数值转换成ip</pre></pre></div><h2>MySQL的互转</h2><div>相对于MsSQL来说MySQL的转换方式比较简单，它和PHP一样也内置了两个函数&nbsp;<div>IP 转为整型:&nbsp;<pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \"> select INET_ATON (IP地址)</pre></pre>整型数值转换成IP<pre><pre class=\"prettyprint linenums prettyprinted lang-php \">select INET_NTOA ( IP的整型数值 )</pre><br /></pre></div></div>','1374613471','1394725393','','1','0','0','711','690');
INSERT INTO `post` VALUES('105','7','[{\"id\":28,\"name\":\"html5\"}]','HTML5新增标签及简介(全)','','yanue','','','<p>作为下一代Web技术的代表，HTML5概念在近些年尤其火热。据了解，HTML5受到垂青最直接的原因就是其跨平台性，除此之外，它不仅仅可以用于表示Web内容，还可能将Web带入一个广阔的生态平台。</p><h2>下面介绍html5中新增标签:</h2><div>&lt;<span>article</span>&gt;&nbsp;标记定义一篇文章<br />&lt;<span>aside</span>&gt;&nbsp;标记定义页面内容部分的侧边栏<br />&lt;<span>audio</span>&gt;&nbsp;标记定义音频内容<br />&lt;<span>canvas</span>&gt;&nbsp;标记定义图片<br />&lt;<span>command</span>&gt;&nbsp;标记定义一个命令按钮<br />&lt;<span>datalist</span>&gt;&nbsp;标记定义一个下拉列表<br />&lt;<span>details</span>&gt;&nbsp;标记定义一个元素的详细内容<br />&lt;<span>dialog</span>&gt;&nbsp;标记定义一个对话框(会话框)<br />&lt;<span>embed</span>&gt;&nbsp;标记定义外部的可交互的内容或插件<br />&lt;<span>figure</span>&gt;&nbsp;标记定义一组媒体内容以及它们的标题&lt;footer&gt;&nbsp;标记定义一个页面或一个区域的底部<br />&lt;<span>header</span>&gt;&nbsp;标记定义一个页面或一个区域的头部<br />&lt;<span>hgroup</span>&gt;&nbsp;标记定义文件中一个区块的相关信息<br />&lt;<span>keygen</span>&gt;&nbsp;标记定义表单里一个生成的键值<br />&lt;<span>mark</span>&gt;&nbsp;标记定义有标记的文本<br />&lt;<span>meter</span>&gt;&nbsp;标记定义 measurement within a&nbsp;predefined range<br />&lt;<span>nav</span>&gt;&nbsp;标记定义导航链接<br />&lt;<span>output</span>&gt;&nbsp;标记定义一些输出类型<br />&lt;<span>progress</span>&gt;&nbsp;标记定义任务的过程<br />&lt;<span>rp</span>&gt;&nbsp;标记是用在Ruby annotations 告诉那些不支持 Ruby元素的浏览器如何去显示<br />&lt;<span>rt</span>&gt;&nbsp;标记定义对ruby&nbsp;annotations的解释<br />&lt;<span>ruby</span>&gt;&nbsp;标记定义 ruby annotations.<br />&lt;<span>section</span>&gt;&nbsp;标记定义一个区域<br />&lt;<span>source</span>&gt;&nbsp;标记定义媒体资源<br />&lt;<span>time</span>&gt;&nbsp;标记定义一个日期/时间<br />&lt;<span>video</span>&gt;&nbsp;标记定义一个视频</div><p>html5中废弃标签及属性见：<a title=\"HTML5废弃的标签及属性\" href=\"http://yanue.net/post-106.html\">HTML5废弃的标签及属性</a></p><p>另附上直观的：<a title=\"html5元素周期表\" href=\"http://demo.yanue.net/HTML5element/\" target=\"_blank\">html5元素周期表</a></p>','1374650046','1394725208','','1','0','0','538','697');
INSERT INTO `post` VALUES('106','7','[{\"id\":\"28\",\"name\":\"html5\"}]','HTML5废弃的标签及属性','','yanue','','','HTML5在引入新标签（见：<a title=\"HTML5新增标签及简介(全)\" href=\"http://yanue.net/post-105.html\">HTML5新增标签及简介(全)</a>）的同时，废弃了不少常见元素，大抵分为如下几类。<h2>第一类：表现性元素</h2><ul><li>basefont</li><li>big</li><li>center</li><li>font</li><li>s</li><li>strike</li><li>tt</li><li>u</li></ul>建议用语义正确的元素代替他们，并使用CSS来确保渲染后的效果<h2>第二类：框架类元素</h2>因框架有很多可用性及可访问性问题，HTML5规范将以下元素移除。<ul><li>frame</li><li>frameset</li><li>noframes</li></ul>但html5支持iframe。<h2>第三类:属性类</h2>很多表现性的属性也被新规范移除，如下：<ul><li>align</li><li>body标签上的link、vlink、alink、text属性</li><li>bgcolor</li><li>height和width</li><li>iframe元素上的scrolling属性</li><li>valign</li><li>hspace和vspace</li><li>table标签上的cellpadding、cellspacing和border属性</li><li>header标签上的profile属性</li><li>链接标签a上的target属性</li><li>img和iframe元素的longdesc属性</li></ul><h2>第四类：其他</h2><ul><li>abbr取代acronym（用于表示缩写）</li><li>object取代了applet</li><li>ul取代了dir</li></ul>另附上直观的：<a title=\"html5元素周期表\" href=\"http://demo.yanue.net/HTML5element/\" target=\"_blank\">html5元素周期表</a>','1374650674','1394725028','','1','0','0','669','700');
INSERT INTO `post` VALUES('107','2','[{\"id\":9,\"name\":\"ajax\"},{\"id\":24,\"name\":\"php\"}]','PHP判断ajax请求:HTTP_X_REQUESTED_WITH','','yanue','','','有时我们需要判断是不是ajax请求来决定模块输出还是json格式输出.<h2>PHP判断ajax请求的原理:</h2><p>在发送ajax请求的时候，我们可以通过XMLHttpRequest这个对象，创建自定义的header头信息，&nbsp;在jquery框架中，对于通过它的$.ajax, $.get, or $.post方法请求网页内容时，它会向服务器传递一个HTTP_X_REQUESTED_WITH的参数，php中就是在header一层判断是否是ajax请求，对应的根据$_SERVER[\'HTTP_X_REQUESTED_WITH\']判断。<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">/**\n  * 当前请求是否ajax请求\n  *\n  * @access public\n  * @return bool\n  */\n function isAjax()\n {\n     return isset($_SERVER[\'HTTP_X_REQUESTED_WITH\']) &amp;&amp; strtolower($_SERVER[\'HTTP_X_REQUESTED_WITH\']) == \'XMLHttpRequest\';\n }</pre><h4>注意:</h4><ul><li>一般情况下$_SERVER[\'HTTP_X_REQUESTED_WITH\']默认是XMLHttpRequest</li><li>$_SERVER[\'HTTP_X_REQUESTED_WITH\']也可以自定义创建的，使用XMLHttpRequest.setRequestHeader(name,value);参考文章：<a href=\"http://www.skygq.com/2011/01/04/php-check-request-from-ajax-or-normal/\" target=\"_blank\" rel=\"nofollow\">http://www.skygq.com/2011/01/04/php-check-request-from-ajax-or-normal/</a></li></ul><h2>PHP判断AJAX请求时跨域问题:</h2><p>如果是跨域的话这个，上面的isAjax就完全不正确了。跨域同域的问题参考:《<a href=\"http://www.php10086.com/2011/12/292.html\">$.getjson遇到的几个问题</a>》使用<a href=\"http://www.php10086.com/2011/12/292.html\" target=\"_blank\">$.getJSON</a>来实现跨域，但是检测是否是ajax一直是false，并尝试$get（参看：<a href=\"http://www.php10086.com/2012/07/843.html\">$.get实现返回解析json数据以及jsonp跨域</a>）之后无果的之后，考虑要使用万能的$ajax方法，见ajax的文档：</p><p>如果指定了script或者jsonp类型，那么当从服务器接收到数据时，实际上是用了&lt;script&gt;标签而不是 XMLHttpRequest对象。这种情况下，$.ajax()不再返回一个XMLHttpRequest对象，并且也不会传递事件处理函数，比如 beforeSend。</p><h4>解释:</h4><p>ajax跨域只能指定jsonp格式的数据，这个是就不是XMLHttpRequest对象了，就算你自定义一个$_SERVER[\'HTTP_X_REQUESTED_WITH\']也是没有意义的<br /></p><h4>解决的办法：</h4><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">针对跨域情况的getjson 或者ajax(jsonp)可以使用ACCEPT请求头部格式来判断</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">PHP端对应$_SERVER[\'HTTP_ACCEPT\']</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">jsonp的请求一般是：text/javascript, application/javascript, */*</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">json的请求：application/json, text/javascript, */*</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">一个简单的判断跨域条件下的ajax请求：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">switch ($_SERVER[\'HTTP_ACCEPT\']){  \n    case \'application/json, text/javascript, */*\':  \n        //  JSON 格式  \n        break;  \n    case \'text/javascript, application/javascript, */*\':  \n        // javascript 或 JSONP 格式  \n        break;  \n    case \'text/html, */*\':  \n        //  HTML 格式  \n        break;  \n    case \'application/xml, text/xml, */*\':  \n        //  XML 格式  \n        break;  \n}\n</pre><pre class=\"lang:php decode:true\"></pre>','1374793643','1394724964','','1','0','0','1423','711');
INSERT INTO `post` VALUES('108','2','[{\"id\":\"27\",\"name\":\"exception\"},{\"id\":24,\"name\":\"php\"}]','set_exception_handler 和 set_error_handler 函数','','yanue','','','<p>php开发测试及线上的时候可以根据不同情况设定错误和异常处理，需要用到以下三函数<br /></p><h2><span style=\"text-indent: 28px;\">php设定错误和异常处理</span>三函数:</h2><span>register_shutdown_function</span>(array(‘Debug’,’fatalError’)); //定义PHP程序执行完成后执行的函数<br /><span>set_error_handler</span>(array(‘Debug’,’appError’)); // 设置一个用户定义的错误处理函数<br /><span>set_exception_handler</span>(array(‘Debug’,’appException’)); //自定义异常处理。<p></p><p>其中前面已经说过了这个函数:&nbsp;<a title=\"register_shutdown_function 函数详解\" href=\"http://yanue.net/post-99.html\">register_shutdown_function 函数详解</a></p><h2>set_exception_handler定义和用法</h2><p>set_exception_handler() 函数设置用户自定义的异常处理函数。</p><p>该函数用于创建运行时期间的用户自己的异常处理方法。</p><p>该函数会返回旧的异常处理程序，若失败，则返回 null。</p><h3>语法<pre class=\"prettyprint linenums prettyprinted lang-php \">set_exception_handler(exception_function)</pre></h3><table><tbody><tr><th>参数</th><th>描述</th></tr><tr><td>error_function</td><td>必需。规定未捕获的异常发生时调用的函数。该函数必须在调用 set_exception_handler() 函数之前定义。这个异常处理函数需要需要一个参数，即抛出的 exception 对象。</td></tr></tbody></table><h2>例子：</h2><div><div id=\"highlighter_681021\"><div><pre class=\"prettyprint linenums prettyprinted lang-php \">function exceptionHandler($exception) {\n\n    $errmsg = &quot;[&quot;.date(&quot;Y-m-d H:i:s&quot;).&quot;] &quot;.$exception-&gt;getMessage().&quot;n&quot;;\n    $errmsg .= &quot;REQUEST: &quot;.print_r($_REQUEST, true).&quot;n&quot;;\n    $errmsg .= &quot;Server: &quot;.print_r($_SERVER[\'REQUEST_URI\'], true).&quot;n&quot;;\n\n    error_log($errmsg, 3, ERROR_LOG);\n\n}\nset_exception_handler(\'exceptionHandler\');</pre></div><h2>set_error_handler定义和用法</h2></div></div>set_error_handler() 函数设置用户自定义的错误处理函数。该函数用于创建运行时期间的用户自己的错误处理方法。该函数会返回旧的错误处理程序，若失败，则返回 null。<h3>语法<pre class=\"prettyprint linenums prettyprinted lang-php \">set_error_handler(error_function,error_types)</pre></h3><table><tbody><tr><th>参数</th><th>描述</th></tr><tr><td>error_function</td><td>必需。规定发生错误时运行的函数。</td></tr><tr><td>error_types</td><td>可选。规定在哪个错误报告级别会显示用户定义的错误。默认是 &quot;E_ALL&quot;。</td></tr></tbody></table><div><h2>提示和注释</h2>提示：如果使用了该函数，会完全绕过标准的 PHP 错误处理函数，如果必要，用户定义的错误处理程序必须终止 (die() ) 脚本。注释：如果在脚本执行前发生错误，由于在那时自定义程序还没有注册，因此就不会用到这个自定义错误处理程序。&nbsp;<h2>例子：</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">function errorHandler($errno, $errstr, $errfile, $errline) {\n\n    $errmsg = &quot;[&quot;.date(&quot;Y-m-d H:i:s&quot;).&quot;] [{$errno}] {$errstr}n&quot;;\n    $errmsg .= &quot;Error on line {$errline} in {$errfile}nn&quot;;\n    $errmsg .= &quot;REQUEST: &quot;.print_r($_REQUEST, true).&quot;n&quot;;\n    $errmsg .= &quot;Server: &quot;.print_r($_SERVER[\'REQUEST_URI\'], true).&quot;n&quot;;\n\n    error_log($errmsg, 3, ERROR_LOG);\n\n    die();\n}\nset_error_handler(&quot;errorHandler&quot;);</pre></div>','1374795713','1394724718','','1','0','0','842','717');
INSERT INTO `post` VALUES('109','0','\"\"','各大搜索引擎网站登录入口','','yanue','','','	百度搜索网站登录口：<a href=\"http://www.baidu.com/search/url_submit.html\" target=\"_black\">http://www.baidu.com/search/url_submit.html</a><br />谷歌Google提交入口：<a href=\"http://www.google.com/addurl\" target=\"_black\">http://www.google.com/addurl</a><br />搜狗网站收录提交入口:<a href=\"http://www.sogou.com/feedback/urlfeedback.php\" target=\"_black\">:http://www.sogou.com/feedback/urlfeedback.php</a><br />SOSO搜搜网站收录提交入口:<a href=\"http://www.soso.com/help/usb/urlsubmit.shtml\" target=\"_black\">http://www.soso.com/help/usb/urlsubmit.shtml</a><br />雅虎中国网站登录口：<a href=\"http://search.help.cn.yahoo.com/h4_4.html\" target=\"_black\">http://search.help.cn.yahoo.com/h4_4.html</a><br />网易有道搜索引擎登录口：<a href=\"http://tellbot.youdao.com/report\" target=\"_black\">http://tellbot.youdao.com/report</a><br />MSN必应网站登录口：<a href=\"http://cn.bing.com/docs/submit.aspx?FORM=WSDD2\" target=\"_black\">http://cn.bing.com/docs/submit.aspx?FORM=WSDD2</a><br />TOM搜索网站登录口：<a href=\"http://search.tom.com/tools/weblog/log.php\" target=\"_black\">http://search.tom.com/tools/weblog/log.php</a><br />新浪登录口（收费）：<a href=\"http://bizsite.sina.com.cn/newbizsite/docc/index-2jifu-03.htm\" target=\"_black\">http://bizsite.sina.com.cn/newbizsite/docc/index-2jifu-03.htm</a><br />蚁搜搜索网站登录口：<a href=\"http://www.antso.com/apply.asp\" target=\"_black\">http://www.antso.com/apply.asp</a><br />快搜搜索网站登录口：<a href=\"http://www.kuaisou.com/main/inputweb.asp\" target=\"_black\">http://www.kuaisou.com/main/inputweb.asp</a><br />至于360,我不说了.','1377025031','1394724242','','1','0','1','387','759');
INSERT INTO `post` VALUES('110','11','[{\"id\":26,\"name\":\"fcitx\"},{\"id\":13,\"name\":\"ubuntu\"}]','Linux下fcitx安装谷歌搜狗输入法','','yanue','','','<p>搜狗输入法 for Linux 是基于Fcitx 框架（fcitx-sogoupinyin）。</p><p>安装环境为Ubuntu 13.04</p><h2>安装过程：</h2><p>卸载Ubuntu默认的ibus输入法：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo apt-get remove ibus</pre><p>然后添加Fcitx 源：<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo add-apt-repository ppa:fcitx-team/nightly\nsudo apt-get update</pre><p>然后 安装fcitx，搜狗输入法，Google输入法，以及设置fcitx为默认:<br /></p><pre class=\"crayon-selected\"><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo apt-get install fcitx fcitx-config-gtk fcitx-googlepinyin fcitx-sogoupinyin</pre></pre><p>这里可以安装很多输入法，根据你自己的需要：fcitx-sunpinyin fcitx-module-cloudpinyin默认没有安装im-switch 自己安装一个<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo apt-get install im-switch\nim-switch -s fcitx -z default\nsudo apt-get install fcitx-config-gtk</pre><p>完成之后注销或重起即可！<br /></p><p><a href=\"http://www.yanue.net/wp-content/uploads/2013/08/sogou2.png\"><img alt=\"搜狗输入法for linux\" src=\"http://www.yanue.net/wp-content/uploads/2013/08/sogou2.png\" width=\"500\" /></a></p><p></p><h2 style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\"><span style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">附带几个fcitx输入法的热键：</span></h2><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">隐藏显示浮条=CTRL + ALT + H</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">打开/关闭输入法=CTRL_SPACE<br /># 中英文快速切换键 可以设置为L_CTRL R_CTRL L_SHIFT R_SHIFT L_SUPER R_SUPER<br />中英文快速切换键=L_CTRL<br />双击中英文切换=0<br />击键时间间隔=250<br />光标跟随=CTRL_K<br />隐藏主窗口=CTRL_ALT_H<br />切换虚拟键盘=CTRL_ALT_K<br />GBK支持=CTRL_M<br />GBK繁体切换键=CTRL_ALT_F<br />联想=CTRL_L<br />反查拼音=CTRL_ALT_E<br />全半角=SHIFT_SPACE<br />中文标点=ALT_SPACE<br />上一页=-<br />下一页==<br />第二三候选词选择键=SHIFT<br />保存词库=CTRL_ALT_S<br />记录模式=CTRL_ALT_J</p><br /><p><br /></p>','1377112522','1394724119','','1','0','0','732','768');
INSERT INTO `post` VALUES('111','11','[{\"id\":13,\"name\":\"ubuntu\"},{\"id\":12,\"name\":\"mysql\"}]','ubuntu 13.04下编译安装mysql','','yanue','','','<p>安装环境：</p><p>ubuntu 桌面版13.04</p><p>安装版本：</p><p>mysql-5.6.12.tar.gz1.&nbsp;</p><h2>安装必备工具：</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo apt-get install cmake libncurses5-dev  bison g++</pre><h2>2 添加组和用户及安装目录权限</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo groupadd mysql #添加组\nsudo useradd -g mysql mysql -s /bin/false #创建用户mysql并加入到mysql组，不允许mysql用户直接登录系统\nsudo mkdir -p /usr/local/mysql #创建MySQL安装目录\nsudo mkdir -p /usr/local/mysql/data #创建MySQL安装目录\nsudo chown -R mysql:mysql /usr/local/mysql/data #设置MySQL数据库目录权限</pre><h2>3 编译安装ysql</h2><pre><pre class=\"prettyprint linenums prettyprinted lang-php \">cd /usr/local/src  \nsudo wget http://mysql.mirror.kangaroot.net/Downloads/MySQL-5.6/mysql-5.6.12.tar.gz</pre></pre><div>3.1 解压MySQL<pre class=\"prettyprint linenums prettyprinted lang-php \">sudo tar -zxvf mysql-5.6.12.tar.gz</pre>3.2 配置编译<pre class=\"prettyprint linenums prettyprinted lang-php \">sudo cmake -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DSYSCONFDIR=/etc -DMYSQL_UNIX_ADDR=/tmp/mysql.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DEXTRA_CHARSETS=all -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_MEMORY_STORAGE_ENGINE=1 -DWITH_READLINE=1 -DENABLED_LOCAL_INFILE=1 -DMYSQL_DATADIR=/usr/local/mysql/data -DMYSQL_USER=mysql -DWITH_DEBUG=0\nsudo make -j4 #-j 数字 表示以多核心运行\nsudo make install</pre><h2>4.相关设置</h2></div><div>4.1配置开机启动<pre class=\"prettyprint linenums prettyprinted lang-php \">sudo cp ./support-files/my-default.cnf /etc/my.cnf\nsudo cp ./support-files/mysql.server  /etc/init.d/mysqld  #把Mysql加入系统启动\nsudo chmod 755 /etc/init.d/mysqld\nsudo chkconfig mysqld on</pre>4.2常用命令软连接<pre class=\"prettyprint linenums prettyprinted lang-php \">sudo ln -s /usr/local/mysql/bin/mysql /usr/bin\nsudo ln -s /usr/local/mysql/bin/mysqladmin /usr/bin</pre>4.3 初始化数据库<pre class=\"prettyprint linenums prettyprinted lang-php \">sudo /usr/local/mysql/scripts/mysql_install_db --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --skip-name-resolve --user=mysql</pre>4.4 修改配置文件<pre class=\"prettyprint linenums prettyprinted lang-php \">sudo vi /etc/my.cnf</pre>文件末尾增加：<pre class=\"prettyprint linenums prettyprinted lang-php \">#增加默认存储类型和去掉反向解析\ndefault-storage-engine=MyISAM\nskip-name-resolve</pre>如果出现The server quit without updating PID file，请根据创建pid并更改权限775</div>','1377127610','1394723827','','1','0','0','1585','776');
INSERT INTO `post` VALUES('112','11','[{\"id\":25,\"name\":\"nginx\"},{\"id\":13,\"name\":\"ubuntu\"},{\"id\":24,\"name\":\"php\"}]','ubuntu 13.04下编译安装php','','yanue','','','<p>上一篇文章中，我们介绍了安装<a title=\"ubuntu 13.04下编译安装mysql\" href=\"http://yanue.net/post-111.html\" rel=\"bookmark\">ubuntu 13.04下编译安装mysql</a>,</p><p>下面介绍安装php，可以配合apache或nginx进行使用.</p><h2>首先要安装编译php时要的几个扩展库</h2><p>(1)libxml2，若无php安装一些解析xml的扩展时会提示xml2-config not found</p><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo apt-get install libxml2 libxml2-dev libxslt-dev</pre><p>(2)libevent1.4.11及以上版本，安装php的fpm模块时需要<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo apt-get install libevent-1.4-2 libevent-dev</pre><p>(3)libcurl，安装curl扩展需要<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo apt-get install libcurl4-openssl-dev</pre><p>(4)GD库，安装gd图片处理扩展需要<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo apt-get install libgd2-xpm libgd2-xpm-dev</pre><p>(5)zlib1g-dev，安装zlib和bz2扩展或编译mysqld阶段需要<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo apt-get install zlib1g-dev libbz2-dev</pre><p>(6)&nbsp;configure: error: mcrypt.h not found. Please reinstall libmcrypt.<br /></p><div><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo  apt-get install libmcrypt-dev</pre><h2>编译参数：</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo ./configure --prefix=/usr/local/php --mandir=/usr/share/man --infodir=/usr/share/info --sysconfdir=/etc --enable-cli --with-config-file-path=/usr/local/php/etc --with-openssl --with-kerberos --with-zlib --enable-bcmath --with-bz2 --enable-calendar --with-curl --enable-exif --enable-ftp --with-gd --enable-gd-native-ttf --enable-magic-quotes --enable-mbstring --enable-mbregex --enable-json --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-mysql-sock=mysqlnd --with-sqlite --with-pdo-sqlite --enable-pdo --enable-dba --enable-shmop --enable-soap --enable-sockets --enable-wddx --enable-fpm --with-mhash --with-mcrypt=/usr/local/libmcrypt --with-iconv --with-xsl --enable-zend-multibyte --enable-zip --with-pcre-regex --enable-dom --enable-gd-native-ttf --enable-posix --enable-fileinfo --enable-sysvmsg --enable-sysvsem --enable-sysvshm --with-libxml --with-xmlrpc --enable-xml --enable-xmlwriter --enable-xmlreader --enable-maintainer-zts</pre></div><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">说明：如果是apache，请加上</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">-with-apxs2=/usr/local/apache/bin/apxs</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">–enable-maintainer-zts&nbsp;支持apache的worker或event这两个MPM</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">说明：这里为了支持apache的worker或event这两个MPM，编译时使用了–enable-maintainer-zts选项。</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\"><span style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\"># 注:其中最后一个参数–enable-maintainer-zts在安装PHP5.4最新版本时必须添加(5.3貌似不需要),表示打开PHP进程安全Thread Safe,默认不添加为NON&nbsp;Thread Safe,开启apache服务会报错…..</span></p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">编译通过就执行安装过程</p><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo make -j 4\nsudo make install</pre><h2>安装完成后</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm #因为php5.3开始自带fpm，使用自带的管理脚本\nsudo chmod +x /etc/init.d/php-fpm\nsudo ln -sf /usr/local/php/bin/php /usr/local/bin/\nsudo cp /etc/php-fpm.conf.default /etc/php-fpm.conf\nsudo cp php.ini-development /usr/local/php/etc/php.ini</pre>&nbsp;添加执行组和用户，如果添加过，则不需要<pre class=\"prettyprint linenums prettyprinted lang-php \">sudo groupadd www \nsudo useradd -g www www -s /bin/false</pre>修改fpm配置<pre class=\"prettyprint linenums prettyprinted lang-php \">sudo vi /etc/php-fpm.conf</pre>将user和group的值改为www,www<pre class=\"prettyprint linenums prettyprinted lang-php \">service php-fpm start</pre>这样php-fpm启动成功，nginx可以fastcgi解析php。&nbsp;&nbsp;','1377132576','1394723713','','1','0','0','848','781');
INSERT INTO `post` VALUES('113','11','[{\"id\":13,\"name\":\"ubuntu\"},{\"id\":5,\"name\":\"apache\"}]','ubuntu 13.04下编译安装apache','','yanue','','','<h2>准备工作</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">cd /usr/local/src/\nsudo wget http://mirror.bit.edu.cn/apache/apr/apr-1.4.6.tar.gz\nsudo wget http://mirror.bit.edu.cn/apache/apr/apr-util-1.4.1.tar.gz\nsudo wget http://mirrors.cnnic.cn/apache/httpd/httpd-2.4.4.tar.gz</pre><h2>安装必要工具</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo apt-get install libpcre3 libpcre3-dev openssl libssl-dev</pre><h2>解压缩及配置</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">tar -zxvf httpd-2.4.4.tar.gz\ntar -zxvf apr-1.4.6.tar.gz\ntar -zxvf apr-util-1.4.1.tar.gz\ncp -rf apr-1.4.6  httpd-2.4.4/srclib/apr \ncp -rf apr-util-1.4.1  httpd-2.4.4/srclib/apr-util\ncd httpd-2.4.4/</pre>以上可以避免执行配置安装httpd时出错<pre class=\"prettyprint linenums prettyprinted lang-php \">configure: error: Bundled APR requested but not found at ./srclib/. Download and unpack the corresponding apr and apr-util packages to ./srclib/.</pre>解决方法：需要下载apr和apr-utils 并解压到./srclib/, 再进行编译，上面已经完成,继续.<pre class=\"prettyprint linenums prettyprinted lang-php \">sudo ./configure --prefix=/usr/local/apache --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util --with-pcre=/usr/local/pcre --with-included-apr  --with-ssl --enable-ssl --enable-module=so --enable-rewrite --enable-cgid --enable-cgi    #配置\nsudo make -j4\nsudo make install</pre><h2>安装完毕，进行简单配置</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo cp build/rpm/httpd.init /etc/init.d/httpd\nsudo chmod 755 /etc/init.d/httpd\nsudo ln -fs /usr/local/apache/ /etc/httpd\nsudo ln -fs /usr/local/apache/bin/httpd /usr/sbin/httpd\nsudo ln -fs /usr/local/apache/bin/apachectl /usr/sbin/apachectl\nsudo ln -fs /usr/local/apache/logs /var/log/httpd\nsudo ln -s /usr/local/apache/conf/httpd.conf /etc/</pre>下一步：<a title=\"编辑“ubuntu 13.04下编译安装php”\" href=\"http://yanue.net/post-112.html\">ubuntu 13.04下编译安装php</a>','1377193070','1394723156','','1','0','0','528','785');
INSERT INTO `post` VALUES('114','11','[{\"id\":13,\"name\":\"ubuntu\"},{\"id\":23,\"name\":\"jdk\"},{\"id\":22,\"name\":\"ppa\"}]','ubuntu下ppa源安装jdk','','yanue','','','<p>在Ubuntu中，phpstorm的运行需要jdk6.<a title=\"Java\" href=\"http://wiki.ubuntu.org.cn/Java\" data-mce-href=\"http://wiki.ubuntu.org.cn/Java\">Java</a>有2种，一种是Ubuntu源自带的open-java（icedtea），一个是Oracle的sun-java6。</p><p>前者是Ubuntu默认的Java，一般更新后系统就自带了，这里讲后者的安装配置。</p><h2>添加PPA源，然后更新，最后安装。</h2><pre class=\"prettyprint linenums prettyprinted lang-php \"> sudo add-apt-repository ppa:webupd8team/java\n sudo apt-get update\n sudo apt-get install oracle-java7-installer</pre><p>检验是否安装成功及版本</p><pre class=\"prettyprint linenums prettyprinted lang-php \">java -version</pre><p></p><h5>卸载 Oracle Java 6<pre class=\"prettyprint linenums prettyprinted lang-php \">sudo apt-get remove oracle-java6-installer</pre></h5><p>&nbsp;另外，手动安装方法：</p><p>1，下载最新的 jdk6 版本，目前最新为：jdk-6u45-linux-x64.bin（根据机器到平台选择合适到版本）</p><p><a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" data-mce-href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a></p><p>2，赋予执行权限，在 terminal 中输入：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">chmod a+x jdk-6u45-linux-x64.bin</pre><p></p><p>3，解压，在 terminal 中输入：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">./jdk-6u45-linux-x64.bin</pre><p>4，创建 jvm 目录，在 terminal 中输入：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo mkdir /usr/lib/jvm</pre><p>5，移动解压文件，在 terminal 中输入：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo mv ~/download/jdk1.6.0_45 /usr/lib/jvm/jdk1.6.0_45</pre><p>6，启用 jdk 6，在 terminal 中输入：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo ln -s -b /usr/lib/jvm/jdk1.6.0_45/jre/bin/java /etc/alternatives/java\nsudo ln -s -b /usr/lib/jvm/jdk1.6.0_45/jre/bin/java /usr/bin/java</pre><p>&nbsp;</p>','1377210352','1394722978','','1','0','0','747','789');
INSERT INTO `post` VALUES('115','12','[{\"id\":21,\"name\":\"分表\"},{\"id\":12,\"name\":\"mysql\"}]','MySQL数据库垂直和水平切分','','yanue','','','<p>replication的限制:一旦数据库过于庞大，尤其是当写入过于频繁，很难由一台主机支撑的时候，我们还是会面临到扩展瓶颈。数据切分(sharding):通过某种特定的条件，将我们存放在同一个数据库中的数据分散存放到多个数据库（主机）上面，以达到分散单台设备负载的效果。。数据的切分同时还可以提高系统的总体可用性，因为单台设备Crash之后，只有总体数据的某部分不可用，而不是所有的数据。</p><p><h2><span><span><span>数据的切分（Sharding）模式</span></span></span></h2><br />一种是按照不同的表（或者Schema）来切分到不同的数据库（主机）之上，这种切可以称之为数据的垂直（纵向）切分；另外一种则是根据表中的数据的逻辑关系，将同一个表中的数据按照某种条件拆分到多台数据库（主机）上面，这种切分称之为数据的水平（横向）切分。</p><p><span><span><span>垂直切分:</span></span></span></p><p>一个架构设计较好的应用系统，其总体功能肯定是由很多个功能模块所组成的，而每一个功能模块所需要的数据对应到数据库中就是一个或者多个表。而在架构设计中，各个功能模块相互之间的交互点越统一越少，系统的耦合度就越低，系统各个模块的维护性以及扩展性也就越好。这样的系统，实现数据的垂直切分也就越容易。</p><p>一般来说，如果是一个负载相对不是很大的系统，而且表关联又非常的频繁，那可能数据库让步，将几个相关模块合并在一起减少应用程序的工作的方案可以减少较多的工作量，这是一个可行的方案。一个垂直拆分的例子:</p><p>1.用户模块表：user,user_profile,user_group,user_photo_album<br />2.群组讨论表：groups,group_message,group_message_content,top_message<br />3.相册相关表：photo,photo_album,photo_album_relation,photo_comment<br />4.事件信息表：event</p><ul><li><span>群组讨论模块和用户模块之间主要存在通过用户或者是群组关系来进行关联。一般关联的时候都会是通过用户的id或者nick_name以及group的id来进行关联，通过模块之间的接口实现不会带来太多麻烦；</span></li><li><span>相册模块仅仅与用户模块存在通过用户的关联。这两个模块之间的关联基本就有通过用户id关联的内容，简单清晰，接口明确；</span></li><li><span>事件模块与各个模块可能都有关联，但是都只关注其各个模块中对象的ID信息，同样可以做到很容易分拆。</span></li></ul><p><span><span><span>垂直切分的优点</span></span></span></p><ul><li><span>数据库的拆分简单明了，拆分规则明确；</span></li><li><span>应用程序模块清晰明确，整合容易；</span></li><li><span>数据维护方便易行，容易定位；</span></li></ul><p><span><span><span><br />垂直切分的缺点</span></span></span></p><ul><li><span>部分表关联无法在数据库级别完成，需要在程序中完成；</span></li><li><span>对于访问极其频繁且数据量超大的表仍然存在性能瓶颈，不一定能满足要求；</span></li><li><span>事务处理相对更为复杂；</span></li><li><span>切分达到一定程度之后，扩展性会遇到限制；</span></li><li><span>过读切分可能会带来系统过渡复杂而难以维护。</span></li></ul><h2><span><span><span>水平切分</span></span></span></h2><p>将某个访问极其频繁的表再按照某个字段的某种规则来分散到多个表之中，每个表中包含一部分数据。</p><p>对于上面的例子:所有数据都是和用户关联的，那么我们就可以根据用户来进行水平拆分，将不同用户的数据切分到不同的数据库中。</p><p>现在互联网非常火爆的Web2.0类型的网站，基本上大部分数据都能够通过会员用户信息关联上，可能很多核心表都非常适合通过会员ID来进行数据的水平切分。而像论坛社区讨论系统，就更容易切分了，非常容易按照论坛编号来进行数据的水平切分。切分之后基本上不会出现各个库之间的交互。<br /><span><span><span><br />水平切分的优点</span></span></span></p><ul><li><span>表关联基本能够在数据库端全部完成；</span></li><li><span>不会存在某些超大型数据量和高负载的表遇到瓶颈的问题；</span></li><li><span>应用程序端整体架构改动相对较少；</span></li><li><span>事务处理相对简单；</span></li><li><span>只要切分规则能够定义好，基本上较难遇到扩展性限制；</span></li></ul><p><span><span><span>水平切分的缺点</span></span></span></p><ul><li><span>切分规则相对更为复杂，很难抽象出一个能够满足整个数据库的切分规则；</span></li><li><span>后期数据的维护难度有所增加，人为手工定位数据更困难；</span></li><li><span>应用系统各模块耦合度较高，可能会对后面数据的迁移拆分造成一定的困难。</span></li></ul><h2><span><span><span>两种切分结合用:</span></span></span></h2><p>一般来说，我们数据库中的所有表很难通过某一个（或少数几个）字段全部关联起来，所以很难简单的仅仅通过数据的水平切分来解决所有问题。而垂直切分也只能解决部分问题，对于那些负载非常高的系统，即使仅仅只是单个表都无法通过单台数据库主机来承担其负载。我们必须结合“垂直”和“水平”两种切分方式同时使用</p><p>每一个应用系统的负载都是一步一步增长上来的，在开始遇到性能瓶颈的时候，大多数架构师和DBA都会选择先进行数据的垂直拆分，因为这样的成本最先，最符合这个时期所追求的最大投入产出比。然而，随着业务的不断扩张，系统负载的持续增长，在系统稳定一段时期之后，经过了垂直拆分之后的数据库集群可能又再一次不堪重负，遇到了性能瓶颈。</p><p>如果我们再一次像最开始那样继续细分模块，进行数据的垂直切分，那我们可能在不久的将来，又会遇到现在所面对的同样的问题。而且随着模块的不断的细化，应用系统的架构也会越来越复杂，整个系统很可能会出现失控的局面。</p><p>这时候我们就必须要通过数据的水平切分的优势，来解决这里所遇到的问题。而且，我们完全不必要在使用数据水平切分的时候，推倒之前进行数据垂直切分的成果，而是在其基础上利用水平切分的优势来避开垂直切分的弊端，解决系统复杂性不断扩大的问题。而水平拆分的弊端（规则难以统一）也已经被之前的垂直切分解决掉了，让水平拆分可以进行的得心应手。</p><p>示例数据库:</p><p>假设在最开始，我们进行了数据的垂直切分，然而随着业务的不断增长，数据库系统遇到了瓶颈，我们选择重构数据库集群的架构。如何重构？考虑到之前已经做好了数据的垂直切分，而且模块结构清晰明确。而业务增长的势头越来越猛，即使现在进一步再次拆分模块，也坚持不了太久。</p><p>==&gt;选择了在垂直切分的基础上再进行水平拆分。</p><p>==&gt;在经历过垂直拆分后的各个数据库集群中的每一个都只有一个功能模块，而每个功能模块中的所有表基本上都会与某个字段进行关联。如用户模块全部都可以通过用户ID进行切分，群组讨论模块则都通过群组ID来切分，相册模块则根据相册ID来进切分，最后的事件通知信息表考虑到数据的时限性（仅仅只会访问最近某个事件段的信息），则考虑按时间来切分。</p><h2><span><span><span>数据切分以及整合方案.</span></span></span></h2><p>数据库中的数据在经过垂直和（或）水平切分被存放在不同的数据库主机之后，应用系统面临的最大问题就是如何来让这些数据源得到较好的整合，其中存在两种解决思路：</p><ul><li><span>在每个应用程序模块中配置管理自己需要的一个（或者多个）数据源，直接访问各个数据库，在模块内完成数据的整合；</span></li><li><span>通过中间代理层来统一管理所有的数据源，后端数据库集群对前端应用程序透明；</span></li></ul><p>第二种方案,虽然短期内需要付出的成本可能会相对更大一些，但是对整个系统的扩展性来说，是非常有帮助的。针对第二种方案，可以选择的方法和思路有：</p><p><span><span><span>1.利用MySQLProxy 实现数据切分及整合.</span></span></span></p><p>可用来监视、分析或者传输他们之间的通讯信息。他的灵活性允许你最大限度的使用它，目前具备的功能主要有连接路由，Query分析，Query过滤和修改，负载均衡，以及基本的HA机制等。MySQLProxy 本身并不具有上述所有的这些功能，而是提供了实现上述功能的基础。要实现这些功能，还需要通过我们自行编写LUA脚本来实现。</p><p>原理:MySQLProxy 实际上是在客户端请求与MySQLServer 之间建立了一个连接池。所有客户端请求都是发向MySQLProxy，然后经由MySQLProxy 进行相应的分析，判断出是读操作还是写操作，分发至对应的MySQLServer 上。对于多节点Slave集群，也可以起做到负载均衡的效果。</p><p><span><span><span>2.利用Amoeba实现数据切分及整合</span></span></span></p><p>Amoeba是一个基于Java开发的，专注于解决分布式数据库数据源整合Proxy程序的开源框架，Amoeba已经具有Query路由，Query过滤，读写分离，负载均衡以及HA机制等相关内容。Amoeba主要解决的以下几个问题：</p><ul><li><span>数据切分后复杂数据源整合；</span></li><li><span>提供数据切分规则并降低数据切分规则给数据库带来的影响；</span></li><li><span>降低数据库与客户端的连接数；</span></li><li><span>读写分离路由；</span></li></ul><p>AmoebaFor MySQL 主要是专门针对MySQL数据库的解决方案，前端应用程序请求的协议以及后端连接的数据源数据库都必须是MySQL。对于客户端的任何应用程序来说，AmoebaForMySQL 和一个MySQL数据库没有什么区别，任何使用MySQL协议的客户端请求，都可以被AmoebaFor MySQL 解析并进行相应的处理。</p><p>Proxy程序常用的功能如读写分离，负载均衡等配置都在amoeba.xml中进行。Amoeba已经支持了实现数据的垂直切分和水平切分的自动路由，路由规则可以在rule.xml进行设置。<br /><span><span><span><br />3.利用HiveDB实现数据切分及整合</span></span></span></p><p>HiveDB同样是一个基于Java针对MySQL数据库的提供数据切分及整合的开源框架，只是目前的HiveDB仅仅支持数据的水平切分。主要解决大数据量下数据库的扩展性及数据的高性能访问问题，同时支持数据的冗余及基本的HA机制。</p><p>HiveDB的实现机制与MySQLProxy 和Amoeba有一定的差异，他并不是借助MySQL的Replication功能来实现数据的冗余，而是自行实现了数据冗余机制，而其底层主要是基于HibernateShards 来实现的数据切分工作。数据切分与整合中可能存在的问题</p><p><span><span><span>引入分布式事务的问题?</span></span></span></p><p>一旦数据进行切分被分别存放在多个MySQLServer中之后，不管我们的切分规则设计的多么的完美（实际上并不存在完美的切分规则），都可能造成之前的某些事务所涉及到的数据已经不在同一个MySQLServer 中了。</p><p>==&gt;将一个跨多个数据库的分布式事务分拆成多个仅处于单个数据库上面的小事务，并通过应用程序来总控各个小事务。<br /><span><span><span><br />跨节点Join的问题?</span></span></span></p><p>==&gt;先从一个节点取出数据,然后根据这些数据,再到另一个表中取数据.<br />==&gt;使用Federated存储引擎,问题是:乎如果远端的表结构发生了变更，本地的表定义信息是不会跟着发生相应变化的。</p><p><span><span><span>跨节点合并排序分页问题?</span></span></span></p><p>==&gt;Join本身涉及到的多个表之间的数据读取一般都会存在一个顺序关系。但是排序分页就不太一样了，排序分页的数据源基本上可以说是一个表（或者一个结果集），本身并不存在一个顺序关系，所以在从多个数据源取数据的过程是完全可以并行的。这样，排序分页数据的取数效率我们可以做的比跨库Join更高，所以带来的性能损失相对的要更小。</p><p>来自:<a href=\"http://blog.sina.com.cn/s/blog_493a84550101eo7c.html\">http://blog.sina.com.cn/s/blog_493a84550101eo7c.html</a></p><a href=\"http://blog.sina.com.cn/s/blog_493a84550101eo7c.html\"></a>','1377717818','1394722675','','1','0','0','616','804');
INSERT INTO `post` VALUES('116','11','[{\"id\":19,\"name\":\"phpstorm\"},{\"id\":20,\"name\":\"jre\"},{\"id\":13,\"name\":\"ubuntu\"}]','ubuntu下JRE中文字体设置（解决phpstorm,NetBeans乱码问题）','','yanue','','','<p>ubuntu下使用phpstorm,在搜索功能及其他情况时候,一直遇到中文乱码,或者方框问题(我用的是英文ubuntu 13.04)</p><p>而phpstorm运行需要独立安装jre6,参见:<a href=\"http://yanue.net/post-114.html\"><span style=\"-webkit-transition: 0.2s ease-in-out; transition: 0.2s ease-in-out;\">ubuntu下ppa源安装jdk</span>.</a></p><p>在ubuntu 11.04中安装netbeans 7.0的时候，出现一个奇怪的现象，启动netbeans中，发现很多中文字无法显示，直接显示一个方框。很显然是没有找到某些字的显示数据，但是奇怪的 是有些汉字可以显示，真神奇，难道netbeans所用到的字库居然不全吗？</p><p>而 ubuntu可以正常显示汉字，说明ubuntu本身的字库应该是没问题到。那么问题出在什么地方呢？</p><p><span>答案是：<span><span style=\"color: rgb(255, 0, 0);\"><strong>JRE</strong></span></span></span></p><p>netbean是用java写的，它的运行是必须要依靠JRE的，这个大家都知道。而JRE使用的字体是依靠JRE本身的配置文件来决定在系统中和什么字体文件对应的。</p><p>根据Java的官方文档（http://download.oracle.com/javase/1.5.0/docs/guide/intl /fontconfig.html#loading），字体对应配置文件是位于jre/lib下面，有两种形式，一种是src文件，一种是bfc文件。 bfc文件是二进制的，系统预定义的，所以我们需要修改的是src文件，到这个目录，一看，如下图：</p><p>&nbsp;</p><p>看到这些文件名，基本也明白了个大概。看看fontconfig.OS.version.properties.src这种格式就应该明白，这是不 同操作系统平台的配置文件，jre会根据操作系统的不同而自动选择对应的配置文件，因此，我打开了ubuntu 的对应文件，看第一行：</p><p>allfonts.chinese-cn-iso10646=-arphic-ar pl uming cn-light-r-normal–*-%d-*-*-c-*-iso10646-1</p><p>这里指定了jre用到逻辑字体和物理字体的对应关系，等号左边就是jre用的逻辑字体，而等号右边就是需要使用的物理字体了。</p><p>只是这个物理字体看起来跟火星文差不多，但是这个火星文可是正宗的<span>X logical font description</span>&nbsp;(<span>XLFD</span>)描述方式，这里不多说了，想了解的读者可以自己去google一下即可。</p><p>然后再看配置文件# Font File Names部分，其中有一行：</p><p>filename.-arphic-ar_pl_uming_cn-light-r-normal–*-%d-*-*-c-*-iso10646-1=/usr/share/fonts/truetype/arphic/uming.ttc</p><p>这是上面描述的物理字体和系统字体文件的对应描述。</p><p>左边不就是上面我们看着像火星文的物理字体名称吗？正好不知道哪儿去找这个字体，这下不就有答案了。连目录都告诉你了。</p><p>立刻跑到/usr/share/fonts/truetype目录去一看，不要说uming.ttc，连arphic这个目录都没有！</p><p>设置jre解决中文乱码方法:</p><p>1.修改配置文件，让他指向系统有的字体文件。</p><p>也就是修改：/usr/share/fonts/truetype/arphic/uming.ttc这部分，修改成存在的字体文件名称即可。</p><p>2.安装一个uming.tcc字体文件。</p><p>由于uming.tcc字体是比较有名的，是一个高质量的中文字库。因此我还是决定选择第二种方案。</p><p>到网上一goole，立刻找到了下载地址：</p><p>http://ftp.br.debian.org/debian/pool/main/t/ttf-arphic-uming/ttf-arphic-uming_0.2.20080216.1-3_all.deb</p><p>下载回来之后：</p><p>sudo dpkg -i ttf-arphic-uming_0.2.20080216.1-3_all.deb</p><p>安装顺利完成，这个时候再跑到/usr/share/fonts/truetype目录去一看，这下有arphic这个目录了，然后打开目录一看，uming.ttc就在那里！</p><p>马上打开netbeans，漫长的等待，终于看到了窗口，一切都有了，字体看着确实很美，不愧是arphic 产品啊。</p><p>自此问题完美的解决了，不管版本如何变化，都可以按照这个方式去解决问题。</p><p>网上一些文章说的cp字体到jre/lib/fonts/fallback，很多人不懂原理。fallback的目录是jre字体后备目录，意思就 是按照正常配置找不到字体信息，就会在这个目录下按照配置文件设定的顺序到字体文件中去寻找。用这个方式有两个问题,一个是效率低下。二是字体不统一，会 出现例如：文件这个词，文是楷体，件是黑体的“壮观”景象！为什么？因为文字在楷体字库找到了，但是这个字库找不到件字，于是就在fallback中到黑 体字库去找，并且找到。这种现象就神奇的出现了！</p><p>所以这个方式其实是属于歪打正着的方法，很多人糊里糊涂显示正常了，也没有搞懂原理。而另外一些人就会出现字体不统一到情况。</p><p>当然，上面所说的一切，在windows上均不会发生。因为windows比较统一，所以配置文件的配置一定可以正常工作，不会出现类似linux的连字体文件都可能找不到的情况。这也证明了规范，统一在软件中的重要性。</p><p><span>&nbsp;来自:</span><a href=\"http://www.guoweiwei.com/wordpress/archives/129\">http://www.guoweiwei.com/wordpress/archives/129</a><br /></p>','1377733794','1394722469','','1','0','0','932','808');
INSERT INTO `post` VALUES('117','11','[{\"id\":\"18\",\"name\":\"dia\"},{\"id\":13,\"name\":\"ubuntu\"}]','dia 在Linux(ubuntu)下无法输入中文的解决办法','','yanue','','','我是执行一下命令安装的<div><div><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo apt-get install dia\n</pre>打开软件后发现不能输入中文，网上搜索一圈后找到以下解决方案<br /></div></div><div><div><pre class=\"prettyprint linenums prettyprinted lang-php \"> sudo vi /usr/bin/dia\n</pre>然后把dia-gnome&nbsp;--integrated&nbsp;&quot;$@&quot;修改成<br /></div></div><div><div><div><pre class=\"prettyprint linenums prettyprinted lang-php \"> dia-gnome  &quot;$@&quot;\n</pre>重新启动dia，输入法选择系统默认（我的系统输入法是ibus），就可以输入中文了不过这样一改，工具条变成浮动的了</div><div>另外，发现windows下dia，默认也是不能输入中文的，</div><div>解决办法倒是简单些：dia的输入法菜单里选择“简单”，就可以输入中文了</div><div>xp系统搜狗输入法下测试成功</div><div>来自:<a href=\"http://blog.csdn.net/tsxw24/article/details/8622518\">http://blog.csdn.net/tsxw24/article/details/8622518</a></div></div></div>','1377741280','1394722181','','1','0','0','658','817');
INSERT INTO `post` VALUES('118','11','[{\"id\":13,\"name\":\"ubuntu\"},{\"id\":17,\"name\":\"win8\"}]','win8下使用EasyBCD硬盘安装ubuntu','','yanue','','','<p style=\"margin-bottom: 1.3em;\">以前一直都是弄一个ubuntu的live cd启动盘进行安装，每次都带盘，很麻烦，usb live cd制作参考:&nbsp;<a href=\"http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows\" data-mce-href=\"http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows\">http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows</a>&nbsp;而wubi方法一般现在都不能成功引导，所以还是直接用硬盘引导安装比较妥。下面是整理来自网络的文章和自己的实际情况,我的环境是win8(windows下应该通用，xp不敢保证)，装的是ubuntu 13.04。</p><p style=\"margin-bottom: 1.3em;\">1）首先还是分区，在计算机上右键--管理--磁盘管理</p><p style=\"margin-bottom: 1.3em;\">装Ubuntu分配的硬盘大小最好是(20G以上）不要太小，这里请注意，Ubuntu和Windows文件系统完全不同，所以我们划好要给Ubuntu的分区后，删除卷。到时候，安装好的ubuntu的分区，在Windows下是看不到的，但是进入Ubuntu是可以访问Windows的磁盘的。这才叫双系统的吧，和wubi那种可不一样哦。</p><p style=\"margin-bottom: 1.3em;\">2）准备两个东西：<br /><span data-mce-style=\"color: #ff0000;\">EasyBCD</span>软件（EasyBCD 2.2 下载见&nbsp;<a href=\"http://dl.pconline.com.cn/download/90611.html\" data-mce-href=\"http://dl.pconline.com.cn/download/90611.html\">http://dl.pconline.com.cn/download/90611.html</a>&nbsp;）</p><p style=\"margin-bottom: 1.3em;\"><span data-mce-style=\"color: #ff0000;\">Ubuntu 13.04</span>的iso镜像&nbsp;:<a href=\"http://ubuntu1304.cdn.mirrors.ustc.edu.cn/ubuntu-releases/13.04/ubuntu-13.04-desktop-i386.iso\" data-mce-href=\"http://ubuntu1304.cdn.mirrors.ustc.edu.cn/ubuntu-releases/13.04/ubuntu-13.04-desktop-i386.iso\">http://ubuntu1304.cdn.mirrors.ustc.edu.cn/ubuntu-releases/13.04/ubuntu-13.04-desktop-i386.iso</a></p><p style=\"margin-bottom: 1.3em;\">3）下面安装好后打开<a href=\"http://www.linuxidc.com/Linux/2012-10/72140.htm\" target=\"_blank\" data-mce-href=\"http://www.linuxidc.com/Linux/2012-10/72140.htm\">EasyBCD</a>软件，可以看到现在我们的计算机只有一个启动“入口”，我们来给他加一个，第一步选择添加新条目（添加移动入口点），</p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://www.yanue.net/wp-content/uploads/2013/09/QQ%E5%9B%BE%E7%89%8720130909223947.jpg\" data-mce-href=\"http://www.yanue.net/wp-content/uploads/2013/09/QQ图片20130909223947.jpg\"><img class=\"alignnone size-full wp-image-858\" alt=\"QQ图片20130909223947\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/QQ%E5%9B%BE%E7%89%8720130909223947.jpg\" width=\"583\" height=\"489\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/QQ图片20130909223947.jpg\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\">第2步选NeoGrub，第3步点安装点保存 ，接着是配置（第4步），</p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://www.yanue.net/wp-content/uploads/2013/09/QQ%E5%9B%BE%E7%89%8720130909224027.jpg\" data-mce-href=\"http://www.yanue.net/wp-content/uploads/2013/09/QQ图片20130909224027.jpg\"><img class=\"alignnone size-full wp-image-859\" alt=\"QQ图片20130909224027\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/QQ%E5%9B%BE%E7%89%8720130909224027.jpg\" width=\"583\" height=\"489\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/QQ图片20130909224027.jpg\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\">然后就会出现一个menu.lst文件</p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://www.yanue.net/wp-content/uploads/2013/09/QQ%E5%9B%BE%E7%89%8720130909224403.jpg\" data-mce-href=\"http://www.yanue.net/wp-content/uploads/2013/09/QQ图片20130909224403.jpg\"><img class=\"alignnone  wp-image-860\" alt=\"QQ图片20130909224403\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/QQ%E5%9B%BE%E7%89%8720130909224403.jpg\" width=\"822\" height=\"337\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/QQ图片20130909224403.jpg\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\">我们要编辑这个文件 因为系统就是这个文件找到我们的Ubuntu的。</p><p style=\"margin-bottom: 1.3em;\">把下面的 英文 复制进去，把原来的全覆盖掉</p><pre class=\"lang:php decode:true\" style=\"min-height: 1.5em; border: 1px solid rgb(204, 204, 204) !important; margin-bottom: 1.5em !important; padding: 0.3em 0.5em !important;\">title Install Ubuntu\nroot (hd0,0)\nkernel (hd0,0)/vmlinuz boot=casper iso-scan/filename=/ubuntu-13.04-desktop-i386.iso ro quiet splash locale=zh_CN.UTF-8\ninitrd (hd0,0)/initrd.lz</pre><p style=\"margin-bottom: 1.3em;\">特别注意:</p><p style=\"margin-bottom: 1.3em;\"><span data-mce-style=\"color: #ff0000;\">ubuntu-13.04-desktop-i386.iso</span>是你的iso的名字，别写成我的了，这个要改成你的。</p><p style=\"margin-bottom: 1.3em;\">对于有的电脑上你的第一个盘符并不是C盘，在磁盘管理中可以看出，所以安装时需将(hd0,0)改为（hd0,1）【假设为第二个】。</p><p style=\"margin-bottom: 1.3em;\">保存后重启电脑后就有个引导进入ubuntu试用安装。</p><p style=\"margin-bottom: 1.3em;\"><span data-mce-style=\"color: #ff0000;\">重要一步：</span></p><p style=\"margin-bottom: 1.3em;\">在这之前 要按<span data-mce-style=\"color: #ff0000;\">Ctrl+Alt+T</span>&nbsp;打开终端，输入代码:<span data-mce-style=\"color: #ff0000;\">sudo umount -l /isodevice</span>这一命令取消掉对光盘所在 驱动器的挂载（<span data-mce-style=\"color: #ff0000;\">注意，这里的-l是L的小写，-l 与&nbsp;/isodevice 有一个空格。</span>），否则分区界面找不到分区。</p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://www.yanue.net/wp-content/uploads/2013/09/12110319542247.png\" data-mce-href=\"http://www.yanue.net/wp-content/uploads/2013/09/12110319542247.png\"><img class=\"alignnone size-full wp-image-864\" alt=\"12110319542247\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/12110319542247.png\" width=\"408\" height=\"112\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/12110319542247.png\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\">下面就点击&nbsp;安装Ubuntu 13.04开始安装，</p><p style=\"margin-bottom: 1.3em;\">点击桌面的安装，选择语言，点“继续”</p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-03-ready.png\" data-mce-href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-03-ready.png\"><img alt=\"ubuntu 13.04 install 03 ready\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/679f6026c666a5561f01c6281346fd76.png\" width=\"500\" height=\"312\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/679f6026c666a5561f01c6281346fd76.png\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\">&nbsp;</p><p style=\"margin-bottom: 1.3em;\">安装类型，有数据最好自己分区，选择“其他选项”</p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-05-choi.png\" data-mce-href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-05-choi.png\"><img alt=\"ubuntu 13.04 install 05 choi\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/16b43d98c3e999aa429965f3b6c75792.png\" width=\"500\" height=\"312\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/16b43d98c3e999aa429965f3b6c75792.png\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\">&nbsp;</p><p style=\"margin-bottom: 1.3em;\">分区界面</p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-06-sda.png\" data-mce-href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-06-sda.png\"><img alt=\"ubuntu 13.04 install 06 sda\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/036a12e98c398764644f3465c3479046.png\" width=\"500\" height=\"312\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/036a12e98c398764644f3465c3479046.png\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\">&nbsp;</p><p style=\"margin-bottom: 1.3em;\">设置根分区（类似windows系统盘）与交换空间（类似windows虚拟内存，Linux需要独立分区）</p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-07-format.png\" data-mce-href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-07-format.png\"><img alt=\"ubuntu 13.04 install 07 format\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/dbdd4f82e71f400f04c767a17a61562c.png\" width=\"500\" height=\"312\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/dbdd4f82e71f400f04c767a17a61562c.png\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\">&nbsp;</p><p style=\"margin-bottom: 1.3em;\">点击“继续”</p><p style=\"margin-bottom: 1.3em;\">&nbsp;</p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-07-format-02.png\" data-mce-href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-07-format-02.png\"><img alt=\"ubuntu 13.04 install 07 format 02\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/18ddfe93f145004d9ed545e3829466da.png\" width=\"500\" height=\"312\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/18ddfe93f145004d9ed545e3829466da.png\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\">&nbsp;</p><p style=\"margin-bottom: 1.3em;\">然后开始安装</p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-08-start1.png\" data-mce-href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-08-start1.png\"><img alt=\"ubuntu 13.04 install 08 start\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/668fb6648a322d147747838f6cc4aa49.png\" width=\"500\" height=\"312\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/668fb6648a322d147747838f6cc4aa49.png\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\">&nbsp;</p><p style=\"margin-bottom: 1.3em;\">下图，选择地区</p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-09-adress.png\" data-mce-href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-09-adress.png\"><img alt=\"ubuntu 13.04 install 09 adress\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/70b5201170a09cc2e58be61d5c52d201.png\" width=\"500\" height=\"312\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/70b5201170a09cc2e58be61d5c52d201.png\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\">&nbsp;</p><p style=\"margin-bottom: 1.3em;\">选择语言</p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-10-language-choice.png\" data-mce-href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-10-language-choice.png\"><img alt=\"ubuntu 13.04 install 10 language choice\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/c0cd3c57cd3bcce8489c4702c386275a.png\" width=\"500\" height=\"312\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/c0cd3c57cd3bcce8489c4702c386275a.png\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\">&nbsp;</p><p style=\"margin-bottom: 1.3em;\">设置用户及密码</p><p style=\"margin-bottom: 1.3em;\">&nbsp;</p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-11-set-user.png\" data-mce-href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-11-set-user.png\"><img alt=\"ubuntu 13.04 install 11 set user\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/1d92720c9bcb46fd5bc449052a8570cc.png\" width=\"500\" height=\"312\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/1d92720c9bcb46fd5bc449052a8570cc.png\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\">&nbsp;</p><p style=\"margin-bottom: 1.3em;\">进入安装，安装过程中，你可以选择一边喝茶一边看安装时的幻灯，看看<a title=\"Ubuntu\" href=\"http://imcn.me/ubuntu\" data-mce-href=\"http://imcn.me/ubuntu\">Ubuntu</a>的功能介绍</p><p style=\"margin-bottom: 1.3em;\">&nbsp;</p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-01.png\" data-mce-href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-01.png\"><img alt=\"ubuntu 13.04 install 12 installing 01\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/2afd36dfbf441ae84da70e29ee7cac79.png\" width=\"500\" height=\"312\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/2afd36dfbf441ae84da70e29ee7cac79.png\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-02.png\" data-mce-href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-02.png\"><img alt=\"ubuntu 13.04 install 12 installing 02\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/9d23713a3b417d5f2d038d601c283049.png\" width=\"500\" height=\"312\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/9d23713a3b417d5f2d038d601c283049.png\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-03.png\" data-mce-href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-03.png\"><img alt=\"ubuntu 13.04 install 12 installing 03\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/aff9f0274d90ebb40b88439251d69cd0.png\" width=\"500\" height=\"312\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/aff9f0274d90ebb40b88439251d69cd0.png\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-05.png\" data-mce-href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-05.png\"><img alt=\"ubuntu 13.04 install 12 installing 05\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/d89cf84da38c42d2eaec9a820b6a13bc.png\" width=\"500\" height=\"312\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/d89cf84da38c42d2eaec9a820b6a13bc.png\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-06.png\" data-mce-href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-06.png\"><img alt=\"ubuntu 13.04 install 12 installing 06\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/219ee8965760ee2d42b9ba785b2fbab1.png\" width=\"500\" height=\"312\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/219ee8965760ee2d42b9ba785b2fbab1.png\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-07.png\" data-mce-href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-07.png\"><img alt=\"ubuntu 13.04 install 12 installing 07\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/00ef08cfba1be9158e8a1639c7365d41.png\" width=\"500\" height=\"312\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/00ef08cfba1be9158e8a1639c7365d41.png\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-08.png\" data-mce-href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-08.png\"><img alt=\"ubuntu 13.04 install 12 installing 08\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/585875b7495c676636434ee235b09b49.png\" width=\"500\" height=\"312\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/585875b7495c676636434ee235b09b49.png\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-09.png\" data-mce-href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-09.png\"><img alt=\"ubuntu 13.04 install 12 installing 09\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/8000d8f31b3b0ef8fbe6cbc3dfe60756.png\" width=\"500\" height=\"312\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/8000d8f31b3b0ef8fbe6cbc3dfe60756.png\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\">&nbsp;</p><p style=\"margin-bottom: 1.3em;\">安装完成，重新启动！！！</p><p style=\"margin-bottom: 1.3em;\"><a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-13-restart.png\" data-mce-href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-13-restart.png\"><img alt=\"ubuntu 13.04 install 13 restart\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/863a201e4926cfcf6c6ac1beca1a2bec.png\" width=\"500\" height=\"312\" data-mce-src=\"http://www.yanue.net/wp-content/uploads/2013/09/863a201e4926cfcf6c6ac1beca1a2bec.png\" style=\"border: 0px; cursor: default;\" /></a></p><p style=\"margin-bottom: 1.3em;\">（说明，我安装ubuntu过程中并不未截图，上面图片来自网络）</p>','1378711060','1394722006','','1','0','2','1932','821');
INSERT INTO `post` VALUES('119','14','\"\"','PowerDesigner画(CDM)ER图详细教程','','yanue','','','<strong>一、概念数据模型概述</strong>数据模型是现实世界中数据特征的抽象。数据模型应该满足三个方面的要求：1）能够比较真实地模拟现实世界2）容易为人所理解3）便于计算机实现概念数据模型也称信息模型，它以实体－联系(Entity-RelationShip,简称E-R)理论为基础，并对这一理论进行了扩充。它从用户的观点出发对信息进行建模，主要用于数据库的概念级设计。通常人们先将现实世界抽象为概念世界，然后再将概念世界转为机器世界。换句话说，就是先将现实世界中的客观对象抽象为实体(Entity)和联系(Relationship),它并不依赖于具体的计算机系统或某个DBMS系统，这种模型就是我们所说的CDM;然后再将CDM转换为计算机上某个DBMS所支持的数据模型，这样的模型就是物理数据模型,即PDM。CDM是一组严格定义的模型元素的集合，这些模型元素精确地描述了系统的静态特性、动态特性以及完整性约束条件等，其中包括了数据结构、数据操作和完整性约束三部分。1）数据结构表达为实体和属性;2）数据操作表达为实体中的记录的插入、删除、修改、查询等操作;3）完整性约束表达为数据的自身完整性约束（如数据类型、检查、规则等）和数据间的参照完整性约束（如联系、继承联系等）;<strong>二、实体、属性及标识符的定义</strong>实体（Entity），也称为实例，对应现实世界中可区别于其他对象的“事件”或“事物”。例如，学校中的每个学生，医院中的每个手术。每个实体都有用来描述实体特征的一组性质，称之为属性，一个实体由若干个属性来描述。如学生实体可由学号、姓名、性别、出生年月、所在系别、入学年份等属性组成。实体集（Entity Set）是具体相同类型及相同性质实体的集合。例如学校所有学生的集合可定义为“学生”实体集，“学生”实体集中的每个实体均具有学号、姓名、性别、出生年月、所在系别、入学年份等性质。实体类型（Entity Type）是实体集中每个实体所具有的共同性质的集合，例如“患者”实体类型为：患者｛门诊号，姓名，性别，年龄，身份证号.............｝。实体是实体类型的一个实例，在含义明确的情况下，实体、实体类型通常互换使用。实体类型中的每个实体包含唯一标识它的一个或一组属性，这些属性称为实体类型的标识符（Identifier），如“学号”是学生实体类型的标识符，“姓名”、“出生日期”、“信址”共同组成“公民”实体类型的标识符。有些实体类型可以有几组属性充当标识符，选定其中一组属性作为实体类型的主标识符，其他的作为次标识符。<strong>三、实体、属性及标识符的表达</strong><a href=\"http://www.yanue.net/wp-content/uploads/2013/09/200812413341734.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/200812413341734.jpg\" width=\"591\" height=\"273\" border=\"0\" /></a>介绍PowerDesigner概念数据模型以及实体、属性创建。<strong>一、新建概念数据模型</strong>1）选择File--&gt;New,弹出如图所示对话框，选择CDM模型（即概念数据模型）建立模型。<a href=\"http://www.dezai.cn/UploadFiles/200812413342621.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413342621.jpg\" width=\"606\" height=\"347\" border=\"0\" /></a>2）完成概念数据模型的创建。以下图示，对当前的工作空间进行简单介绍。（以后再更详细说明）<a href=\"http://www.dezai.cn/UploadFiles/200812413343371.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413343371.jpg\" width=\"670\" height=\"480\" border=\"0\" /></a>3）选择新增的CDM模型，右击，在弹出的菜单中选择“Properties”属性项，弹出如图所示对话框。在“General”标签里可以输入所建模型的名称、代码、描述、创建者、版本以及默认的图表等等信息。在“Notes”标签里可以输入相关描述及说明信息。当然再有更多的标签，可以点击 &quot;More&gt;&gt;&quot;按钮，这里就不再进行详细解释。<img title=\"点击预览原图\" alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413345112.jpg\" width=\"522\" height=\"403\" border=\"0\" /><strong>二、创建新实体</strong>1）在CDM的图形窗口中，单击工具选项版上的Entity工具，再单击图形窗口的空白处，在单击的位置就出现一个实体符号。点击Pointer工具或右击鼠标，释放Entitiy工具。如图所示<a href=\"http://www.dezai.cn/UploadFiles/200812413346784.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413346784.jpg\" width=\"271\" height=\"265\" border=\"0\" /></a>2）双击刚创建的实体符号，打开下列图标窗口，在此窗口“General”标签中可以输入实体的名称、代码、描述等信息。<a href=\"http://www.dezai.cn/UploadFiles/200812413346738.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413346738.jpg\" width=\"521\" height=\"401\" border=\"0\" /></a><strong>三、添加实体属性</strong>1）在上述窗口的“Attribute”选项标签上可以添加属性，如下图所示。<a href=\"http://www.dezai.cn/UploadFiles/200812413346472.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413346472.jpg\" width=\"521\" height=\"401\" border=\"0\" /></a>注意：数据项中的“添加属性”和“重用已有数据项”这两项功能与模型中Data Item的Unique code 和Allow reuse选项有关。P列表示该属性是否为主标识符;D列表示该属性是否在图形窗口中显示;M列表示该属性是否为强制的，即该列是否为空值。如果一个实体属性为强制的，那么， 这个属性在每条记录中都必须被赋值，不能为空。2）在上图所示窗口中，点击插入属性按钮，弹出属性对话框，如下图所示。<a href=\"http://www.dezai.cn/UploadFiles/200812413348811.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413348811.jpg\" width=\"521\" height=\"383\" border=\"0\" /></a>注意：这里涉及到域的概念，即一种标准的数据结构，它可应用至数据项或实体的属性上一、定义属性的标准检查约束标准检查约束是一组确保属性有效的表达式。在实体属性的特性窗口，打开如图所示的检查选项卡。<a href=\"http://www.dezai.cn/UploadFiles/200812413351965.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413351965.jpg\" width=\"521\" height=\"383\" border=\"0\" /></a>在这个选项卡可以定义属性的标准检查约束，窗口中每项的参数的含义，如下参数说明Minimum属性可接受的最小数Maximum 属性可接受的最大数Default属性不赋值时，系统提供的默认值Unit单位，如公里、吨、元Format属性的数据显示格式Lowercase属性的赋值全部变为小写字母Uppercase属性的赋值全部变为大写字母Cannot modify该属性一旦赋值不能再修改List Of Values属性赋值列表，除列表中的值，不能有其他的值Label属性列表值的标签二、定义属性的附加检查当Standard checks 或Rules 不能满足检查的要求时，可以在Additional Checks选项卡的Server子页上，通过SQL语句中使用%MINMAX%、%LISTVAL%、%RULES%、%UPPER%、%LOWER%几个变量来定义Standard和Rule,如图所示<a href=\"http://www.dezai.cn/UploadFiles/200812413353150.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413353150.jpg\" width=\"521\" height=\"383\" border=\"0\" /></a>%MINMAX%、%LISTVAL%、%UPPER%、%LOWER%在Standard Check中定义的Minimum 和Maximum、List values 、uppervalues、lowervalues%RULES%在Rules特性窗口Expression选项卡中定义的有效性规则表达式一、标识符标识符是实体中一个或多个属性的集合，可用来唯一标识实体中的一个实例。要强调的是，CDM中的标识符等价于PDM中的主键或候选键。每个实体都必须至少有一个标识符。如果实体只有一个标识符，则它为实体的主标识符。如果实体有多个标识符，则其中一个被指定为主标识符，其余的标识符就是次标识符了。二、如果定义主、次标识符1）选择某个实体双击弹出实体的属性对话框。在Identifiers选项卡上可以进行实体标识符的定义。如下图所示<a href=\"http://www.dezai.cn/UploadFiles/200812413353427.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413353427.jpg\" width=\"521\" height=\"401\" border=\"0\" /></a>2）选择第一行“主标识符”，点击属性按钮或双击第一行“主标识符”，弹出属性对话框，如图所示<a href=\"http://www.dezai.cn/UploadFiles/200812413354790.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413354790.jpg\" width=\"521\" height=\"383\" border=\"0\" /></a>3）选择&quot;Attributes&quot;选项卡，再点击“Add Attributes”工具，弹出如图所示窗口，选择某个属性作为标识符就行了。<a href=\"http://www.dezai.cn/UploadFiles/200812413355633.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413355633.jpg\" width=\"521\" height=\"383\" border=\"0\" /></a><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413355368.gif\" />一、数据项数据项（Data Item）是信息存储的最小单位，它可以附加在实体上作为实体的属性。注意：模型中允许存在没有附加至任何实体上的数据项。二、新建数据项1）使用“Model”---&gt; Data Items 菜单，在打开的窗口中显示已有的数据项的列表，点击 “Add a Row”按钮，创建一个新数据项，如图所示<a href=\"http://www.dezai.cn/UploadFiles/200812413356660.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413356660.jpg\" width=\"518\" height=\"328\" border=\"0\" /></a>2）当然您可以继续设置具体数据项的Code、DataType、Length等等信息。这里就不再详细说明了。三、数据项的唯一性代码选项和重用选项使用Tools---&gt;Model Options-&gt;Model Settings。在Data Item组框中定义数据项的唯一性代码选项(Unique Code)与重用选项（Allow Reuse）。注意：如果选择Unique Code复选框 ，每个数据项在同一个命名空间有唯一的代码，而选择Allow reuse ，一个数据项可以充当多个实体的属性。<a href=\"http://www.dezai.cn/UploadFiles/200812413357337.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413357337.jpg\" width=\"553\" height=\"423\" border=\"0\" /></a>四、在实体中添加数据项1）双击一个实体符号，打开该实体的属性窗口。2）单击Attributes选项卡，打开如下图所示窗口<a href=\"http://www.dezai.cn/UploadFiles/20081241340846.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241340846.jpg\" width=\"516\" height=\"439\" border=\"0\" /></a>注意：Add a DataItem 与 Reuse a DataItem的区别在于Add a DataItem 情况下，选择一个已经存在的数据项，系统会自动复制所选择的数据项。如果您设置了UniqueCode选项，那系统在复制过程中，新数据项的Code会自动生成一个唯一的号码，否则与所选择的数据项完全一致。Reuse a DataItem情况下，只引用不新增，就是引用那些已经存在的数据项，作为新实体的数据项<img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413355368.gif\" /><strong>一、 联系</strong>联系（Relationship）是指实体集这间或实体集内部实例之间的连接。实体之间可以通过联系来相互关联。与实体和实体集对应，联系也可以分为联系和联系集，联系集是实体集之间的联系，联系是实体之间的联系，联系是具有方向性的。联系和联系集在含义明确的情况之下均可称为联系。按照实体类型中实例之间的数量对应关系，通常可将联系分为4类，即一对一（ONE TO ONE）联系、一对多（ONE TO MANY）联系、多对一（MANY TO ONE）联系和多对多联系（MANY TO MANY）。<strong>&nbsp;二、 建立联系</strong>在CDM工具选项板中除了公共的工具外，还包括如下图所示的其它对象产生工具。<a href=\"http://www.dezai.cn/UploadFiles/20081241342987.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241342987.jpg\" width=\"319\" height=\"284\" border=\"0\" /></a>在图形窗口中创建两个实体后，单击“实体间建立联系”工具，单击一个实体，在按下鼠标左键的同时把光标拖至别一个实体上并释放鼠标左键，这样就在两个实体间创建了联系，右键单击图形窗口，释放Relationship工具。如下图所示<a href=\"http://www.dezai.cn/UploadFiles/20081241342304.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241342304.jpg\" width=\"354\" height=\"94\" border=\"0\" /></a><strong>三、 四种基本的联系</strong>即一对一（ONE TO ONE）联系、一对多（ONE TO MANY）联系、多对一（MANY TO ONE）联系和多对多联系（MANY TO MANY）。如图所示<a href=\"http://www.dezai.cn/UploadFiles/20081241342982.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241342982.jpg\" width=\"377\" height=\"337\" border=\"0\" /></a><strong>四、 其他几类特殊联系</strong>除了4种基本的联系之外，实体集与实体集之间还存在标定联系（Identify Relationship）、非标定联系（Non-Identify RelationShip）和递归联系（Recursive Relationship）。<em><strong>标定联系：</strong></em>每个实体类型都有自己的标识符，如果两个实体集之间发生联系，其中一个实体类型的标识符进入另一个实体类型并与该实体类型中的标识符共同组成其标识符时，这种联系则称为标定联系，也叫依赖联系。反之称为非标定联系，也叫非依赖联系。注意：在非标定联系中，一个实体集中的部分实例依赖于另一个实例集中的实例，在这种依赖联系中，每个实体必须至少有一个标识符。而在标定联系中，一个实体集中的全部实例完全依赖于另个实体集中的实例，在这种依赖联系中一个实体必须至少有一个标识符，而另一个实体却可以没有自己的标识符。没有标识符的实体用它所依赖的实体的标识符作为自己的标识符。换句话来理解，在标定联系中，一个实体（选课）依赖 一个实体（学生），那么（学生）实体必须至少有一个标识符，而（选课）实体可以没有自己的标识符，没有标标识符的实体可以用实体（学生）的标识符作为自己的标识符。<a href=\"http://www.dezai.cn/UploadFiles/20081241344580.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241344580.jpg\" width=\"419\" height=\"271\" border=\"0\" /></a><em><strong>递归联系：</strong></em>递归联系是实体集内部实例之间的一种联系，通常形象地称为自反联系。同一实体类型中不同实体集之间的联系也称为递归联系。例如：在“职工”实体集中存在很多的职工，这些职工之间必须存在一种领导与被领导的关系。又如“学生”实体信中的实体包含“班长”子实体集与“普通学生”子实体集，这两个子实体集之间的联系就是一种递归联系。创建递归联系时，只需要单击“实体间建立联系”工具从实体的一部分拖至该实体的别一个部分即可。如图<a href=\"http://www.dezai.cn/UploadFiles/20081241345999.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241345999.jpg\" width=\"200\" height=\"140\" border=\"0\" /></a><strong>五、 定义联系的特性</strong>在两个实体间建立了联系后，双击联系线，打开联系特性窗口，如图所示。<img title=\"点击预览原图\" alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241346114.jpg\" width=\"522\" height=\"490\" border=\"0\" /><strong>六、 定义联系的角色名</strong>在联系的两个方向上各自包含有一个分组框，其中的参数只对这个方向起作用，Role Name为角色名，描述该方向联系的作用，一般用一个动词或动宾组表。如：“学生 to 课目 ” 组框中应该填写“拥有”，而在“课目To 学生”组框中填写“属于”。（在此只是举例说明，可能有些用词不太合理）。<strong>七、 定义联系的强制性</strong>Mandatory 表洋这个方向联系的强制关系。选中这个复选框，则在联系线上产生一个联系线垂直的竖线。不选择这个复选框则表示联系这个方向上是可选的，在联系线上产生一个小圆圈。<strong>八、 有关联系的基数</strong>联系具有方向性，每个方向上都有一个基数。举例，“系”与“学生”两个实体之间的联系是一对多联系，换句话说“学生”和“系”之间的联系是多对一联系。而且一个学生必须属于一个系，并且只能属于一个系，不能属于零个系，所以从“学生”实体至“系”实体的基数为“1,1”，从联系的另一方向考虑，一个系可以拥有多个学生，也可以没有任何学生，即零个学生，所以该方向联系的基数就为“0,n”,如图所示<a href=\"http://www.dezai.cn/UploadFiles/20081241347617.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241347617.jpg\" width=\"372\" height=\"99\" border=\"0\" /></a><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413355368.gif\" />CDM是大多数开发者使用PD时最先创建的模型，也是整个数据库设计最高层的抽象。CDM是建立在传统的ER图模型理论之上的，ER图中有三大主要元素：实体型，属性和联系。其中实体型对应到CDM中的Entity，属性对应到CDM中每个Entity的Attribute，在概念上基本上是一一对应的。但在联系上，CDM有了比较大的扩展，除了保留ER图原有的RelationShip概念之外，还增加了Association，Inheritance两种实体关系，下面就让我们分别看看这些关系的用法和之间的区别（下图中被标红的工具栏按钮就是用来向实体中添加这些关系的）。<img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241348818.gif\" width=\"499\" height=\"34\" border=\"0\" />另外，在介绍所有这些CDM中的元素之前，笔者先给出一个很简单的CDM图，是对我们最最熟悉的学校场景的一个建模，下文中提到的所有概念在图中都有体现，大家在看下文的时候可以对照着来看：<img title=\"点击预览原图\" alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241348356.gif\" width=\"635\" height=\"492\" border=\"0\" />一. RelationShip(联系)先给出PD手册里对联系的定义：“A relationship is a link between entities. For example, in a CDM that manages human resources, the relationship Member links the entities Employee and Team, because employees can be members of teams. This relationship expresses that each employee works in a team and that each team has employees.” 可见，也许联系的概念真的太简单了吧，所以反而不那么好表述，所以PD的文档里也是用一个例子来说明出现了什么样的情况我们就认为两个实体间是有联系的。当我们提起实体间联系的时候，最先想到的恐怕是one to one，one to many 和many to many这三种联系类型，这些联系类型也是大家最熟悉的。笔者对ER图原本的概念并不精通，但在CDM中，联系还有另外三个可以设置的属性：mandatory（强制性联系）, dependent（依赖性联系/标定关联） 和dominant（统制联系）。这些属性对后面PDM的生成都有比较大的影响，需要我们一一有所了解。它们都是在联系的属性控制面板中设定的，见下图：<a href=\"http://www.dezai.cn/UploadFiles/20081241349141.gif\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241349141.gif\" width=\"523\" height=\"470\" border=\"0\" /></a>1.mandatory联系是否具有强制性，指的是实体间是不是一定会出现这种联系；或者换句话说，当我们在谈及一个联系的应用场景的时候，联系对应的那两个实体型的实体实例的个数可不可能为零。也许这样的解释还是有点抽象，让我们举两个联系的例子，一个是对两边的实体都有强制性的，另一个则不然。（1）教师--学生 联系这个联系首先是一个多对多联系，因为每个老师可以教多个学生，每个学生也都有多个老师来负责他们的学业。同时，这个联系对教师和学生都是强制性的，也就是说，不存在任何一个老师，他不负责任何一个学生的教学；也不存在任何一个学生，他没有任何一个任课老师。（2）学生--俱乐部 联系这个联系也是一个多对多关系，但它对学生这个实体型而言就不是强制的（Optional,可选的）。每个俱乐部都有至少一个学生参加，但并不是每个学生都要去参加俱乐部的活动。完全可以有一些学生，他们什么俱乐部都没参加。上面的例子主要是从概念的角度来区分了mandatory和optional的区别。实际上如果把这个模型对应到我们最后生成的表，如果A-B间的联系对A是mandatory的话，那么如果在A里面如果包含B的外键，这个外键不能为空值，反之可以为空值。后面我们谈到PDM和实际数据库的时候，大家会看到这一点。2.dependent每一个Entity型都有自己的Identifier，如果两个Entity型之间发生关联时，其中一个Entity型的Identifier进入另一个Entity型并与该 Entity型中的Identifier共同组成其Identifier时，这种关联称为标定关联,也叫依赖性关联(dependent relationship)。一个Entity型的Identifier进入另一个Entity型后充当其非Identifier时，这种关联称为非标定关联,也叫非依赖关联。概念的定义说起来还是有些拗口，说白了其实就是主-从表关系，从表要依赖于主表。比如在我们系统里要记录教师休假的情况，有一个实体型Holiday，其属性包括休假的开始时间和天数，每次有教师休假的时候，都要在这个表留下记录。从我们的场景描述中可以看到，实体型假期必须依附于实体型教师，即对于每一个假期实例，必须指向某一个教师实例。对于依赖型联系，必须注意它不可能是一个多对多联系，在这个联系中，必须有一个作为主体的实体型。一个dependent联系的从实体可以没有自己的identifier.3.dominant这个联系属性是最为简单的，它仅作用于一对一联系，并指明这种联系中的主从表关系。在A,B两个实体型的联系中，如果A--&gt;B被指定为dominant，那么A为这个一对一联系的主表，B为从表，并且在以后生成的PDM中会产生一个引用（如果不指定dominant属性的话会产生两个引用）。比如老师和班级之间的联系，因为每个班级都有一个老师做班主任，每个老师也最多只能做一个班级的班主任，所以是一个一对一关系。同时，我们可以将老师作为主表，用老师的工号来唯一确定一个班主任联系。二.Association（关联）先来看一下PD给association的定义：“An association is a connection between entities. In the Merise modeling methodology an association is used to connect several entities that each represents clearly defined objects, but are linked by an event, which may not be so clearly represented by another entity.”。在上一小段提到的那些RelationShip，在很多情况下（特别是多对多关系中），我们会把联系专门提出来，作为一个实体型放在两个需要被关联的实体型中间（在PD中，选中任何一个联系，在右键的弹出菜单中选择“Change to Entity”命令即可完成联系转实体的操作）。但有的时候，把若干个实体型之间的联系抽象为一个实体型可能不太合适，这个时候你可以选择为这些实体型建立一个association，那么在生成PDM的时候，所有这些相关实体型的identifier都会被加入到association对应生成的表模型中。所以，说白了，其实association就是实体型的一种特例，用来在建模的时候更确切的表达实体间的关联信息。在PD的文档中举了一个录音带、顾客、商店三个实体型在租借录音带这个场景上发生关联，然后把租借定义为上述三个实体型之间的association的例子，非常确切。在我们的学校模型里，我定义了家访做为老师和学生实体型中间的一个association，在接下来产生的PDM中大家就可能看到这种定义所产生的效果。三.Inheritance（继承）这种关系在概念层面是最容易理解的了，本文就不赘述了。来自：<a href=\"http://blog.csdn.net/shimiso/article/details/9195031\">http://blog.csdn.net/shimiso/article/details/9195031</a>','1378404324','1394721881','','0','0','0','562','825');
INSERT INTO `post` VALUES('120','14','\"\"','powerdesigner 常见错误','','yanue','','','1、Data Item name&nbsp;<wbr>uniquencessEntity Attribute code uniqueness我想建两个实体，这两个实体都有id属性，我想用同样的名字都叫id，在生成物理模型的时候提示：- Entity&nbsp;Attribute&nbsp;name&nbsp;uniquenessError The&nbsp;following&nbsp;entity&nbsp;attribute&nbsp;does&nbsp;not&nbsp;have&nbsp;unique&nbsp;name:-&gt;&nbsp;Entity&nbsp;Attribute&nbsp;\'Entity_1.id\' (&lt;Model&gt;::Entity_1)-&gt;&nbsp;Entity&nbsp;Attribute&nbsp;\'Entity_2.id\' (&lt;Model&gt;::Entity_2)- Entity&nbsp;Attribute&nbsp;code&nbsp;uniquenessError The&nbsp;following&nbsp;entity&nbsp;attribute&nbsp;does&nbsp;not&nbsp;have&nbsp;unique&nbsp;code:-&gt;&nbsp;Entity&nbsp;Attribute&nbsp;\'Entity_1.id\' (&lt;Model&gt;::Entity_1)-&gt;&nbsp;Entity&nbsp;Attribute&nbsp;\'Entity_2.id\' (&lt;Model&gt;::Entity_2)请问如何修改，才能生成物理模型，我不希望改实体的属性名我用的Power&nbsp;Designer&nbsp;15.1<span style=\"color: #ff8000;\">------解决方案--------------------------------------------------------</span>Tool-&gt;check&nbsp;model...去掉Entity&nbsp;Attribute下Entity&nbsp;Attribute&nbsp;name&nbsp;uniqueness&nbsp;和&nbsp;Entity&nbsp;Attribute&nbsp;code&nbsp;uniqueness<div><span style=\"color: #333333; font-family: Arial;\">2、</span><a href=\"http://blog.csdn.net/eidolon8/article/details/7267748\">This data item is already used in a primary identifie</a></div><div>菜单栏上的“tool”-〉“Model Option”-〉“Model Setting”把右边的“Data Item”数据框中的“Unique code”选项框取消掉。<img alt=\"\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/13090239-42c617c7f9fa46d5954906856b18b18d.jpg\" />&nbsp;如果在由CDM-〉PDM转换的时候提示属性错误，请把PDM GENERATION OPTIONS中的Check model钩取消掉.3、Incomplete join产生错误的reference所关联的两个表中主键不统一,调整为一致后即可解决此错误4、Existence of index colum&nbsp;<wbr>主键与外码联系出现错误(解决:双击错误记录至index Properties窗口--&gt;Columns--&gt;在Columns Defintion下拉列表中选择正确的约束),实在不行，可以将有问题的表重新建一遍，问题也可以解决。5、Existence of entity attribute对应表实体缺少主键, 而属性里&quot;identifier&quot;项有标识,删除其中的identifier_x即可解决,或者添加主键6、Entity&nbsp;<wbr>Attribute&nbsp;<wbr>code&nbsp;<wbr>uniueness在Tools——Models&nbsp;<wbr>Options——Notation，将其设置为E/R+merise7、Table code maximum length点击Database -&gt; Edit Current DBMS&nbsp;<wbr>在Script-&gt;Objects-&gt;&nbsp;<wbr>下面：&nbsp;<wbr>Table-Maxlen和&nbsp;<wbr>Column-Maxlen两个值改大。来自：<a href=\"http://blog.sina.com.cn/s/blog_9a4d43d801019uup.html\">http://blog.sina.com.cn/s/blog_9a4d43d801019uup.html</a></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></div></wbr>','1378404452','1394721854','','0','0','0','489','828');
INSERT INTO `post` VALUES('121','13','[{\"id\":16,\"name\":\"gps\"},{\"id\":15,\"name\":\"纠偏\"},{\"id\":14,\"name\":\"map\"}]','gps纠偏及大陆地图偏移原因','','yanue','','','<address>gps纠偏0.01精度工具：<a title=\"GPS坐标转换经纬度，gps纠偏\" href=\"http://map.yanue.net/gps.html\" target=\"_blank\">http://map.yanue.net/gps.html</a>，</address><p>gps纠偏实现：<a title=\"gps纠偏数据库及gps纠偏php算法\" href=\"http://yanue.net/post-122.html\">php之gps纠偏方法及纠偏数据库</a>。</p><h2><span><span>大陆地图偏移原因</span>：</span></h2><p>国家安全与地图保密插件：<span><span>国家保密插件</span></span>，也叫做加密插件或者加偏或者SM模组，其实就是对真实坐标系统进行人为的加偏处理，按照几行代码的算法，将真实的坐标加密成虚假的坐标，而这个加偏并不是线性的加偏，所以各地的偏移情况都会有所不同。而加密后的坐标也常被人称为<span><span>火星坐标系统</span></span>，这是我们的国家又一个伟大的发明，让国外的政府和企业等，都看不懂我们的坐标系统。</p><p>民间纠编地图可能引起很严重的国家安全刑事问题</p><p><span>1、偏移的起因</span>：天朝测绘局以国家安全为理由，用法律的形式对所有在天朝发行的地图类产品加了强制性规范，要求所有地图类产品都必须使用国家测绘局的一种加偏移的算法，对地图的真实坐标进行加偏移处理，之后才可能通过审批准许上市。因此，天朝的所有官方及商用地图的坐标都是偏移的，这种偏移属于非线性的，偏移量在300至500米不等，偏移方向也不定。这种加过偏移的地图坐标就是所谓“<span>火星坐标</span>”。</p><p><span>2、</span>GPS接收机本身接收卫星的信号，计算出本机所在位置的经纬度，在没有做特别处理的时候，这个经纬度是正确的。但是如果GPS支持加载地图的话，这个GPS中的地图就得受上述第一条法规的约束了，所以正式在天朝销售的行货GPS设备中的地图必须也得加偏移，处理成火星坐标。</p><p><span>3、</span>问题来了，如果仅仅是地图搞成火星坐标，但GPS仍然输出真实坐标的话，就会发生GPS的定位（及导航）跟地图不能吻合的问题。于是，只好在GPS软件中设置一个使用同样算法的加偏移功能。GPS先从卫星上得到真实坐标，然后经过加偏移程序转换成火星坐标，由于是同一个算法，所以经过软件加偏移的坐标能跟同样加了偏移的地图吻合，就是“歪到一起”了。这样就可以用GPS正常导航了——但这台GPS设备输出的坐标仍然是火星坐标，放到Google Earth上面是没法正常吻合的。</p><p><span>4、</span>由于Google Earth属于卫星照片，它不是地图，所以不受天朝测绘法的约束，因此Google Earth的坐标是真实坐标。这样，问题又来了，当你使用天朝处理过的GPS导出火星坐标（或航迹），企图把它放到Google Earth上面看看自己都走了哪些路的时候，因为Google Earth照片的坐标是真实的，而你的GPS导出的坐标是火星坐标，二者就对不上号了，你也许会看到在google Earth上，你开着车从别人的楼顶上飞过去，或者打湖里面漂过去。</p><p><span>5、</span>水货GPS因为是洋鬼子的产品，原本并非销往天朝的，洋鬼子不会玩这种加偏移的买卖，所以水货GPS设备，如果使用机器原带的地图的话，得到的坐标（或者航迹）是真实正确的，这就是水货机器的无偏地图。但是洋鬼子的设备中一般没有中文地图，如果你把天朝的官方或者正式发布的商用地图放到水货GPS设备里面的话，就会发生第3条前面说的问题：设备的真实坐标跟天朝特殊地图的火星坐标不吻合——出现偏移——无法正常导航。</p><p><span>6、</span>由于火星坐标的一系列问题，众民间人士根据那个加偏移算法自行折腾出了很多纠正了偏移的地图，这些地图的坐标是正确的。这样的地图拿到水货GPS设备上，因为水货GPS输出的坐标是真实的，所以可以完美配合工作，正确导航定位，并且输出正确的坐标——放到Google Earth上也是正确的。</p><p><span>7、</span>天朝行货GPS设备软件中的加偏移功能，是通过一个所谓空心地图文件（或者28类地图，或者快拼模块）来触发启动偏移程序的，如果用户安装非本机自带的，但属于天朝官方或者正式发布的商用地图，那要配合空心地图文件（或者把地图类别设置为28），从而让GPS软件中的加偏移程序启动，使得GPS输出火星坐标，跟地图的火星坐标吻合，如此才能正常导航——但这台GPS设备输出的坐标仍然是火星坐标，放到Google Earth上面是没法正常吻合的。</p><p><span>8、</span>天朝行货GPS设备，如果要得到真实坐标，使用民间的纠偏地图，就得把那个空心地图文件移除（或把原机自带的28类地图移除/取消，或把同样作用的快拼弄掉），这样GPS设备输出真实的坐标，才能跟纠偏地图的正确坐标吻合，实现正确导航定位，并且输出正确的坐标——放到Google Earth上也是正确的。不过，在天朝行货GPS上不能同时使用火星坐标地图和纠偏地图，否则必然有一个没法正常导航定位。</p><p><span>9、</span>水货GPS设备用民间的简体中文刷机，一般来说也没有那个加偏移程序，所以要使用纠偏地图或者无偏地图。不能使用天朝官方的火星坐标地图，不然就对不上号。</p><p><wbr>&nbsp;<wbr>&nbsp;<wbr>其实很少有人知道国家保密插件问题，但作为导航电子地图产业或者汽车导航产业中的人，多多少少都会了解到这个问题。国家是出于国家安全考虑，将我们看到的真实的坐标变成假的虚拟的坐标，这样，我们的国家就安全了，不会被恐怖分子破坏了。最简单的举例来说，比如鸟巢吧，你真实的坐标是这个，加密后就成了那个，导航电子地图上看到的就是那个，那么人家导弹要是攻击那个的时候，那么导弹就打不中我们的鸟巢啦，我们的鸟巢就安全了。不过，个人担心这样加密后没有打中鸟巢，会不会打中水立方呢，可能是无心插柳柳成荫了。</wbr></wbr></wbr></p><h2>&nbsp;<wbr>具体说说这个保密插件的问题吧，是如何运作的呢？</wbr></h2><address><wbr></wbr></address><p><wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;现在，所有的电子地图所有的导航设备，都需要加入国家保密插件。第一步，地图公司测绘地图，测绘完成后，送到国家测绘局，将真实坐标的电子地图，加密成“火星坐标”，这样的地图才是可以出版和发布的，然后才可以让GPS公司处理。第二步，所有的GPS公司，只要需要汽车导航的，需要用到导航电子地图的，统统需要在软件中加入国家保密算法，将COM口读出来的真实的坐标信号，加密转换成国家要求的保密的坐标，这样，GPS导航仪和导航电子地图就可以完全匹配啦，GPS也就可以正常工作啦。</wbr></wbr></wbr></p><p><wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;所以，所有的导航电子地图公司，像四维图新、瑞图、易图通、高德等等，都需要将自己的电子地图拿到国家测绘局进行加密处理，而所有的导航软件公司，都需要将自己的导航软件中加入国家测绘局提供的加密算法的代码。而这一段代码，就是国家的机密，不是公开的，每次去国家测绘局加密处理都需要预约并在封闭的环境中进行，编译完成后需要是在主程序的exe中，而不能编译在外部dll等文件中。</wbr></wbr></wbr></p><p><wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;当然，国家的保密插件，是需要收费的，早期的时候，一个导航仪就需要10块钱的保密插件许可费，恩，保密插件也不是白用的，毕竟国家花了很多的钱和人力和物力才做出来的保护国家安全的保密东西怎么可以随便送你用呢，收点钱也就算是正常也算是在预料之中啦。现在的话，好像已经下放到地图数据公司了，就是看这个地图数据公司的经营状况，大概会出货多少份电子地图，然后一次性收取地图数据公司多少钱，可能是多少百万，然后这个钱呢，你们数据公司就自己找你们的导航软件公司的客户收吧，算在每一台设备中的许可费，恩，国家的办事效率变高了，一次直接从导航电子地图公司收费比逐个收取导航软件公司的钱要来的容易和不那么麻烦。</wbr></wbr></wbr></p><p>现阶段，有些人或者组织，为了自己的利益，将导航软件和导航地图进行破解，并发现了导航电子地图中存在的地图偏差，所以就采取人为的手段，将地图反加密，将虚假的坐标转换成标准的WGS84坐标，最笨的方法就是线性的平移，大概偏差的距离为500米，基本上能够反回来，但误差较大，特别是南北距离加大的情况下，而聪明一点的方法，用matlab等工具计算出其中的曲线，然后反转回来。多么的可怕那，这是触犯国家法律的行为，国家的安全就这样被你们破坏了，这是一个刑事问题，而不是简单的破解软件破解地图的经济犯罪问题了。请大家务必务必遵守国家的法律，不要干出这样的傻事出来，出了事谁都保不了你，毕竟你将成为国家的敌人。</p><p><wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;最后，说说保密插件带来的弊端，好处不容忽视，国家为了安全考虑，保密了就安全了，但弊端是，制造了人为的障碍，非常的不好用，比如导航软件出来的坐标，不能和Google Earth等国际软件匹配，Google Earth和Map在国内基本上就是废物。进一步带来的导航问题是，寻宝、分享等许多好玩的GPS活动，都无法在大陆地区展开，这一点真的让人很无奈。当然，也有一些时候，由于导航软件的保密插件问题，导致不能导航等等。保密插件，是一个让人哭笑不得的东西，就如同国际的WGS84坐标对我们的54坐标或者80坐标，就如同最近的国家部门准备开发“影像中国”反制google earth的泄密问题。等等种种，法律不可逾越，但我们也不希望人为的制造麻烦，或者为了更深入的经济利益。</wbr></wbr></wbr></p>','1378591284','1394721636','','1','0','3','3343','845');
INSERT INTO `post` VALUES('122','13','[{\"id\":16,\"name\":\"gps\"},{\"id\":15,\"name\":\"纠偏\"},{\"id\":14,\"name\":\"map\"}]','gps纠偏数据库及gps纠偏算法PHP','','yanue','','','<pre></pre><address>gps设备获取的经纬度跟实际地图经纬度有偏移，大陆地图是这样的。google地图存在偏移是众所周知的事实，说到底就是<span>火星坐标系和真实gps之间</span>的转换，我国所有的地图为了安全起见都作了加偏。</address><p>具体偏移原因见:&nbsp;<a title=\"gps纠偏及大陆地图偏移原因\" href=\"http://yanue.net/post-121.html\" rel=\"bookmark\">gps纠偏及大陆地图偏移原因</a>。</p><p>总之，gps是从卫星上获取的经纬度，是准确的：<a title=\"GPS坐标转换经纬度及换算方法\" href=\"http://yanue.net/post-42.html\" rel=\"bookmark\">GPS坐标转换经纬度及换算方法</a>。实际的地图都在原有的基础上加偏移值，天朝说是为了安全呗。因此，gps获取出来的经纬度直接在地图上展示，那肯定是不准确的，有偏差。当然不管google map,百度地图，搜狗地图等每一个都一样，但是他们的偏移算法肯定不一样，偏移的值也不一样。</p><p>google的国内地图坐标都是加过密的，由高德提供。百度的地图数据也是加过密的，估计是四维提供。但是不同批次的数据加密后的坐标是有偏差的。总而言之，相对GPS数据，两种地图都是有偏差的。</p><p>经纬度在<a href=\"http://maps.google.com/\" target=\"_blank\">http://maps.google.com</a>和google earth上可以准确对应，但是在ditu.google.cn和百度地图上得到的总是偏移的</p><p>既然有了偏移，就需要使用纠偏来解决gps定位问题，</p><p></p><h2>GPS坐标转百度坐标方法：</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">http://api.map.baidu.com/ag/coord/convert?from=0&amp;to=4&amp;x=’.经度.’&amp;y=’.纬度</pre><p></p><p>google目前没有类似百度这样的，只能通过纠偏数据库进行校验。</p><p>纠偏数据库都是要钱的，0.001精度2-5k都有卖，我网上找到一个0.01精度的，是一个&nbsp;offset.dat 文件, 总共74.9M,数据为9813675条,不敢独享，分享给大家.</p><h2><span>google纠偏数据库</span>：</h2><p><a title=\"google纠偏数据库\" href=\"http://map.yanue.net/offset.dat\">http://map.yanue.net/offset.dat</a>.</p><p>基于该数据库，我搞个的纠偏接口</p><h2><span>免费纠偏接口</span>:&nbsp;</h2><p><a href=\"http://map.yanue.net/gpsApi.php?lat=22.502412986242&amp;lng=113.93832783228\" target=\"_blank\">http://map.yanue.net/gpsApi.php</a></p><p><strong>参数:</strong></p><p><strong><span>lat</span>: </strong>gps原始纬度,如22.502412986242,请保留小数点3位以上</p><p><strong><span>lng</span>: </strong>gps原始经度,如113.93832783228,请保留小数点3位以上</p><h2>gps纠偏工具：</h2><p><a title=\"GPS坐标转换经纬度\" href=\"http://map.yanue.net/gps.html\">http://map.yanue.net/gps.html</a></p><p>说正题，有了偏移数据库之后，根据算法就可以完成目的了。</p><p>下面贴出纠偏算法</p><h2>php利用offset.dat修正gps经纬度的算法：</h2><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?php\n/**\n * gps经纬度修正\n *\n * 功能说明:利用0.01精度校正库offset.dat文件修正中国地图经纬度偏移。\n *         该校正适用于 Google map China, Microsoft map china ,MapABC 等，这些地图构成方法是一样的。\n * 使用方法:\n        $gps = new GpsOffset();\n        echo $gps-&gt;geoLatLng($lat,$lng);\n * 注意: 请在服务器开启offset.dat读取权限\n * @author yanue (yanue@outlook.com)\n * @version 1.0\n * @copyright yanue.net\n * @time 2013-06-30\n */\n\nclass GpsOffset {\n    const datMax = 9813675;# 该文件最大数据为9813675条\n    private $fp = null;\n    /*\n     * 构造函数，打开 offset.dat 文件并初始化类中的信息\n     * @param string $filename\n     * @return null\n     */\n    function __construct($filename = &quot;offset.dat&quot;) {\n        if (($this-&gt;fp = @fopen($filename, \'rb\')) !== false) {\n            //注册析构函数，使其在程序执行结束时执行\n            register_shutdown_function(array(&amp;$this, \'__construct\'));\n        }\n    }\n\n    /*\n     * 读取dat文件并查找偏移像素值\n     * 说明:\n     * dat文件结构:该文件为0.01精度校正数据,并以lng和lat递增形式组合.\n     * 其中以8个字节为一组:\n     * lng : 2字节经度,如12151表示121.51\n     * lat : 2字节纬度,如3130表示31.30\n     * x_off : 2字节地图x轴偏移像素值\n     * y_off : 2字节地图y轴偏移像素值\n     * 因此采用二分法并以lng+lat的值作为条件\n     * 注意:请在服务器开启offset.dat读取权限\n     *\n     */\n    private function fromEarthToMars($lat,$lng){\n        $tmpLng=intval($lng * 100);\n        $tmpLat=intval($lat * 100);\n        $left = 0; //开始记录\n        $right = self::datMax; //结束记录\n        $searchLngLat = $tmpLng.$tmpLat;\n        // 采用用二分法来查找查数据\n        while($left &lt;= $right){\n            $recordCount =(floor(($left+$right)/2))*8; // 取半\n            fseek ( $this-&gt;fp, $recordCount , SEEK_SET ); // 设置游标\n            $c = fread($this-&gt;fp,8); // 读8字节\n            $lng = unpack(\'s\',substr($c,0,2));\n            $lat = unpack(\'s\',substr($c,2,2));\n            $x = unpack(\'s\',substr($c,4,2));\n            $y = unpack(\'s\',substr($c,6,2));\n            $curLngLat=$lng[1].$lat[1];\n            if ($curLngLat==$searchLngLat){\n                fclose($this-&gt;fp);\n                return array(\'x\'=&gt;$x[1],\'y\'=&gt;$y[1]);\n                break;\n            }else if($curLngLat&lt;$searchLngLat){\n                $left=($recordCount/8) + 1;\n            }else if($curLngLat&gt;$searchLngLat){\n                $right=($recordCount/8) - 1;\n            }\n        }\n        fclose($this-&gt;fp);\n        return false;\n    }\n\n    // 转换经纬度到\n    public function geoLatLng($lat,$lng){\n        $offset =$this-&gt;fromEarthToMars($lat,$lng);\n        $lngPixel=$this-&gt;lngToPixel($lng,18)+$offset[\'x\'];\n        $latPixel=$this-&gt;latToPixel($lat,18)+$offset[\'y\'];\n        $mixLat = $this-&gt;pixelToLat($latPixel,18);\n        $mixLng = $this-&gt;pixelToLng($lngPixel,18);\n        return array(\'lat\'=&gt;$mixLat,\'lng\'=&gt;$mixLng);\n    }\n    //经度到像素X值\n    private function lngToPixel($lng,$zoom) {\n        return ($lng+180)*(256&lt;&lt;$zoom)/360;\n    }\n\n    //纬度到像素Y值\n    private function latToPixel($lat, $zoom) {\n        $siny = sin($lat * pi() / 180);\n        $y=log((1+$siny)/(1-$siny));\n        return (128&lt;&lt;$zoom)*(1-$y/(2*pi()));\n    }\n\n    //像素X到经度\n    private function pixelToLng($pixelX,$zoom){\n        return $pixelX*360/(256&lt;&lt;$zoom)-180;\n    }\n\n    //像素Y到纬度\n    private function pixelToLat($pixelY, $zoom) {\n        $y = 2*pi()*(1-$pixelY /(128 &lt;&lt; $zoom));\n        $z = pow(M_E, $y);\n        $siny = ($z -1)/($z +1);\n        return asin($siny) * 180/pi();\n    }\n\n    public function __destruct(){\n        if($this-&gt;fp){\n            fclose($this-&gt;fp);\n        }\n        $this-&gt;fp = null;\n    }\n}</pre>参考文章：<a href=\"http://go2log.com/2011/08/30/%E4%B8%AD%E5%9B%BD%E5%9C%B0%E5%9B%BE%E5%81%8F%E7%A7%BB%E6%A0%A1%E6%AD%A3php%E7%AE%97%E6%B3%95/\">http://go2log.com/2011/08/30/%E4%B8%AD%E5%9B%BD%E5%9C%B0%E5%9B%BE%E5%81%8F%E7%A7%BB%E6%A0%A1%E6%AD%A3php%E7%AE%97%E6%B3%95/</a>（有c#算法）至此，文章完。&nbsp;','1378595248','1394721344','','1','0','3','3251','853');
INSERT INTO `post` VALUES('123','11','[{\"id\":13,\"name\":\"ubuntu\"}]','ubuntu错误解决E: Sub-process /usr/bin/dpkg returned an error code (1)','','yanue','','','<p></p>在用apt-get安装软件时出现了类似于<br />install-info: No dir file specified; try –help for more information.dpkg：处理 gettext (–configure)时出错： 子进程 post-installation script 返回了错误号 1 在处理时有错误发生：<br />findutils<br /><span style=\"color:#ff0000;\"><span style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">E: Sub-process /usr/bin/dpkg returned an error code (1)</span><br /></span><h2>办法如下：</h2><p></p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo mv /var/lib/dpkg/info /var/lib/dpkg/info.bak //现将info文件夹更名\nsudo mkdir /var/lib/dpkg/info //再新建一个新的info文件夹\nsudo apt-get update</pre><p></p>// 不用解释了吧<pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">apt-get -f install xxx\nsudo mv /var/lib/dpkg/info/* /var/lib/dpkg/info.bak</pre></pre>//执行完上一步操作后会在新的info文件夹下生成一些文件，现将这些文件全部移到info.bak文件夹下<pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo rm -rf /var/lib/dpkg/info //把自己新建的info文件夹删掉\nsudo mv /var/lib/dpkg/info.bak /var/lib/dpkg/info //把以前的info文件夹重新改回名字</pre></pre><p>到此问题顺利解决</p><h2>第二种方法：</h2><pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">for i in /usr/share/fonts/X11/* /usr/share/fonts/truetype/*\ndo sudo touch &quot;$i&quot;\ndone</pre></pre><h2>第三种方法：</h2><pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo apt-get update --fix-missing\nsudo apt-get autoremove &amp;&amp; sudo apt-get clean &amp;&amp; sudo apt-get install -f</pre></pre><p>参考：</p><p><a href=\"http://www.cnblogs.com/jary-wang/archive/2013/05/28/3103829.html\">http://www.cnblogs.com/jary-wang/archive/2013/05/28/3103829.html</a></p><p><a href=\"http://www.ubuntukylin.com/ukylin/forum.php?mod=viewthread&amp;tid=3789\">http://www.ubuntukylin.com/ukylin/forum.php?mod=viewthread&amp;tid=3789</a></p>','1378857944','1394720399','','1','0','2','4365','887');
INSERT INTO `post` VALUES('124','12','[{\"id\":12,\"name\":\"mysql\"}]','解决mysqldump备份报错：SET OPTION SQL_QUOTE_SHOW_CREATE=1','','yanue','','','<p>在使用mysqldump备份数据库的时候报如下错误，</p><p></p><pre>mysqldump: Couldn\'t execute \'SET OPTION SQL_QUOTE_SHOW_CREATE=1\': You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'OPTION SQL_QUOTE_SHOW_CREATE=1\' at line 1 (1064)</pre><p></p><p>mysqldump命令使用方法参见：<a href=\"http://yanue.net/post-64.html\">http://yanue.net/post-64.html</a></p><p>下面解决方法来源于网络，针对我的版本是mysql5.6，问题解决。</p><p>使用命令查看：</p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">rpm -qa | grep -i mysql</pre><br />经排查发现是数据库版本问题、安装的是mysql5.6 、执行该命令是mysql5.5遗留下来的二进制文件、验证如下<br /><pre class=\"prettyprint linenums prettyprinted lang-php \">[root@yanue mysql]# which mysqldump\n/usr/bin/mysqldump</pre><p></p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">最后找到解决办法、用新安装的mysql绝对路径来实现备份</p><pre class=\"prettyprint linenums prettyprinted lang-php \">#/usr/local/mysql/bin/mysqldump --socket=/tmp/mysql.sock -uroot -p --lock-all-tables zabbix &gt; zabbix.sql</pre><p></p><section class=\"post-content\" style=\"margin: 12px 0px; padding: 20px 8px; border-width: 1px 0px; border-top-style: dashed; border-bottom-style: dashed; border-top-color: rgb(224, 224, 224); border-bottom-color: rgb(224, 224, 224); outline: 0px; vertical-align: baseline;\"><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">另外：由于mysql server端的版本为5.6,mysql client端的版本为5.5,所以把mysql client端的版本也升到了5.6,再次执行mysqldump就好了.</p></section><p></p>','1378874035','1394719913','','1','0','0','1568','893');
INSERT INTO `post` VALUES('125','11','\"\"','ubuntu中解压zip文件时乱码的问题','','yanue','','','处理ubuntu中解压zip文件时乱码的问题<div></div><h2>第一步 首先安装7zip和convmv</h2><div><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo apt-get install p7zip-full convmv</pre></div><h2>第二步 假设zip文件名为open.zip，那么</h2><div><pre class=\"prettyprint linenums prettyprinted lang-php \">LANG=C 7z x open.zip \nconvmv -f cp936 -t utf8 -r --notest *</pre><br /></div><div></div><div>使用第一行命令时会解压出一些乱码文件，此时输入第二行命令即可将这些乱码处理掉</div><div></div><div>解决pdf中中文乱码的问题：</div><div><pre class=\"prettyprint linenums prettyprinted lang-php \">sudo apt-get install poppler-data</pre><br /></div><div></div><div>&nbsp;rar乱码问题见：<a href=\"http://yanue.net/post-70.html\">http://yanue.net/post-70.html</a></div><div><br /></div><div></div><div>测试成功</div>','1379290045','1394719396','','1','0','0','535','918');
INSERT INTO `post` VALUES('126','3','\"\"','linux alias 自定义命令','','yanue','','','<strong></strong><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\"><span style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\"><strong>语　　法：</strong></span>alias[别名]=[指令名称]</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\"><span style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\"><strong>补充说明：</strong></span>用户可利用alias，自定指令的别名。若仅输入alias，则可列出目前所有的别名设置。　alias的效力仅及于该次登入的操作。若要每次登入是即自动设好别名，可在/etc/profile或自己的~/.bashrc中设定指令的别名。</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">还有，如果你想给每一位用户都生效的别名，请把alias la=’ls -al’ 一行加在/etc/bashrc最后面，</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">bashrc是环境变量的配置文件 /etc/bashrc和~/.bashrc 区别就在于</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">/etc/bashrc&nbsp;是设置给全系统</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">~/.bashrc&nbsp;是设置给单用户使用.</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\"><span style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\"><strong>参　　数：</strong></span>若不加任何参数，则列出目前所有的别名设置。</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">CentOS5.6自带的alias定义</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">取消别名的方法是在命令前加,比如 mkdir<span style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\"><br /></span></p><div style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\"><pre class=\"prettyprint linenums prettyprinted lang-php \">[root@yanue.net ~]#alais\nalias cp=’cp -i’\nalias l.=’ls -d .* –color=tty’\nalias ll=’ls -l –color=tty’\nalias ls=’ls –color=tty’\nalias mv =’mv -i’\nalias rm =’rm -i’\nalias which=’alias | /usr/bin/which –tty-only –read-alias –show-dot –show-tilde’</pre><br /></div><div style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\"></div><div style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">有的系统里没有ll这个命令,原因就是没有定义ll=’ls -l –color=tty’这个别名</div><div style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\"></div><div style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">利用alias可以把很长的命令变成任意我们喜欢的简短的</div><div style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\"></div><div style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">设置和修改alias命令别名格式很简单</div><div style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\"></div><div style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\"><pre class=\"prettyprint linenums prettyprinted lang-php \">alias ll=’ls -l –color=tty’\nsource .bashrc   #让我们的环境生效</pre><br /></div><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">如果想永久生效,就把这条写入到 /etc/bashrc里面</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\"><span style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">修改后，</span>通过以下命令即可生效：</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\"><pre class=\"prettyprint linenums prettyprinted lang-php \">source /etc/bashrc\n</pre>或者<span style=\"color:#ff6600;\">重新登录即可</span><br /></p><span style=\"color: rgb(255, 0, 0);\"><strong></strong></span>','1381095163','1394719285','','1','0','0','479','930');
INSERT INTO `post` VALUES('127','10','\"\"','CentOS下编译php时的一些典型错误及解决办法','','yanue','','','yum安装必要工具(能解决比编译遇到到基本问题):<pre class=\"prettyprint linenums prettyprinted lang-php \">yum -y install gcc gcc-c++  make cmake automake autoconf kernel-devel ncurses-devel libxml2-devel openssl-devel curl-devel libjpeg-devel libpng-devel  pcre-devel libtool-libs freetype-devel gd zlib-devel file bison patch mlocate flex diffutils   readline-devel glibc-devel glib2-devel bzip2-devel gettext-devel libcap-devel libmcrypt-devel openldap openldap-devellibxslt-devel\n</pre><br />configure: error: xml2-config not found. Please check your libxml2 installation.<pre class=\"lang:php decode:true \"><span style=\"font-family: Arial, Helvetica, sans-serif;\"></span><pre class=\"prettyprint linenums prettyprinted lang-php \">yum install libxml2-devel\n</pre><pre class=\"lang:php decode:true \"></pre><pre class=\"lang:php decode:true \"></pre>configure: error: Cannot find OpenSSL’s<br /></pre><pre class=\"lang:php decode:true \"><span style=\"font-family: Arial, Helvetica, sans-serif;\"></span><pre class=\"prettyprint linenums prettyprinted lang-php \">yum install openssl-devel\n</pre><pre class=\"lang:php decode:true \"></pre><pre class=\"lang:php decode:true \"></pre>configure: error: Please reinstall the libcurl distribution -easy.h should be in /include/curl/</pre><pre class=\"lang:php decode:true \"><span style=\"font-family: Arial, Helvetica, sans-serif;\"></span><pre class=\"prettyprint linenums prettyprinted lang-php \">yum install curl-devel\n</pre><pre class=\"lang:php decode:true \"></pre><pre class=\"lang:php decode:true \"></pre>configure: error: libjpeg.(a|so) not found<br /></pre><pre class=\"lang:php decode:true \"><span style=\"font-family: Arial, Helvetica, sans-serif;\"></span><pre class=\"prettyprint linenums prettyprinted lang-php \">yum install libjpeg-devel\n</pre><pre class=\"lang:php decode:true \"></pre><pre class=\"lang:php decode:true \"></pre>configure: error: libpng.(a|so) not found.<br /></pre><pre class=\"lang:php decode:true \"><span style=\"font-family: Arial, Helvetica, sans-serif;\"></span><pre class=\"prettyprint linenums prettyprinted lang-php \">yum install libpng-devel\n</pre><pre class=\"lang:php decode:true \"></pre>configure: error: libXpm.(a|so) not found.</pre><pre class=\"lang:php decode:true \"><span style=\"font-family: Arial, Helvetica, sans-serif;\"></span><pre class=\"prettyprint linenums prettyprinted lang-php \">yum install libXpm-devel\n</pre><pre class=\"lang:php decode:true \"></pre><pre class=\"lang:php decode:true \"></pre>configure: error: freetype.h not found.<br /></pre><pre class=\"lang:php decode:true \"><span style=\"font-family: Arial, Helvetica, sans-serif;\"></span><pre class=\"prettyprint linenums prettyprinted lang-php \">yum install freetype-devel\n</pre>&nbsp;</pre><pre class=\"lang:php decode:true \">configure: error: utf8_mime2text() has new signature, but U8T_CANONICAL is missing. This should not happen. Check config.log for additional information.\n</pre><pre class=\"lang:php decode:true \"><span style=\"font-family: Arial, Helvetica, sans-serif;\"></span><pre class=\"prettyprint linenums prettyprinted lang-php \">yum install libc-client-devel\n</pre>&nbsp;</pre><pre class=\"lang:php decode:true \">configure: error: mcrypt.h not found. Please reinstall libmcrypt.\n</pre><pre class=\"lang:php decode:true \"><span style=\"font-family: Arial, Helvetica, sans-serif;\"></span><pre class=\"prettyprint linenums prettyprinted lang-php \">yum install libmcrypt-devel\n</pre>&nbsp;</pre><pre class=\"lang:php decode:true \">configure: error: Please reinstall libmhash – I cannot find mhash.h\n</pre><pre class=\"lang:php decode:true \"><span style=\"font-family: Arial, Helvetica, sans-serif;\"></span><pre class=\"prettyprint linenums prettyprinted lang-php \">yum install mhash-devel\n</pre>&nbsp;</pre><pre class=\"lang:php decode:true \">configure: error: Cannot find MySQL header files under /usr.Note that the MySQL client library is not bundled anymore!\n</pre><pre class=\"lang:php decode:true \"><span style=\"font-family: Arial, Helvetica, sans-serif;\"></span><pre class=\"prettyprint linenums prettyprinted lang-php \">yum install mysql-devel\n</pre>&nbsp;</pre><pre class=\"lang:php decode:true \">configure: error: Please reinstall ming distribution. libming.(a|so) not found- temp remove the config for ‘–with-ming=/opt/ming/’configure: error: Cannot find pspell\n</pre><pre class=\"lang:php decode:true \"><span style=\"font-family: Arial, Helvetica, sans-serif;\"></span><pre class=\"prettyprint linenums prettyprinted lang-php \">yum install pspell-devel\n</pre>&nbsp;</pre><pre class=\"lang:php decode:true \">configure: error: cannot find mm libraryDownload from&nbsp;<a href=\"http://www.ossp.org/pkg/lib/mm/\" style=\"font-family: Arial, Helvetica, sans-serif;\">http://www.ossp.org/pkg/lib/mm/</a>\n</pre><pre class=\"lang:php decode:true \"><pre class=\"prettyprint linenums prettyprinted lang-php \">wget ftp://ftp.ossp.org/pkg/lib/mm/mm-1.4.2.tar.gz\ntar -zxvf mm-1.4.2.tar.gz\n./configure\nmake\nmake install</pre><br /></pre>configure: error: Cannot find libtidy<pre class=\"lang:php decode:true \"><pre class=\"prettyprint linenums prettyprinted lang-php \">yum install libtidy-devel\nyum install libtidy</pre><br /></pre>change path at configure: ‘–with-tidy=/usr’configure: error: not found. Please reinstall the expat distribution.<pre class=\"lang:php decode:true \"><span style=\"font-family: Arial, Helvetica, sans-serif;\"></span><pre class=\"prettyprint linenums prettyprinted lang-php \">yum install expat-devel\n</pre>&nbsp;</pre><pre class=\"lang:php decode:true \">configure: error: xslt-config not found. Please reinstall the libxslt &gt;= 1.1.0 distribution\n</pre><pre class=\"lang:php decode:true \"><span style=\"font-family: Arial, Helvetica, sans-serif;\"></span><pre class=\"prettyprint linenums prettyprinted lang-php \">yum install libxslt-devel\n</pre>*Tips: To uninstall, just enter:yum remove {package-name}<br /></pre>','1381117903','1394719147','','1','0','0','583','936');
INSERT INTO `post` VALUES('128','9','[{\"id\":11,\"name\":\"sphinx\"}]','Sphinx+Scws全文检索引擎方案安装部署','','yanue','','','<p></p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">Sphinx是一个基于SQL的全文检索引擎；普遍使用于很多网站；但由于中英文的差异，其本身，对中文的支持并不好。主要是中英文分词方法不一样：英文只需按照空格对其分词即可，中文来说，却是件困难的事情。</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">在合适的场景，选择合适的方案，得出最优的解。</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">三种目前最常用的方案Coreseek、Sphinx-for-chinaese、Sphinx+Scws，并对其简单对比：<br />一、Coreseek 为国人基于Sphinx开发的方案，目前最稳定版，是基于经典的Sphinx0.9.9版</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">优点：有成熟的文档、以及社区；其分词mmseg为目前国内最为好用分词，索引和搜索分词都可以用到；<br />缺点：深度开发、版本更新较慢；索引较慢<br />策略：一个词库管理后台，维护词库；定期生成字典；此套件会自动分词索引；<br />适用场景：普通青年、搭建差不多的搜索，适用于普遍网站</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">二、Sphinx-for-chinaese 为国人2基于经典的Sphinx0.9.9版开发的扩展版<br />优点：部署简单，易操作，内嵌分词和词库，索引和搜索分词都可以用到；<br />缺点:版本更新较慢；分词较弱；索引相对较慢<br />策略：同一<br />适用场景：普通青年、快速搭建搜索的小站</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">三、<span style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">Sphinx+Scws</span>&nbsp;为两套独立系统，单独部署，所谓高内聚低耦合，强烈推荐<br />优点：两套系统，相对独立，各自单独Server；分词可以做其他用途；版本更新较快；<br />缺点：部署稍复杂，使用稍复杂；索引分词只能用一元分词，数据量较大<br />策略：词库管理外；使用时，先调用分词服务，后调用搜索<br />适用场景：文艺青年、搭建像样点的搜索；好吧文艺青年</p><h2>一，安装Sphinx:</h2><pre class=\"lang:php decode:true\" title=\"sphinx 安装\"><pre class=\"prettyprint linenums prettyprinted lang-php \">cd /usr/local/src\nwget http://sphinxsearch.com/files/sphinx-2.1.2-release.tar.gz\ntar -xzvf sphinx-2.1.2-release.tar.gz\ncd sphinx-2.1.2-release\n./configure --prefix=/usr/local/sphinx --with-mysql --with-static-mysql \nmake \nmake install\n# 添加到环境变量\necho export PATH=$PATH:/usr/local/sphinx/bin/ &gt;&gt; /etc/profile\nsource /etc/profile</pre><br /></pre><p>安装libsphinxclient:</p><pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">cd api/libsphinxclient\n./configure --prefix=/usr/local/sphinx/libsphinxclient\nmake &amp;&amp; make install</pre><br /></pre><p>安装Sphinx的PHP扩展:</p><pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">cd /usr/local/src\nwget -c http://pecl.php.net/get/sphinx-1.3.0.tgz\ntar zxvf sphinx-1.3.0.tgz\ncd sphinx-1.3.0\nphpize\n./configure --with-sphinx=/usr/local/sphinx/libsphinxclient --with-php-config=/usr/local/php/bin/php-config\nmake &amp;&amp; make install\necho &quot;[Sphinx]&quot; &gt;&gt; /usr/local/php/etc/php.ini\necho &quot;extension = sphinx.so&quot; &gt;&gt; /usr/local/php/etc/php.ini</pre><br /></pre>注意：我个人php安装到路径是/usr/local/php，需根据自己情况进行修改配置：<pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">cd /usr/local/sphinx/etc\ncp sphinx.conf.dist sphinx.conf\nvi sphinx.conf</pre><br /></pre>配置文件详解见：<a title=\"sphinx配置文件详解 \" href=\"http://yanue.net/post-129.html\">http://yanue.net/post-129.html</a>测试：<pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">mysql -u test &lt; /usr/local/sphinx/etc/example.sql\n</pre><h2>二，scws安装：</h2></pre><pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">cd /usr/local/src\nwget http://www.xunsearch.com/scws/down/scws-1.2.2.tar.bz2\ntar xvjf scws-1.2.2.tar.bz2\ncd scws-1.2.2\n./configure --prefix=/usr/local/scws\nmake &amp;&amp; make install</pre><br /></pre>scws的PHP扩展安装:<pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">cd ./phpext\nphpize \n./configure --with-php-config=/usr/local/php/bin/php-config\nmake &amp;&amp; make install\necho &quot;[scws]&quot; &gt;&gt; /usr/local/php/etc/php.ini \necho &quot;extension = scws.so&quot; &gt;&gt; /usr/local/php/etc/php.ini\necho &quot;scws.default.charset = utf-8&quot; &gt;&gt; /usr/local/php/etc/php.ini\necho &quot;scws.default.fpath = /usr/local/scws/etc/&quot; &gt;&gt; /usr/local/php/etc/php.ini</pre><br /></pre>词库安装:<pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">cd /usr/local/src\nwget http://www.xunsearch.com/scws/down/scws-dict-chs-utf8.tar.bz2\ntar jxvf scws-dict-chs-utf8.tar.bz2 -C /usr/local/scws/etc/\nchown www:www /usr/local/scws/etc/dict.utf8.xdb</pre><br /></pre>下篇：sphinx配置文件详解 ：<a href=\"http://yanue.net/post-129.html\">http://yanue.net/post-129.html</a>','1381947533','1394718787','','1','0','0','751','944');
INSERT INTO `post` VALUES('129','9','[{\"id\":\"11\",\"name\":\"sphinx\"}]','sphinx配置文件详解','','yanue','','','<span style=\"color: #ff0000;\"></span><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">sphinx的配置:<br /></p><h2 style=\"margin-bottom: 1.3em;\">其结构组成主要如下:</h2><p style=\"margin-bottom: 1.3em;\">Source 源名称1{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //指定数据源</p><p style=\"margin-bottom: 1.3em;\">一些配置</p><p style=\"margin-bottom: 1.3em;\">}</p><p style=\"margin-bottom: 1.3em;\">Index 索引名称1{</p><p style=\"margin-bottom: 1.3em;\">Source=源名称1</p><p style=\"margin-bottom: 1.3em;\">}</p><p style=\"margin-bottom: 1.3em;\">Source 源名称2{</p><p style=\"margin-bottom: 1.3em;\">一些配置</p><p style=\"margin-bottom: 1.3em;\">}</p><p style=\"margin-bottom: 1.3em;\">Index 索引名称2{</p><p style=\"margin-bottom: 1.3em;\">Source=源名称2</p><p style=\"margin-bottom: 1.3em;\">}</p><p style=\"margin-bottom: 1.3em;\">Indexer{</p><p style=\"margin-bottom: 1.3em;\">mem_limit = 32M</p><p style=\"margin-bottom: 1.3em;\">}</p><p style=\"margin-bottom: 1.3em;\">Searchd{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //配置 searchd 守护程序本身</p><p style=\"margin-bottom: 1.3em;\">}</p><h2 style=\"margin-bottom: 1.3em;\">二.&nbsp;&nbsp;&nbsp; Source 源名称 相关配置说明</h2><p style=\"margin-bottom: 1.3em;\">Type=数据库类型(Mysql 或SQL);</p><p style=\"margin-bottom: 1.3em;\">Sql_host= &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 数据库主机地址(如果是外网,请确保防火墙允许链接)</p><p style=\"margin-bottom: 1.3em;\">Sql_user=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 数据库用户名</p><p style=\"margin-bottom: 1.3em;\">Sql_pass=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 数据库密码</p><p style=\"margin-bottom: 1.3em;\">Sql_db=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 数据库名称</p><p style=\"margin-bottom: 1.3em;\">Sql_port=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 数据库端口</p><p style=\"margin-bottom: 1.3em;\">Sql_query_pre=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 执行SQL前设置的编码 (SET NAMES UTF8)</p><p style=\"margin-bottom: 1.3em;\">Sql_query=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 全文检索要显示的内容,据官方说法:尽可能不要使用WHERE或GROUPBY ,将其交给SPHINX效率会更高;select 出来的字段必须包含至少一个唯一主键,以及全文检索的字段 sphinx 会对SELECT 中的 字段1 ,字段2 建立sphinx自己的索引 及 在查询的字段中查找关键字</p><pre class=\"prettyprint linenums prettyprinted lang-php \">Sql_query_info= SELECT * FROM Inventory WHERE id=$id  来查找匹配记录 在查询中，$id 被替换为 searchd 返回的每个主键 (调试是使用 建议注释此项)</pre><p></p><p style=\"margin-bottom: 1.3em;\">Strip_html= 0/1 &nbsp;&nbsp;&nbsp;&nbsp; 是否去掉HTML标签</p><p style=\"margin-bottom: 1.3em;\">Sql_attr_uint=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 无符号整数属性,可以设置多个,设置数据库字段,设置哪个能显示出哪个字段数据的整形来.</p><h2 style=\"margin-bottom: 1.3em;\"><span data-mce-style=\"color: #ff0000;\">三.&nbsp;&nbsp;&nbsp; Index中配置说明</span></h2><p style=\"margin-bottom: 1.3em;\">Source=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 数据源名称</p><p style=\"margin-bottom: 1.3em;\">Path =&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 索引记录存放目录,注:d:/sphinx/data/cg 这个的意思是 在data目录下创建一个名为cg的文件</p><p style=\"margin-bottom: 1.3em;\">min_word_len=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 索引的词的最小长度 设为1 既可以搜索单个字节搜索,越小 索引越精确,但建立索引花费的时间越长</p><p style=\"margin-bottom: 1.3em;\">charset_type= &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; utf-8/gbk 设置数据编码</p><p style=\"margin-bottom: 1.3em;\">charset_table=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 字符表和大小写转换规则 .频繁应用于sphinx的分词过程</p><p style=\"margin-bottom: 1.3em;\">min_prefix_len =&nbsp;&nbsp;&nbsp; 最小前缀(0)</p><p style=\"margin-bottom: 1.3em;\">min_infix_len =&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 最小中缀(1)</p><p style=\"margin-bottom: 1.3em;\">ngram_len = &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对于非字母型数据的长度切割(默认已字符和数字切割,设置1为按没个字母切割)</p><h2 style=\"margin-bottom: 1.3em;\"><span data-mce-style=\"color: #ff0000;\">四.&nbsp;&nbsp;&nbsp; searchd配置说明</span></h2><p style=\"margin-bottom: 1.3em;\">port=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sphinx的端口(9312 与 searchd.exe监听结果一致)</p><p style=\"margin-bottom: 1.3em;\">log=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 服务进程日志存放路径，一旦sphinx出现异常，基本上可以从这里查询有效信息</p><p style=\"margin-bottom: 1.3em;\">query_log=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 客户端查询日志 尤为有用 它将在运行时显示每次搜索并显示结果</p><p style=\"margin-bottom: 1.3em;\">read_timeout=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 请求超时(5)</p><p style=\"margin-bottom: 1.3em;\">max_children=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 同时可执行的最大searchd 进程数(30)</p><p style=\"margin-bottom: 1.3em;\">pid_file=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 进程ID文件</p><p style=\"margin-bottom: 1.3em;\">max_matches=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 查询结果的最大返回数</p><p style=\"margin-bottom: 1.3em;\">seamless_rotate=&nbsp;&nbsp;&nbsp; 是否支持无缝切换，做增量索引时通常需要(0/1)</p><p style=\"margin-bottom: 1.3em;\"># 在启动运行时是否提前加载所有索引文件</p><p style=\"margin-bottom: 1.3em;\">preopen_indexes = 0</p><p style=\"margin-bottom: 1.3em;\"># 是否释放旧的索引文件<br />unlink_old = 1</p><p style=\"margin-bottom: 1.3em;\"># MVA跟新池大小(默认为1M)<br />mva_updates_pool = 1M</p><p style=\"margin-bottom: 1.3em;\"># 最大允许的网络包大小(默认8M)<br />max_packet_size = 8M</p><p style=\"margin-bottom: 1.3em;\"># 每个查询最大允许的过滤器数量(默认256)<br />max_filters = 256</p><p style=\"margin-bottom: 1.3em;\">#每个过滤器最大允许的值的个数(默认4096)<br />max_filter_values = 4096</p><p style=\"margin-bottom: 1.3em;\"># 每个组的最大查询数(默认为32)<br />max_batch_queries = 32</p><p style=\"margin-bottom: 1.3em;\">至此 spninx.conf 配置文件结束;注意:如果有换行 必须用反斜杠 链接</p><p style=\"margin-bottom: 1.3em;\"></p><h2>配置案例：</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">#定义一个数据源\nsource search_main\n{\n           #定义数据库类型\n    type                 = mysql\n           #定义数据库的IP或者计算机名\n    sql_host             = localhost\n           #定义连接数据库的帐号\n    sql_user             = root\n           #定义链接数据库的密码\n    sql_pass             = test123\n           #定义数据库名称\n    sql_db               = test\n           #定义连接数据库后取数据之前执行的SQL语句\n    sql_query_pre        = SET NAMES utf8\n    sql_query_pre        = SET SESSION query_cache_type=OFF\n           #创建一个sph_counter用于增量索引\n    sql_query_pre        = CREATE TABLE IF NOT EXISTS sph_counter \n                                      ( counter_id INTEGER PRIMARY KEY NOT NULL,max_doc_id INTEGER NOT NULL)\n           #取数据之前将表的最大id记录到sph_counter表中\n    sql_query_pre        = REPLACE INTO sph_counter SELECT 1, MAX(searchid) FROM v9_search\n           #定义取数据的SQL，第一列ID列必须为唯一的正整数值\n    sql_query            = SELECT searchid,typeid,id,adddate,data FROM v9_search where \n                                      searchid&lt;( SELECT max_doc_id FROM sph_counter WHERE counter_id=1 ) \n                                        and searchid&gt;=$start AND searchid&lt;=$end\n           # sql_attr_uint和sql_attr_timestamp用于定义用于api过滤或者排序，写多行制定多列\n    sql_attr_uint        = typeid\n    sql_attr_uint        = id\n    sql_attr_timestamp   = adddate\n           #分区查询设置\n    sql_query_range      = SELECT MIN(searchid),MAX(searchid) FROM v9_search\n           #分区查询的步长\n    sql_range_step       = 1000\n           #设置分区查询的时间间隔\n    sql_ranged_throttle  = 0\n           #用于CLI的调试\n    sql_query_info       = SELECT * FROM v9_search WHERE searchid=$id\n}\n#定义一个增量的源\nsource search_main_delta : search_main\n{\n    sql_query_pre       = set names utf8\n           #增量源只查询上次主索引生成后新增加的数据\n#如果新增加的searchid比主索引建立时的searchid还小那么会漏掉\n    sql_query           = SELECT searchid,typeid,id,adddate,data FROM v9_search where  \n                                  searchid&gt;( SELECT max_doc_id FROM sph_counter WHERE counter_id=1 ) \n                                   and searchid&gt;=$start AND searchid&lt;=$end\n    sql_query_range     = SELECT MIN(searchid),MAX(searchid) FROM v9_search where \n                                       searchid&gt;( SELECT max_doc_id FROM sph_counter WHERE counter_id=1 )\n}\n\n#定义一个index_search_main索引\nindex index_search_main\n{\n           #设置索引的源\n    source            = search_main\n           #设置生成的索引存放路径\n    path         = /usr/local/coreseek/var/data/index_search_main\n           #定义文档信息的存储模式，extern表示文档信息和文档id分开存储\n    docinfo           = extern\n           #设置已缓存数据的内存锁定，为0表示不锁定\n    mlock             = 0\n           #设置词形处理器列表，设置为none表示不使用任何词形处理器\n    morphology        = none\n           #定义最小索引词的长度\n    min_word_len      = 1\n           #设置字符集编码类型，我这里采用的utf8编码和数据库的一致\n    charset_type      = zh_cn.utf-8\n           #指定分词读取词典文件的位置\n    charset_dictpath  = /usr/local/mmseg3/etc\n           #不被搜索的词文件里表。\n    stopwords       = /usr/local/coreseek/var/data/stopwords.txt\n           #定义是否从输入全文数据中取出HTML标记\n    html_strip       = 0\n}\n#定义增量索引\nindex index_search_main_delta : index_search_main\n{\n    source   = search_main_delta\n    path    = /usr/local/coreseek/var/data/index_search_main_delta\n}\n\n#定义indexer配置选项\nindexer\n{\n           #定义生成索引过程使用索引的限制\n    mem_limit        = 512M\n}\n\n#定义searchd守护进程的相关选项\nsearchd\n{\n           #定义监听的IP和端口\n    #listen            = 127.0.0.1\n    #listen            = 172.16.88.100:3312\n    listen            = 3312\n    listen            = /var/run/searchd.sock\n           #定义log的位置\n    log                = /usr/local/coreseek/var/log/searchd.log\n           #定义查询log的位置\n    query_log          = /usr/local/coreseek/var/log/query.log\n           #定义网络客户端请求的读超时时间\n    read_timeout       = 5\n           #定义子进程的最大数量\n    max_children       = 300\n           #设置searchd进程pid文件名\n    pid_file           = /usr/local/coreseek/var/log/searchd.pid\n           #定义守护进程在内存中为每个索引所保持并返回给客户端的匹配数目的最大值\n    max_matches        = 100000\n           #启用无缝seamless轮转，防止searchd轮转在需要预取大量数据的索引时停止响应\n    #也就是说在任何时刻查询都可用，或者使用旧索引，或者使用新索引\n    seamless_rotate    = 1\n           #配置在启动时强制重新打开所有索引文件\n    preopen_indexes    = 1\n           #设置索引轮转成功以后删除以.old为扩展名的索引拷贝\n    unlink_old         = 1\n           # MVA更新池大小，这个参数不太明白\n    mva_updates_pool   = 1M\n           #最大允许的包大小\n    max_packet_size    = 32M\n           #最大允许的过滤器数\n    max_filters        = 256\n           #每个过滤器最大允许的值的个数\n    max_filter_values  = 4096\n}</pre><p></p><h2 style=\"margin-bottom: 1.3em;\">sphinx的管理命令：</h2><p style=\"margin-bottom: 1.3em;\">1. 生成全部索引</p><p style=\"margin-bottom: 1.3em;\">/usr/local/sphinx/bin/indexer --config /usr/local/sphinx/etc/sphinx.conf –all</p><p style=\"margin-bottom: 1.3em;\">若此时searchd守护进程已经启动，那么需要加上—rotate参数：</p><p style=\"margin-bottom: 1.3em;\">/usr/local/sphinx/bin/indexer --config /usr/local/sphinx/etc/sphinx.conf --all --rotate</p><p style=\"margin-bottom: 1.3em;\">2. 启动searchd守护进程</p><p style=\"margin-bottom: 1.3em;\">/usr/local/sphinx/bin/searchd --config /usr/local/sphinx/etc/sphinx.conf</p><p style=\"margin-bottom: 1.3em;\">3. 生成主索引</p><p style=\"margin-bottom: 1.3em;\">写成shell脚本，添加到crontab任务，设置成每天凌晨1点的时候重建主索引</p><p style=\"margin-bottom: 1.3em;\">/usr/local/sphinx/bin/indexer --config /usr/local/sphinx/etc/sphinx.conf --rotate index_search_main</p><p style=\"margin-bottom: 1.3em;\">4. 生成增量索引</p><p style=\"margin-bottom: 1.3em;\">写成shell脚本，添加到crontab任务，设置成每10分钟运行一次</p><p style=\"margin-bottom: 1.3em;\">/usr/local/sphinx/bin/indexer --config /usr/local/sphinx/etc/sphinx.conf --rotate index_search_main_delta</p><p style=\"margin-bottom: 1.3em;\">5. 增量索引和主索引的合并</p><p style=\"margin-bottom: 1.3em;\">写成shell脚本，添加到计划任务，每15分钟跑一次</p><p style=\"margin-bottom: 1.3em;\">/usr/local/sphinx/bin/indexer --config /usr/local/sphinx/etc/sphinx.conf --merge index_search_main index_search_main_delta --rotate</p><p style=\"margin-bottom: 1.3em;\">6. 使用search命令在命令行对索引进行检索</p><p style=\"margin-bottom: 1.3em;\">/usr/local/sphinx/bin/search --config /usr/local/sphinx/etc/sphinx.conf</p><div><br /></div><p></p>','1381949420','1394718424','','1','0','0','1015','945');
INSERT INTO `post` VALUES('130','2','[{\"id\":9,\"name\":\"ajax\"},{\"id\":10,\"name\":\"跨域\"}]','解决Ajax跨域问题：Origin xx is not allowed by Access-Control-Allow-Origin.','','yanue','','','<p>今天一个Ajax跨域问题，纠结我半天，记录之。&nbsp;</p><pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;title&lt;/title&gt;\n    &lt;script src=&quot;http://code.jquery.com/jquery-1.7.1.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script&gt;\n        $.ajax({\n            url:&quot;http://map.yanue.net/gpsApi.php?lat=22.502412986242&amp;lng=113.93832783228&quot;,\n            type:\'GET\',\n            success: function(data){\n                $(\'body\').append( &quot;Name: &quot; + data );\n            }\n        });\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    测试Ajax跨域问题\n&lt;/body&gt;\n&lt;/html&gt;</pre></pre><p>没有结果，chrome用F12 下查看错误 得知：XMLHttpRequest cannot load <a title=\"http://map.yanue.net/gpsApi.php?lat=22.502412986242&amp;lng=113.93832783228\" href=\"http://map.yanue.net/gpsApi.php?lat=22.502412986242&amp;lng=113.93832783228\" target=\"_blank\">http://map.yanue.net/gpsApi.php?lat=22.502412986242&amp;lng=113.93832783228</a>. Origin <a title=\"http://localhost\" href=\"http://localhost/\" target=\"_blank\">http://localhost</a><span style=\"color: rgb(255, 0, 0);\"> is not allowed by Access-Control-Allow-Origin.&nbsp;</span>AJAX跨域问题产生。</p><p>搜了好久，得知解决方案：</p><h2>一：使用jsonp格式，&nbsp;如jquery中ajax请求参数 &nbsp; dataType:\'JSONP\'。</h2><pre class=\"lang:php decode:true\"><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;title&lt;/title&gt;\n    &lt;script src=&quot;http://code.jquery.com/jquery-1.7.1.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script&gt;\n        $.ajax({\n            url:&quot;http://map.yanue.net/gpsApi.php?lat=22.502412986242&amp;lng=113.93832783228&quot;,\n            type:\'GET\',\n            dataType:\'JSONP\',\n            success: function(data){\n                $(\'body\').append( &quot;Name: &quot; + data );\n            }\n        });\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n测试Ajax跨域问题\n&lt;/body&gt;\n&lt;/html&gt;</pre></pre><h2>二，server端加上header设为&nbsp;Access-Control-Allow-Origin：*</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">header(&quot;Access-Control-Allow-Origin: *&quot;); # 跨域处理</pre><p>问题就解决了。<br /><br /></p>','1382055311','1394717785','','1','0','0','3438','952');
INSERT INTO `post` VALUES('131','8','[{\"id\":\"7\",\"name\":\"mongo\"},{\"id\":\"8\",\"name\":\"sql\"}]','MongoDB增加用户认证: 增加用户、删除用户、修改用户密码、读写权限、只读权限','','yanue','','','<p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">说明:增加用户是针对数据库进行操作<br />1.进入到数据库 use dbname<br />2.针对当前数据库添加用户 权限是针对当前数据<br /></p><h2><span style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">1.添加并验证用户</span></h2>&gt; use admin<br />&gt; db.addUser(“zjx”,”tsjianxin”)<br />&gt; db.auth(“zjx”,”tsjianxin”)<br /><h2><span style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">2.查看已存在的用户</span></h2>&gt; db.system.users.find()<br /><h2><span style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">3.现在来给另一个数据库51cv配置一个读写权限的用户</span></h2>&gt; use 51cv<br />&gt; db.addUser(“51cvrw”,”51cv”)<br />…”readOnly” : false…<br /><h2><span style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">4.配置一个只读权限的用户</span></h2>&gt; use 51cv<br />&gt; db.addUser(“51cvr”,”51cv”,true)<br />&gt; db.system.users.find()<br />…”readOnly” : true…<br /><h2><span style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">5.删除用户</span></h2>&gt; use dbname (admin or 51cv ,etc)<br />&gt; db.system.users.remove({user:”haha”})<br />&gt; db.system.users.find()<br /><h2><span style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">6.用户登录数据库测试</span></h2>for:mongod dbname -u uname -p password<br />mongo admin -u zjx -p tsjianxin<br />/usr/local/mongodb/bin/mongo admin -u 用户名 -p &nbsp;密码 –port 端口号<p></p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">MongoDB&nbsp; 增加用户 删除用户&nbsp; 修改用户&nbsp; 读写权限 只读权限,</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">&nbsp;</p><h2 style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">MongoDB用户权限分配的操作是针对某个库来说的。–这句话很重要。</h2><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">&nbsp;</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">1、 进入ljc 数据库：</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">use ljc;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; –ljc为数据库名称。</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">2、添加用户（读写权限，readOnly–&gt;false）：</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">db.addUser(“java”,”java”);</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">3、&nbsp;查看一下所有的用户</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">db.system.users.find();<br />{ “_id” : ObjectId(“4e02a89fb841deb5fda3e5e2″), “user” : “java”,&nbsp;”readOnly” : fa<br />lse,&nbsp;”pwd” : “59cf7cc156874cbd35cb00869126f569″ }</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">4、用户授权。</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">db.auth(“java”,”java”);</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 显示为1 表示授权成功，0表示不成功。</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">5、 添加用户（只读权限，readOnly–&gt;true）：</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">db.addUser(“java1″,”java1″,true);</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">db.system.users.find();<br />{ “_id” : ObjectId(“4e02a89fb841deb5fda3e5e2″), “user” : “java”,&nbsp;”readOnly” : fa<br />lse,&nbsp;”pwd” : “59cf7cc156874cbd35cb00869126f569″ }<br />{ “_id” : ObjectId(“4e02aae6b841deb5fda3e5e3″), “user” : “java1″,&nbsp;”readOnly” : t<br />rue, “pwd” : “fca6bda05c87a72cce0a4a6458d1e266″ }</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">注意上面标红的位置的readOnly 只读于可写是有区别的。</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">&nbsp;</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">6、更改密码（为已经存在的用户更改密码）：</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">db.addUser(“java”,”java1″);</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">&nbsp;</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">7、删除用户：</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">db.system.users.remove({user:”java1″});</p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\">来自：<a href=\"http://tompig.iteye.com/blog/1102031\" style=\"margin: 0px; padding: 0px; vertical-align: baseline; transition: all 0.2s ease-in-out; -webkit-transition: all 0.2s ease-in-out;\">http://tompig.iteye.com/blog/1102031</a></p><p style=\"margin: 0px; padding: 6px 0px; border: 0px; outline: 0px; vertical-align: baseline;\"><a href=\"http://www.xuejiehome.com/blread-1444.html\" style=\"margin: 0px; padding: 0px; vertical-align: baseline; transition: all 0.2s ease-in-out; -webkit-transition: all 0.2s ease-in-out;\">http://www.xuejiehome.com/blread-1444.html</a></p><div><br /></div><a href=\"http://www.xuejiehome.com/blread-1444.html\"></a>','1382669578','1394628861','','1','0','0','758','956');
INSERT INTO `post` VALUES('132','1','[{\"id\":4,\"name\":\"Xapian\"},{\"id\":3,\"name\":\"scws\"},{\"id\":2,\"name\":\"xunsearch\"},{\"id\":1,\"name\":\"迅搜\"}]','xunsearch 使用记录aa','','yanue','','http://img.yanue.net/jpg/C6/43/c643e16114112438178035e585e2dc78.jpg','<pre class=\"prettyprint lang-php  linenums prettyprinted\">wget http://www.xunsearch.com/download/xunsearch-full-latest.tar.bz2\ntar -xjf xunsearch-full-latest.tar.bz2</pre>','1394341381','1394761817','','0','0','0','148','0');
INSERT INTO `post` VALUES('133','2','[{\"id\":24,\"name\":\"php\"},{\"id\":36,\"name\":\"COM组建\"}]','Windows平台的PHP之开启COM配置','','yanue','','','<p>Windows平台的PHP如果未配置COM，调用COM组件，错误如下</p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">Fatal error: Class \'COM\' not found in XXXXXXXXX\n</pre>php 根目录的 ext 文件夹下确保存有 php_com_dotnet.dll 这个文件<p></p><h2>一，编辑php.ini，开启com.allow_dcom</h2><p>1. 如果php版本&gt;5.3.15 需保证php 根目录的 ext 文件夹下确保存有 php_com_dotnet.dll 这个文件，在php.ini中加入</p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">[PHP_COM_DOTNET]\nextension=php_com_dotnet.dll</pre><p></p><p style=\"margin: 0px 0px 15px; padding: 0px;\"></p><p>2. 去除com.allow_dcom = true前面的‘;’号，设为:</p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">com.allow_dcom = true</pre><h2>二，确保COM+ Event System 的服务开启</h2><div>打开服务（win键+R键）或开始 &gt; 运行 &gt; services.msc 回车 &gt; 确保 COM+ Event System 的服务开启</div><p></p><br />','1394872401','1394872512','','1','0','0','227','0');
INSERT INTO `post` VALUES('134','12','[{\"id\":12,\"name\":\"mysql\"}]','mysql中通过my.cnf设置默认字符集utf-8','','yanue','','','<h2>选项配置</h2>配置文件路径：/full/path/mysql/bin/my.cnf&nbsp;（默认为/etc/my.cnf ）<br /><pre class=\"prettyprint linenums prettyprinted lang-php \">[client]\ndefault-character-set=utf8\n\n[mysql]\ndefault-character-set=utf8\n\n[mysqld]\ninit_connect=\'SET collation_connection = utf8_unicode_ci\'\ninit_connect=\'SET NAMES utf8\'\ncharacter-set-server=utf8\ncollation-server=utf8_unicode_ci\nskip-character-set-client-handshake</pre><h2><span style=\"color: rgb(255, 0, 0);\">*注意：</span></h2><span style=\"color: rgb(255, 0, 0);\">在 mysqld 中使用 default-character-set 设置， mysql 启动会报错而无法启动。</span><br /><h2>说明</h2><p>关于utf8字符集，我们国内默认选择：utf8_general_ci而不是utf8_unicode_ci，</p><p></p><p style=\"box-sizing: border-box; margin: 20px 0px;\">区别在于字符对比上</p><p style=\"box-sizing: border-box; margin: 20px 0px;\">请看mysql上面的例子：</p><p style=\"box-sizing: border-box; margin: 20px 0px;\">对与general来说 ß = s 是为true的</p><p style=\"box-sizing: border-box; margin: 20px 0px;\">但是对于unicode来说 ß = ss 才是为true的，</p><p style=\"box-sizing: border-box; margin: 20px 0px;\">其实他们的差别主要在德语和法语上，所以对于我们中国人来说，一般使用general，因为general更快</p><p style=\"box-sizing: border-box; margin: 20px 0px;\">如果你对德语和法语的对比有更高的要求，才使用unicode，它比general更准确一些（按照德语和法语的标准来说，在对比或者排序上更准确）</p><p style=\"box-sizing: border-box; margin: 20px 0px;\">看看这个文档：<a href=\"http://dev.mysql.com/doc/refman/5.0/en/charset-unicode-sets.html\" target=\"_blank\" rel=\"nofollow\" title=\"http://dev.mysql.com/doc/refman/5.0/e...\" style=\"box-sizing: border-box;\">http://dev.mysql.com/doc/refman/5.0/e...</a></p><p style=\"box-sizing: border-box; margin: 20px 0px;\">另外还有utf8_bin_ci也是比较常用的哦，在字符对比时，unicode和general都不是大小写敏感的，所以如果要求大小写敏感的话，就使用bin</p><br />','1395107238','1395108289','','1','0','0','117','0');
INSERT INTO `post` VALUES('135','2','[{\"id\":40,\"name\":\"时间戳\"}]','php 获取今日、昨日、上周、本月的起始与结束时间戳','','yanue','','','<h1 style=\"margin: 0px; padding: 10px 0px 5px; font-size: 20px; line-height: 30px; font-family: 宋体, arial; text-align: center;\">php 获取今日、昨日、上周、本月的起始与结束时间戳</h1><div><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;?php \n//php获取今日开始时间戳和结束时间戳\n$beginToday=mktime(0,0,0,date(\'m\'),date(\'d\'),date(\'Y\'));\n$endToday=mktime(0,0,0,date(\'m\'),date(\'d\')+1,date(\'Y\'))-1;\n//php获取昨日起始时间戳和结束时间戳\n$beginYesterday=mktime(0,0,0,date(\'m\'),date(\'d\')-1,date(\'Y\'));\n$endYesterday=mktime(0,0,0,date(\'m\'),date(\'d\'),date(\'Y\'))-1;\n \n//php获取上周起始时间戳和结束时间戳\n$beginLastweek=mktime(0,0,0,date(\'m\'),date(\'d\')-date(\'w\')+1-7,date(\'Y\'));\n$endLastweek=mktime(23,59,59,date(\'m\'),date(\'d\')-date(\'w\')+7-7,date(\'Y\'));\n//php获取本月起始时间戳和结束时间戳\n$beginThismonth=mktime(0,0,0,date(\'m\'),1,date(\'Y\'));\n$endThismonth=mktime(23,59,59,date(\'m\'),date(\'t\'),date(\'Y\'));</pre><h2 style=\"margin: 20px auto 0px; padding: 0px; border: 0px;\">mktime()函数的用法。</h2><p style=\"margin: 20px auto 0px; padding: 0px; border: 0px; line-height: 24px; font-family: 微软雅黑, 宋体; font-size: 14px;\">PHP mktime() 函数用于返回一个<a href=\"http://www.jbxue.com/tags/riqi.html\" target=\"_blank\" class=\"infotextkey\" style=\"text-decoration: none; color: rgb(81, 81, 81);\">日期</a>的 Unix 时间戳。</p><p style=\"margin: 20px auto 0px; padding: 0px; border: 0px; line-height: 24px; font-family: 微软雅黑, 宋体; font-size: 14px;\"></p><h2>语法</h2>mktime(hour,minute,second,month,day,year,is_dst)<p></p><p style=\"margin: 20px auto 0px; padding: 0px; border: 0px; line-height: 24px; font-family: 微软雅黑, 宋体; font-size: 14px;\"><strong>参数 描述</strong><br />hour 可选。规定小时。<br />minute 可选。规定分钟。<br />second 可选。规定秒。<br />month 可选。规定用数字表示的月。<br />day 可选。规定天。<br />year 可选。规定年。在某些系统上，合法值介于 1901 - 2038 之间。不过在 PHP 5 中已经不存在这个限制了。<br />is_dst&nbsp;<br />可选。如果时间在日光节约时间(DST)期间，则设置为1，否则设置为0，若未知，则设置为-1。</p><p style=\"margin: 20px auto 0px; padding: 0px; border: 0px; line-height: 24px; font-family: 微软雅黑, 宋体; font-size: 14px;\">自 5.1.0 起，is_dst 参数被废弃。因此应该使用新的时区处理特性。</p><p style=\"margin: 20px auto 0px; padding: 0px; border: 0px; line-height: 24px; font-family: 微软雅黑, 宋体; font-size: 14px;\">用法</p><p style=\"margin: 20px auto 0px; padding: 0px; border: 0px; line-height: 24px; font-family: 微软雅黑, 宋体; font-size: 14px;\">参数总是表示 GMT 日期，因此 is_dst 对结果没有影响。</p><p style=\"margin: 20px auto 0px; padding: 0px; border: 0px; line-height: 24px; font-family: 微软雅黑, 宋体; font-size: 14px;\">参数可以从右到左依次空着，空着的参数会被设为相应的当前 GMT 值。</p><p style=\"margin: 20px auto 0px; padding: 0px; border: 0px; line-height: 24px; font-family: 微软雅黑, 宋体; font-size: 14px;\">注意在 PHP 5.1 之前，如果该函数的参数非法，则会返回 false。</p><p style=\"margin: 20px auto 0px; padding: 0px; border: 0px; line-height: 24px; font-family: 微软雅黑, 宋体; font-size: 14px;\">注意：<br />该函数对于日期运算和验证非常有用。它可以自动校正越界的输入，如：<br /><span style=\"margin: 0px; padding: 0px; border: 0px; color: rgb(0, 102, 204);  background-color: rgb(255, 204, 153);\"><strong>echo(date(&quot;M-d-Y&quot;,mktime(0,0,0,12,36,2013)));<br /></strong></span>输出结果：Jan-05-2014</p><br /></div>','1395278872','1395278900','','1','0','0','116','0');
INSERT INTO `post` VALUES('138','9','[{\"id\":59,\"name\":\"nodejs\"},{\"id\":60,\"name\":\"npm\"}]','使用代理解决npm安装phantomjs超时问题','','yanue','','','<div class=\"timeline-comment-wrapper js-comment-container\"><div class=\"timeline-comment timeline-comment-\"><div id=\"issue-28600185\" class=\"comment js-comment js-task-list-container\" data-body-version=\"bd56133dc77c36c55b5fb7811b1ae22c\"><div class=\"comment-content\"><div class=\"edit-comment-hide\"><div class=\"comment-body markdown-body markdown-format js-comment-body\"><h2>下面是经历过程</h2><p>GMU是基于zepto的mobile UI组件库，提供webapp、pad端简单易用的UI组件!<br /><br /></p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">GMU组件量身定制了一套基于<a href=\"http://gruntjs.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">Grunt</a>的代码合并工具，对于使用来说，只需要配置最终需要的js文件即可，其他依赖文件都会自动打包进来。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">以下将详细介绍如何定制版本。</p><ol style=\"margin: 0px 0px 15px; padding: 0px 0px 0px 30px; border: 0px; outline: 0px; vertical-align: baseline; list-style-position: initial; list-style-image: initial;\"><li style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">安装<a href=\"http://nodejs.org/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">node.js</a>。</li><li style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">安装git。window用户请安装<a href=\"http://msysgit.github.io/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">msysgit</a>, Linux/Mac用户请安装git命令行工具。</li><li style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">安装<a href=\"http://gruntjs.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">Grunt</a>。<span style=\"font-family:inherit;\"><span style=\"border: 1px solid rgb(221, 221, 221); font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.3; vertical-align: middle; background-color: rgb(248, 248, 248); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; max-width: 100%; display: inline-block; overflow: auto;\">npm install -g grunt-cli</span></span></li><li style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\"><span style=\"font-family:inherit;\"><span style=\"border: 1px solid rgb(221, 221, 221); font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.3; vertical-align: middle; background-color: rgb(248, 248, 248); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; max-width: 100%; display: inline-block; overflow: auto;\">git clone https://github.com/gmuteam/GMU.git</span></span>克隆Git代码到当前目录，正常执行后，当前目录会多出来一个GMU目录。</li><li style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">进入GMU目录<span style=\"font-family:inherit;\"><span style=\"border: 1px solid rgb(221, 221, 221); font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.3; vertical-align: middle; background-color: rgb(248, 248, 248); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; max-width: 100%; display: inline-block; overflow: auto;\">cd GMU</span></span></li><li style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\"><span style=\"font-family:inherit;\"><span style=\"border: 1px solid rgb(221, 221, 221); font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.3; vertical-align: middle; background-color: rgb(248, 248, 248); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; max-width: 100%; display: inline-block; overflow: auto;\">npm install</span></span>, 安装node依赖。</li><li style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\"><span style=\"font-family:inherit;\"><span style=\"border: 1px solid rgb(221, 221, 221); font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.3; vertical-align: middle; background-color: rgb(248, 248, 248); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; max-width: 100%; display: inline-block; overflow: auto;\">grunt dist</span></span>, 根据配置项，在dist目录中生成合并版本代码, dist/gmu.js, 对应的样式和图片资源也会生成在此目录下。</li></ol><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">代码配置如下：</p>安装过程到了npm install是会遇到<pre class=\"prettyprint linenums prettyprinted lang-php \">Downloading http://cdn.bitbucket.org/ariya/phantomjs/downloads/phantomjs-1.9.7-linux-x86_64.tar.bz2\n</pre>然后一直卡在这里，原因是cdn.bitbucket.org一直无法ping通，被墙了。<p></p><h2>npm install安装出错phantomjs解决办法</h2><p></p>1. bitbucket cdn被墙了，找个http 代理设置一下npm吧<pre class=\"prettyprint linenums prettyprinted lang-php \">npm config set proxy &quot;http://24.143.198.188:80&quot;</pre><div class=\"comment-body markdown-body markdown-format js-comment-body\">免费代理服务器可以去这里：<a href=\"http://www.cnproxy.com/proxy1.html\" target=\"_blank\">http://www.cnproxy.com/proxy1.html</a><br /></div></div><div class=\"comment-body markdown-body markdown-format js-comment-body\">2. &nbsp;如果用了goagent, 可以这么设置<br /></div><pre><pre class=\"prettyprint linenums prettyprinted lang-php \">npm config set proxy &quot;http://127.0.0.1:8087&quot;</pre></pre></div>不过最近老是连接有问题</div><div><br /></div><div>按照方法1,问题解决</div></div></div></div>','1395739160','1395739408','','1','0','0','192','0');
INSERT INTO `post` VALUES('139','16','[{\"id\":61,\"name\":\"CSS\"}]','CSS文字大小单位PX、EM、PT比较','','yanue','','http://img.yanue.net/jpg/F2/E5/f2e513da90d30bf96997c595d9c6c06f.jpg','<img src=\"http://img.yanue.net/jpg/EF/1A/ef1a50c457789d52d9e28f905bebedd9.jpg\" alt=\"\" /><blockquote><strong><span style=\"color:#ff0000;\">px&nbsp;</span></strong>像素（Pixel）是相对长度单位，像素px是相对于显示器屏幕分辨率而言的。(引自CSS2.0手册)</blockquote><blockquote><strong><span style=\"color:#ff0000;\">em </span></strong>相对长度单位，相对于当前对象内文本的字体尺寸。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸。(引自CSS2.0手册)</blockquote><p>这里引用的是Jorux的“95%的中国网站需要重写CSS”的文章，题目有点吓人，但是确实是现在国内网页制作方面的一些缺陷。我一直也搞不清楚px与em之间的关系和特点，看过以后确实收获很大。平时都是用px来定义字体，所以无法用浏览器字体放大的功能，而国外大多数网站都可以在IE下使用。因为：</p><p>1. IE无法调整那些使用px作为单位的字体大小；</p><p>2. 国外的大部分网站能够调整的原因在于其使用了em作为字体单位；</p><p>3. Firefox能够调整px和em，但是96%以上的中国网民使用IE浏览器(或内核)。</p><p>字体单位使用em能支持IE6下的字体缩放，在页面中按ctrl+滚轮，字体以px为单位的网站没有反应。</p><p><span style=\"color:#ff0000;\"><span>px</span>是绝对单位</span>，不支持IE的缩放。<span>em</span>是相对单位，网页中的文字能放大和缩小。将行距(line-height)，和纵向高度的单位都用em。保证缩放时候的整体性。任意浏览器的默认字体高都是16px。所有未经调整的浏览器都符合: 1em=16px。那么12px=0.75em,10px=0.625em。为了简化font-size的换算，需要在css中的body选择器中声明Font-size=62.5%，这就使em值变为 16px*62.5%=10px, 这样12px=1.2em, 10px=1em, 也就是说只需要将你的原来的px数值除以10，然后换上em作为单位就行了。</p><h2><span style=\"color:#ff0000;\">em</span>有如下特点：</h2><p>1. em的值并不是固定的；</p><p>2. em会继续父级元素的字体大小。</p><p>所以我们在写CSS的时候，</p><p><strong>需要注意</strong>：</p><p>1. body选择器中声明Font-size=62.5%；（Font-size=63%；用于ie6兼容）</p><p>2. 将你的原来的px数值除以10，然后换上em作为单位；</p><p>3. 重新计算那些被放大的字体的em数值。避免字体大小的重复声明。</p><p>也就是避免1.2 * 1.2= 1.44的现象。比如说你在#content中声明了字体大小为1.2em，那么在声明p的字体大小时就只能是1em，而不是1.2em, 因为此em非彼em，它因继续#content的字体高而变为了1em=12px。但是12px汉字例外，就是由以上方法得到的12px(1.2em)大小的汉字在IE中并不等于直接用12px定义的字体大小，而是稍大一点。这个问题 Jorux已经解决，只需在body选择器中把62.5%换成63%就能正常显示了。原因可能是IE处理汉字时，对于浮点的取值精确度有限。不知道有没有其他的解释。</p><h2><span>单位pt的说明</span></h2><p>在印刷排版中,point是一个绝对值,它等于1/72英寸,可以用尺子丈量的,物理的英寸。但是在css中pt含义却并非如此。因为我们的显示器被分割为了一个个的像素，单个像素只能有一种颜色 (为了简化，这里暂不讨论次像素反锯齿技术)，要在屏幕上显示，必须先把以 pt 为单位的长度转换为以像素为单位的长度，这个转换的媒介，就是 DPI (事实上，这里的所谓的 DPI，是操作系统和浏览器中使用的术语，即为 PPI, pixels per inch，和扫描仪、打印机、数码相机中的 DPI 是不同的概念)。</p><p>例如，无论在哪个操作系统中，Firefox 浏览器默认的 DPI 都是 96，那么实际上 9pt = 9 * 1/72 * 96 = 12px。</p><p>所以，虽然“DPI”中的“I”和“1pt 等于 1/72 inch”中的“inch”，都不代表物理上的英寸，但这两个单位互相之间是相等的，也就在相乘中约掉了。</p><p>那么，真实的物理长度怎么计算呢?请拿出一把尺子，丈量你的显示器的可见宽度 (我这里是 11.2992 英寸)，除以横向分辨率 (我这里是 1024 像素)，得到的就是每个像素的物理长度。</p><p>现在我们可以回答这样一个问题，网页上 9pt 的字体究竟占用了多宽的空间?答案是:　　9 * 1/72 * 96 * 11.2992 / 1024 = 0.1324 英寸 = 0.3363 厘米。</p><p>虽然pt是绝对单位，但是那只是针对输出设备而言的，在文字排版工具（word，abobe）中是非常有用的字体单位。不管显示器的分辨率是多少，打印在纸面上的结果是一样的。</p><p>但是网页主要为了屏幕显示，而不是为了打印等其他需要的。而px能够精确地表示元素在屏幕中的位置和大小。</p><p>当然。在dpi是96的情况下，9pt=12px。</p><p><span>附px、em、%和pt换算表</span></p><div class=\"wp-caption\"><img src=\"http://img.yanue.net/jpg/F2/E5/f2e513da90d30bf96997c595d9c6c06f.jpg\" alt=\"\" /><br /><p class=\"wp-caption-text\">px、em、%和pt换算</p><p class=\"wp-caption-text\">转自：<a href=\"http://www.1z1b.com/one-blog-a-week/px-em-pt/\">http://www.1z1b.com/one-blog-a-week/px-em-pt/</a><br /></p></div>','1395799156','1395800406','','1','0','0','124','0');
INSERT INTO `post` VALUES('141','10','[{\"id\":26,\"name\":\"fcitx\"}]','Centos6.4安装基于fcitx及搜狗拼音资源包','','yanue','','','<div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><strong>0. 用root账户登录系统</strong></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><br /></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><strong>1. 卸载iBus</strong></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">yum remove ibus</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><br /></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><strong>2. 将RHEL 6.4的软件源更换为CentOS 6.4的软件源</strong></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">参考博文：<a target=\"_blank\" href=\"http://blog.csdn.net/yang1982_0907/article/details/17022983\" style=\"color: rgb(51, 102, 153); text-decoration: none;\">http://blog.csdn.net/yang1982_0907/article/details/17022983</a></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><br /></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><strong>3. 添加fcitx软件源</strong></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">wget http://download.opensuse.org/repositories/home:/cathay4t:/misc-rhel6/CentOS_CentOS-6/home:cathay4t:misc-rhel6.repo -O /etc/yum.repos.d/fcitx.repo</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><br /></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><strong>4. 安装fcitx</strong></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">yum install fcitx</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">安装完成后，运行fcitx -v，可以看到此处安装的fcitx版本为4.2.6.1</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><br /></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><strong>5.&nbsp;升级和修改gtk.immodules</strong></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">/usr/bin/gtk-query-immodules-2.0-32 &gt; /etc/gtk-2.0/i686-redhat-linux-gnu/gtk.immodules</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">vi /etc/gtk-2.0/i686-redhat-linux-gnu/gtk.immodules</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">添加如下几行：</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">&quot;/usr/lib/gtk-2.0/2.10.0/immodules/im-xim.so&quot;<br />&quot;xim&quot; &quot;X Input Method&quot; &quot;gtk20&quot; &quot;/usr/share/locale&quot; &quot;ko:ja:th:zh&quot;</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><br /></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><strong>6.&nbsp;新建配置文件</strong></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">vi /etc/X11/xinit/xinput.d/fcitx.conf</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">添加以下内容：</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">XIM=fcitx<br />XIM_PROGRAM=/usr/bin/fcitx<br />XIM_ARGS=”-d”<br />GTK_IM_MODULE=fcitx<br />QT_IM_MODULE =fcitx</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><br /></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><strong>7.&nbsp;建立到fcitx.conf的链接</strong></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">mv /etc/alternatives/xinputrc{,.bak}&nbsp; #备份配置文件</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">ln -s /etc/X11/xinit/xinput.d/fcitx.conf /etc/alternatives/xinputrc</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><br /></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><strong>8. 启用fcitx输入法</strong></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">编辑~/.bashrc文件</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">vi&nbsp;~/.bashrc</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">添加以下几行：</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">export XMODIFIERS=@im=fcitx<br />export GTK_IM_MODULE=xim<br />export QT_IM_MODULE=xim</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">然后，在操作系统的GUI上进行如下操作：</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">System -&gt; Preferences -&gt; Input Method</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">此时会弹出“IM Chooser”窗口，勾选“Enable input method feature”，然后点击“Log Out”按钮，注销后重新登录</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><br /></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><strong>9.&nbsp;从deepin的搜狐源中下载搜狗拼音的deb包</strong></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><a target=\"_blank\" href=\"http://mirror.sohu.com/deepin/pool/non-free/f/fcitx-sogoupinyin-release/\" style=\"color: rgb(51, 102, 153); text-decoration: none;\">http://mirror.sohu.com/deepin/pool/non-free/f/fcitx-sogoupinyin-release/</a></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">此处下载fcitx-sogoupinyin_0.0.4-1_i386.deb，放在/root/Downloads/目录下</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><br /></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><strong>10. 安装搜狗拼音输入法</strong></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">双击fcitx-sogoupinyin_0.0.4-1_i386.deb，找到data.tar.gz文件，将其提取至/root/Downloads/目录下，然后运行以下命令：</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">cd /root/Downloads/</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">tar -xvzf data.tar.gz -C /</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">然后，将搜狗拼音插件移动到CentOS发行版中的相应位置，运行以下命令：</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">mv /usr/lib/i386-linux-gnu/fcitx/fcitx-sogoupinyin.so /usr/lib/fcitx/</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">注销后重新登录，此时搜狗拼音应该已经可以用了</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><br /></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><strong>11. 从deepin的搜狐源中下载搜狗拼音默认皮肤</strong></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><a target=\"_blank\" href=\"http://mirror.sohu.com/deepin/pool/main/f/fcitx-skins/\" style=\"color: rgb(51, 102, 153); text-decoration: none;\">http://mirror.sohu.com/deepin/pool/main/f/fcitx-skins/</a></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">此处下载fcitx-skin-sogou_0.0.3_all.deb，放在/root/Downloads/目录下</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><br /></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><strong>12. 安装搜狗拼音默认皮肤</strong></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">双击fcitx-skin-sogou_0.0.3_all.deb，找到data.tar.gz文件，将其提取至/root/Downloads/skin/目录下，然后运行以下命令：</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">cd /root/Downloads/skin/</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">tar -xvzf data.tar.gz -C /</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><br /></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><strong>13. 禁用其他不用的输入法</strong></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">vi /usr/share/fcitx/addon/fcitx-pinyin.conf &nbsp;# 拼音和双拼的配置文件</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">vi /usr/share/fcitx/addon/fcitx-table.conf &nbsp; # 五笔和五笔拼音的配置文件</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">在这两个配置文件中找到“Enabled”项，改为“False”即可关闭这四个输入法</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">重启fcitx即可生效</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><br /></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><strong>14. 设置搜狗拼音的每页候选词数</strong></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">vi&nbsp;~/.config/fcitx/config</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">找到“CandidateWordNumber”，将数字改为“10”</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">重启fcitx即可生效</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><br /></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><br /></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><strong>测试环境：</strong></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">VMware Workstation&nbsp;9.0.0 build-812388</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">RHEL 6.4</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\"><br /></div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">PS：64位的RHEL 6.4也可以按照以上步骤安装搜狗拼音输入法，只要修改一些步骤中的路径即可，CentOS 6.4也可以参考以上步骤。</div><div style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: Tahoma;\">转自：http://blog.csdn.net/yang1982_0907/article/details/17100409</div>','1397399056','1397399056','','1','0','0','40','0');
INSERT INTO `post` VALUES('142','3','[{\"id\":68,\"name\":\"hostname\"},{\"id\":47,\"name\":\"linux\"}]','Linux下修改主机名hostname','','yanue','','','<p><span>查看当前主机名方法：</span></p><pre class=\"prettyprint linenums prettyprinted lang-php \">hostname</pre><p></p><p><span>修改主机名：</span></p><h2>第一步：</h2><h3><span style=\"padding: 0px; margin: 0px; color: rgb(255, 0, 0);\">1. Redhat / CentOS / Fedora系列</span></h3><pre class=\"prettyprint linenums prettyprinted lang-php \">vi /etc/sysconfig/network</pre><p><span>输入以下：</span></p><pre class=\"prettyprint linenums prettyprinted lang-php \">HOSTNAME=yourhostname</pre><p>保存后执行以下：<br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">hostname yourhostname\n# 查看设置后的hostname\nhostname</pre><h3><span style=\"padding: 0px; margin: 0px;\"><span style=\"color:#ff0000;\"><br /></span></span></h3><h3><span style=\"padding: 0px; margin: 0px;\"><span style=\"color:#ff0000;\">2. Debian / Ubuntu系列</span></span></h3><pre class=\"prettyprint linenums prettyprinted lang-php \">vi /etc/hostname</pre><p>写入</p><pre class=\"prettyprint linenums prettyprinted lang-php \">HOSTNAME=yourhostname</pre><p>保存后执行以下：</p><pre class=\"prettyprint linenums prettyprinted lang-php \">hostname yourhostname\n# 查看设置后的hostname\nhostname</pre><h2>第二步：</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">vi /etc/hosts</pre><p>修改成新的主机名</p><p></p><h2>总结：Linux下不重启永久修改hostname方法</h2><p>1、如果只是修改hostname可以通过如下命令</p><pre class=\"prettyprint linenums prettyprinted lang-php \">hostname newHostname  </pre><p>注意：这种修改方式只有当前有效，等服务器重启后hostname就会失效，回到原来的hostname。</p><p>2、如果需要永久修改hostname可通过如下命令</p><pre class=\"prettyprint linenums prettyprinted lang-php \">vi /etc/sysconfig/network</pre><p>修改其中的HOSTNAME项，不过此种方法需要重启后生效。</p><p>3、于是在不重启又能永久修改hostname的方式是结合上述两种，这样便能做到不用重启当前也生效，重启后也生效。</p><p><strong>来自：</strong></p><p>http://blog.csdn.net/jinnchang/article/details/8858673</p><p>http://www.cyberciti.biz/faq/linux-change-hostname/<br /></p><p><br /></p>','1397399837','1397400784','','1','0','0','54','0');
INSERT INTO `post` VALUES('143','15','[{\"id\":\"69\",\"name\":\"iframe\"}]','js/jquery中刷新iframe方法(兼容主流)','','yanue','','','<h2>一。js实现刷新两种方式：</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">//方法1\ndocument.getElementById(\'FrameID\').contentWindow.location.reload(true);\n//方法2\ndocument.getElementById(\'youriframe\').src=src;</pre><p></p><p>实例：</p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">&lt;iframe id=&quot;myframe&quot; width=&quot;100%&quot; frameBorder=&quot;0&quot; src=&quot;test.html&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;\n&lt;input type=&quot;button&quot; onclick=&quot;javascript:refreshFrame();&quot; value=&quot;Refresh Frame&quot; /&gt;\n \n&lt;script type=&quot;text/javascript&quot;&gt;\n&lt;!--\nfunction refreshFrame(){\n    document.getElementById(\'myframe\').contentWindow.location.reload(true);\n}\n//--&gt;\n&lt;/script&gt;\n</pre><p></p><h2>二。jquery实现强制刷新</h2><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">$(\'#iframe\').attr(\'src\', $(\'#iframe\').attr(\'src\'));</pre><p>总结：网上一大堆<span style=\"text-indent: 28px;\">document.frames(\'ifrmname\').location.reload()已经不能用了</span><br /></p>','1397725014','1397725014','','1','0','0','18','0');
INSERT INTO `post` VALUES('144','17','[{\"id\":\"70\",\"name\":\"rpm-pkg\"}]','Fedora /etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-x86_64','','yanue','','','<p>Downloading failed: GPG key retrieval failed: [Errno 14] curl#37 - &quot;Couldn\'t open file /etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-x86_64&quot;</p><p><br /></p><p><pre class=\"bz_comment_text                 bz_wrap_comment_text\">I also had to import keys before it would work (after update to fedup-0.8):\n\nrpmkeys --import /etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-20-primary\nrpmkeys --import /etc/pki/rpm-gpg/RPM-GPG-KEY-rpmfusion-nonfree-fedora-20\n\nI did not have any .rpmnew files in /etc/yum.repos.d, but I do have rpmfusion and some other repos enabled.</pre><br /></p>','1397795741','1397795741','','0','0','0','7','0');
INSERT INTO `post` VALUES('145','17','[{\"id\":\"71\",\"name\":\"fedora\"},{\"id\":\"72\",\"name\":\"chrome\"}]','Install Google Chrome on Fedora 20/19/18/17','','yanue','','','http://www.if-not-true-then-false.com/2010/install-google-chrome-with-yum-on-fedora-red-hat-rhel/','1397795823','1397795823','','0','0','0','6','0');
INSERT INTO `post` VALUES('146','3','\"\"','java_home','','yanue','','','<p>&nbsp;yum list \'*jdk*\'</p><p>&nbsp;yum install java-1.8.0-openjdk*<br /></p><p>vi /etc/profile</p><p>export JAVA_HOME=/usr/lib/jvm/java-1.8.0<br />export CLASSPATH=.:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar<br />export JRE_HOME=$JAVA_HOME/jre<br />export PATH=$JAVA_HOME/bin:$PATH<br /><br /><br /></p>','1397803767','1397803767','','0','0','0','7','0');
INSERT INTO `post` VALUES('147','17','\"\"','fedora编译安装php5.5','','yanue','','','<p>1安装必备库<pre class=\"prettyprint linenums prettyprinted lang-php \">cd /usr/local/src\nwget http://us1.php.net/distributions/php-5.5.4.tar.gz\nwget http://superb-dca2.dl.sourceforge.net/project/mcrypt/Libmcrypt/2.5.8/libmcrypt-2.5.8.tar.gz</pre><br /></p><pre class=\"prettyprint linenums prettyprinted lang-php \">yum -y install gcc gcc-c++  make cmake automake autoconf kernel-devel ncurses-devel libxml2-devel openssl-devel curl-devel libjpeg-devel libpng-devel  pcre-devel libtool-libs freetype-devel gd zlib-devel file bison patch mlocate flex diffutils   readline-devel glibc-devel glib2-devel bzip2-devel gettext-devel libcap-devel libmcrypt-devel openldap openldap-devel libxslt-devel</pre><p style=\"padding: 0px; margin: 0px; clear: both; height: auto; overflow: hidden; color: rgb(80, 80, 80); font-family: 宋体, \'Arial Narrow\', arial, serif; font-size: 14px; line-height: 28px;\"><span style=\"padding: 0px; margin: 0px; white-space: nowrap;\"></span></p>a <pre class=\"prettyprint linenums prettyprinted lang-php \">wget http://us1.php.net/distributions/php-5.5.11.tar.gz\n</pre>a<pre class=\"prettyprint linenums prettyprinted lang-php \">./configure --prefix=/usr/local/php --mandir=/usr/share/man --infodir=/usr/share/info --sysconfdir=/etc --enable-cli --with-config-file-path=/usr/local/php/etc --with-openssl --with-kerberos  --with-zlib --enable-bcmath --with-bz2 --enable-calendar --with-curl --enable-exif --enable-ftp --with-gd --enable-gd-native-ttf --with-ldap --with-ldap-sasl --enable-mbstring --enable-mbregex --enable-json --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-mysql-sock=mysqlnd --with-pdo-sqlite --enable-pdo --enable-dba --enable-shmop --enable-soap --enable-sockets --enable-wddx --enable-fpm --with-mhash --with-mcrypt --with-iconv --with-xsl --enable-zip --with-pcre-regex --enable-dom --enable-gd-native-ttf --enable-posix --enable-fileinfo --enable-sysvmsg --enable-sysvsem --enable-sysvshm --with-xmlrpc --enable-xml --enable-xmlreader --enable-maintainer-zts --enable-opcache <span style=\"color:#ff0000;\">--with-libdir=lib64</span></pre>a<p style=\"padding: 0px; margin: 8px 0px; line-height: 22.5px; letter-spacing: 0.5px; font-size: 13px; color: rgb(51, 51, 51); font-family: Verdana, sans-serif, 宋体;\"></p>a<pre class=\"prettyprint linenums prettyprinted lang-php \">cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm #因为php5.3开始自带fpm，使用自带的管理脚本\nchmod +x /etc/init.d/php-fpm\nmkdir /usr/local/php/etc/\ncp /etc/php-fpm.conf.default /etc/php-fpm.conf -Rf\ncp php.ini-* /usr/local/php/etc/\ncp php.ini-production /usr/local/php/etc/php.ini\nln -sf /usr/local/php/etc/php.ini /etc/</pre><pre class=\"prettyprint linenums prettyprinted lang-php \">vi /etc/php-fpm.conf\ngroup=www\nuser=www\n</pre><pre class=\"prettyprint linenums prettyprinted lang-php \">echo PATH=$PATH:/usr/local/php/bin &gt;&gt; /etc/profile\nsource /etc/profile</pre><br /><p></p><p style=\"padding: 0px; margin: 8px 0px; line-height: 22.5px; letter-spacing: 0.5px; font-size: 13px; color: rgb(51, 51, 51); font-family: Verdana, sans-serif, 宋体;\">今天在CentOS 6.4 x86_64下安装PHP 5.4.7的ldap扩展库时，出现<code style=\"padding: 1px 3px; margin: 0px 2px; font-family: Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, \'monospace !important\'; border: 1px solid rgb(238, 238, 238); background-color: rgb(252, 252, 252); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; word-break: break-all; color: rgb(64, 170, 83);\">PHP configure: error: Cannot find ldap libraries in /usr/lib</code>错误。这个错误提示在/usr/lib 下找不到相关模块，这是因为64位的linux默认把openldap的so库文件都放在 /usr/lib64 文件夹下。有两个办法解决：</p><ul style=\"padding: 0px; margin: 0px 0px 10px 20px; line-height: 22.5px; color: rgb(51, 51, 51); font-family: Verdana, sans-serif, 宋体; font-size: 13px;\"><li style=\"padding: 0px; margin: 0px;\"><p style=\"padding: 0px; margin: 8px 0px; letter-spacing: 0.5px; font-size: 12.5px;\">将/usr/lib64目录中所有ldap的so库拷贝到/usr/lib目录中，然后重新configure</p><p style=\"padding: 0px; margin: 8px 0px; letter-spacing: 0.5px; font-size: 12.5px;\">cp -frp /usr/lib64/libldap* /usr/lib/</p></li><li style=\"padding: 0px; margin: 0px;\"><p style=\"padding: 0px; margin: 8px 0px; letter-spacing: 0.5px; font-size: 12.5px;\">在configure的时候，指定<code style=\"padding: 1px 3px; margin: 0px 2px; font-family: Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, \'monospace !important\'; border: 1px solid rgb(238, 238, 238); background-color: rgb(252, 252, 252); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; word-break: break-all; color: rgb(64, 170, 83);\">--with-libdir=lib64</code></p></li></ul><br />','1397886128','1397891348','','0','0','0','4','0');
INSERT INTO `post` VALUES('148','3','[{\"id\":74,\"name\":\"gmagick\"},{\"id\":73,\"name\":\"GraphicsMagick\"}]','编译安装GraphicsMagick及php扩展gmagick','','yanue','','','<h2>GraphicsMagick介绍</h2><p>GraphicsMagick是从 ImageMagick 5.5.2 分支出来的，但是现在他变得更稳定和优秀，GM更小更容易安装、GM更有效率、GM的手册非常丰富GraphicsMagick的命令与ImageMagick基本是一样的。<br /></p><p>GraphicsMagick号称图像处理领域的瑞士军刀。 短小精悍的代码却提供了一个鲁棒、高效的工具和库集合，来处理图像的读取、写入和操作，支持超过88中图像格式，包括重要的DPX、GIF、JPEG、JPEG-2000、PNG、PDF、PNM和TIFF。<br /></p><p>通过使用OpenMP可是利用多线程进行图片处理，增强了通过扩展CPU提高处理能力。<br /></p><p>GraphicsMagick可以再绝大多数的平台上使用，Linux、Mac、Windows都没有问题。<br /></p><p>GraphicsMagick支持大图片的处理，并且已经做过GB级别的图像处理实验。GraphicsMagick能够动态的生成图片，特别适用于互联网的应用。可以用来处理调整尺寸、旋转、加亮、颜色调整、增加特效等方面。GaphicsMagick不仅支持命令行的模式，同时也支持C、C++、Perl、PHP、Tcl、Ruby等的调用。<br /></p><h2>&nbsp;1. 安装GraphicsMagick</h2><pre class=\"prettyprint linenums prettyprinted lang-php \">wget http://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/1.3.18/GraphicsMagick-1.3.18.tar.gz\ntar -zxf GraphicsMagick-1.3.18.tar.gz \ncd GraphicsMagick-1.3.18/\n./configure --prefix=/usr/local/gmagick --enable-shared\nmake -j4\nmake install\ncd ..\n</pre><p><strong><span style=\"color:#ff0000;\">说明</span></strong>：如果编译不通过可以加上<span style=\"font-family: Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace; font-size: 14px; line-height: 15.399999618530273px; white-space: pre;\">--disable-openmp参数</span><br /></p><h2>2 安装GraphicsMagick之php扩展gmagick</h2><p><strong><span style=\"color:#ff0000;\">a)</span></strong>. 下载并安装<br /></p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">wget http://pecl.php.net/get/gmagick-1.1.4RC1.tgz\ntar -zxf gmagick-1.1.4RC1.tgz \ncd gmagick-1.1.4RC1/\nphpize\n./configure --with-gmagick=/usr/local/gmagick/\nmake -j4\nmake install</pre><p></p><p><strong><span style=\"color:#ff0000;\">b)</span></strong>. 添加到php.ini并重启php-fpm或apache</p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">vi /etc/php.ini\n\n# 末尾追加\n[gmagick]\nextention = gmagick.so\n\n# 重启php\nservice php-fpm restart</pre><p></p><p><strong><span style=\"color:#ff0000;\">编译说明</span></strong>：</p><p>当前我的php安装路径是/usr/local/php。并且添加了环境变量：/usr/local/php/bin，添加方法：（根据你的路径来）</p><pre class=\"prettyprint linenums prettyprinted lang-php \">echo PATH=$PATH:/usr/local/php/bin/ &gt;&gt; /etc/profile\nsource /etc/profile</pre><p></p><p>如果未添加环境变量，或多版本php装扩展，可以使用全路径式：</p><p></p><pre class=\"prettyprint linenums prettyprinted lang-php \">/usr/local/php/bin/phpize\n./configure --with-php-config=/usr/local/php/bin/php-config --with-gmagick=/usr/local/gmagick/</pre><div><br /></div><h2>GraphicsMagick命令常用方法</h2><div style=\"margin: 0px; padding: 8px 0px 8px 30px; line-height: 26.600000381469727px; text-align: justify; color: rgb(85, 85, 85); font-family: \'Microsoft Yahei\', Verdana, Geneva, sans-serif; font-size: 14px;\">1. 显示图像文件详细信息<br style=\"margin: 0px; padding: 0px;\" />gm identify a.jpg<br style=\"margin: 0px; padding: 0px;\" />2.更改当前目录下*.jpg的尺寸大小，并保存于目录.thumb里面<br style=\"margin: 0px; padding: 0px;\" />gm mogrify -output-directory .thumbs -resize 320×200 *.jpg<br style=\"margin: 0px; padding: 0px;\" />3. 将三幅图像和并为一副图像<br style=\"margin: 0px; padding: 0px;\" />gm montage -mode concatenate -tile 3×1 image1.ppm image2.ppm image3.ppm concatenated.miff<br style=\"margin: 0px; padding: 0px;\" />4. 显示图像<br style=\"margin: 0px; padding: 0px;\" />gm display ‘vid:*.jpg’<br style=\"margin: 0px; padding: 0px;\" />5. 格式转换<br style=\"margin: 0px; padding: 0px;\" />gm convert a.bmp a.jpg<br style=\"margin: 0px; padding: 0px;\" />gm convert a.bmp a.pdf（转换为pdf)<br style=\"margin: 0px; padding: 0px;\" />6. 调整图像dpi和大小<br style=\"margin: 0px; padding: 0px;\" />gm convert -density 288 -geometry 25% image.gif image.gif<br style=\"margin: 0px; padding: 0px;\" />（缩小为原先的1／4，并且dpi为288）<br style=\"margin: 0px; padding: 0px;\" />gm convert -resize 640×480 image.gif image.gif<br style=\"margin: 0px; padding: 0px;\" />（转换为640×480的图像)<br style=\"margin: 0px; padding: 0px;\" />7. 在图像上添加文字<br style=\"margin: 0px; padding: 0px;\" />gm convert -font Arial -fill blue -pointsize 18 -draw “text 10,10 ‘your text here’” test.tif test.png<br style=\"margin: 0px; padding: 0px;\" />8. 从gif文件中抽取第一帧<br style=\"margin: 0px; padding: 0px;\" />gm convert “Image.gif[0]” first.gif<br style=\"margin: 0px; padding: 0px;\" />9. 建立gif图像<br style=\"margin: 0px; padding: 0px;\" />gm convert -delay 20 frame*.gif animation.gif<br style=\"margin: 0px; padding: 0px;\" />gm convert -loop 50 frame*.gif animation.gif<br style=\"margin: 0px; padding: 0px;\" />（让动画循环50次）<br style=\"margin: 0px; padding: 0px;\" />gm convert -delay 20 frame1.gif -delay 10 frame2.gif -delay 5 frame3.gif animation.gif<br style=\"margin: 0px; padding: 0px;\" />（对每一帧手动指定延时）<br style=\"margin: 0px; padding: 0px;\" />10. 截屏<br style=\"margin: 0px; padding: 0px;\" />gm import a.jpg<br style=\"margin: 0px; padding: 0px;\" />用鼠标点击所要截取的窗口，或者选择截屏区域，保存为a.jpg<br style=\"margin: 0px; padding: 0px;\" />gm import -frame a.jpg<br style=\"margin: 0px; padding: 0px;\" />保留窗口的边框</div>','1397889508','1397891226','','1','0','0','21','0');
INSERT INTO `post` VALUES('149','17','[{\"id\":25,\"name\":\"nginx\"}]','fedora编译安装nginx','','yanue','','','<pre class=\"prettyprint linenums prettyprinted lang-php \">yum -y install gcc-c++ zlib zlib-devel openssl openssl--devel pcre pcre-devel\n</pre>as<pre class=\"prettyprint linenums prettyprinted lang-php \">groupadd www\nuseradd -g www www -s /bin/false</pre>a<pre class=\"prettyprint linenums prettyprinted lang-php \">cd /usr/local/src\nwget http://nginx.org/download/nginx-1.4.4.tar.gz\nwget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.32.tar.gz\nwget http://www.zlib.net/zlib-1.2.8.tar.gz\nwget https://fastdfs.googlecode.com/files/fastdfs-nginx-module_v1.15.tar.gz\nwget https://github.com/alibaba/nginx-http-concat/archive/master.zip\nmv master.zip nginx-http-concat-master.zip</pre>a<pre class=\"prettyprint linenums prettyprinted lang-php \">tar -zxf zlib-1.2.8.tar.gz\ntar -zxf pcre-8.32.tar.gz\ntar -zxf fastdfs-nginx-module_v1.15.tar.gz\ntar -zxf nginx-1.4.4.tar.gz\nunzip nginx-http-concat-master.zip </pre>a<pre class=\"prettyprint linenums prettyprinted lang-php \">cd nginx-1.4.4\n./configure --prefix=/usr/local/nginx \\\n--user=www \\\n--group=www \\\n--pid-path=/log/nginx/nginx.pid  \\\n--lock-path=/log/nginx/nginx.lock \\\n--error-log-path=/log/nginx/error.log \\\n--http-log-path=/log/nginx/access.log \\\n--with-http_ssl_module \\\n--with-http_realip_module \\\n--with-http_sub_module \\\n--with-http_flv_module \\\n--with-http_dav_module \\\n--with-http_gzip_static_module \\\n--with-http_stub_status_module \\\n--with-http_addition_module \\\n--with-zlib=../zlib-1.2.8 \\\n--with-pcre=../pcre-8.32 \\\n--add-module=../nginx-http-concat-master \\\n--add-module=../fastdfs-nginx-module/src \\</pre><pre class=\"prettyprint linenums prettyprinted lang-php \">make -j4\nmake install</pre>a<pre class=\"prettyprint linenums prettyprinted lang-php \">ln -sf /usr/local/nginx/sbin/nginx /usr/bin/\nmkdir - /opt/logs/nginx/\n</pre><p>a</p><pre class=\"prettyprint linenums prettyprinted lang-php \">nginx\n\nnginx -s reload\n\nnginx -s stop</pre><p></p><p>aaa</p>','1397891627','1397893219','','0','0','0','5','0');
INSERT INTO `post` VALUES('150','9','[{\"id\":75,\"name\":\"vhost\"},{\"id\":25,\"name\":\"nginx\"}]','nginx配置篇','','yanue','','','1<pre class=\"prettyprint linenums prettyprinted lang-php \">ln -sf /usr/local/nginx/conf/nginx.conf /etc/nginx.conf\nmkdir -p /etc/nginx/vhost</pre><pre class=\"prettyprint linenums prettyprinted lang-php \">user www www;\nworker_processes 4;\nworker_cpu_affinity 1000 0100 0010 0001;\n\n\nerror_log /opt/log/nginx/error.log error;\npid /var/run/nginx.pid;\n\n\nworker_rlimit_nofile 65535;\n\nevents\n{\n	use epoll;\n	worker_connections 65535;\n}\n\n\nhttp\n{\n	include mime.types; \n	include fastcgi.conf;\n	default_type application/octet-stream; \n	charset utf-8; \n	server_names_hash_bucket_size 128; \n	client_header_buffer_size 32k; \n	large_client_header_buffers 4 64k; \n	client_max_body_size 8m; \n	sendfile on;\n	autoindex off; \n	tcp_nopush on; \n	tcp_nodelay on; \n	keepalive_timeout 30; \n\n\n	fastcgi_connect_timeout 60;\n	fastcgi_send_timeout 60;\n	fastcgi_read_timeout 60;\n	fastcgi_buffer_size 128k;\n	fastcgi_buffers 8 128k;\n	fastcgi_busy_buffers_size 128k;\n	fastcgi_temp_file_write_size 128k;\n\n\n	gzip on; \n	gzip_min_length 5k; \n	gzip_buffers 4 16k; \n	gzip_http_version 1.0; \n	gzip_comp_level 2; \n	gzip_types text/plain application/x-javascript text/css application/xml;\n	gzip_vary on;\n	\n	log_format main \'$remote_addr - $remote_user [$time_local] &quot;$request&quot; \'\n	\'$status $body_bytes_sent &quot;$http_referer&quot; \'\n	\'&quot;$http_user_agent&quot; $http_x_forwarded_for\';\n	<span style=\"font-family: Arial, Helvetica, sans-serif;\">	</span>\n<span style=\"white-space:pre\">	</span>include /etc/nginx/vhost/*.conf;\n}</pre><p>a</p><p>a</p><pre class=\"prettyprint linenums prettyprinted lang-php \">server {\n        listen      80;\n        server_name  estt.com.cn www.estt.com.cn ;\n        root /var/www/estt;\n        index  index.php index.html index.htm;\n\n        #access_log  /opt/logs/nginx/estt/access.log;\n        error_log  /opt/logs/nginx/error.log;\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root  html;\n        }\n\n        location = /favicon.ico {\n                log_not_found off;\n                access_log off;\n        }\n\n        location = /robots.txt {\n                allow all;\n                log_not_found off;\n                access_log off;\n        }\n\n        location / {\n                # This is cool because no php is touched for static content.\n                # include the &quot;?$args&quot; part so non-default permalinks doesn\'t break when using query string\n                try_files $uri $uri/ /index.php?$args;\n        }\n\n        location ~* \\.(js|css|png|jpg|jpeg|gif|ico)$ {\n                expires max;\n                log_not_found off;\n        }\n\n        location ~ .php$ {\n            fastcgi_pass   127.0.0.1:9000;\n        }\n\n        location ~ /.ht {\n            deny  all;\n        }\n\n}\n</pre><p></p><p>a</p><p><br /></p><p>a</p><p><br /></p><p><br /></p>','1397892787','1397893113','','0','0','0','4','0');
INSERT INTO `post` VALUES('151','14','[{\"id\":19,\"name\":\"phpstorm\"}]','PhpStorm注册码 key license','','yanue','','','<p style=\"border: 0px; margin: 0px; padding: 5px 0px; line-height: 22px; color: rgb(51, 51, 51); font-family: 微软雅黑, PMingLiU, Verdana, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(250, 250, 250);\"><span style=\"border: 0px; margin: 0px; padding: 0px;\">User name:</span></p><div class=\"codecolorer-container text mac-classic\" style=\"border: 1px solid rgb(159, 159, 159); margin: 0px 0px 10px; padding: 0px; font-size: 13px; line-height: 1.4em; font-family: Monaco, \'Lucida Console\', monospace; overflow: auto; white-space: nowrap; width: auto;\"><div class=\"text codecolorer\" style=\"border: 0px; margin: 0px; padding: 5px; line-height: 1.4em;\">EMBRACE</div></div><p style=\"border: 0px; margin: 0px; padding: 5px 0px; line-height: 22px; color: rgb(51, 51, 51); font-family: 微软雅黑, PMingLiU, Verdana, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(250, 250, 250);\"><span style=\"border: 0px; margin: 0px; padding: 0px;\">License key:</span></p><div class=\"codecolorer-container text mac-classic\" style=\"border: 1px solid rgb(159, 159, 159); margin: 0px 0px 10px; padding: 0px; font-size: 13px; line-height: 1.4em; font-family: Monaco, \'Lucida Console\', monospace; overflow: auto; white-space: nowrap; width: auto;\"><div class=\"text codecolorer\" style=\"border: 0px; margin: 0px; padding: 5px; line-height: 1.4em;\">===== LICENSE BEGIN =====<br style=\"border: 0px; margin: 0px; padding: 0px; line-height: 1.4em;\" />43136-12042010<br style=\"border: 0px; margin: 0px; padding: 0px; line-height: 1.4em;\" />00002UsvSON704l&quot;dILe1PVx3y4&quot;B3<br style=\"border: 0px; margin: 0px; padding: 0px; line-height: 1.4em;\" />49AU6oSDJrsjE8nMOQh&quot;8HTDJHIUUh<br style=\"border: 0px; margin: 0px; padding: 0px; line-height: 1.4em;\" />gd1BebYc5U&quot;6OxDbVsALB4Eb10PW8&quot;<br style=\"border: 0px; margin: 0px; padding: 0px; line-height: 1.4em;\" />===== LICENSE END =====</div></div><p style=\"border: 0px; margin: 0px; padding: 5px 0px; line-height: 22px; color: rgb(51, 51, 51); font-family: 微软雅黑, PMingLiU, Verdana, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(250, 250, 250);\"><span style=\"border: 0px; margin: 0px; padding: 0px; color: red;\">PS:经测试，PhpStorm开发工具2.0、3.0都可以用</span></p><p style=\"border: 0px; margin: 0px; padding: 5px 0px; line-height: 22px; color: rgb(51, 51, 51); font-family: 微软雅黑, PMingLiU, Verdana, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(250, 250, 250);\">具体使用看下图：<br style=\"border: 0px; margin: 0px; padding: 0px;\" /><a href=\"http://orgcent.com/wp-content/uploads/2012/04/picimage.png\" rel=\"shadowbox[sbpost-409];player=img;\" title=\"PhpStorm注册码 key license\" style=\"border: 0px; margin: 0px; padding: 0px; color: rgb(0, 136, 221); text-decoration: none;\"><img src=\"http://orgcent.com/wp-content/uploads/2012/04/picimage.png\" alt=\"PhpStorm注册码 key license\" title=\"PhpStorm注册码 key license\" width=\"584\" height=\"482\" class=\"alignnone size-full wp-image-410\" style=\"border: 0px; margin: 0px auto; padding: 0px; display: block;\" /></a></p>','1397914407','1397914407','','0','0','0','3','0');
INSERT INTO `post` VALUES('152','14','[{\"id\":\"76\",\"name\":\"idea\"}]','java IntelliJ IDEA 13 注册码 IDEA序列号 License Key','','yanue','','','<h1 class=\"post-title\" style=\"font-weight: normal; font-family: TitilliumText22LRegular; line-height: 1.5em; margin: 0px 0px 10px; clear: both; font-size: 28px; color: rgb(51, 51, 51);\"><pre id=\"jetbrains_key\" style=\"border: 0px; font-family: inherit; font-size: 13px; margin-top: 0px; margin-bottom: 0px; outline: 0px; padding: 0px; vertical-align: baseline; color: rgb(51, 51, 51); line-height: 20.799999237060547px;\">Username:\n<strong>JavaDeveloper@sskaje.me</strong>\n\nLicense:\n<strong>282971-M1NWC-FP97E-MHFRO-UZQRY-F2WR0</strong></pre><p style=\"line-height: 20.799999237060547px; margin: 1em 0px; color: rgb(51, 51, 51); font-family: TitilliumText22LRegular; font-size: 13px;\">&nbsp;</p><br /></h1>','1397914723','1397914723','','0','0','0','3','0');
INSERT INTO `post` VALUES('153','14','[{\"id\":49,\"name\":\"原创\"}]','linux下mysql gui工具','','yanue','','','<a class=\"src-url\" target=\"_blank\" href=\"http://www.fastflo.de/files/emma/downloads/python_src/emma-0.6.tar.gz\" style=\"color: rgb(85, 102, 221); text-decoration: none; display: inline-block; max-width: 500px; overflow: hidden; padding-bottom: 1px; padding-top: 4px; text-overflow: ellipsis; white-space: nowrap; font-family: \'DejaVu Sans\', Arial, sans-serif;\"></a><a class=\"src-url\" target=\"_blank\" href=\"http://www.fastflo.de/files/emma/downloads/python_src/emma-0.6.tar.gz\" style=\"color: rgb(85, 102, 221); text-decoration: none; display: inline-block; max-width: 500px; overflow: hidden; padding-bottom: 1px; padding-top: 4px; text-overflow: ellipsis; white-space: nowrap; font-family: \'DejaVu Sans\', Arial, sans-serif;\">http://www.fastflo.de/files/emma/downloads/python_src/emma-0.6.tar.gz</a><br /><p><a class=\"src-url\" target=\"_blank\" href=\"http://www.fastflo.de/files/emma/downloads/python_src/emma-0.6.tar.gz\" style=\"color: rgb(85, 102, 221); text-decoration: none; display: inline-block; max-width: 500px; overflow: hidden; padding-bottom: 1px; padding-top: 4px; text-overflow: ellipsis; white-space: nowrap; font-family: \'DejaVu Sans\', Arial, sans-serif;\"></a></p><p>http://dbeaver.jkiss.org/files/dbeaver-2.3.8-linux.gtk.x86_64.zip</p><p>很好</p><p></p><p style=\"margin: 0px; padding: 0px; font-family: Arial; font-size: 14px; line-height: 26px;\"><strong><span style=\"font-size: 18px; color: rgb(0, 51, 0);\">基本特性：</span></strong></p><p style=\"margin: 0px; padding: 0px; font-family: Arial; font-size: 14px; line-height: 26px;\"><strong><span style=\"font-size: 18px; color: rgb(0, 51, 0);\">1. 支持数据库元数据浏览</span></strong></p><div class=\"spctrl\" style=\"font-family: Arial; font-size: 14px; line-height: 26px;\"><strong><span style=\"font-size: 18px; color: rgb(0, 51, 0);\"></span></strong></div><p style=\"margin: 0px; padding: 0px; font-family: Arial; font-size: 14px; line-height: 26px;\"><strong><span style=\"font-size: 18px; color: rgb(0, 51, 0);\">2. 支持元数据编辑（包括表，列，键，索引）</span></strong></p><div class=\"spctrl\" style=\"font-family: Arial; font-size: 14px; line-height: 26px;\"><strong><span style=\"font-size: 18px; color: rgb(0, 51, 0);\"></span></strong></div><p style=\"margin: 0px; padding: 0px; font-family: Arial; font-size: 14px; line-height: 26px;\"><strong><span style=\"font-size: 18px; color: rgb(0, 51, 0);\">3. 支持SQL语句和脚本的执行</span></strong></p><div class=\"spctrl\" style=\"font-family: Arial; font-size: 14px; line-height: 26px;\"><strong><span style=\"font-size: 18px; color: rgb(0, 51, 0);\"></span></strong></div><p style=\"margin: 0px; padding: 0px; font-family: Arial; font-size: 14px; line-height: 26px;\"><strong><span style=\"font-size: 18px; color: rgb(0, 51, 0);\">4. 支持SQL关键字高亮显示（依据与不同是数据库）</span></strong></p><p style=\"margin: 0px; padding: 0px; font-family: Arial; font-size: 14px; line-height: 26px;\"><strong><span style=\"font-size: 18px; color: rgb(0, 51, 0);\">存储过程不知道支不支持，这个有待考证~~~</span></strong></p><p style=\"margin: 0px; padding: 0px; font-family: Arial; font-size: 14px; line-height: 26px;\"><strong><span style=\"font-size: 18px; color: rgb(0, 51, 0);\">DBeaver经官方测试，其支持：MySQL、Oracle、PostgreSQL、IBM DB2、Microsoft SQL Server、Sybase、ODBC、Java DB (Derby)、Firebird (Interbase)、HSQLDB、SQLite、Mimer、H2、IBM Informix、SAP MAX DB、Cache、Ingres、Linter、Teradata和一些符合JDBC连接的数据库。</span></strong></p><p style=\"margin: 0px; padding: 0px; font-family: Arial; font-size: 14px; line-height: 26px;\"><strong><span style=\"font-size: 18px; color: rgb(0, 51, 0);\"></span></strong>&nbsp;<span style=\"font-family: Arial; font-size: 14px; line-height: 26px;\"><span style=\"font-size: 18px; color: rgb(0, 51, 0);\">操作界面基于Eclipse，感觉相当舒适，关键是代码高亮啊，有自动缩进啊，而且又有免安装版，操作界面语言自动匹配，最最重要的是开源的工具啊</span></span><br /></p><br /><p>navicat</p><p><span style=\"color: rgb(76, 76, 76); font-family: \'Helvetica Neue\', Arial, Helvetica, Geneva, sans-serif; font-size: 13px; line-height: 16px;\">Valentina Studio&nbsp;</span><br /></p><h1 style=\"margin: 10px 0px 0px; padding: 5px 0px 5px 25px; font-family: Verdana, \'Trebuchet MS\', sans-serif; font-size: 14px; color: rgb(136, 172, 11); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(239, 240, 241); background-image: url(http://www.webmin.com/images/square-green.png); background-position: 3px 50%; background-repeat: no-repeat no-repeat;\">Webmin</h1><br /><span style=\"color: rgb(255, 255, 255); font-family: arial, verdana, sans-serif; font-size: 35px;  background-color: rgb(238, 238, 238);\"><strong>DbVisualizer</strong></span><br /><br /><p><a class=\"src-url\" target=\"_blank\" href=\"http://www.fastflo.de/files/emma/downloads/python_src/emma-0.6.tar.gz\" style=\"color: rgb(85, 102, 221); text-decoration: none; display: inline-block; max-width: 500px; overflow: hidden; padding-bottom: 1px; padding-top: 4px; text-overflow: ellipsis; white-space: nowrap; font-family: \'DejaVu Sans\', Arial, sans-serif;\"></a></p><p>dtsql&nbsp;</p><p>基于java，中文乱码，需要自己下载jdbc之mysql-connector-java-5.1.30，稍微麻烦，需要注册</p><p>dbvis 感觉还不错</p><p><span style=\"color: rgb(85, 85, 85); font-family: \'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 25px;\">DbVisualizer是一个完全基于JDBC的跨平台数据库管理工具，内置SQL语句编辑器（支持语法高亮），凡是具有JDBC数据库接口的数据库都可以管理，已经在Oracle, Sybase, DB2, MySQL, InstantDB, Cloudcape, HyperSonic ，Mimer SQL上通过测试。</span><br /><br /><br /></p><a class=\"src-url\" target=\"_blank\" href=\"http://www.fastflo.de/files/emma/downloads/python_src/emma-0.6.tar.gz\" style=\"color: rgb(85, 102, 221); text-decoration: none; display: inline-block; max-width: 500px; overflow: hidden; padding-bottom: 1px; padding-top: 4px; text-overflow: ellipsis; white-space: nowrap; font-family: \'DejaVu Sans\', Arial, sans-serif;\"></a>','1397918162','1397925042','','0','0','0','2','0');
--
-- 表的结构post_cat
--

DROP TABLE IF EXISTS `post_cat`;
CREATE TABLE `post_cat` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `alias` varchar(50) NOT NULL DEFAULT '' COMMENT '别名 用于url',
  `name` varchar(50) NOT NULL DEFAULT '' COMMENT '分类名称',
  `en_name` varchar(50) NOT NULL DEFAULT '' COMMENT '英文名称',
  `parent_id` int(10) NOT NULL DEFAULT '0' COMMENT '父级id',
  `is_parent` int(10) NOT NULL DEFAULT '0' COMMENT '是否为父级',
  `detail` varchar(250) NOT NULL DEFAULT '' COMMENT '描述',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=18 DEFAULT CHARSET=utf8 COMMENT='咨询分类';

--
-- 转存表中的数据 post_cat
--

INSERT INTO `post_cat` VALUES('1','web','WEB','web develop','0','0','web前端综合');
INSERT INTO `post_cat` VALUES('3','linux','Linux','','0','0','');
INSERT INTO `post_cat` VALUES('2','php','PHP','','0','0','');
INSERT INTO `post_cat` VALUES('4','sql','SQL','','0','0','');
INSERT INTO `post_cat` VALUES('5','map','Map','','0','0','');
INSERT INTO `post_cat` VALUES('6','jquery','JQuery','jquery userful','1','0','jquery综合');
INSERT INTO `post_cat` VALUES('7','html5','HTML5','Html5 articles','1','0','html5综合');
INSERT INTO `post_cat` VALUES('8','mongo','MongoDB','MongoDb Server','4','0','');
INSERT INTO `post_cat` VALUES('9','server','Server','server','0','0','');
INSERT INTO `post_cat` VALUES('10','centos','Centos','Centos','3','0','');
INSERT INTO `post_cat` VALUES('11','ubuntu','Ubuntu','Ubuntu','3','0','');
INSERT INTO `post_cat` VALUES('12','mysql','MySQL','MySql Server','4','0','');
INSERT INTO `post_cat` VALUES('13','gps','GPS','gps map','5','0','');
INSERT INTO `post_cat` VALUES('14','','Tools','tools useful','0','0','');
INSERT INTO `post_cat` VALUES('15','js','Js','js develop','1','0','js前端综合');
INSERT INTO `post_cat` VALUES('16','css','css','css','1','0','css综合');
INSERT INTO `post_cat` VALUES('17','fedora','Fedora','Fedora','3','0','Fedora Linux');
--
-- 表的结构post_tags
--

DROP TABLE IF EXISTS `post_tags`;
CREATE TABLE `post_tags` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL DEFAULT '',
  `count` int(11) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=MyISAM AUTO_INCREMENT=78 DEFAULT CHARSET=utf8 COMMENT='标签';

--
-- 转存表中的数据 post_tags
--

INSERT INTO `post_tags` VALUES('1','迅搜','1');
INSERT INTO `post_tags` VALUES('2','xunsearch','1');
INSERT INTO `post_tags` VALUES('3','scws','1');
INSERT INTO `post_tags` VALUES('4','Xapian','1');
INSERT INTO `post_tags` VALUES('5','apache','2');
INSERT INTO `post_tags` VALUES('6','.htaccess','2');
INSERT INTO `post_tags` VALUES('7','mongo','1');
INSERT INTO `post_tags` VALUES('8','sql','1');
INSERT INTO `post_tags` VALUES('9','ajax','2');
INSERT INTO `post_tags` VALUES('10','跨域','1');
INSERT INTO `post_tags` VALUES('11','sphinx','2');
INSERT INTO `post_tags` VALUES('12','mysql','15');
INSERT INTO `post_tags` VALUES('13','ubuntu','10');
INSERT INTO `post_tags` VALUES('14','map','4');
INSERT INTO `post_tags` VALUES('15','纠偏','2');
INSERT INTO `post_tags` VALUES('16','gps','3');
INSERT INTO `post_tags` VALUES('17','win8','1');
INSERT INTO `post_tags` VALUES('18','dia','1');
INSERT INTO `post_tags` VALUES('19','phpstorm','2');
INSERT INTO `post_tags` VALUES('20','jre','1');
INSERT INTO `post_tags` VALUES('21','分表','1');
INSERT INTO `post_tags` VALUES('22','ppa','1');
INSERT INTO `post_tags` VALUES('23','jdk','1');
INSERT INTO `post_tags` VALUES('24','php','23');
INSERT INTO `post_tags` VALUES('25','nginx','3');
INSERT INTO `post_tags` VALUES('26','fcitx','3');
INSERT INTO `post_tags` VALUES('27','exception','1');
INSERT INTO `post_tags` VALUES('28','html5','2');
INSERT INTO `post_tags` VALUES('29','ip','2');
INSERT INTO `post_tags` VALUES('30','数组','1');
INSERT INTO `post_tags` VALUES('31','url','1');
INSERT INTO `post_tags` VALUES('32','内存','1');
INSERT INTO `post_tags` VALUES('33','异常','1');
INSERT INTO `post_tags` VALUES('34','jquery','5');
INSERT INTO `post_tags` VALUES('35','插件','1');
INSERT INTO `post_tags` VALUES('36','COM组建','1');
INSERT INTO `post_tags` VALUES('37','google','1');
INSERT INTO `post_tags` VALUES('38','js','8');
INSERT INTO `post_tags` VALUES('39','ie6','3');
INSERT INTO `post_tags` VALUES('40','时间戳','3');
INSERT INTO `post_tags` VALUES('41','json','2');
INSERT INTO `post_tags` VALUES('42','zend','5');
INSERT INTO `post_tags` VALUES('43','正则','4');
INSERT INTO `post_tags` VALUES('44','flash','1');
INSERT INTO `post_tags` VALUES('45','GRANT','2');
INSERT INTO `post_tags` VALUES('46','router','1');
INSERT INTO `post_tags` VALUES('47','linux','6');
INSERT INTO `post_tags` VALUES('48','rpm','1');
INSERT INTO `post_tags` VALUES('49','原创','2');
INSERT INTO `post_tags` VALUES('50','svn','1');
INSERT INTO `post_tags` VALUES('51','mvc','1');
INSERT INTO `post_tags` VALUES('52','html','1');
INSERT INTO `post_tags` VALUES('53','位运算','1');
INSERT INTO `post_tags` VALUES('54','乱码','1');
INSERT INTO `post_tags` VALUES('55','alter','1');
INSERT INTO `post_tags` VALUES('56','回掉','1');
INSERT INTO `post_tags` VALUES('57','dump','1');
INSERT INTO `post_tags` VALUES('58','时间','1');
INSERT INTO `post_tags` VALUES('59','nodejs','2');
INSERT INTO `post_tags` VALUES('60','npm','2');
INSERT INTO `post_tags` VALUES('61','CSS','1');
INSERT INTO `post_tags` VALUES('62','字段','1');
INSERT INTO `post_tags` VALUES('63','导入','1');
INSERT INTO `post_tags` VALUES('64','导出','1');
INSERT INTO `post_tags` VALUES('65','路由','1');
INSERT INTO `post_tags` VALUES('66','经纬度','1');
INSERT INTO `post_tags` VALUES('67','sougou','1');
INSERT INTO `post_tags` VALUES('68','hostname','1');
INSERT INTO `post_tags` VALUES('69','iframe','1');
INSERT INTO `post_tags` VALUES('70','rpm-pkg','1');
INSERT INTO `post_tags` VALUES('71','fedora','1');
INSERT INTO `post_tags` VALUES('72','chrome','1');
INSERT INTO `post_tags` VALUES('73','GraphicsMagick','1');
INSERT INTO `post_tags` VALUES('74','gmagick','1');
INSERT INTO `post_tags` VALUES('75','vhost','1');
INSERT INTO `post_tags` VALUES('76','idea','1');
INSERT INTO `post_tags` VALUES('77','geocoder','1');
--
-- 表的结构site
--

DROP TABLE IF EXISTS `site`;
CREATE TABLE `site` (
  `id` tinyint(4) NOT NULL DEFAULT '1',
  `sitename` varchar(50) DEFAULT '',
  `record` varchar(20) NOT NULL DEFAULT '',
  `thirdSite` text COMMENT '第三方appkey之json信息',
  `mainFocus` text COMMENT '首页大图5张json',
  `newsFocus` text COMMENT 'go页面栏目信息json'
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='网站设置';

--
-- 转存表中的数据 site
--

INSERT INTO `site` VALUES('1','购成都','川ICP备23256661号','','[{\"title\":\"asdasd\",\"url\":\"http:\\/\\/go-mall.cn\",\"pic\":\"\\/assets\\/dummy-images\\/captions.jpg\"},{\"title\":\"省委书记赵志在现指导啊工作指出一定要公开、公开、公正。\",\"url\":\"http:\\/\\/go-mall.cn\",\"pic\":\"\\/assets\\/dummy-images\\/features.jpg\"},{\"title\":\"省委书记赵志在现指导啊工作指出一定要公开、公开、公正。\",\"url\":\"http:\\/\\/go-mall.cn\",\"pic\":\"\\/assets\\/dummy-images\\/index_dl4.jpg\"},{\"title\":\"省委书记赵志在现指导啊工作指出一定要公开、公开、公正。\",\"url\":\"http:\\/\\/go-mall.cn\",\"pic\":\"\\/assets\\/dummy-images\\/overflow.jpg\"}]','[{\"title\":\"测试数据 请替换\",\"url\":\"http:\\/\\/yanue.net\",\"pic\":\"\\/assets\\/images\\/baoxianvip.jpg\"},{\"title\":\"测试数据 请替换\",\"url\":\"http:\\/\\/s-83949.gotocdn.com\\/home\\/news\\/detail-49.html\",\"pic\":\"\\/assets\\/images\\/bdrhm.jpg\"},{\"title\":\"测试数据 请替换\",\"url\":\"http:\\/\\/s-83949.gotocdn.com\\/home\\/news\\/detail-49.html\",\"pic\":\"\\/assets\\/images\\/dk.jpg\"},{\"title\":\"测试数据 请替换\",\"url\":\"http:\\/\\/s-83949.gotocdn.com\\/home\\/news\\/detail-49.html\",\"pic\":\"\\/assets\\/images\\/hbdz.jpg\"}]');
--
-- 表的结构site_links
--

DROP TABLE IF EXISTS `site_links`;
CREATE TABLE `site_links` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL DEFAULT '',
  `url` varchar(255) NOT NULL DEFAULT '',
  `logo` varchar(255) NOT NULL DEFAULT '',
  `admin` varchar(50) NOT NULL DEFAULT '',
  `contact` varchar(50) NOT NULL DEFAULT '',
  `sort` tinyint(4) NOT NULL DEFAULT '0',
  `detail` varchar(250) NOT NULL DEFAULT '',
  `created` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COMMENT='name, logo, url, admin, contact, sort, detail, created';

--
-- 转存表中的数据 site_links
--

INSERT INTO `site_links` VALUES('1','半叶寒羽','http://yanue.net','','','','0','','0');
INSERT INTO `site_links` VALUES('2','GPSspg — 探索地区，分享信息！','http://www.gpsspg.com/','','','','0','','0');
--
-- 表的结构user_oauth
--

DROP TABLE IF EXISTS `user_oauth`;
CREATE TABLE `user_oauth` (
  `uid` int(10) NOT NULL DEFAULT '0' COMMENT '授权给本站的账号',
  `open_id` varchar(80) NOT NULL COMMENT '第三方唯一标识如uid，openid',
  `type` varchar(10) NOT NULL COMMENT '所属第三方网站',
  `is_binded` int(1) unsigned NOT NULL DEFAULT '0'
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='第三方登录授权';

--
-- 转存表中的数据 user_oauth
--

INSERT INTO `user_oauth` VALUES('1','1764194307','2','1');
INSERT INTO `user_oauth` VALUES('1','58594254','4','1');
--
-- 表的结构users
--

DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `uid` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(50) NOT NULL COMMENT '用户名',
  `email` varchar(250) NOT NULL COMMENT '邮箱',
  `password` char(42) NOT NULL COMMENT '密码',
  `phone` varchar(20) NOT NULL DEFAULT '' COMMENT '电话',
  `detail` varchar(250) NOT NULL DEFAULT '' COMMENT '描述',
  `subscribe` tinyint(4) NOT NULL DEFAULT '1' COMMENT '订阅优惠信息',
  `interested` varchar(50) NOT NULL DEFAULT '' COMMENT '感兴趣的类别以|分组',
  `how` tinyint(1) NOT NULL DEFAULT '0' COMMENT '怎么了解的网站',
  PRIMARY KEY (`uid`),
  UNIQUE KEY `username` (`username`),
  UNIQUE KEY `user_name` (`username`),
  UNIQUE KEY `email` (`email`)
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COMMENT='用户表';

--
-- 转存表中的数据 users
--

INSERT INTO `users` VALUES('1','半叶寒羽','yanue@outlook.com','96e79218965eb72c92a549dd5a330112','','','1','','0');
INSERT INTO `users` VALUES('2','test','asdasd@outlook.com','96e79218965eb72c92a549dd5a330112','','','1','','0');
INSERT INTO `users` VALUES('3','123123123','123123123@qq.com','e10adc3949ba59abbe56e057f20f883e','','','1','','0');
--
-- 表的结构wp_postmeta
--

DROP TABLE IF EXISTS `wp_postmeta`;
CREATE TABLE `wp_postmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`meta_id`),
  KEY `post_id` (`post_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=MyISAM AUTO_INCREMENT=3149 DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 wp_postmeta
--

INSERT INTO `wp_postmeta` VALUES('610','199','views','1740');
INSERT INTO `wp_postmeta` VALUES('634','209','views','4924');
INSERT INTO `wp_postmeta` VALUES('657','217','views','12651');
INSERT INTO `wp_postmeta` VALUES('627','207','views','8183');
INSERT INTO `wp_postmeta` VALUES('468','133','views','2451');
INSERT INTO `wp_postmeta` VALUES('463','142','views','1697');
INSERT INTO `wp_postmeta` VALUES('469','131','views','1004');
INSERT INTO `wp_postmeta` VALUES('470','122','views','1674');
INSERT INTO `wp_postmeta` VALUES('471','116','views','1559');
INSERT INTO `wp_postmeta` VALUES('472','110','views','2460');
INSERT INTO `wp_postmeta` VALUES('474','77','views','56807');
INSERT INTO `wp_postmeta` VALUES('475','102','views','2487');
INSERT INTO `wp_postmeta` VALUES('476','84','views','2031');
INSERT INTO `wp_postmeta` VALUES('477','73','views','9802');
INSERT INTO `wp_postmeta` VALUES('478','12','views','4046');
INSERT INTO `wp_postmeta` VALUES('479','69','views','2906');
INSERT INTO `wp_postmeta` VALUES('480','63','views','2472');
INSERT INTO `wp_postmeta` VALUES('481','45','views','2354');
INSERT INTO `wp_postmeta` VALUES('483','32','views','11319');
INSERT INTO `wp_postmeta` VALUES('484','4','views','803');
INSERT INTO `wp_postmeta` VALUES('510','150','views','1542');
INSERT INTO `wp_postmeta` VALUES('540','157','views','530');
INSERT INTO `wp_postmeta` VALUES('549','169','views','7477');
INSERT INTO `wp_postmeta` VALUES('553','152','views','579');
INSERT INTO `wp_postmeta` VALUES('561','174','views','5582');
INSERT INTO `wp_postmeta` VALUES('590','192','views','1328');
INSERT INTO `wp_postmeta` VALUES('1177','357','views','2066');
INSERT INTO `wp_postmeta` VALUES('2146','527','views','368');
INSERT INTO `wp_postmeta` VALUES('911','284','views','2138');
INSERT INTO `wp_postmeta` VALUES('1032','311','views','1855');
INSERT INTO `wp_postmeta` VALUES('1045','315','views','835');
INSERT INTO `wp_postmeta` VALUES('1055','317','views','680');
INSERT INTO `wp_postmeta` VALUES('1065','319','views','661');
INSERT INTO `wp_postmeta` VALUES('1075','321','views','705');
INSERT INTO `wp_postmeta` VALUES('1088','326','views','2047');
INSERT INTO `wp_postmeta` VALUES('1105','332','views','2211');
INSERT INTO `wp_postmeta` VALUES('1113','153','views','185');
INSERT INTO `wp_postmeta` VALUES('1125','337','views','665');
INSERT INTO `wp_postmeta` VALUES('1139','344','views','735');
INSERT INTO `wp_postmeta` VALUES('1148','346','views','597');
INSERT INTO `wp_postmeta` VALUES('1162','349','views','680');
INSERT INTO `wp_postmeta` VALUES('1205','359','views','15536');
INSERT INTO `wp_postmeta` VALUES('1203','362','views','2564');
INSERT INTO `wp_postmeta` VALUES('1268','371','views','1600');
INSERT INTO `wp_postmeta` VALUES('1771','450','views','1175');
INSERT INTO `wp_postmeta` VALUES('2035','505','views','658');
INSERT INTO `wp_postmeta` VALUES('2028','504','views','861');
INSERT INTO `wp_postmeta` VALUES('2019','503','views','2690');
INSERT INTO `wp_postmeta` VALUES('2012','502','views','1376');
INSERT INTO `wp_postmeta` VALUES('2004','501','views','841');
INSERT INTO `wp_postmeta` VALUES('1995','496','views','605');
INSERT INTO `wp_postmeta` VALUES('1985','489','views','556');
INSERT INTO `wp_postmeta` VALUES('1978','487','views','568');
INSERT INTO `wp_postmeta` VALUES('1486','404','views','1277');
INSERT INTO `wp_postmeta` VALUES('1488','405','views','820');
INSERT INTO `wp_postmeta` VALUES('1489','398','views','9315');
INSERT INTO `wp_postmeta` VALUES('1508','407','views','4277');
INSERT INTO `wp_postmeta` VALUES('1527','412','views','352');
INSERT INTO `wp_postmeta` VALUES('1530','411','views','1237');
INSERT INTO `wp_postmeta` VALUES('1541','413','views','11971');
INSERT INTO `wp_postmeta` VALUES('1561','414','views','2272');
INSERT INTO `wp_postmeta` VALUES('1573','417','views','9150');
INSERT INTO `wp_postmeta` VALUES('1594','419','views','1813');
INSERT INTO `wp_postmeta` VALUES('1612','424','views','1813');
INSERT INTO `wp_postmeta` VALUES('1623','430','views','1106');
INSERT INTO `wp_postmeta` VALUES('1634','431','views','1860');
INSERT INTO `wp_postmeta` VALUES('1656','432','views','927');
INSERT INTO `wp_postmeta` VALUES('1657','433','views','739');
INSERT INTO `wp_postmeta` VALUES('1711','441','views','3533');
INSERT INTO `wp_postmeta` VALUES('1666','434','views','1195');
INSERT INTO `wp_postmeta` VALUES('1684','438','views','1033');
INSERT INTO `wp_postmeta` VALUES('1695','439','views','1345');
INSERT INTO `wp_postmeta` VALUES('1741','440','views','984');
INSERT INTO `wp_postmeta` VALUES('1742','442','views','1947');
INSERT INTO `wp_postmeta` VALUES('1760','445','views','1105');
INSERT INTO `wp_postmeta` VALUES('1785','452','views','647');
INSERT INTO `wp_postmeta` VALUES('1794','453','views','605');
INSERT INTO `wp_postmeta` VALUES('1798','454','views','1079');
INSERT INTO `wp_postmeta` VALUES('1814','455','views','591');
INSERT INTO `wp_postmeta` VALUES('1823','456','views','884');
INSERT INTO `wp_postmeta` VALUES('1834','457','views','814');
INSERT INTO `wp_postmeta` VALUES('1847','458','views','696');
INSERT INTO `wp_postmeta` VALUES('1868','462','views','543');
INSERT INTO `wp_postmeta` VALUES('1877','463','views','724');
INSERT INTO `wp_postmeta` VALUES('1881','461','views','594');
INSERT INTO `wp_postmeta` VALUES('1897','473','views','813');
INSERT INTO `wp_postmeta` VALUES('1906','474','views','682');
INSERT INTO `wp_postmeta` VALUES('1918','478','views','680');
INSERT INTO `wp_postmeta` VALUES('1928','481','views','680');
INSERT INTO `wp_postmeta` VALUES('1941','482','views','681');
INSERT INTO `wp_postmeta` VALUES('1949','483','views','808');
INSERT INTO `wp_postmeta` VALUES('1958','484','views','1439');
INSERT INTO `wp_postmeta` VALUES('1968','485','views','1255');
INSERT INTO `wp_postmeta` VALUES('2045','506','views','759');
INSERT INTO `wp_postmeta` VALUES('2052','507','views','602');
INSERT INTO `wp_postmeta` VALUES('2160','543','views','556');
INSERT INTO `wp_postmeta` VALUES('2078','519','views','414');
INSERT INTO `wp_postmeta` VALUES('2079','520','views','442');
INSERT INTO `wp_postmeta` VALUES('2098','522','views','426');
INSERT INTO `wp_postmeta` VALUES('2101','523','views','476');
INSERT INTO `wp_postmeta` VALUES('2157','526','views','328');
INSERT INTO `wp_postmeta` VALUES('2169','546','views','418');
INSERT INTO `wp_postmeta` VALUES('2185','549','views','526');
INSERT INTO `wp_postmeta` VALUES('2259','584','views','371');
INSERT INTO `wp_postmeta` VALUES('2925','853','views','2622');
INSERT INTO `wp_postmeta` VALUES('2288','597','views','501');
INSERT INTO `wp_postmeta` VALUES('2307','403','views','110');
INSERT INTO `wp_postmeta` VALUES('2311','620','views','414');
INSERT INTO `wp_postmeta` VALUES('2326','627','views','749');
INSERT INTO `wp_postmeta` VALUES('2343','636','views','426');
INSERT INTO `wp_postmeta` VALUES('2442','666','views','430');
INSERT INTO `wp_postmeta` VALUES('2455','676','views','437');
INSERT INTO `wp_postmeta` VALUES('2479','685','views','709');
INSERT INTO `wp_postmeta` VALUES('2496','690','views','589');
INSERT INTO `wp_postmeta` VALUES('2507','697','views','435');
INSERT INTO `wp_postmeta` VALUES('2516','700','views','534');
INSERT INTO `wp_postmeta` VALUES('2537','711','views','1126');
INSERT INTO `wp_postmeta` VALUES('2550','717','views','733');
INSERT INTO `wp_postmeta` VALUES('2606','743','views','652');
INSERT INTO `wp_postmeta` VALUES('2619','746','views','1167');
INSERT INTO `wp_postmeta` VALUES('2632','749','views','574');
INSERT INTO `wp_postmeta` VALUES('2711','759','views','300');
INSERT INTO `wp_postmeta` VALUES('2733','768','views','550');
INSERT INTO `wp_postmeta` VALUES('2770','781','views','649');
INSERT INTO `wp_postmeta` VALUES('2761','776','views','1353');
INSERT INTO `wp_postmeta` VALUES('2779','785','views','404');
INSERT INTO `wp_postmeta` VALUES('2788','789','views','540');
INSERT INTO `wp_postmeta` VALUES('2817','804','views','466');
INSERT INTO `wp_postmeta` VALUES('2910','845','views','2483');
INSERT INTO `wp_postmeta` VALUES('2830','808','views','726');
INSERT INTO `wp_postmeta` VALUES('2854','817','views','514');
INSERT INTO `wp_postmeta` VALUES('2868','825','views','344');
INSERT INTO `wp_postmeta` VALUES('2877','828','views','354');
INSERT INTO `wp_postmeta` VALUES('2891','603','views','313');
INSERT INTO `wp_postmeta` VALUES('2932','821','views','1224');
INSERT INTO `wp_postmeta` VALUES('2997','887','views','2376');
INSERT INTO `wp_postmeta` VALUES('3006','893','views','1120');
INSERT INTO `wp_postmeta` VALUES('3060','918','views','418');
INSERT INTO `wp_postmeta` VALUES('3081','930','views','347');
INSERT INTO `wp_postmeta` VALUES('3094','936','views','382');
INSERT INTO `wp_postmeta` VALUES('3109','944','views','527');
INSERT INTO `wp_postmeta` VALUES('3116','945','views','635');
INSERT INTO `wp_postmeta` VALUES('3125','952','views','2009');
INSERT INTO `wp_postmeta` VALUES('3136','39','views','0');
INSERT INTO `wp_postmeta` VALUES('3135','17','views','0');
INSERT INTO `wp_postmeta` VALUES('3134','956','views','552');
INSERT INTO `wp_postmeta` VALUES('3137','40','views','0');
INSERT INTO `wp_postmeta` VALUES('3138','41','views','0');
INSERT INTO `wp_postmeta` VALUES('3139','42','views','0');
INSERT INTO `wp_postmeta` VALUES('3140','50','views','0');
--
-- 表的结构wp_posts
--

DROP TABLE IF EXISTS `wp_posts`;
CREATE TABLE `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) unsigned NOT NULL DEFAULT '0',
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext NOT NULL,
  `post_title` text NOT NULL,
  `post_excerpt` text NOT NULL,
  `post_status` varchar(20) NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) NOT NULL DEFAULT 'open',
  `post_password` varchar(20) NOT NULL DEFAULT '',
  `post_name` varchar(200) NOT NULL DEFAULT '',
  `to_ping` text NOT NULL,
  `pinged` text NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `guid` varchar(255) NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT '0',
  `post_type` varchar(20) NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `post_name` (`post_name`),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`),
  KEY `post_author` (`post_author`)
) ENGINE=MyISAM AUTO_INCREMENT=972 DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 wp_posts
--

INSERT INTO `wp_posts` VALUES('4','1','2012-03-04 20:04:12','2012-03-04 20:04:12','一般情况下,针对Linux主机主域名总是默认绑定在public_html目录，其他绑定的域名可以指定在public_html下面任意目录中，因此二级目录里面有主站的目录文件还有二级域名所绑定的目录（也就是其他的网站了，跟主域名没有啥联系的），这样就感觉很乱，以后很难找，于是我们可以将所有的网站都放在public_html的二级目录里，让主域名去绑定其中那个主站目录，这样的话，看起来就方便多了。那么要解决此方法，就只有用htaccess的urlrewrite来解决了。\r\n1.假设主域名是www.yanue.net，你可以在public_html中建立一个文件夹main(根据你的虚拟主机情况来设定)，主域名下的文件均位于文件夹中；\r\n2.在public_html中建立一个文件，名为.htaccess；\r\n<pre class=\"lang:php decode:true \">RewriteEngine on\r\n#更改www.yanue.net为你的主域名地址\r\nRewriteCond %{HTTP_HOST} ^(www.)?www.yanue.net$\r\n# 更改主域名要指向的子目录\r\nRewriteCond %{REQUEST_URI} !^/wp/\r\n#不要更改这两行\r\nRewriteCond %{REQUEST_FILENAME} !-f\r\nRewriteCond %{REQUEST_FILENAME} !-d\r\n# 更改主域名要指向的子目录\r\nRewriteRule ^(.*)$ //$1\r\n#更改www.yanue.net为你的主域名地址\r\nRewriteCond %{HTTP_HOST} ^(www.)?www.yanue.net$\r\n#更改index.php为你的网站首页文件\r\nRewriteRule ^(/)?$ wp/index.php [L]</pre>\r\n&nbsp;','通过.htaccess将主域名指向子目录','','publish','open','open','','%e9%80%9a%e8%bf%87-htaccess%e5%b0%86%e4%b8%bb%e5%9f%9f%e5%90%8d%e6%8c%87%e5%90%91%e5%ad%90%e7%9b%ae%e5%bd%95','','','2013-07-19 07:49:07','2013-07-19 15:49:07','','0','http://yanue.net/?p=4','0','post','','0');
INSERT INTO `wp_posts` VALUES('45','1','2012-03-21 18:55:51','2012-03-22 02:55:51','最近在做贵州山区希望工程捐赠平台（<a href=\"http://sqph.org/alipay/index.html\">http://sqph.org/alipay/index.html</a>）的时候，在用json存储的信息里实现联动效果的时候 遇到的问题 无法去除里面重复的项\r\n\r\n<a href=\"http://www.yanue.net/wp-content/uploads/2012/03/138726ae5edf8db1a4e286d10923dd54544e74a0.png\"><img title=\"138726ae5edf8db1a4e286d10923dd54544e74a0\" src=\"http://www.yanue.net/wp-content/uploads/2012/03/138726ae5edf8db1a4e286d10923dd54544e74a0.png\" alt=\"\" width=\"256\" height=\"167\" /></a>\r\n\r\n花了很长时间 实现下面方法 感觉用处不大 实际上原理很简单 下面是代码\r\n<pre class=\"lang_php decode_true\">&lt;!DOCTYPE HTML&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;js去除数组重复项以及js移除json里面的重复项的方法&lt;/title&gt;\r\n&lt;meta charset=&quot;UTF-8&quot;&gt;\r\n&lt;meta name=&quot;author&quot; content=&quot;yanue&quot; /&gt;\r\n&lt;meta name=&quot;copyright&quot; content=&quot;www.yanue.net&quot; /&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;script type=&quot;text/javascript&quot;&gt;\r\n    //去除数组重复\r\n    //var arr = [&#039;a&#039;,&#039;b&#039;,&#039;c&#039;,&#039;a&#039;,&#039;b&#039;,&#039;d&#039;,&#039;b&#039;];\r\n    //去除json数组里面重复\r\n    var arr=[{&quot;cid&quot;:1,&quot;county&quot;:&quot;小河区&quot;},\r\n    {&quot;cid&quot;:1,&quot;county&quot;:&quot;小河区&quot;},\r\n    {&quot;cid&quot;:2,&quot;county&quot;:&quot;南明区&quot;},\r\n    {&quot;cid&quot;:1,&quot;county&quot;:&quot;小河区&quot;},\r\n    {&quot;cid&quot;:1,&quot;county&quot;:&quot;小河区&quot;},\r\n    {&quot;cid&quot;:3,&quot;county&quot;:&quot;乌当区&quot;},\r\n    {&quot;cid&quot;:1,&quot;county&quot;:&quot;小河区&quot;}];\r\n    var hash = {};\r\n    for ( var i = 0; i &lt; arr.length; i++) {\r\n    //去除数组重复情况\r\n//(hash[arr[i]] == undefined) &amp;&amp; (hash[arr[i]]=arr[i]);\r\n//去除json数组里面重复情况\r\n(hash[arr[i]] == undefined) &amp;&amp; (hash[arr[i][&quot;cid&quot;]+&quot;,&quot;+arr[i][&quot;county&quot;]]=arr[i][&quot;cid&quot;]+&quot;,&quot;+arr[i][&quot;county&quot;]);\r\n}\r\nfor(var o in hash){\r\n//alert(o);\r\ncid=o.split(&#039;,&#039;)[0];\r\ncounty=o.split(&#039;,&#039;)[1];\r\ndocument.write(cid+&quot; &quot;+county+&quot;&lt;br&gt;&quot;);\r\n}\r\n&lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n<div>用此方法后结果如下：</div>\r\n<div><a href=\"http://www.yanue.net/wp-content/uploads/2012/03/1b0024d72f2eb938c8709f47d5628535e4dd6f57.png\"><img title=\"1b0024d72f2eb938c8709f47d5628535e4dd6f57\" src=\"http://www.yanue.net/wp-content/uploads/2012/03/1b0024d72f2eb938c8709f47d5628535e4dd6f57.png\" alt=\"\" width=\"272\" height=\"185\" /></a></div>\r\n<span style=\"font-size: medium;\"><span style=\"line-height: normal;\">\r\n</span></span>','js去除数组重复项以及js移除json里面的重复项的方法','','publish','open','open','','js%e5%8e%bb%e9%99%a4%e6%95%b0%e7%bb%84%e9%87%8d%e5%a4%8d%e9%a1%b9%e4%bb%a5%e5%8f%8ajs%e7%a7%bb%e9%99%a4json%e9%87%8c%e9%9d%a2%e7%9a%84%e9%87%8d%e5%a4%8d%e9%a1%b9%e7%9a%84%e6%96%b9%e6%b3%95','','','2012-06-17 06:35:05','2012-06-17 14:35:05','','0','http://yanue.net/?p=45','0','post','','0');
INSERT INTO `wp_posts` VALUES('12','1','2012-03-07 02:05:28','2012-03-07 10:05:28','网上找了很多，感觉不好用或者有问题，自己写一个以备后用：类似discuz右下角消息提示框\r\n主要是用css position的fixed属性，但是ie6不支持此属性，通过jquery.fixed.js插件实现兼容\r\n效果如下：\r\n<a href=\"http://www.yanue.net/wp-content/uploads/2012/03/未命名.jpg\"><img class=\"alignnone size-full wp-image-17\" title=\"jquery.pop\" src=\"http://www.yanue.net/wp-content/uploads/2012/03/未命名.jpg\" alt=\"jquery右下角pop弹窗效果图\" width=\"264\" height=\"167\" /></a>\r\n\r\n演示地址：<a href=\"http://demo.yanue.net/pop/\" target=\"_blank\">http://demo.yanue.net/pop/</a>\r\n\r\n代码下载：<a href=\"http://demo.yanue.net/pop/pop.rar\" target=\"_blank\">http://demo.yanue.net/pop/pop.rar</a>\r\n\r\n调用方法非常简单\r\n<pre class=\"lang_php decode_true\">&lt;script type=&quot;text/javascript&quot; &gt;\r\n //记得加载jquery\r\n //使用参数：1.标题，2.链接地址，3.内容简介\r\n window.onload=function(){\r\nvar pop=new Pop(&quot;这里是标题，哈哈&quot;,\r\n&quot;http://demo.yanue.net/pop/&quot;,\r\n&quot;请输入你的内容简介，这里是内容简介.请输入你的内容简介，这里是内容简介.请输入你的内容简介，这里是内容简介&quot;);\r\n}\r\n&lt;/script&gt;</pre>\r\n自己去下载来试一下吧  哈哈','(原创)jquery右下角pop弹窗 完美兼容,类似discuz右下角消息提示框','','publish','open','open','','%e5%8e%9f%e5%88%9bjquery%e5%8f%b3%e4%b8%8b%e8%a7%92pop%e5%bc%b9%e7%aa%97-%e5%ae%8c%e7%be%8e%e5%85%bc%e5%ae%b9ie6789-ff-chrome%ef%bc%8c%e7%b1%bb%e4%bc%bcdiscuz%e5%8f%b3%e4%b8%8b%e8%a7%92%e6%b6%88','','','2012-06-17 06:36:29','2012-06-17 14:36:29','','0','http://yanue.net/?p=12','0','post','','0');
INSERT INTO `wp_posts` VALUES('32','1','2012-03-13 21:00:10','2012-03-14 05:00:10','<div id=\"blog_text\">\r\n\r\n<strong>说明：</strong>\r\n\r\n地址解析就是将地址(如：贵州省贵阳市)转换为地理坐标(如经度：106.71，纬度：26.57)的过程。\r\n\r\n这是运用google map api开发的地图应用， geocode geocoder的完整实例，实现鼠标经过提示经纬度，自动填充地名地点名称，输入完成后可直接点击enter键进行解析，地理位置不准确，可以拖动重新解析，解析后显示完整经纬度信息，轻轻松松将地理位置转换为经纬度，希望能帮助各位需要的人\r\n\r\n演示地址：<a href=\"http://map.yanue.net/toLatLng/\">http://map.yanue.net/toLatLng/</a>\r\n\r\n代码下载：<a href=\"http://map.yanue.net/toLatLng.rar\" target=\"_blank\">http://map.yanue.net/toLatLng.rar</a>\r\n\r\n以前做<strong><a href=\"http://sqph.org/map/\" target=\"_blank\">贵州山区希望工程电子地图平台</a></strong>（现在基本完成，地址：<a href=\"http://sqph.org/map/\">http://sqph.org/map/</a> 我会把代码分享给大家，当然我还是个菜鸟，请大虾们不要见笑，初学者可以参考），需要运用google map api通过读取json数据向中添marker，点击地图上marker通过iframe调出该marker的详细信息。\r\n\r\n最开始的想法就是通过地理解析功能，只要在json数据存一个地址，然后运用google map地址解析使用 google.maps.Geocoder 对象去处理地址，然后循环像地图里面添加marker，这样就能实现了需求了。于是慢慢去接触google map，那实在太强大了，但是学习起来还是有一定难度，有很多东西很庞大（这不是废话么 呵呵）其实其他比如百度地图等都非常优秀，后来我还是选择了google map，为什么呢，就是看好google map的强悍的地理解析（参考：<a href=\"http://code.google.com/intl/zh-CN/apis/maps/documentation//services.html#Geocoding\">http://code.google.com/intl/zh-CN/apis/maps/documentation/javascript/services.html#Geocoding</a> 官方实例地址 <a href=\"http://code.google.com/intl/zh-CN/apis/maps/documentation//examples/geocoding-simple.html\">http://code.google.com/intl/zh-CN/apis/maps/documentation/javascript/examples/geocoding-simple.html</a>）和反解析功能（这里就不给地址了），其他的地图好像不能解析出经纬度（技术是肯定能的，但大陆政策好像不允许，有很多军事秘密基地，你是知道的，我都不知道是不是这个原因）。后来觉得这样还是很麻烦，不过要在地图上生成坐标的点，就必须能让google map解析出每个地名的经纬度，但是有很多地名，尤其是那些小地名，根本就解析不出来，处理起来很麻烦，那就不如全部都用经纬度，这样就不用地理解析了，加载速度也应该提高了很多。但是必须手动去查找经纬度，但是网上去找又非常麻烦，于是这个小东西就产生了，放在后台用，根据需求，在里面又加了很多实用的东西。（上面的一切都是废话，各位看官不用理会，下面才是正文）\r\n\r\n&nbsp;\r\n\r\n<strong>实现功能：</strong>\r\n\r\n1. 自动填充地名地点名称\r\n2. 鼠标经过提示经纬度\r\n3. 输入完成后可直接点击enter键进行解析\r\n4. 地理位置不准确，可以拖动重新解析\r\n5. 解析后经纬度信息显示完整\r\n<div><strong>实例图片如下</strong>：</div>\r\n<div>根据你输入的内容自动填充信息，选择正确的信息后，直接enter快捷键进入地理解析</div>\r\n<div> <a href=\"http://www.yanue.net/wp-content/uploads/2012/03/3f2829c19f3df8dca81a5323cd11728b4610284e.jpg\"><img class=\"alignnone size-full wp-image-39\" title=\"3f2829c19f3df8dca81a5323cd11728b4610284e\" src=\"http://www.yanue.net/wp-content/uploads/2012/03/3f2829c19f3df8dca81a5323cd11728b4610284e.jpg\" alt=\"\" width=\"555\" height=\"164\" /></a></div>\r\n<div>图为输入一个地点过后解析出来的状态  右面有解析出来的详细信息：当前经纬度，匹配地址，所解析的区域所在经纬度范围</div>\r\n<div><a href=\"http://www.yanue.net/wp-content/uploads/2012/03/342c1840f21fbe0991b91da66b600c338544ad8f.jpg\"><img class=\"alignnone size-full wp-image-40\" title=\"342c1840f21fbe0991b91da66b600c338544ad8f\" src=\"http://www.yanue.net/wp-content/uploads/2012/03/342c1840f21fbe0991b91da66b600c338544ad8f.jpg\" alt=\"\" width=\"880\" height=\"313\" /></a></div>\r\n<div>当然，如果解析出来的位置有偏差 你可以拖动地图上的点进行重新解析 图为拖动状态\r\n<a href=\"http://www.yanue.net/wp-content/uploads/2012/03/48ef3a3e1f30e9246abc40834c086e061c95f7521.jpg\"><img class=\"alignnone size-full wp-image-42\" title=\"48ef3a3e1f30e9246abc40834c086e061c95f752\" src=\"http://www.yanue.net/wp-content/uploads/2012/03/48ef3a3e1f30e9246abc40834c086e061c95f7521.jpg\" alt=\"\" width=\"606\" height=\"374\" /></a></div>\r\n<div>调整好位置你就能得到你想要的经纬度了</div>\r\n<div>最后贴一下地址演示地址：<a href=\"http://map.yanue.net/toLatLng/\">http://map.yanue.net/toLatLng/</a></div>\r\n<div>\r\n\r\n代码下载：<a href=\"http://map.yanue.net/toLatLng.rar\" target=\"_blank\">http://map.yanue.net/toLatLng.rar</a>\r\n\r\n</div>\r\n</div>','在线查询经纬度 google map查询地名返回经纬度 geocode geocoder的完整实例 代码下载','','publish','open','open','','%e5%9c%a8%e7%ba%bf%e6%9f%a5%e8%af%a2%e7%bb%8f%e7%ba%ac%e5%ba%a6-google-map%e6%9f%a5%e8%af%a2%e5%9c%b0%e5%90%8d%e8%bf%94%e5%9b%9e%e7%bb%8f%e7%ba%ac%e5%ba%a6-geocode-geocoder%e7%9a%84%e5%ae%8c%e6%95%b4','','','2012-06-09 04:45:33','2012-06-09 12:45:33','','0','http://yanue.net/?p=32','0','post','','10');
INSERT INTO `wp_posts` VALUES('63','1','2012-03-25 01:49:49','2012-03-25 09:49:49','Zend Framework配置文件位于application-&gt;configs目录下application.ini文件，默认有4组配置，即开发（development）、测试（testing）、演示（staging）、上线（production）\r\n<pre class=\"lang_php decode_true\">[production]\r\nphpSettings.display_startup_errors = 0\r\nphpSettings.display_errors = 0\r\nincludePaths.library = APPLICATION_PATH &quot;/../library&quot;\r\nbootstrap.path = APPLICATION_PATH &quot;/Bootstrap.php&quot;\r\nbootstrap.class = &quot;Bootstrap&quot;\r\nappnamespace = &quot;Application&quot;\r\nresources.frontController.controllerDirectory = APPLICATION_PATH &quot;/controllers&quot;\r\nresources.frontController.params.displayExceptions = 0\r\n\r\n[staging : production]\r\n\r\n[testing : production]\r\nphpSettings.display_startup_errors = 1\r\nphpSettings.display_errors = 1\r\n\r\n[development : production]\r\nphpSettings.display_startup_errors = 1\r\nphpSettings.display_errors = 1\r\nresources.frontController.params.displayExceptions = 1</pre>\r\n新建的Zend Framework项目默认使用上线的配置，因此错误消息不会出现，给初学者造成不少麻烦，因此对照开发的配置（如下），将上线的配置同样的3行的值改成1。\r\n<pre class=\"lang_php decode_true\">;开启错误调试，请将下面前三项设为1\r\n[production]\r\nphpSettings.display_startup_errors = 1\r\nphpSettings.display_errors = 1\r\nresources.frontController.params.displayExceptions = 1\r\nincludePaths.library = APPLICATION_PATH &quot;/../library&quot;\r\nbootstrap.path = APPLICATION_PATH &quot;/Bootstrap.php&quot;\r\nbootstrap.class = &quot;Bootstrap&quot;\r\nappnamespace = &quot;Application&quot;\r\nresources.frontController.controllerDirectory = APPLICATION_PATH &quot;/controllers&quot;\r\n;数据库设置\r\n[mysql]\r\ndb.adapter=PDO_MYSQL\r\ndb.params.host=localhost\r\ndb.params.username=root\r\ndb.params.password=\r\ndb.params.dbname=votedb</pre>','zend framework配置文件之错误提示设置，数据库设置','','publish','open','open','','zend-framework%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e4%b9%8b%e9%94%99%e8%af%af%e6%8f%90%e7%a4%ba%e8%ae%be%e7%bd%ae%ef%bc%8c%e6%95%b0%e6%8d%ae%e5%ba%93%e8%ae%be%e7%bd%ae','','','2012-06-17 06:32:05','2012-06-17 14:32:05','','0','http://yanue.net/?p=63','0','post','','2');
INSERT INTO `wp_posts` VALUES('84','1','2012-03-29 22:22:34','2012-03-30 06:22:34','<strong>说明：</strong>记事狗微博系统里面的用户昵称（用于显示、@通知和发送站内信）最大只有15个字符，太短了如果用utf-8编码版的话，中文就只能放5个汉字，对于很多用户来讲，太短了。经常有用户注册时反应,‘昵称 不合法’，很纠结。怎样修改了，折腾了好就才搞定了，下面是步骤:\r\n<strong>第一步：修改数据库字段\r\n</strong>你说安装的数据库里面找到“<span><span><span style=\"font-family: sans-serif;\"><span>jishigou_members</span></span></span></span>”表（<span><span><span style=\"font-family: sans-serif;\"><span>jishigou</span></span></span></span>是前缀，请换成你自己的），再找到<span style=\"color: #000000;\"><span style=\"font-family: sans-serif;\"><strong>nickname</strong></span></span>字段，原始类型是<strong>char（15）</strong>，将其改为<strong>varchar(60)</strong>（用varchar可以减少存储空间，这里建议用varchar），这样的话就可以存储20个utf8编码的汉字，够长了吧。\r\n\r\n<strong>第二步：修改注册验证文件</strong><strong>，</strong><strong>位于：  网站目录\\include\\function\\member.func.php</strong>\r\n找到该文件，用文本编辑器打开搜索jsg_member_checkname找到：（位于文件第358行）\r\n<pre class=\"lang_php decode_true\">function jsg_member_checkname($username, $is_nickname = 0, $ucuid = 0)\r\n{\r\n	$username = trim(strip_tags($username));\r\n\r\n	$username_len = strlen($username);\r\n	if($username_len &lt; 3 || $username_len &gt; 60)\r\n	{\r\n		return -1;\r\n	}\r\n\r\n		if($ucuid &lt; 1)\r\n	{\r\n\r\n		if($is_nickname)\r\n		{\r\n						if(false != preg_match(&#039;~[\\`\\~\\!\\@\\$\\^\\*\\/\\&amp;\\?\\-\\.\\#\\%\\+\\=\\[\\]\\{\\}\\|\\\\\\\\]+~&#039;,$username))\r\n			{\r\n				return -1;\r\n			}\r\n		}\r\n		else\r\n		{\r\n						if(is_numeric($username) || (false == preg_match(&#039;~^[\\w\\d\\_]+$~&#039;,$username)))\r\n			{\r\n				return -1;\r\n			}\r\n		}\r\n	}</pre>\r\n<div>\r\n\r\n<em>复制代码</em>\r\n\r\n</div>\r\n<span style=\"color: red;\">将$username_len &gt; 15改为$username_len &gt; 60.</span>\r\n<strong>第三步：改注册模版，</strong><strong>位于：  网站目录\\templates\\default\\member_register.html</strong>\r\n根据你自己的情况来找（这里是默认模版路径，位于文件第315行）\r\n<pre class=\"lang_php decode_true\">var validateRegularList={\r\n	username:{dataType:&quot;LimitB&quot;,min:&#039;3&#039;,max:&#039;15&#039;,msg:&quot;用户名必须在3至15个字节以内&quot;},\r\n	nickname:{dataType:&quot;LimitB&quot;,min:&#039;3&#039;,max:&#039;60&#039;,msg:&quot;微博主页必须在3至15个字节以内&quot;},\r\n	password:{dataType:&quot;LimitB&quot;,min:&quot;5&quot;,msg:&quot;密码过短，请设成5位以上。&quot;},\r\n	password2:{dataType:&quot;Repeat&quot;,to:&quot;password&quot;,msg:&quot;两次输入的密码不一致&quot;},\r\n	{if $this-&gt;_sms_register()}\r\n	sms_bind_num:{require:true,dataType:&quot;Mobile&quot;,min:&quot;10&quot;,max:&#039;12&#039;,msg:&quot;请输入11位的手机号码&quot;},\r\n	sms_bind_key:{require:true,dataType:&quot;Number&quot;,min:&quot;5&quot;,max:&#039;7&#039;,msg:&quot;请输入6位的验证码&quot;},\r\n	{/if}\r\n	{if !$noemail}\r\n	email:{require:true,dataType:&quot;Email&quot;,msg:&quot;Email邮箱格式不正确&quot;},\r\n	{/if}\r\n	province:{dataType:&quot;LimitB&quot;,min:&#039;1&#039;,msg:&quot;请选择省/直辖市&quot;},\r\n	city:{dataType:&quot;LimitB&quot;,min:&#039;1&#039;,msg:&quot;请选择城市/地区&quot;},\r\n	truename:{require:false,dataType:&quot;Truename&quot;,msg:&quot;请填写真实姓名&quot;},\r\n	seccode:{dataType:&quot;LimitB&quot;,min:&quot;4&quot;,msg:&quot;验证码不正确，重新输入下吧。&quot;}\r\n}</pre>\r\n<div>\r\n\r\n<em>复制代码</em>\r\n\r\n</div>\r\n将max:\'15\'改成max:\'60\'即可。\r\n<span style=\"color: red;\">如果你没有与ucenter整合的话 ，到后台情况缓存，注册时就可以用了</span>\r\n<span style=\"color: red;\">如果你整合了ucenter，请继续第四步：</span>\r\n<strong>第四步：修改ucenter文件，位于：</strong><strong> 网站目录</strong><strong>\\uc_client\\model\\user.php</strong>\r\n搜索check_username函数里面找到：（位于文件第44行）\r\n<pre class=\"lang_php decode_true\">	function check_username($username) {\r\n		$guestexp = &#039;\\xA1\\xA1|\\xAC\\xA3|^Guest|^\\xD3\\xCE\\xBF\\xCD|\\xB9\\x43\\xAB\\xC8&#039;;\r\n		$len = $this-&gt;dstrlen($username);\r\n		if($len &gt; 15 || $len &lt; 3 || preg_match(&quot;/\\s+|^c:\\\\con\\\\con|[%,\\*\\&quot;\\s\\&lt;\\&gt;\\&amp;]|$guestexp/is&quot;, $username)) {\r\n			return FALSE;\r\n		} else {\r\n			return TRUE;\r\n		}\r\n	}</pre>\r\n<div>\r\n\r\n<em>复制代码</em>\r\n\r\n</div>\r\n<span style=\"color: red;\">将$len &gt; 15改成$len &gt; 60即可</span>\r\n最后：这样修改后记得到后台清除缓存。我暂时没有发现有什么问题。\r\n<span style=\"color: #ff0000;\">\r\n</span>','记事狗微博系统 - 更改注册用户昵称长度','','publish','open','open','','%e8%ae%b0%e4%ba%8b%e7%8b%97%e5%be%ae%e5%8d%9a%e7%b3%bb%e7%bb%9f-%e6%9b%b4%e6%94%b9%e6%b3%a8%e5%86%8c%e7%94%a8%e6%88%b7%e6%98%b5%e7%a7%b0%e9%95%bf%e5%ba%a6','','','2012-06-17 06:23:41','2012-06-17 14:23:41','','0','http://yanue.net/?p=84','0','post','','0');
INSERT INTO `wp_posts` VALUES('69','1','2012-03-26 02:58:43','2012-03-26 10:58:43','<strong>一. render（最常见的，只能在当前控制器使用，用于<strong>跳转到</strong>不同的视图）</strong>\r\n不指定render\r\n结果： {当前Module}/{当前Controller}/{当前Action}.phtml\r\n\r\n$this-&gt;render(\'bar\') ;\r\n结果： {当前Module}/{当前Controller}/bar.phtml\r\n\r\n<strong>二. forward(重要，主要用于不同的控制器之间跳转)</strong>\r\n\r\n在任意的<code>pre/postDispatch()</code>或者动作中调用该方法_forward()，并传入动作、控制器、模块、以及可选的附加参数，就可以进入新的动作。\r\n$this-&gt;_forward(\'bar\') ;\r\n结果： {当前Module}/{当前Controller}/bar\r\n\r\n$this-&gt;_forward(\'bar\', \'foo\') ;\r\n结果： {当前Module}/foo/bar\r\n\r\n$this-&gt;_forward(\'bar\', \'foo\', \'hoge\') ;\r\n结果： hoge/foo/bar\r\n\r\n$params = array(\r\n\'a\' =&gt; \'1\',\r\n\'b\' =&gt; \'2\'\r\n) ;\r\n$this-&gt;_forward(\'bar\', \'foo\', \'hoge\', $params) ;\r\n结果： /hoge/foo/bar/a/1/b/2\r\n\r\n<strong>三. redirect（用于跨域等，直接302跳转）</strong>\r\n$this-&gt;_redirect(\'/hoge\') ;\r\n结果： /hoge\r\n\r\n$this-&gt;_redirect(\'/hoge/foo\') ;\r\n结果： /hoge/foo\r\n\r\n$this-&gt;_redirect(\'/hoge/foo/bar\') ;\r\n结果： /hoge/foo/bar\r\n\r\n$this-&gt;_redirect(\'http://localhost/hoge/foo/bar\') ;\r\n结果： http://localhost/hoge/foo/bar\r\n\r\n$this-&gt;_redirect(\'http://localhost/hoge/foo/bar?a=1&amp;b=2\') ;\r\n结果： http://localhost/hoge/foo/bar?a=1&amp;b=2\r\n\r\n<strong>四. 特殊情况</strong>\r\n不使用 layout\r\n结果： $this-&gt;_helper-&gt;layout()-&gt;disableLayout() ;\r\n\r\n不使用 view\r\n结果： $this-&gt;_helper-&gt;viewRenderer-&gt;setNoRender()','Zend Framework 跳转方法(render, forward, redirect)区别与总结','','publish','open','open','','zend-framework-%e8%b7%b3%e8%bd%ac%e6%96%b9%e6%b3%95render-forward-redirect%e5%8c%ba%e5%88%ab%e4%b8%8e%e6%80%bb%e7%bb%93','','','2012-03-26 02:59:14','2012-03-26 10:59:14','','0','http://yanue.net/?p=69','0','post','','0');
INSERT INTO `wp_posts` VALUES('73','1','2012-03-26 18:09:32','2012-03-27 02:09:32','首先贴出判断ie6的js方法：（你可以复制代码到本地试试）\r\n<pre class=\"lang_php decode_true\">&lt;script type=&quot;text/javascript&quot;&gt;\r\nif (window.ActiveXObject) {\r\n  var ua = navigator.userAgent.toLowerCase();\r\n  var ie=ua.match(/msie ([\\d.]+)/)[1]\r\nif(ie==6.0){\r\n alert(&quot;您的浏览器版本过低，在本系统中不能达到良好的视觉效果，建议你升级到ie8以上！&quot;);\r\nwindow.close();\r\n}\r\n}\r\n&lt;/script&gt;</pre>\r\n单是alert()弹窗提示信息，太丑陋，而且信息内容受限制，于是我们可以单独做一层（弹出层）居中显示你需要的信息，下面是演示及代码：\r\n\r\n演示地址：<a title=\"http://www.yanue.net/js/isIE6.html\" href=\"http://www.yanue.net/js/isIE6.html\">http://www.yanue.net/js/isIE6.html</a> (请用ie6查看效果)\r\n\r\n代码如下\r\n<pre class=\"lang_php decode_true\">&lt;!DOCTYPE HTML&gt;\r\n&lt;html lang=&quot;en-US&quot;&gt;\r\n&lt;head&gt;\r\n&lt;meta charset=&quot;UTF-8&quot;&gt;\r\n&lt;title&gt;ie6弹出层显示信息&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;!--ie6弹出层显示信息--&gt;\r\n&lt;script type=&quot;text/javascript&quot;&gt;\r\nwindow.onload=function(){\r\n  var popDiv=document.getElementById(&quot;popDiv&quot;);\r\nvar acontinue=document.getElementById(&quot;acontinue&quot;);\r\nvar aClose=document.getElementById(&#039;aClose&#039;);\r\n  if (window.ActiveXObject) {\r\nvar ua = navigator.userAgent.toLowerCase();\r\nvar ie=ua.match(/msie ([\\d.]+)/)[1]\r\nif(ie==6.0){\r\npopDiv.style.display=&quot;block&quot;;\r\nacontinue.onclick=function(){\r\n popDiv.style.display=&quot;none&quot;;\r\n}\r\naClose.onclick=function(){\r\n window.close();\r\n}\r\n}\r\n}\r\n}\r\n&lt;/script&gt;\r\n&lt;style type=&quot;text/css&quot;&gt;\r\nbody{background:#fcf6f0;}\r\n*{margin:0;padding:0;}\r\n/*弹出层的STYLE*/\r\n#popDiv {\r\nwidth:412px;\r\nbackground: #f0f0f6;\r\nborder: 10px solid #e0e0e0;\r\npadding:0 0 10px 0;\r\nborder-top:none;\r\ntext-align: left;\r\nfont-size: 12px;\r\nz-index:99;\r\nleft:50%;/*FF IE7*/\r\ntop: 50%;/*FF IE7*/\r\nmargin-left:-200px!important;/*FF IE7 该值为本身宽的一半 */\r\nmargin-top:-60px!important;/*FF IE7 该值为本身高的一半*/\r\nmargin-top:0px;\r\nposition:fixed!important;/*FF IE7*/\r\nposition:absolute;/*IE6*/\r\n_top:expression(eval(document.compatMode &amp;&amp; document.compatMode==&#039;CSS1Compat&#039;) ? documentElement.scrollTop + (document.documentElement.clientHeight-this.offsetHeight)/2 :/*IE6*/ document.body.scrollTop + (document.body.clientHeight - this.clientHeight)/2);/*IE5 IE5.5*/\r\n}\r\n#popDiv a{text-decoration:none;color:#f00;}\r\n#popDiv a:hover{color:#f60;}\r\n#isclose{\r\n  position:absolute;\r\n  bottom:5px;\r\n  right:6px;\r\n}\r\n#aClose,#acontinue{\r\n  border:1px solid #e0e0e0;\r\npadding:2px 5px;\r\nbackground:#f0f0f6;\r\n}\r\n#aClose:hover,#acontinue:hover{color:#f60;background:#fc6;}\r\n#bg{background:#fcf6f0;width:100%;height:100%;z-index:98;filter:Alpha(Opacity:&quot;50&quot;)}\r\n#popDiv h1{font-size:12px;line-height:24px;background:#e0e0e0;line-height:30px;color:#333;}\r\n#popDiv h2{font-size:12px;text-indent:24px;line-height:24px;color:#333;font-weight:normal;padding:10px;}\r\n#popDiv p{line-height:24px;display:inline-block;text-indent:24px;}\r\n/*The END*/\r\n&lt;/style&gt;\r\n&lt;div id=&quot;bg&quot;&gt;&lt;/div&gt;\r\n&lt;div id=&quot;popDiv&quot; style=&quot;display:none;&quot;&gt;\r\n&lt;h1&gt;贵州省志愿者信息管理系统 Ver 2.0 友情提示：&lt;/h1&gt;\r\n&lt;h2&gt;您使用的是较低版本浏览器，将导致无法使用后台的部分功能。建议您使用 IE8.0 或其他较新版本浏览器，以便更好的感受本系统的各项特色功能及服务，感谢您对贵州志愿服务网的关心和支持。&lt;/h2&gt;\r\n&lt;p&gt;政策咨询热线：0851-5514292&lt;/p&gt;\r\n&lt;p&gt;技术支持热线：0851-6996078&lt;/p&gt;\r\n&lt;p id=&quot;isclose&quot;&gt;&lt;a title=&quot;&quot; href=&quot;javascript:void()&quot; id=&quot;acontinue&quot;&gt;继续使用&lt;/a&gt; &lt;a title=&quot;&quot; href=&quot;javascript:closeDiv()&quot; id=&quot;aClose&quot;&gt;关闭窗口&lt;/a&gt;&lt;/p&gt;\r\n&lt;/div&gt;\r\n&lt;!--ie6弹出层显示信息end--&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\nie6下效果预览如下：\r\n\r\n<a href=\"http://www.yanue.net/wp-content/uploads/2012/03/f1ee7965f6246b6097d2cac7ebf81a4c530fa296.jpg\"><img class=\"alignnone size-full wp-image-74\" title=\"f1ee7965f6246b6097d2cac7ebf81a4c530fa296\" src=\"http://www.yanue.net/wp-content/uploads/2012/03/f1ee7965f6246b6097d2cac7ebf81a4c530fa296.jpg\" alt=\"\" width=\"498\" height=\"270\" /></a>\r\n\r\n这上面做的都只是针对ie6 ，js判断其他浏览器呢 请见：js判断浏览器类型及版本详细分析<a title=\"http://www.yanue.net/archives/77.html\" href=\"http://www.yanue.net/archives/77.html\" target=\"_blank\">http://www.yanue.net/archives/77.html</a>','js判断ie6 ie6完美提示框','','publish','open','open','','js%e5%88%a4%e6%96%adie6-ie6%e5%ae%8c%e7%be%8e%e6%8f%90%e7%a4%ba%e6%a1%86','','http://yanue.net/archives/77.html\nhttp://yanue.net/archives/77.html','2012-06-17 06:27:13','2012-06-17 14:27:13','','0','http://yanue.net/?p=73','0','post','','0');
INSERT INTO `wp_posts` VALUES('77','1','2012-03-26 18:21:54','2012-03-27 02:21:54','js判断浏览器类型及版本代码网上到处都是  经过测试 下面代码完全实用。\r\n\r\n你还可以将前面的判断代码写成这样：\r\n<pre class=\"lang_php decode_true\">&lt;script type=\"text/javascript\"&gt;\r\nvar Sys = {};\r\nvar ua = navigator.userAgent.toLowerCase();\r\nwindow.ActiveXObject ? Sys.ie = ua.match(/msie ([d.]+)/)[1] :\r\ndocument.getBoxObjectFor ? Sys.firefox = ua.match(/firefox/([d.]+)/)[1] :\r\nwindow.MessageEvent &amp;&amp; !document.getBoxObjectFor ? Sys.chrome = ua.match(/chrome/([d.]+)/)[1] :\r\nwindow.opera ? Sys.opera = ua.match(/opera.([d.]+)/)[1] :\r\nwindow.openDatabase ? Sys.safari = ua.match(/version/([d.]+)/)[1] : 0;\r\n\r\n//以下进行测试\r\nif(Sys.ie) document.write(\'IE: \'+Sys.ie);\r\nif(Sys.firefox) document.write(\'Firefox: \'+Sys.firefox);\r\nif(Sys.chrome) document.write(\'Chrome: \'+Sys.chrome);\r\nif(Sys.opera) document.write(\'Opera: \'+Sys.opera);\r\nif(Sys.safari) document.write(\'Safari: \'+Sys.safari);\r\n&lt;/script&gt;</pre>\r\n这样可以使JavaScript代码更精简些。当然，可读性稍差一些，就看你是重视效率还是重视可维护性了。\r\n\r\n下面是<strong>判断浏览器</strong>的最原始代码：\r\n<pre class=\"lang_php decode_true\">&lt;script type=\"text/javascript\"&gt;\r\nvar Sys = {};\r\nvar ua = navigator.userAgent.toLowerCase();\r\nif (window.ActiveXObject)\r\nSys.ie = ua.match(/msie ([d.]+)/)[1]\r\nelse if (document.getBoxObjectFor)\r\nSys.firefox = ua.match(/firefox/([d.]+)/)[1]\r\nelse if (window.MessageEvent &amp;&amp; !document.getBoxObjectFor)\r\nSys.chrome = ua.match(/chrome/([d.]+)/)[1]\r\nelse if (window.opera)\r\nSys.opera = ua.match(/opera.([d.]+)/)[1]\r\nelse if (window.openDatabase)\r\nSys.safari = ua.match(/version/([d.]+)/)[1];\r\n\r\n//以下进行测试\r\nif(Sys.ie) document.write(\'IE: \'+Sys.ie);\r\nif(Sys.firefox) document.write(\'Firefox: \'+Sys.firefox);\r\nif(Sys.chrome) document.write(\'Chrome: \'+Sys.chrome);\r\nif(Sys.opera) document.write(\'Opera: \'+Sys.opera);\r\nif(Sys.safari) document.write(\'Safari: \'+Sys.safari);\r\n&lt;/script&gt;</pre>\r\n我们再来分析一下各种浏览器的特征及其userAgent。\r\n\r\n<strong>IE</strong>\r\n\r\n只有IE支持创建ActiveX控件，因此她有一个其他浏览器没有的东西，就是ActiveXObject函数。只要判断window对象存在 ActiveXObject函数，就可以明确判断出当前浏览器是IE。而IE各个版本典型的userAgent如下：\r\n\r\nMozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0)\r\nMozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.2)\r\nMozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\r\nMozilla/4.0 (compatible; MSIE 5.0; Windows NT)\r\n\r\n其中，版本号是MSIE之后的数字。\r\n\r\n<strong>Firefox</strong>\r\n\r\nFirefox中的DOM元素都有一个getBoxObjectFor函数，用来获取该DOM元素的位置和大小（IE对应的中是 getBoundingClientRect函数）。这是Firefox独有的，判断它即可知道是当前浏览器是Firefox。Firefox几个版本的 userAgent大致如下：\r\n\r\nMozilla/5.0 (Windows; U; Windows NT 5.2) Gecko/2008070208 Firefox/3.0.1\r\nMozilla/5.0 (Windows; U; Windows NT 5.1) Gecko/20070309 Firefox/2.0.0.3\r\nMozilla/5.0 (Windows; U; Windows NT 5.1) Gecko/20070803 Firefox/1.5.0.12\r\n\r\n其中，版本号是Firefox之后的数字。\r\n\r\n<strong>Opera</strong>\r\n\r\nOpera提供了专门的浏览器标志，就是window.opera属性。Opera典型的userAgent如下：\r\n\r\nOpera/9.27 (Windows NT 5.2; U; zh-cn)\r\nOpera/8.0 (Macintosh; PPC Mac OS X; U; en)\r\nMozilla/5.0 (Macintosh; PPC Mac OS X; U; en) Opera 8.0\r\n\r\n其中，版本号是靠近Opera的数字。\r\n\r\n<strong>Safari</strong>\r\n\r\nSafari浏览器中有一个其他浏览器没有的openDatabase函数，可做为判断Safari的标志。Safari典型的userAgent如下：\r\n\r\nMozilla/5.0 (Windows; U; Windows NT 5.2) AppleWebKit/525.13 (KHTML, like Gecko) Version/3.1 Safari/525.13\r\nMozilla/5.0 (iPhone; U; CPU like Mac OS X) AppleWebKit/420.1 (KHTML, like Gecko) Version/3.0 Mobile/4A93 Safari/419.3\r\n\r\n其版本号是Version之后的数字。\r\n\r\n<strong>Chrome</strong>\r\n\r\nChrome有一个MessageEvent函数，但Firefox也有。不过，好在Chrome并没有Firefox的getBoxObjectFor 函数，根据这个条件还是可以准确判断出Chrome浏览器的。目前，Chrome的userAgent是：\r\n\r\nMozilla/5.0 (Windows; U; Windows NT 5.2) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.2.149.27 Safari/525.13\r\n\r\n其中，版本号在Chrome只后的数字。\r\n\r\n有趣的是，Chrome的userAgent还包含了Safari的特征，也许这就是Chrome可以运行所有Apple浏览器应用的基础吧。\r\n\r\n<strong>最后：其实我们用js判断浏览器，大多数情况下是为了该死的ie6</strong>\r\n\r\n下面主要是针对ie6的代码：\r\n<pre class=\"lang_php decode_true\">&lt;script type=\"text/javascript\"&gt;\r\nif (window.ActiveXObject) {\r\n  var ua = navigator.userAgent.toLowerCase();\r\n  var ie=ua.match(/msie ([d.]+)/)[1]\r\nif(ie==6.0){\r\n alert(\"您的浏览器版本过低，在本系统中不能达到良好的视觉效果，建议你升级到ie8以上！\");\r\nwindow.close();\r\n}\r\n}\r\n&lt;/script&gt;</pre>\r\n当然这个本身并不完美，ie6下更好的提示效果请见：js判断ie6 ie6完美提示框<a href=\"http://www.yanue.net/archives/73.html\">http://www.yanue.net/archives/73.html</a>\r\n\r\n&nbsp;','js判断浏览器类型及版本详细分析 （js判断ie6）','','publish','open','open','','js%e5%88%a4%e6%96%ad%e6%b5%8f%e8%a7%88%e5%99%a8%e7%b1%bb%e5%9e%8b%e5%8f%8a%e7%89%88%e6%9c%ac%e8%af%a6%e7%bb%86%e5%88%86%e6%9e%90-%ef%bc%88js%e5%88%a4%e6%96%adie6%ef%bc%89','','http://yanue.net/archives/73.html\nhttp://www.yanue.net/archives/73.html\nhttp://www.yanue.net/archives/73.html','2013-07-19 06:57:44','2013-07-19 14:57:44','','0','http://yanue.net/?p=77','0','post','','3');
INSERT INTO `wp_posts` VALUES('192','1','2012-05-22 22:08:05','2012-05-23 06:08:05','常用的Zend Framework项目的目录结构如下：\r\n\r\n<a href=\"http://www.zendchina.net/batch.download.php?aid=565\" target=\"_blank\"><img src=\"http://www.zendchina.net/attachments/2010/02/1_201002241831011e4vL.gif\" alt=\"\" border=\"0\" /></a>\r\n\r\n当我们使用上面的目录结构时，需要将所有能通过浏览器访问的文件放在public目录，然后修改Web服务器的配置将文档目录指向此目录。但问题是一般情况下，在使用共享的虚拟主机时，我们没有修改配置文件的权限，解决这个问题的简单方法，将public目录中的.htaccess文件移至根目录，然后修改内容如下：\r\n<pre class=\"lang_php decode_true\">RewriteEngine On\r\nRewriteRule ^\\.htaccess$ - [F]\r\nRewriteCond %{REQUEST_URI} =&quot;&quot;\r\nRewriteRule ^.*$ /public/index.php [NC,L]\r\nRewriteCond %{REQUEST_URI} !^/public.*$\r\nRewriteRule ^(.*)$ /public/$1\r\nRewriteCond %{REQUEST_FILENAME} -f\r\nRewriteRule ^.*$ - [NC,L]\r\nRewriteRule ^public/.*$ /public/index.php [NC,L]</pre>\r\n要求服务器支持Rewrite且能够解析.htaccess。\r\n\r\n查看原文：<a href=\"http://www.alberton.info/zend_framework_mod_rewrite_shared_hosting.html\">http://www.alberton.info/zend_framework_mod_rewrite_shared_hosting.html</a>','使用.htaccesss实现Zend Framework在共享主机中访问public目录','','publish','open','open','','%e4%bd%bf%e7%94%a8-htaccesss%e5%ae%9e%e7%8e%b0zend-framework%e5%9c%a8%e5%85%b1%e4%ba%ab%e4%b8%bb%e6%9c%ba%e4%b8%ad%e8%ae%bf%e9%97%aepublic%e7%9b%ae%e5%bd%95','','','2012-06-17 05:53:46','2012-06-17 13:53:46','','0','http://yanue.net/?p=192','0','post','','0');
INSERT INTO `wp_posts` VALUES('199','1','2012-05-28 02:33:10','2012-05-28 10:33:10','1）概述：路由器主要负责解析一个请求并且决定什么module、controller、action被请求；它同时也定义了一种方法来实现用户自定义路由，这也使得它成为最有用的一个MVC组组件；\r\n\r\n2）设计：作为一个应用中的路由组件是很专业的，理所当然的路由组件是抽象的，这样允许作为开发者的我们很容易的设计出我们自定义的路由协议。 然而，默认的路由组件其实已经服务得我们很好了。记住，如果我们需要一个非标准的路由协议时候，我们就可以自定义一个自己的路由协议，而不用采用默认的路 由协议。\r\n\r\n事实上，路由组件有两个部分：<strong>路由器</strong><strong>（或者称路由对象《the router》）</strong>和<strong>路由协议</strong><strong> </strong><strong>(或者称</strong> <strong>路由过程</strong><strong>《the route》)</strong>。 路由器主要负责管理和运行路由链，路由过程事实上主要负责匹配我们预先定义好的路由协议，意思就是我们只有一个路由器，但我们可以有许多路由协议。 （ps：不知道这样理解是不是有问题，原文是这样的：The router actually has two parts, the router and the route. The router is responsible for managing and running the route chain, and a route is responsible for actually matching the request against the predefined rule of the route. This means that we have one router to many routes.看到后面就会清楚一点的。)\r\n\r\n&nbsp;\r\n\r\n路由组件基于两个接口：<strong>Zend_Controller_Router_Interface</strong> 和 <strong>Zend_Controller_Router_Route_Interface</strong>；同样路由组件的两个抽象类：<strong>Zend_Controller_Router_Abstact</strong>和<strong>Zend_Controller_Router_Route_Abstract</strong>分 别是实现了上面对应的两个接口，同时这两个抽象类也就提供给我们一些基本的函数来操作路由组件。如果我们需要创建我们自定义的路由器（the router）或者路由协议(the route)，我们就可以分别继承上面的两个抽象类。路由的过程发生派遣过程的最开始，并且路由解析仅仅发生一次。路由协议在任何控制器动作 （controller action）被派遣之前被解析，一旦路由协议被解析后，路由器将会把解析出得到的信息传递给请求对象（Request object），这些信息包括moduel、controller、action、用户params等。然后派遣器（Dispatcher）就会按照这些 信息派遣正确的控制器动作。路由器也有两个前端控制器插件钩子，就是在我们之前提到过的routeStartup和routeShutdown，他们在路 由解析前后分别被调用。\r\n\r\n3)默认情况下：\r\n\r\n默认条件下，我们的路由器是使用Zend_Controller_Router_Rewrite，是基于HTTP路由的，意味着它期望一个请 求是HTTP请求并且请求对象是使用Zend_Controller_Request_Http（或者是继承它的对象），这两个默认类，在我们之前的那个 表中都有见到过。默认条件下，路由协议是使用Zend_Controller_Router_Route_Module类。\r\n\r\n4）使用路由：\r\n\r\n使用路由既可以让之很复杂，同时也能让它很简单，这是归于你的应用。然而使用一个路由是很简单的，你可以创建一个路由器让它管你的路由协议，然后你可以添加你的路由协议给路由器，这样就OK了！\r\n\r\n不同的路由协议如下所示：\r\n<ul>\r\n	<li><strong>Zend_Controller_Router_Route</strong></li>\r\n	<li><strong>Zend_Controller_Router_Route_Static</strong></li>\r\n	<li><strong>Zend_Controller_Router_Route_Regex</strong></li>\r\n	<li><strong>Zend_Controller_Router_Route_Hostname</strong></li>\r\n	<li><strong>Zend_Controller_Router_Route_Chain</strong></li>\r\n	<li><strong>Default Routes</strong></li>\r\n</ul>\r\n其中我们使用到的最基本的路由协议类数Zend_Controller_Router_Route，它提供给们少量的控制。如果想要更精密的控 制，我们可以采用正则路由协议：Zend_Controller_Router_Route_Regex，它提供给我们可以通过PHP的正则来使用，很强 大。其他的几个路由协议类分别有不同的专业化。到此为止，首先让我们来看看路由器是如何让路由协议与之一起工作的。\r\n\r\n在我们添加任何路由协议之前我们必须要得到一个路由器（the router）实例，我们可以通过自己创建一个新的路由器或者是通过前端控制器（Front Controller）来得到一个默认的路由器：\r\n<div>\r\n<div>\r\n<pre class=\"lang_php decode_true\">//我们实例化一个默认的路由器\r\n$router = new Zend_Controller_Router_Rewrite();\r\n//或者我们可以通过前端控制器的getRouter()方法得到一个默认的路由器实例\r\n$router = $front-&gt;getRouter()</pre>\r\n</div>\r\n</div>\r\n一旦我们有了路由器实例，我们就能通过它来添加我们自定义的一些路由协议：\r\n<div>\r\n<div>\r\n<pre class=\"lang_php decode_true\">$router-&gt;addRoute(&#039;myRoute&#039;,$route);\r\n$router-&gt;addRoute(&#039;myRoute1&#039;,$route)</pre>\r\n</div>\r\n</div>\r\n除此之外，我们还可以通过Zend_Config_Ini和Zend_Config_Xml对象来添加我们的路由协议：\r\n<div>\r\n<div>\r\n<pre class=\"lang_php decode_true\">$config = new Zend_Config_Ini(&#039;/path/to/config.ini&#039;, &#039;production&#039;);\r\n$router-&gt;addConfig($config, &#039;routes&#039;);</pre>\r\n</div>\r\n</div>\r\n其实路由器也提供给我们不同的方法来得到和设置包含在它内部的信息，一些重要的方法如下：\r\n<ul>\r\n	<li>addDefaultRoutes() and removeDefaultRoutes()//添加或者移除默认的路由协议。</li>\r\n	<li>assemble()//基于给定的路由协议确定URI，这个方法通过Url视图助手（View Helper）使用提供它的链接地址。</li>\r\n	<li>getCurrentRoute() and getCurrentRouteName()</li>\r\n	<li>getRoute(), getRoutes(), hasRoute(), and removeRoute();</li>\r\n</ul>\r\n5)路由协议详解：\r\n\r\n<strong>【A】Zend_Controller_Router_Route</strong>\r\n\r\nZend_Controlloer_Router_Route路由协议提供了我们很强的功能，同时也提供了一些简单的操作，为了能够使用该路由协议，我们必须先实例化它，然后用路由器加载它：\r\n<pre class=\"lang_php decode_true\">//创建一个路由器实例\r\n$router = new Zend_Controller_Router_Rewrite();\r\n//创建一个路由协议实例\r\n$route = new Zend_Controller_Router_Route(\r\n　　&#039;product/:ident&#039;,\r\n　　array(\r\n　　　　&#039;controller&#039; =&gt; &#039;products&#039;,\r\n　　　　&#039;action&#039; =&gt; &#039;view&#039;\r\n　　)\r\n);\r\n//使用路由器装载路由协议\r\n$router-&gt;addRoute(&#039;product&#039;, $route);</pre>\r\n在这个例子中，我们试图匹配Url指定到一个单一的产品，就像http://domain.com/product/choclolat-bar。 为了实现这点，我们在路由协议中传递了2个变量到路由协议Zend_Controller_Router_Route的构造其中。第一个变量 （\'product/:indent\'）就是匹配的路径，第二个变量(array变量)是路由到的动作控制器；其实路由协议也提供了第三个变量用于正则匹 配，我们将在第二个路由协议中见到；\r\n\r\n路径使用一个特别的标识来告诉路由协议如何匹配到路径中的每一个段，这个标识有有两种，可以帮助我们创建我们的路由协议，如下所示：\r\n\r\na) <strong>:</strong>\r\n\r\nb) *\r\n\r\n冒号(:) 指定了一个段，这个段包含一个变量用于传递到我们动作控制器中的变量，我们要设置好事先的变量名，比如在上面我们的变量名就是\'ident\'，因此，倘若 我们访问http://domian.com/product/chocoloate-bar将会创建一个变量名为ident并且其值是 \'chocoloate-bar\'的变量，我们然后就可以在我们的动作控制器ProductsController/viewAction下获取到它的 值：$this-&gt;_getParam(\'ident\');同时我们还可以在路由协议中设置ident的默认的值，即可以在路由协议类的第二个数组变量中增加一个元素（比如我们在这定义了ident默认值为unknown）：\r\n<pre class=\"lang_php decode_true\">$route = new Zend_Controller_Router_Route(\r\n　　&#039;product/:ident&#039;,\r\n　　array(\r\n　　　　&#039;controller&#039; =&gt; &#039;products&#039;,\r\n　　　　&#039;action&#039; =&gt; &#039;view&#039;,\r\n　　　　&#039;ident&#039; =&gt; &#039;unknown&#039;\r\n　　)\r\n);</pre>\r\n星号(*)被用做一个通配符，意思就是在Url中它后面的所有段都将作为一个通配数据被存储。例如，如果我们有路径\'path/product /:ident/*\'（就是路由协议中设置的第一个变量），并且我们访问的Url为http://domain.com/product /chocolate-bar/test/value1/another/value2，那么所有的在\'chocolate-bar\'后面的段都将被做成 变量名/值对，因此这样会给我们下面的结果：\r\n\r\nident = chocolate-bar\r\ntest = value1\r\nanother = value2\r\n\r\n这种行为也就是我们平常默认使用的路由协议的行为，记住变量名/值要成对出现，否则像/test/value1/这样的将不会这种另一个变量，我们 有静态的路由协议部分，这些部分简单地被匹配来满足我们的路由协议，在我们的例子中，静态部分就是product；就像你现在看到的那样，我们的 Router_Route路由协议提供给我们极大的灵活性来控制我们的路由；然而，这就就很像正则匹配了，正则匹配使我们能够提供而外的约束力来限制我们 的路由（这里的正则匹配是使用PHP的preg引擎）。在我们的产品实例中，我们得到了用户想观看的\'ident\'的产品特性，即我们通过用户传递过来的 参数，通过数据库的搜索得到正确的产品信息。然而，如果我们得到的需求是系统仅仅只能接受产品ID号作为我们的产品的标识，那么我们可以使用路由协议来实 现这点：\r\n\r\n考虑下面两中路由：\r\n<pre class=\"lang_php decode_true\">//创建路由器\r\n$router = new Zend_Controller_Router_Rewrite();\r\n//创建路由协议\r\n$route = new Zend_Controller_Router_Route(\r\n　　&#039;product/:ident&#039;,\r\n　　array(\r\n　　　　&#039;controller&#039; =&gt; &#039;products&#039;,\r\n　　　　&#039;action&#039; =&gt; &#039;view&#039;\r\n　　),\r\n　　array(\r\n　　　　// match only alpha, numbers and _-\r\n　　　　&#039;ident&#039; =&gt; &#039;[a-zA-Z-_0-9]+&#039;\r\n　　)\r\n);\r\n//让路由器装载路由协议\r\n$router-&gt;addRoute(&#039;productident&#039;, $route);\r\n//再定义一个路由协议\r\n$route = new Zend_Controller_Router_Route(\r\n　　&#039;product/:id&#039;,\r\n　　array(\r\n　　　　&#039;controller&#039; =&gt; &#039;products&#039;,\r\n　　　　&#039;action&#039; =&gt; &#039;view&#039;\r\n　　),\r\n　　array(\r\n　　　　// match only digits\r\n　　　　&#039;id&#039; =&gt; &#039;\\d+&#039;\r\n　　)\r\n);\r\n//让我们的路由器再装载一个路由协议\r\n$router-&gt;addRoute(&#039;productid&#039;, $route);</pre>\r\n为了达到我们的需求，我们创建了2种路由协议。第一种路由协议对Zend_Controller_Router_Route的构造函数添加了第三个 变量--一个正则表达式的变量ident，这个需求就是用户提供的ident必须是字母、数字和-以及下划线组成。我们的第二个路由协议试图匹配一个产品 的ID数，我们利用\\d+正则来匹配数字。通过我们增加的路由协议，如果我们现在浏览http://domain.com/product/12，这个id变量就会被设置，如果我们浏览http://domain.com/product/chocoloate-bar，那么这个ident变量就会被设置，然后我们可以在同一个动作控制中接受不同的参数来显示同样的信息！！\r\n\r\n&nbsp;\r\n\r\n<strong>【B】Zend_Controller_Router_Route_Static</strong>\r\n\r\n标准路由协议，如果我们不需要任何匹配的变量，我们可以通过使用标准路由协议来实现。这个路由协议匹配到一个静态URL并且创建一个静态的路由协议，我们仅仅需要像之前那样实例化它并把它加载到路由器中就行了：\r\n<div>\r\n<div>\r\n<pre class=\"lang_php decode_true\">$route = new Zend_Controller_Router_Route_Static(\r\n　　&#039;products/rss&#039;,\r\n　　array(\r\n　　　　&#039;controller&#039; =&gt; &#039;feed&#039;,\r\n　　　　&#039;action&#039; =&gt; &#039;rss&#039;\r\n　　)\r\n);\r\n$router-&gt;addRoute(&#039;rss&#039;, $route);</pre>\r\n</div>\r\n</div>\r\n就像你看到那样，Router_Route_Static路由协议就是Router_Route一个非常简单的版本，在我们的例子中，http://domain.com/products/rss就会去访问FeedController和rss控制器；\r\n\r\n&nbsp;\r\n\r\n<strong>　【C】Zend_Controller_Router_Route_Regex</strong>\r\n\r\n正则路由协议。到目前为止，我们之前的路由协议（Router_Route、Router_Route_Static）都很好的完成了基本的路由操作，我 们常用的也是他们，然而它们会有一些限制，这就是我们为什么要引进正则路由（Router_Route_Regex）的原因。正则路由给予我们preg正则的全部力量，但同时也使得我们的路由协议变得更加复杂了一些。即使是他们有点复杂，我还是希望你能好好掌握它，因为它比标准路由协议（Router_Route）要快一点点。\r\n\r\n一开始，我们先对之前的产品案例改用使用正则路由：\r\n<pre class=\"lang_php decode_true\">$route = new Zend_Controller_Router_Route_Regex(\r\n　　&#039;product/([a-zA-Z-_0-9]+)&#039;,\r\n　　　　array(\r\n　　　　　　&#039;controller&#039; =&gt; &#039;products&#039;,\r\n　　　　　　&#039;action&#039; =&gt; &#039;view&#039;\r\n　　)\r\n);\r\n$router-&gt;addRoute(&#039;product&#039;, $route);</pre>\r\n你可以看到，我们现在移动我们的正则到我们的path（构造函数的第一个参数）中来了，就像之前的那样，这个正则路由协议现在应该是匹配是一个数 字、字母、-和_组成的ident变量的字符提供给我们，但是，你一定会问，ident变量在哪呢？好，如果你使用了这个正则路由协议，我们可以通过变量1（one） 来获取其值，即可以在控制器里用:$this-&gt;_getParam(1)来获取，其实这里如果看过正则的都知道这就是反向引用中的\\1。然而，你 一定会想为什么要定义的这么的垃圾，我们不能够记住或者弄清每一个数字代表的是什么变量（其实我刚开始看的时候也是一样的感受）。为了改变这点，正则路由 协议的构造函数提供了第3个参数来完成数字到变量名的映射：\r\n<div>\r\n<div>\r\n<pre class=\"lang_php decode_true\">$route = new Zend_Controller_Router_Route_Regex(\r\n　　&#039;product/([a-zA-Z-_0-9]+)&#039;,\r\n　　array(\r\n　　　　&#039;controller&#039; =&gt; &#039;products&#039;,\r\n　　　　&#039;action&#039; =&gt; &#039;view&#039;\r\n　　),\r\n　　array(\r\n　　　　//完成数字到字符变量的映射\r\n　　　　1 =&gt; &#039;ident&#039;\r\n　　)\r\n);\r\n$router-&gt;addRoute(&#039;product&#039;, $route);</pre>\r\n</div>\r\n</div>\r\n这样，我们就简单的将变量1映射到了ident变量名，这样就设置了ident变量，同时你也可以在控制器里面获取到它的值。<em>(如果你不是很了解正则，我建议你可以看下那个正则入门30分钟...</em>)。\r\n\r\n另外，东西总是就两面性的，连正则路由也不例外。正则路由的一个负面作用就是表现在其他zf组件如url视图助手 （$this-&gt;baseUrl()）不能够解析正则路由协议成URL，围绕这点，我们可以为我们的路由协议提供一个反向重写，就像 sprintf()工作的那样：\r\n\r\n为了达到重写的目的，我们将正则路由协议（Router_Route_Regex）的构造函数中添加第四个变量：\r\n<div>\r\n<div>\r\n<pre class=\"lang_php decode_true\">$route = new Zend_Controller_Router_Route_Regex(\r\n　　&#039;product/([a-zA-Z]+)/([a-zA-Z-_0-9]+)&#039;,\r\n　　array(\r\n　　　　&#039;controller&#039; =&gt; &#039;products&#039;,\r\n　　　　&#039;action&#039; =&gt; &#039;view&#039;\r\n　　),\r\n　　array(\r\n　　　　1 =&gt; &#039;category&#039;\r\n　　　　2 =&gt; &#039;ident&#039;\r\n　　),\r\n　　//重写路由协议\r\n　　&#039;product/%s/%s&#039;\r\n);\r\n$router-&gt;addRoute(&#039;product&#039;, $route);</pre>\r\n</div>\r\n</div>\r\n那现在我们已经增加了一个反向重写（reverse rewrite），我们的路由协议能够很容易的被连接到。如果你看到上面的路由协议，我们实际上可以看作是一类参数的捕获。我们然后提供了反向重写 product/%s%s，因此路由协议能够为我们提供变量。记住，这里反向重写可以先熟悉下sprintf()这个函数。\r\n\r\n由于我们感觉这个过程相当复杂，然我们再用一个实例来说明。\r\n\r\n设想一下，假设我们一直在忙于我们老商城应用的重构而采用了zf框架。我们已经决定我们想让我们的产品的URl有一个好的印象针对于搜索引擎。然而 由于我们的产品已经开发完成了很久了，并且里面的url已经很多的被搜索引擎给收录了，我们不想失去这些链接，为了完成这些，我们正好可以使用正则路由的 力量。\r\n\r\n我们老的URL格式：\r\n<strong>http://storefront/products.php/category/{categoryID}/product/{productID}</strong>\r\n我们新的URL的格式：\r\n<strong>http://storefront/product/{categoryName}/{productID}-{productIdent}.html</strong>\r\n\r\n因此，一开始，我们就想重定义我们老的请求URL到我们新的请求，我们可以通过这样做：\r\n<pre class=\"lang_php decode_true\">//我们老的url匹配的正则路由协议\r\n$route = new Zend_Controller_Router_Route_Regex(\r\n　　&#039;products.php/category/(\\d+)/product/(\\d+)&#039;,\r\n　　array(\r\n　　　　&#039;controller&#039; =&gt; &#039;products&#039;,\r\n　　　　&#039;action&#039; =&gt; &#039;old&#039;\r\n　　),\r\n　　array(\r\n　　　　1 =&gt; &#039;categoryID&#039;,\r\n　　　　2 =&gt; &#039;productID&#039;\r\n　　)\r\n);</pre>\r\n在这里，我们将我们老的url中的category和product值分别得到后分别映射到了cateforyID和productID两个变量，并且将 这两个变量传递到我们的ProductsController/oldAction中去，因此，我们可以在我们的old动作中再次重定向到我们新的URl 中：\r\n<div>\r\n<div>\r\n<pre class=\"lang_php decode_true\">public function oldAction(){\r\n　　$catID = $this-&gt;_getParam( &#039;categoryID&#039; );\r\n　　$productID = $this-&gt;_getParam( &#039;productID&#039; );\r\n　　// model finds the product ident and category names\r\n　　//....\r\n　　$ident = &#039;coolproduct&#039;;\r\n　　$catName = &#039;coolstuff&#039;;\r\n//重定向到新的url\r\n　　$this-&gt;_redirect( &#039;/product/&#039; . $catName . &#039;/&#039; . $productID . &#039;-&#039;. $ident . &#039;.html&#039;,\r\n　　　　array( &#039;code&#039; =&gt; 301 )\r\n　　);\r\n}</pre>\r\n</div>\r\n</div>\r\n这样我们old动作控制器拿取匹配的变量从路由协议中并且使用它们重定向到一个使用一个301的新的url中去，记住，我们不应当直接将我们获取到的变量直接应用到我们的一个重定向请求中，因为这样会牵扯到安全问题。\r\n\r\n那现在我们创建一个新的路由协议来接收我们老的URls映射过来的URLs：\r\n<div>\r\n<div>\r\n<pre class=\"lang_php decode_true\">//新url的正则路由协议\r\n$route = new Zend_Controller_Router_Route_Regex(\r\n　　&#039;product/([a-zA-Z-_0-9]+)/(\\d+)-([a-zA-Z-_0-9]+).html&#039;,\r\n　　array(\r\n　　　　&#039;controller&#039; =&gt; &#039;products&#039;,\r\n　　　　&#039;action&#039; =&gt; &#039;view&#039;\r\n　　),\r\n　　array(\r\n　　　　1 =&gt; &#039;categoryIdent&#039;,\r\n　　　　2 =&gt; &#039;productID&#039;,\r\n　　　　3 =&gt; &#039;productIdent&#039;\r\n　　),\r\n　　&#039;product/%s/%d-%s.html&#039;\r\n);</pre>\r\n</div>\r\n</div>\r\n这个路由协议匹配我们新的URLs，这个正则包含3个捕获组，分别是产品类名（categoryIdent）,产品ID(productID)，以及产品特性（ident）。这个\'product/%s/%d-%s.html\'就是匹配原来的<strong>{categoryName}/{productID}-{productIdent}.html这种格式。</strong>最后，建议好好玩玩这个正则路由协议，我可以保证你以后会用得到的。\r\n\r\n&nbsp;\r\n\r\n<strong>【D】Zend_Controller_Router_Route_Hostname</strong>\r\n\r\n主机域名路由协议，看名字就知道他是关于处理域名的路由协议。一个常见使用就是一个域名下有按用户的子域名，如，如果我们有一个公共的外部 站点www.domain.com，现在我们的注册用户有一个帐号url像ues1.domain.com，那么我们就可以使用域名路由协议来重写这个请 求：\r\n<div>\r\n<div>\r\n<pre class=\"lang_php decode_true\">$route = new Zend_Controller_Router_Route_Hostname(\r\n　　&#039;:username.domain.com&#039;,\r\n　　array(\r\n　　　　&#039;controller&#039; =&gt; &#039;account&#039;,\r\n　　　　&#039;action&#039; =&gt; &#039;index&#039;\r\n　　),\r\n　　array(\r\n　　　　// Match subdomain excluding www.\r\n　　　　&#039;username&#039; =&gt; &#039;(?!.*www)[a-zA-Z-_0-9]+&#039;\r\n　　)\r\n　　);\r\n$router-&gt;addRoute(&#039;account&#039;, $route);</pre>\r\n</div>\r\n</div>\r\n正如你所见，域名路由协议（Router_Route_Hostname）很像基本路由协议（Router_Route），我们能够得到变量，设置默认值，同时还能通过正则匹配，在这里的正则匹配我们过掉了www。\r\n\r\n&nbsp;\r\n\r\n6）在配置文件中配置Zend_Config\r\n\r\n当我们有许多路由协议的时候，管理他们就开始变得很棘手了，这样我们就可以通过路由器来调用配置文件。\r\n<pre class=\"lang_php decode_true\">[production]\r\nroutes.rss.type = &quot;Zend_Controller_Router_Route_Static&quot;\r\nroutes.rss.route = &quot;products/rss&quot;\r\nroutes.rss.defaults.controller = feed\r\nroutes.rss.defaults.action = rss\r\n\r\nroutes.oldproducts.type = &quot;Zend_Controller_Router_Route_Regex&quot;\r\nroutes.oldproducts.route = &quot;products.php/category/(\\d+)/product/(\\d+)&quot;\r\nroutes.oldproducts.defaults.controller = products\r\nroutes.oldproducts.defaults.action = old\r\nroutes.oldproducts.map.categoryID = 1\r\nroutes.oldproducts.map.productID = 2\r\n\r\nroutes.product.type = &quot;Zend_Controller_Router_Route_Regex&quot;\r\nroutes.product.route = &quot;product/([a-zA-Z-_0-9]+)/(\\d+)-([a-zA-Z-_0-9]+).html&quot;\r\nroutes.product.defaults.controller = products\r\nroutes.product.defaults.action = view\r\nroutes.product.map.categoryIdent = 1\r\nroutes.product.map.productID = 2\r\nroutes.product.map.productIdent = 3\r\nroutes.product.reverse = &quot;product/%s/%d-%s.html&quot;\r\n\r\nroutes.user.route = &quot;user/profile/:username/*&quot;\r\nroutes.user.defaults.controller = user\r\nroutes.user.defaults.action = profile\r\nroutes.user.defaults.username = &quot;Unknown&quot;\r\nroutes.user.reqs.username = &quot;([a-zA-Z-_0-9]+)&quot;</pre>\r\n一旦我们创建了一个ini文件，我们就能把它加载到路由器中：\r\n<div>\r\n<pre class=\"lang_php decode_true\">$config = new Zend_Config_Ini(&#039;config.ini&#039;, &#039;production&#039;);\r\n$router = new Zend_Controller_Router_Rewrite();\r\n$router-&gt;addConfig($config, &#039;routes&#039;);</pre>\r\n</div>\r\n7）总结\r\n\r\n路由器属于ZF mvc组件中很重要的一个，我们上面描述的这些路由是经常可以用到的。可能在一开始的时候就去用router会感觉不适应，你可以先熟悉了解它，但我希望 你还是对这个有个比较详细的了解，再次建议，你应该好好的用一下上面的路由，如果你想掌握它的话！！\r\n\r\n原文地址：<a href=\"http://www.cnblogs.com/terryglp/articles/1775778.html\">http://www.cnblogs.com/terryglp/articles/1775778.html</a>','Zend Framework中路由router及路由协议route详解','','publish','open','open','','zend-framework%e4%b8%ad%e8%b7%af%e7%94%b1router%e5%8f%8a%e8%b7%af%e7%94%b1%e5%8d%8f%e8%ae%aeroute%e8%af%a6%e8%a7%a3','','','2012-06-17 06:46:20','2012-06-17 14:46:20','','0','http://yanue.net/?p=199','0','post','','0');
INSERT INTO `wp_posts` VALUES('131','1','2012-05-01 20:09:40','2012-05-02 04:09:40','网页flash插入代码：兼容所以浏览器，实现flash背景透明，经常用，不解释。\r\n<pre class=\"lang_php decode_true\">&lt;object id=&quot;FlashID&quot;\r\n	classid=&quot;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&quot; width=&quot;980&quot;\r\n	height=&quot;520&quot;&gt;\r\n	&lt;param name=&quot;movie&quot; value=&quot;swf/index.swf&quot; /&gt;\r\n	&lt;param name=&quot;quality&quot; value=&quot;high&quot; /&gt;\r\n	&lt;param name=&quot;wmode&quot; value=&quot;opaque&quot; /&gt;\r\n	&lt;param name=&quot;swfversion&quot; value=&quot;6.0.65.0&quot; /&gt;\r\n	&lt;param name=&quot;wmode&quot; value=&quot;transparent&quot;&gt;\r\n	&lt;object type=&quot;application/x-shockwave-flash&quot; data=&quot;swf/index.swf&quot;\r\n		width=&quot;980&quot; height=&quot;520&quot;&gt;\r\n		&lt;param name=&quot;quality&quot; value=&quot;high&quot; /&gt;\r\n		&lt;param name=&quot;wmode&quot; value=&quot;opaque&quot; /&gt;\r\n		&lt;param name=&quot;swfversion&quot; value=&quot;6.0.65.0&quot; /&gt;\r\n		&lt;param name=&quot;wmode&quot; value=&quot;transparent&quot;&gt;\r\n	&lt;/object&gt;\r\n&lt;/object&gt;</pre>','网页中插入flash及flash背景透明代码','','publish','open','open','','%e7%bd%91%e9%a1%b5%e4%b8%ad%e6%8f%92%e5%85%a5flash%e5%8f%8aflash%e8%83%8c%e6%99%af%e9%80%8f%e6%98%8e%e4%bb%a3%e7%a0%81','','','2012-06-17 10:19:30','2012-06-17 18:19:30','','0','http://yanue.net/?p=131','0','post','','0');
INSERT INTO `wp_posts` VALUES('110','1','2012-04-26 09:00:30','2012-04-26 17:00:30','有很多时候我们需要用到文章里面的图片，而且主要是用到它的图片地址，这个时候我们需要通过正则匹配出图片标签，然后做到我们需要的数据\r\n\r\n平时也没怎么用正则，一不学就忘，最近项目需要，然后又去goole了，好乱！一搜一大堆，也不是我想要的，最后把自己留一个已被后用：\r\n\r\n实现：通过js正则匹配出所有图片及所有图片地址src。\r\n\r\n思路：1.匹配出图片img标签（即匹配出所有图片），过滤其他不需要的字符\r\n\r\n2.从匹配出来的结果（img标签中）循环匹配出图片地址（即src属性）\r\n\r\n演示：<a href=\"http://www.yanue.net/js/imgReg.html\">http://www.yanue.net/js/imgReg.html</a>\r\n\r\n代码：(你可以复制到本地试试)\r\n<pre class=\"lang_php decode_true\">&lt;script type=&quot;text/javascript&quot;&gt;\r\n//思路分两步：作者（yanue）.\r\n//1，匹配出图片img标签（即匹配出所有图片），过滤其他不需要的字符\r\n//2.从匹配出来的结果（img标签中）循环匹配出图片地址（即src属性）\r\nvar str = &quot;this is test string &lt;img src=\\&quot;http:www.yanue.net/test.jpg\\&quot; width=&#039;50&#039; &gt; 123 and the end &lt;img src=\\&quot;所有地址也能匹配.jpg\\&quot; /&gt; 33! &lt;img src=\\&quot;/uploads/attached/image/20120426/20120426225658_92565.png\\&quot; alt=\\&quot;\\&quot; /&gt;&quot;\r\n//匹配图片（g表示匹配所有结果i表示区分大小写）\r\nvar imgReg = /&lt;img.*?(?:&gt;|\\/&gt;)/gi;\r\n//匹配src属性\r\nvar srcReg = /src=[\\&#039;\\&quot;]?([^\\&#039;\\&quot;]*)[\\&#039;\\&quot;]?/i;\r\nvar arr = str.match(imgReg);\r\nalert(&#039;所有已成功匹配图片的数组：&#039;+arr);\r\nfor (var i = 0; i &lt; arr.length; i++) {\r\n    var src = arr[i].match(srcReg);\r\n    //获取图片地址\r\n    if(src[1]){\r\n       alert(&#039;已匹配的图片地址&#039;+(i+1)+&#039;：&#039;+src[1]);\r\n    }\r\n    //当然你也可以替换src属性\r\n    if (src[0]) {\r\n        var t = src[0].replace(/src/i, &quot;href&quot;);\r\n        //alert(t);\r\n    }\r\n}\r\n&lt;/script&gt;</pre>','js正则匹配出所有图片及所有图片地址src','','publish','open','open','','js%e6%ad%a3%e5%88%99%e5%8c%b9%e9%85%8d%e5%87%ba%e6%89%80%e6%9c%89%e5%9b%be%e7%89%87%e5%8f%8a%e6%89%80%e6%9c%89%e5%9b%be%e7%89%87%e5%9c%b0%e5%9d%80src','','','2012-06-17 06:20:41','2012-06-17 14:20:41','','0','http://yanue.net/?p=110','0','post','','0');
INSERT INTO `wp_posts` VALUES('102','1','2012-04-20 21:46:49','2012-04-21 05:46:49','说明：经常忘记比如数据库连接啊之类的语句，通常做的时候都是从从别的地方copy过来使用或者查手册慢慢写，但是手册上的都是各个语句分开，要完成一个简单的查询都需要找很多，很麻烦。本例子只作为简单的引导，实现一个简单的查询：\r\n<pre class=\"lang_php decode_true\">&lt;!DOCTYPE HTML&gt;\r\n&lt;html lang=&quot;en-US&quot;&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;php中mssql数据库简单查询完整实例&lt;/title&gt;\r\n&lt;meta charset=&quot;gb2312&quot;&gt;\r\n&lt;meta name=&quot;author&quot; content=&quot;yanue&quot; /&gt;\r\n&lt;meta name=&quot;copyright&quot; content=&quot;powered by yanue&quot; /&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;?php\r\n  //说明：测试的时候是连接的是远程的mssql数据库，没有在本机运行\r\n  //初始化mssql数据库连接,分别是 主机(ip:端口号默认1433), 用户名, 密码\r\n	$conn=mssql_connect(&#039;ip:1433&#039;,&#039;user&#039;,&#039;pass&#039;) or die(&quot;SQL SERVER 数据库连接失败！&quot;); \r\n	//选择数据库\r\n	mssql_select_db(&#039;yourdb&#039;,$conn); \r\n	//sql语句\r\n	$sql=&quot;SELECT TOP 5 * FROM test&quot;; \r\n	$result=mssql_query($sql); \r\n	//打印输出\r\n	//print_r($result);\r\n	\r\n	$num = mssql_num_rows($result); \r\n	//输出结果 \r\n  echo &#039;有&#039;.$num.&quot;条记录&lt;br&gt;&quot;;\r\n	if($num){\r\n		//循环出每一条记录\r\n		for($i=0;$i&lt;$num;$i++) { \r\n			  //这里是一条记录的信息，你也可以循环显示出来，这里只输出第一第二条\r\n		    $Row=mssql_fetch_array($result); \r\n		    echo $Row[0].$Row[1].&quot;...&lt;br/&gt;&quot;;\r\n		}   \r\n	}else{\r\n	    echo &quot;暂无数据&quot;	;\r\n	}\r\n	//关闭连接\r\n	mssql_close($conn);\r\n?&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>','php中mssql数据库简单查询完整实例','','publish','open','open','','php%e4%b8%admssql%e6%95%b0%e6%8d%ae%e5%ba%93%e7%ae%80%e5%8d%95%e6%9f%a5%e8%af%a2%e5%ae%8c%e6%95%b4%e5%ae%9e%e4%be%8b','','','2012-04-20 21:46:49','2012-04-21 05:46:49','','0','http://yanue.net/?p=102','0','post','','0');
INSERT INTO `wp_posts` VALUES('122','1','2012-04-29 03:41:39','2012-04-29 11:41:39','在使用Zend Framework ，一般都会用到layout布局，而view是必不可少的，但有的时候我们并不需要view视图显示，如果你使用了layout，单是禁用view视图，还是有基本的视图框架的，这时候我们需要将layout和view都给禁用了，下面是方法，经常用到，不解释。\r\n\r\n取消使用预设view的方法:\r\n<pre class=\"lang_php decode_true\">$frontController = Zend_Controller_Front::getInstance ();\r\n$frontController-&gt;setParam ( &#039;noViewRenderer&#039;, true );\r\n//或者\r\n//$this-&gt;getHelper(&#039;viewRenderer&#039;)-&gt;setNoRender();\r\n//或者\r\n//$this-&gt;_helper-&gt;viewRenderer-&gt;setNoRender();</pre>\r\n取消使用layout:\r\n<pre class=\"lang_php decode_true\">$this-&gt;getHelper(&#039;layout&#039;)-&gt;disableLayout();\r\n//或者\r\n//$this-&gt;_helper-&gt;layout()-&gt;disableLayout();</pre>','Zend Framework - 取消使用view和layout的方法 ','','publish','open','open','','122','','','2012-06-17 06:18:24','2012-06-17 14:18:24','','0','http://yanue.net/?p=122','0','post','','0');
INSERT INTO `wp_posts` VALUES('150','1','2012-05-16 18:17:07','2012-05-17 02:17:07','数据库导入导出是一个后台必要拥有的功能，网上一搜，有很多关于数据库导入导出的，但基本上一个大的系统，包含了许多我们并不需要的，而且他们都是自己的后台的形式，我并不喜欢的是拿人家的东西整合到自己的后台，我需要的是自己东西。于是参照了很多，自己写了一个关于分卷导入类。以方便调用。欢迎大家拍砖。\r\n\r\n这里针对分卷文件是以‘_v1.sql’为结尾，实现单个sql文件及分卷sql导入,分卷导入可选择是否当前分卷导入余下分卷，我们只需要直接调用类即可完成\r\n<pre class=\"lang_php decode_true\">//分别是主机，用户名，密码，数据库名，数据库编码\r\n$db = new DataManage ( &#039;localhost&#039;, &#039;root&#039;, &#039;root&#039;, &#039;test&#039;, &#039;utf8&#039; );\r\n//sql文件，是否只导入单个sql（即如果有其他分卷也不导入）\r\n$db-&gt;restore ( &#039;./backup/20120516211738_all_v1.sql&#039;, false );</pre>\r\n对应如何去列出备份的sql文件或选择sql之类的，自己去实现，那个不在这个范畴了，也很简单的。\r\n\r\n实际演示效果：\r\n<a href=\"http://www.yanue.net/archives/150.html/qq%e6%88%aa%e5%9b%be20120517101233\" rel=\"attachment wp-att-152\"><img title=\"QQ截图20120517101233\" alt=\"\" src=\"http://www.yanue.net/wp-content/uploads/2012/05/QQ截图20120517101233.png\" width=\"199\" height=\"129\" /></a><a href=\"http://www.yanue.net/archives/150.html/qq%e6%88%aa%e5%9b%be20120517101056-2\" rel=\"attachment wp-att-157\"><img class=\"alignnone size-full wp-image-157\" title=\"QQ截图20120517101056\" alt=\"\" src=\"http://www.yanue.net/wp-content/uploads/2012/05/QQ截图201205171010561.png\" width=\"417\" height=\"115\" /></a>\r\n\r\n还有目前只实现了数据库导入，关于数据库导出的，正在编写功能。\r\n\r\n下面是完整的类代码：（具体思路及实现代码里面都有说明，这里不在赘述）\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\n/**\r\n * @author yanue\r\n * @copyright	Copyright (c) 2012 www.yanue.net\r\n * @link  http://www.yanue.net/archives/150.html\r\n * 说明：分卷文件是以_v1.sql为结尾\r\n * 功能：实现单个sql文件及分卷sql导入,分卷导入可选择是否当前分卷导入余下分卷\r\n * 使用方法：\r\n *\r\n *\r\n * ------------------------------------------------------------------\r\n//分别是主机，用户名，密码，数据库名，数据库编码\r\n$db = new DataManage ( &#039;localhost&#039;, &#039;root&#039;, &#039;root&#039;, &#039;test&#039;, &#039;utf8&#039; );\r\n//sql文件，是否只导入单个sql（即如果有其他分卷也不导入）\r\n$db-&gt;restore ( &#039;./backup/20120516211738_all_v1.sql&#039;, false );\r\n *----------------------------------------------------------------------\r\n */\r\nclass DataManage {\r\n	var $db; // 数据库连接\r\n	var $database; // 所用数据库\r\n	var $sqldir; // 数据库备份文件夹\r\n\r\n	/**\r\n	 * 初始化\r\n	 *\r\n	 * @param string $host\r\n	 * @param string $username\r\n	 * @param string $password\r\n	 * @param string $database\r\n	 * @param string $charset\r\n	 */\r\n	function __construct($host = &#039;localhost&#039;, $username = &#039;root&#039;, $password = &#039;&#039;, $database = &#039;test&#039;, $charset = &#039;utf8&#039;) {\r\n		$this-&gt;host = $host;\r\n		$this-&gt;username = $username;\r\n		$this-&gt;password = $password;\r\n		$this-&gt;database = $database;\r\n		$this-&gt;charset = $charset;\r\n		// 连接数据库\r\n		$this-&gt;db = mysql_connect ( $this-&gt;host, $this-&gt;username, $this-&gt;password ) or die ( &quot;数据库连接失败.&quot; );\r\n		// 选择使用哪个数据库\r\n		mysql_select_db ( $this-&gt;database, $this-&gt;db ) or die ( &quot;无法打开数据库&quot; );\r\n		// 数据库编码方式\r\n		mysql_query ( &#039;SET NAMES &#039; . $this-&gt;charset, $this-&gt;db );\r\n	}\r\n\r\n	/**\r\n	 * 导入备份数据\r\n	 * 说明：分卷文件格式20120516211738_all_v1.sql\r\n	 *\r\n	 * @param string $sqlfile\r\n	 * @param bool $single\r\n	 */\r\n	function restore($sqlfile, $single = FALSE) {\r\n		// 检测文件是否存在\r\n		if (! file_exists ( $sqlfile )) {\r\n			exit ( &quot;文件不存在！请检查&quot; );\r\n		}\r\n		$this-&gt;lock ( $this-&gt;database );\r\n		// 获取数据库存储位置\r\n		$sqlpath = pathinfo ( $sqlfile );\r\n		$this-&gt;sqldir = $sqlpath [&#039;dirname&#039;];\r\n		// 检测是否包含分卷，将类似20120516211738_all_v1.sql从_v分开,有则说明有分卷\r\n		$volume = explode ( &quot;_v&quot;, $sqlfile );\r\n		$volume_path = $volume [0];\r\n		echo &quot;请勿刷新及关闭浏览器以防止程序被中止，如有不慎！将导致数据库结构受损&lt;br /&gt;&quot;;\r\n		echo &quot;正在导入备份数据，请稍等！&lt;br /&gt;&quot;;\r\n		if (empty ( $volume [1] ) || $single) {\r\n			echo &quot;正在导入sql：&lt;span style=&#039;color:#f00;&#039;&gt;&quot; . $sqlfile . &#039;&lt;/span&gt;&lt;br /&gt;&#039;;\r\n			// 没有分卷\r\n			if ($this-&gt;_import ( $sqlfile )) {\r\n				echo &quot;数据库导入成功！&quot;;\r\n			} else {\r\n				exit ( &#039;数据库导入失败！&#039; );\r\n			}\r\n		} else {\r\n			// 存在分卷，则获取当前是第几分卷，循环执行余下分卷\r\n			$volume_id = explode ( &quot;.sq&quot;, $volume [1] );\r\n			// 当前分卷为$volume_id\r\n			$volume_id = intval ( $volume_id [0] );\r\n			while ( $volume_id ) {\r\n				$tmpfile = $volume_path . &quot;_v&quot; . $volume_id . &quot;.sql&quot;;\r\n				// 存在其他分卷，继续执行\r\n				if (file_exists ( $tmpfile )) {\r\n					// 执行导入方法\r\n					echo &quot;正在导入分卷$volume_id：&lt;span style=&#039;color:#f00;&#039;&gt;&quot; . $tmpfile . &#039;&lt;/span&gt;&lt;br /&gt;&#039;;\r\n					if ($this-&gt;_import ( $tmpfile )) {\r\n\r\n					} else {\r\n						exit ( &quot;导入分卷$volume_id：&lt;span style=&#039;color:#f00;&#039;&gt;&quot; . $tmpfile . &#039;&lt;/span&gt;失败！可能是数据库结构已损坏！请尝试从分卷1开始导入&#039; );\r\n					}\r\n				} else {\r\n					echo &quot;此分卷备份全部导入成功！&lt;br /&gt;&quot;;\r\n					return;\r\n				}\r\n				$volume_id ++;\r\n			}\r\n		}\r\n	}\r\n\r\n	/**\r\n	 * 将sql导入到数据库（普通导入）\r\n	 *\r\n	 * @param string $sqlfile\r\n	 * @return boolean\r\n	 */\r\n	private function _import($sqlfile) {\r\n		$name = basename ( $sqlfile );\r\n		$sqls = file ( $sqlfile );\r\n		foreach ( $sqls as $sql ) {\r\n			str_replace ( &quot;\\r&quot;, &quot;&quot;, $sql );\r\n			str_replace ( &quot;\\n&quot;, &quot;&quot;, $sql );\r\n			if (! mysql_query ( trim ( $sql ), $this-&gt;db ))\r\n				return false;\r\n		}\r\n		return true;\r\n	}\r\n\r\n	// 关闭数据库连接\r\n	private function close() {\r\n		mysql_close ( $this-&gt;db );\r\n	}\r\n\r\n	// 锁定数据库，以免备份或导入时出错\r\n	private function lock($tablename, $op = &quot;WRITE&quot;) {\r\n		if (mysql_query ( &quot;lock tables &quot; . $tablename . &quot; &quot; . $op ))\r\n			return true;\r\n		else\r\n			return false;\r\n	}\r\n\r\n	// 解锁\r\n	private function unlock() {\r\n		if (mysql_query ( &quot;unlock tables&quot; ))\r\n			return true;\r\n		else\r\n			return false;\r\n	}\r\n\r\n	// 析构\r\n	function __destruct() {\r\n		mysql_query ( &quot;unlock tables&quot;, $this-&gt;db );\r\n		mysql_close ( $this-&gt;db );\r\n	}\r\n}</pre>','(原创)php数据库(mysql)分卷导入类及思路详解','','publish','open','open','','%e5%8e%9f%e5%88%9bphp%e6%95%b0%e6%8d%ae%e5%ba%93mysql%e5%88%86%e5%8d%b7%e5%af%bc%e5%85%a5%e7%b1%bb%e5%8f%8a%e6%80%9d%e8%b7%af%e8%af%a6%e8%a7%a3','','','2013-01-11 06:39:47','2013-01-11 14:39:47','','0','http://yanue.net/?p=150','0','post','','0');
INSERT INTO `wp_posts` VALUES('133','1','2012-05-03 18:07:14','2012-05-04 02:07:14','在编写网页代码时，经常遇到的就是兼容性问题，尤其ie6,让很多人头疼，各种浏览器的兼容性是个必须考虑的问题，有些时候无法找到适合所有浏览器的写法，就只能写根据浏览器种类区别的代码，这时就要用到判断代码了。而区分浏览器分为两种情况，一种是html代码，一种是css代码，经常用到！\r\n\r\n当然另外一直办法就是直接用js判断，请见我的另外一篇文章：<a href=\"http://www.yanue.net/archives/77.html\">js判断浏览器类型及版本详细分析 （js判断ie6）</a>\r\n\r\n1.在HTML代码中，区别各种浏览器的代码如下(以ie6为例，这时目前国内用户最多的，得益于盗版xp系统的广泛流传….不过这玩意也是绝大部分兼容性问题的根源，因为其标准化程度实在是….)：\r\n<pre class=\"lang_php decode_true\">&lt;!–[if IE 6]&gt; 仅IE6可识别 &lt;![endif]–&gt;\r\n&lt;!–[if lte IE 6]&gt; IE6及其以下版本可识别 &lt;![endif]–&gt;\r\n&lt;!–[if lt IE 6]&gt; IE6以下版本可识别 &lt;![endif]–&gt;\r\n&lt;!–[if gte IE 6]&gt; IE6及其以上版本可识别 &lt;![endif]–&gt;\r\n&lt;!–[if gt IE 6]&gt; IE6以上版本可识别 &lt;![endif]–&gt;\r\n&lt;!–[if IE]&gt; 所有的IE可识别 &lt;![endif]–&gt;</pre>\r\n以上这些代码写法都是针对ie各版本浏览器的，在其他浏览器中这些代码都会被解释为Html注释而直接无视掉，所以要想些针对firefox之类的非ie浏览器，需要这么写：\r\n<pre class=\"lang_php decode_true\">&lt;!–[if !IE]&gt;&lt;!–&gt; 除IE外都可识别 &lt;!–&lt;![endif]–&gt;</pre>\r\n—————————————————分割线———————————————————\r\n\r\n2.CSS代码中，则可以根据各浏览器自己独立的可识别的特殊代码来编写区分浏览器的代码，例如为IE系列浏览器可读[\\9]，而IE6和IE7可读[*]，另外IE6可辨识[ _ ](下划线)；由于CSS读取时是按从上到下来的，同样属性靠后写的生效，因此可以依照顺序写下来，就会让每个浏览器正确的读取到自己看得懂得CSS语法，有效区分各类型或版本：\r\n<pre class=\"lang_php decode_true\">.classname{\r\nbackground:blue; /*Firefox等非IE浏览器背景变蓝色*/\r\nbackground:red \\9; /*IE8 背景变红色*/\r\n*background:black; /*IE7 背景变黑色*/\r\n_background:orange; /*IE6 背景变橘色*/\r\n}</pre>\r\n类似的还有：\r\n<pre class=\"lang_php decode_true\">.classname {\r\nbackground:black !important; /*非IE6 背景变黑色*/\r\nbackground:orange; /*IE6 背景变橘色*/\r\n}</pre>\r\n因为其他浏览器可读取「!important;」但IE6却不行。','HTML中通过注释判断ie浏览器及css常见hack','','publish','open','open','','html%e4%b8%ad%e9%80%9a%e8%bf%87%e6%b3%a8%e9%87%8a%e5%88%a4%e6%96%adie%e5%8f%8acss%e5%b8%b8%e8%a7%81hack','','\nhttp://yanue.net/archives/77.html','2012-06-17 06:06:30','2012-06-17 14:06:30','','0','http://yanue.net/?p=133','0','post','','0');
INSERT INTO `wp_posts` VALUES('116','1','2012-04-26 20:02:13','2012-04-27 04:02:13','在添加文章的时候，很多情况下我们需要处理文章中的远程图片，将其保存到本地，以免别人网站删除后文章里面就无法访问了。因此我们需要正则匹配文章中的图片地址，这里我们使用php的正则表达式来实现:\r\n<pre class=\"lang:php decode:true\">$content = \'这里是文章内容，这里插入一张图片测试 &lt;img src=\"http://www.yanue.net/wp-content/uploads/2012/03/48ef3a3e1f30e9246abc40834c086e061c95f7521.jpg\"&gt;\';\r\n$content = stripslashes ( $content );\r\n$img_array = array ();\r\n// 匹配所有远程图片\r\npreg_match_all ( \"/(src|SRC)=[\"|\'| ]{0,}(http://(.*).(gif|jpg|jpeg|bmp|png))/isU\", $content, $img_array );\r\n// 匹配出来的不重复图片\r\n$img_array = array_unique ( $img_array [2] );\r\nprint_r($img_array);</pre>\r\n上面就将远程图片给匹配出来了，我们需要将其保持到本地。这里需要注意两点：\r\n\r\n1.图片保存路径（图片存储目录）\r\n\r\n2.实际访问图片地址\r\n\r\n下面是完整实例：（你可以保存到本地服务器修改相应地方进行测试）\r\n<pre class=\"lang:php decode:true\">&lt;!DOCTYPE HTML&gt;\r\n&lt;html lang=\"en-US\"&gt;\r\n&lt;head&gt;\r\n&lt;meta charset=\"UTF-8\"&gt;\r\n&lt;title&gt;php保存远程图片到本地，php正则匹配文章中的图片地址&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;?php\r\n//保存文章中远程图片到本地\r\n//作者：yanue;\r\n// 文件保存目录路径(请更换为你自己的路径， 你可以echo一下)\r\n$save_path = $_SERVER [\'DOCUMENT_ROOT\'] . \'swfupload/attached/\';\r\n// 文件保存目录URL\r\n$save_url = \'/swfupload/attached/\';\r\n$save_path = realpath ( $save_path ) . \'/\';\r\n// 图片存储目录\r\n$imgPath = $save_path . date ( \"Ymd\" );\r\n$imgUrl = $save_url . date ( \"Ymd\" );\r\n\r\n// 创建文件夹\r\nif (! is_dir ( $imgPath )) {\r\n	@mkdir ( $imgPath, 0777 );\r\n}\r\n$content = \'这里是文章内容，这里插入一张图片测试 &lt;img src=\"http://www.yanue.net/wp-content/uploads/2012/03/48ef3a3e1f30e9246abc40834c086e061c95f7521.jpg\"&gt;\';\r\n$content = stripslashes ( $content );\r\n$img_array = array ();\r\n// 匹配所有远程图片\r\npreg_match_all ( \"/(src|SRC)=[\"|\'| ]{0,}(http://(.*).(gif|jpg|jpeg|bmp|png))/isU\", $content, $img_array );\r\n// 匹配出来的不重复图片\r\n$img_array = array_unique ( $img_array [2] );\r\nprint_r($img_array);\r\n// 时间无限制\r\nset_time_limit ( 0 );\r\nforeach ( $img_array as $key =&gt; $value ) {\r\n	$value = trim ( $value );\r\n	// 读取远程图片\r\n	$get_file = @file_get_contents ( $value );\r\n	// 保存到本地图片名称\r\n	$imgname = date ( \"YmdHis\" ) . \'_\' . rand ( 10000, 99999 ) . \".\" . substr ( $value, - 3, 3 );\r\n	// 保存到本地的实际文件地址（包含路径和名称）\r\n	$fileName = $imgPath . \'/\' . $imgname;\r\n	// 实际访问的地址\r\n	$fileurl = $imgUrl . \"/\" . $imgname;\r\n	// 文件写入\r\n	if ($get_file) {\r\n		$fp = @fopen ( $fileName, \"w\" );\r\n		@fwrite ( $fp, $get_file );\r\n		@fclose ( $fp );\r\n	}\r\n	// 替换原来的图片地址\r\n	$content = ereg_replace ( $value, $fileurl, $content );\r\n}\r\necho $content;\r\n?&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n&nbsp;\r\n<pre class=\"lang_php decode_true\"></pre>','php保存远程图片到本地 php正则匹配文章中的远程图片地址','','publish','open','open','','php%e4%bf%9d%e5%ad%98%e8%bf%9c%e7%a8%8b%e5%9b%be%e7%89%87%e5%88%b0%e6%9c%ac%e5%9c%b0-php%e6%ad%a3%e5%88%99%e5%8c%b9%e9%85%8d%e6%96%87%e7%ab%a0%e4%b8%ad%e7%9a%84%e8%bf%9c%e7%a8%8b%e5%9b%be%e7%89%87','','','2013-09-14 21:33:33','2013-09-15 05:33:33','','0','http://yanue.net/?p=116','0','post','','2');
INSERT INTO `wp_posts` VALUES('174','1','2012-05-22 01:24:48','2012-05-22 09:24:48','前几天将数据库导入类（详见：<a title=\"数据库导入类\" href=\"http://www.yanue.net/archives/150.html\" target=\"_blank\">http://www.yanue.net/archives/150.html</a>）完成了。这几天去了云南耽搁了，回来接着完成导出功能，憋了好久，终于搞出来了。这里不说多余的话，代码里面有详细说明。实现功能：实现mysql数据库分卷备份,选择表进行备份,实现单个sql文件及分卷sql导入。\r\n\r\n<strong>分卷导出思路</strong>：统计sql语句变量的长度，按1个字符当成1 字节比较，如果大于设定分卷大小，则写入一个sql文件（我也不知道这样统计是否稳当，这也是借鉴其他的人的）。\r\n\r\n<strong>分卷导入思路</strong>：按行读取sql文件，将每一行当作完整的sql语句存到数组再循环执行插入数据库就可以了，但是在创建表语句分了多行，这个需要单独处理（就这个花了我好长时间的）；\r\n\r\n（哇，感觉文章好长啊！主要是那个类文件给占用了）。\r\n\r\n<span style=\"color: #ff0000;\">更新时间： 2012年10月6日</span>\r\n更新说明： 1.去除sql导入的时候排除sql文件里面的注释\'-- \' 从而解决sql中单双引号不能导入\r\n2.单行读取后的sql直接执行，避免重新将sql语句组合到数组中再从数组中读取导入sql，提高效率\r\n\r\n<strong>下载地址</strong>: <span style=\"color: #ff0000;\"><a title=\"Dbmanage\" href=\"https://github.com/yanue/Dbmanage\" target=\"_blank\"><span style=\"color: #ff0000;\">https://github.com/yanue/Dbmanage</span></a></span>\r\n\r\n导出后的sql文件格式如下：\r\n<pre class=\"lang_php decode_true\">--\r\n-- MySQL database dump\r\n-- Created by DBManage class, Power By yanue. \r\n-- http://www.yanue.net \r\n--\r\n-- 主机: localhost\r\n-- 生成日期: 2012 年  10 月 06 日 22:32\r\n-- MySQL版本: 5.1.50-community\r\n-- PHP 版本: 5.3.9-ZS5.6.0\r\n\r\n--\r\n-- 数据库: `test`\r\n--\r\n\r\n-- -------------------------------------------------------\r\n\r\n--\r\n-- 表的结构aa\r\n--\r\n\r\nDROP TABLE IF EXISTS `aa`;\r\nCREATE TABLE `aa` (\r\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\r\n  `content` text NOT NULL,\r\n  PRIMARY KEY (`id`)\r\n) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;\r\n\r\n--\r\n-- 转存表中的数据 aa\r\n--\r\n\r\nINSERT INTO `aa` VALUES(\'1\',\'&lt;p id=\"test\"&gt;&lt;span class=\'hahh\' style=\"line-height:;\"&gt;我是测试数据 呵呵&lt;/span&gt;&lt;/p&gt;\');</pre>\r\n下面是类代码：\r\n<pre class=\"lang:php decode:true\">&lt;?php\r\n/**\r\n * @author yanue\r\n * @copyright  Copyright (c) 2012 yanue.net\r\n * @link  http://yanue.net/archives/174.html\r\n * @version 1.1\r\n * 创建时间： 2012年5月21日\r\n\r\n更新时间： 2012年10月6日\r\n更新说明： 1.去除sql导入的时候排除sql文件里面的注释\'-- \' 从而解决sql中单双引号不能导入\r\n2.单行读取后的sql直接执行，避免重新将sql语句组合到数组中再从数组中读取导入sql，提高效率\r\n\r\n * 说明：分卷文件是以_v1.sql为结尾(20120522021241_all_v1.sql)\r\n * 功能：实现mysql数据库分卷备份,选择表进行备份,实现单个sql文件及分卷sql导入\r\n * 使用方法：\r\n *\r\n * ------1. 数据库备份（导出）------------------------------------------------------------\r\n//分别是主机，用户名，密码，数据库名，数据库编码\r\n$db = new DBManage ( \'localhost\', \'root\', \'root\', \'test\', \'utf8\' );\r\n// 参数：备份哪个表(可选),备份目录(可选，默认为backup),分卷大小(可选,默认2000，即2M)\r\n$db-&gt;backup ();\r\n * ------2. 数据库恢复（导入）------------------------------------------------------------\r\n//分别是主机，用户名，密码，数据库名，数据库编码\r\n$db = new DBManage ( \'localhost\', \'root\', \'root\', \'test\', \'utf8\' );\r\n//参数：sql文件\r\n$db-&gt;restore ( \'./backup/20120516211738_all_v1.sql\');\r\n *----------------------------------------------------------------------\r\n */\r\nclass DbManage {\r\n    var $db; // 数据库连接\r\n    var $database; // 所用数据库\r\n    var $sqldir; // 数据库备份文件夹\r\n    // 换行符\r\n    private $ds = \"n\";\r\n    // 存储SQL的变量\r\n    public $sqlContent = \"\";\r\n    // 每条sql语句的结尾符\r\n    public $sqlEnd = \";\";\r\n\r\n    /**\r\n     * 初始化\r\n     *\r\n     * @param string $host\r\n     * @param string $username\r\n     * @param string $password\r\n     * @param string $database\r\n     * @param string $charset\r\n     */\r\n    function __construct($host = \'localhost\', $username = \'root\', $password = \'\', $database = \'test\', $charset = \'utf8\') {\r\n        $this-&gt;host = $host;\r\n        $this-&gt;username = $username;\r\n        $this-&gt;password = $password;\r\n        $this-&gt;database = $database;\r\n        $this-&gt;charset = $charset;\r\n        set_time_limit(0);//无时间限制\r\n@ob_end_flush();\r\n        // 连接数据库\r\n        $this-&gt;db = @mysql_connect ( $this-&gt;host, $this-&gt;username, $this-&gt;password ) or die( \'&lt;p class=\"dbDebug\"&gt;&lt;span class=\"err\"&gt;Mysql Connect Error : &lt;/span&gt;\'.mysql_error().\'&lt;/p&gt;\');\r\n        // 选择使用哪个数据库\r\n        mysql_select_db ( $this-&gt;database, $this-&gt;db ) or die(\'&lt;p class=\"dbDebug\"&gt;&lt;span class=\"err\"&gt;Mysql Connect Error:&lt;/span&gt;\'.mysql_error().\'&lt;/p&gt;\');\r\n        // 数据库编码方式\r\n        mysql_query ( \'SET NAMES \' . $this-&gt;charset, $this-&gt;db );\r\n\r\n    }\r\n\r\n    /*\r\n     * 新增查询数据库表\r\n     */\r\n    function getTables() {\r\n        $res = mysql_query ( \"SHOW TABLES\" );\r\n        $tables = array ();\r\n        while ( $row = mysql_fetch_array ( $res ) ) {\r\n            $tables [] = $row [0];\r\n        }\r\n        return $tables;\r\n    }\r\n\r\n    /*\r\n     *\r\n     * ------------------------------------------数据库备份start----------------------------------------------------------\r\n     */\r\n\r\n    /**\r\n     * 数据库备份\r\n     * 参数：备份哪个表(可选),备份目录(可选，默认为backup),分卷大小(可选,默认2000，即2M)\r\n     *\r\n     * @param $string $dir\r\n     * @param int $size\r\n     * @param $string $tablename\r\n     */\r\n    function backup($tablename = \'\', $dir, $size) {\r\n        $dir = $dir ? $dir : \'./backup/\';\r\n        // 创建目录\r\n        if (! is_dir ( $dir )) {\r\n            mkdir ( $dir, 0777, true ) or die ( \'创建文件夹失败\' );\r\n        }\r\n        $size = $size ? $size : 2048;\r\n        $sql = \'\';\r\n        // 只备份某个表\r\n        if (! empty ( $tablename )) {\r\n            if(@mysql_num_rows(mysql_query(\"SHOW TABLES LIKE \'\".$tablename.\"\'\")) == 1) {\r\n             } else {\r\n                $this-&gt;_showMsg(\'表-&lt;b&gt;\' . $tablename .\'&lt;/b&gt;-不存在，请检查！\',true);\r\n                die();\r\n            }\r\n            $this-&gt;_showMsg(\'正在备份表 &lt;span class=\"imp\"&gt;\' . $tablename.\'&lt;/span&gt;\');\r\n            // 插入dump信息\r\n            $sql = $this-&gt;_retrieve ();\r\n            // 插入表结构信息\r\n            $sql .= $this-&gt;_insert_table_structure ( $tablename );\r\n            // 插入数据\r\n            $data = mysql_query ( \"select * from \" . $tablename );\r\n            // 文件名前面部分\r\n            $filename = date ( \'YmdHis\' ) . \"_\" . $tablename;\r\n            // 字段数量\r\n            $num_fields = mysql_num_fields ( $data );\r\n            // 第几分卷\r\n            $p = 1;\r\n            // 循环每条记录\r\n            while ( $record = mysql_fetch_array ( $data ) ) {\r\n                // 单条记录\r\n                $sql .= $this-&gt;_insert_record ( $tablename, $num_fields, $record );\r\n                // 如果大于分卷大小，则写入文件\r\n                if (strlen ( $sql ) &gt;= $size * 1024) {\r\n                    $file = $filename . \"_v\" . $p . \".sql\";\r\n                    if ($this-&gt;_write_file ( $sql, $file, $dir )) {\r\n                        $this-&gt;_showMsg(\"表-&lt;b&gt;\" . $tablename . \"&lt;/b&gt;-卷-&lt;b&gt;\" . $p . \"&lt;/b&gt;-数据备份完成,备份文件 [ &lt;span class=\'imp\'&gt;\" .$dir . $file .\"&lt;/span&gt; ]\");\r\n                    } else {\r\n                        $this-&gt;_showMsg(\"备份表 -&lt;b&gt;\" . $tablename . \"&lt;/b&gt;- 失败\",true);\r\n                        return false;\r\n                    }\r\n                    // 下一个分卷\r\n                    $p ++;\r\n                    // 重置$sql变量为空，重新计算该变量大小\r\n                    $sql = \"\";\r\n                }\r\n            }\r\n            // 及时清除数据\r\n            unset($data,$record);\r\n            // sql大小不够分卷大小\r\n            if ($sql != \"\") {\r\n                $filename .= \"_v\" . $p . \".sql\";\r\n                if ($this-&gt;_write_file ( $sql, $filename, $dir )) {\r\n                    $this-&gt;_showMsg( \"表-&lt;b&gt;\" . $tablename . \"&lt;/b&gt;-卷-&lt;b&gt;\" . $p . \"&lt;/b&gt;-数据备份完成,备份文件 [ &lt;span class=\'imp\'&gt;\" .$dir . $filename .\"&lt;/span&gt; ]\");\r\n                } else {\r\n                    $this-&gt;_showMsg(\"备份卷-&lt;b&gt;\" . $p . \"&lt;/b&gt;-失败&lt;br /&gt;\");\r\n                    return false;\r\n                }\r\n            }\r\n            $this-&gt;_showMsg(\"恭喜您! &lt;span class=\'imp\'&gt;备份成功&lt;/span&gt;\");\r\n        } else {\r\n            $this-&gt;_showMsg(\'正在备份\');\r\n            // 备份全部表\r\n            if ($tables = mysql_query ( \"show table status from \" . $this-&gt;database )) {\r\n                $this-&gt;_showMsg(\"读取数据库结构成功！\");\r\n            } else {\r\n                $this-&gt;_showMsg(\"读取数据库结构失败！\");\r\n                exit ( 0 );\r\n            }\r\n            // 插入dump信息\r\n            $sql .= $this-&gt;_retrieve ();\r\n            // 文件名前面部分\r\n            $filename = date ( \'YmdHis\' ) . \"_all\";\r\n            // 查出所有表\r\n            $tables = mysql_query ( \'SHOW TABLES\' );\r\n            // 第几分卷\r\n            $p = 1;\r\n            // 循环所有表\r\n            while ( $table = mysql_fetch_array ( $tables ) ) {\r\n                // 获取表名\r\n                $tablename = $table [0];\r\n                // 获取表结构\r\n                $sql .= $this-&gt;_insert_table_structure ( $tablename );\r\n                $data = mysql_query ( \"select * from \" . $tablename );\r\n                $num_fields = mysql_num_fields ( $data );\r\n\r\n                // 循环每条记录\r\n                while ( $record = mysql_fetch_array ( $data ) ) {\r\n                    // 单条记录\r\n                    $sql .= $this-&gt;_insert_record ( $tablename, $num_fields, $record );\r\n                    // 如果大于分卷大小，则写入文件\r\n                    if (strlen ( $sql ) &gt;= $size * 1000) {\r\n\r\n                        $file = $filename . \"_v\" . $p . \".sql\";\r\n                        // 写入文件\r\n                        if ($this-&gt;_write_file ( $sql, $file, $dir )) {\r\n                            $this-&gt;_showMsg(\"-卷-&lt;b&gt;\" . $p . \"&lt;/b&gt;-数据备份完成,备份文件 [ &lt;span class=\'imp\'&gt;\".$dir.$file.\"&lt;/span&gt; ]\");\r\n                        } else {\r\n                            $this-&gt;_showMsg(\"卷-&lt;b&gt;\" . $p . \"&lt;/b&gt;-备份失败!\",true);\r\n                            return false;\r\n                        }\r\n                        // 下一个分卷\r\n                        $p ++;\r\n                        // 重置$sql变量为空，重新计算该变量大小\r\n                        $sql = \"\";\r\n                    }\r\n                }\r\n            }\r\n            // sql大小不够分卷大小\r\n            if ($sql != \"\") {\r\n                $filename .= \"_v\" . $p . \".sql\";\r\n                if ($this-&gt;_write_file ( $sql, $filename, $dir )) {\r\n                    $this-&gt;_showMsg(\"-卷-&lt;b&gt;\" . $p . \"&lt;/b&gt;-数据备份完成,备份文件 [ &lt;span class=\'imp\'&gt;\".$dir.$filename.\"&lt;/span&gt; ]\");\r\n                } else {\r\n                    $this-&gt;_showMsg(\"卷-&lt;b&gt;\" . $p . \"&lt;/b&gt;-备份失败\",true);\r\n                    return false;\r\n                }\r\n            }\r\n            $this-&gt;_showMsg(\"恭喜您! &lt;span class=\'imp\'&gt;备份成功&lt;/span&gt;\");\r\n        }\r\n    }\r\n\r\n    //  及时输出信息\r\n    private function _showMsg($msg,$err=false){\r\n        $err = $err ? \"&lt;span class=\'err\'&gt;ERROR:&lt;/span&gt;\" : \'\' ;\r\n        echo \"&lt;p class=\'dbDebug\'&gt;\".$err . $msg.\"&lt;/p&gt;\";\r\n        flush();\r\n\r\n    }\r\n\r\n    /**\r\n     * 插入数据库备份基础信息\r\n     *\r\n     * @return string\r\n     */\r\n    private function _retrieve() {\r\n        $value = \'\';\r\n        $value .= \'--\' . $this-&gt;ds;\r\n        $value .= \'-- MySQL database dump\' . $this-&gt;ds;\r\n        $value .= \'-- Created by DbManage class, Power By yanue. \' . $this-&gt;ds;\r\n        $value .= \'-- http://yanue.net \' . $this-&gt;ds;\r\n        $value .= \'--\' . $this-&gt;ds;\r\n        $value .= \'-- 主机: \' . $this-&gt;host . $this-&gt;ds;\r\n        $value .= \'-- 生成日期: \' . date ( \'Y\' ) . \' 年  \' . date ( \'m\' ) . \' 月 \' . date ( \'d\' ) . \' 日 \' . date ( \'H:i\' ) . $this-&gt;ds;\r\n        $value .= \'-- MySQL版本: \' . mysql_get_server_info () . $this-&gt;ds;\r\n        $value .= \'-- PHP 版本: \' . phpversion () . $this-&gt;ds;\r\n        $value .= $this-&gt;ds;\r\n        $value .= \'--\' . $this-&gt;ds;\r\n        $value .= \'-- 数据库: `\' . $this-&gt;database . \'`\' . $this-&gt;ds;\r\n        $value .= \'--\' . $this-&gt;ds . $this-&gt;ds;\r\n        $value .= \'-- -------------------------------------------------------\';\r\n        $value .= $this-&gt;ds . $this-&gt;ds;\r\n        return $value;\r\n    }\r\n\r\n    /**\r\n     * 插入表结构\r\n     *\r\n     * @param unknown_type $table\r\n     * @return string\r\n     */\r\n    private function _insert_table_structure($table) {\r\n        $sql = \'\';\r\n        $sql .= \"--\" . $this-&gt;ds;\r\n        $sql .= \"-- 表的结构\" . $table . $this-&gt;ds;\r\n        $sql .= \"--\" . $this-&gt;ds . $this-&gt;ds;\r\n\r\n        // 如果存在则删除表\r\n        $sql .= \"DROP TABLE IF EXISTS `\" . $table . \'`\' . $this-&gt;sqlEnd . $this-&gt;ds;\r\n        // 获取详细表信息\r\n        $res = mysql_query ( \'SHOW CREATE TABLE `\' . $table . \'`\' );\r\n        $row = mysql_fetch_array ( $res );\r\n        $sql .= $row [1];\r\n        $sql .= $this-&gt;sqlEnd . $this-&gt;ds;\r\n        // 加上\r\n        $sql .= $this-&gt;ds;\r\n        $sql .= \"--\" . $this-&gt;ds;\r\n        $sql .= \"-- 转存表中的数据 \" . $table . $this-&gt;ds;\r\n        $sql .= \"--\" . $this-&gt;ds;\r\n        $sql .= $this-&gt;ds;\r\n        return $sql;\r\n    }\r\n\r\n    /**\r\n     * 插入单条记录\r\n     *\r\n     * @param string $table\r\n     * @param int $num_fields\r\n     * @param array $record\r\n     * @return string\r\n     */\r\n    private function _insert_record($table, $num_fields, $record) {\r\n        // sql字段逗号分割\r\n        $insert = \'\';\r\n        $comma = \"\";\r\n        $insert .= \"INSERT INTO `\" . $table . \"` VALUES(\";\r\n        // 循环每个子段下面的内容\r\n        for($i = 0; $i &lt; $num_fields; $i ++) {\r\n            $insert .= ($comma . \"\'\" . mysql_escape_string ( $record [$i] ) . \"\'\");\r\n            $comma = \",\";\r\n        }\r\n        $insert .= \");\" . $this-&gt;ds;\r\n        return $insert;\r\n    }\r\n\r\n    /**\r\n     * 写入文件\r\n     *\r\n     * @param string $sql\r\n     * @param string $filename\r\n     * @param string $dir\r\n     * @return boolean\r\n     */\r\n    private function _write_file($sql, $filename, $dir) {\r\n        $dir = $dir ? $dir : \'./backup/\';\r\n        // 创建目录\r\n        if (! is_dir ( $dir )) {\r\n            mkdir ( $dir, 0777, true );\r\n        }\r\n        $re = true;\r\n        if (! @$fp = fopen ( $dir . $filename, \"w+\" )) {\r\n            $re = false;\r\n            $this-&gt;_showMsg(\"打开sql文件失败！\",true);\r\n        }\r\n        if (! @fwrite ( $fp, $sql )) {\r\n            $re = false;\r\n            $this-&gt;_showMsg(\"写入sql文件失败，请文件是否可写\",true);\r\n        }\r\n        if (! @fclose ( $fp )) {\r\n            $re = false;\r\n            $this-&gt;_showMsg(\"关闭sql文件失败！\",true);\r\n        }\r\n        return $re;\r\n    }\r\n\r\n    /*\r\n     *\r\n     * -------------------------------上：数据库导出-----------分割线----------下：数据库导入--------------------------------\r\n     */\r\n\r\n    /**\r\n     * 导入备份数据\r\n     * 说明：分卷文件格式20120516211738_all_v1.sql\r\n     * 参数：文件路径(必填)\r\n     *\r\n     * @param string $sqlfile\r\n     */\r\n    function restore($sqlfile) {\r\n        // 检测文件是否存在\r\n        if (! file_exists ( $sqlfile )) {\r\n            $this-&gt;_showMsg(\"sql文件不存在！请检查\",true);\r\n            exit ();\r\n        }\r\n        $this-&gt;lock ( $this-&gt;database );\r\n        // 获取数据库存储位置\r\n        $sqlpath = pathinfo ( $sqlfile );\r\n        $this-&gt;sqldir = $sqlpath [\'dirname\'];\r\n        // 检测是否包含分卷，将类似20120516211738_all_v1.sql从_v分开,有则说明有分卷\r\n        $volume = explode ( \"_v\", $sqlfile );\r\n        $volume_path = $volume [0];\r\n        $this-&gt;_showMsg(\"请勿刷新及关闭浏览器以防止程序被中止，如有不慎！将导致数据库结构受损\");\r\n        $this-&gt;_showMsg(\"正在导入备份数据，请稍等！\");\r\n        if (empty ( $volume [1] )) {\r\n            $this-&gt;_showMsg ( \"正在导入sql：&lt;span class=\'imp\'&gt;\" . $sqlfile . \'&lt;/span&gt;\');\r\n            // 没有分卷\r\n            if ($this-&gt;_import ( $sqlfile )) {\r\n                $this-&gt;_showMsg( \"数据库导入成功！\");\r\n            } else {\r\n                 $this-&gt;_showMsg(\'数据库导入失败！\',true);\r\n                exit ();\r\n            }\r\n        } else {\r\n            // 存在分卷，则获取当前是第几分卷，循环执行余下分卷\r\n            $volume_id = explode ( \".sq\", $volume [1] );\r\n            // 当前分卷为$volume_id\r\n            $volume_id = intval ( $volume_id [0] );\r\n            while ( $volume_id ) {\r\n                $tmpfile = $volume_path . \"_v\" . $volume_id . \".sql\";\r\n                // 存在其他分卷，继续执行\r\n                if (file_exists ( $tmpfile )) {\r\n                    // 执行导入方法\r\n                    $this-&gt;msg .= \"正在导入分卷 $volume_id ：&lt;span style=\'color:#f00;\'&gt;\" . $tmpfile . \'&lt;/span&gt;&lt;br /&gt;\';\r\n                    if ($this-&gt;_import ( $tmpfile )) {\r\n\r\n                    } else {\r\n                        $volume_id = $volume_id ? $volume_id :1;\r\n                        exit ( \"导入分卷：&lt;span style=\'color:#f00;\'&gt;\" . $tmpfile . \'&lt;/span&gt;失败！可能是数据库结构已损坏！请尝试从分卷1开始导入\' );\r\n                    }\r\n                } else {\r\n                    $this-&gt;msg .= \"此分卷备份全部导入成功！&lt;br /&gt;\";\r\n                    return;\r\n                }\r\n                $volume_id ++;\r\n            }\r\n        }if (empty ( $volume [1] )) {\r\n            $this-&gt;_showMsg ( \"正在导入sql：&lt;span class=\'imp\'&gt;\" . $sqlfile . \'&lt;/span&gt;\');\r\n            // 没有分卷\r\n            if ($this-&gt;_import ( $sqlfile )) {\r\n                $this-&gt;_showMsg( \"数据库导入成功！\");\r\n            } else {\r\n                 $this-&gt;_showMsg(\'数据库导入失败！\',true);\r\n                exit ();\r\n            }\r\n        } else {\r\n            // 存在分卷，则获取当前是第几分卷，循环执行余下分卷\r\n            $volume_id = explode ( \".sq\", $volume [1] );\r\n            // 当前分卷为$volume_id\r\n            $volume_id = intval ( $volume_id [0] );\r\n            while ( $volume_id ) {\r\n                $tmpfile = $volume_path . \"_v\" . $volume_id . \".sql\";\r\n                // 存在其他分卷，继续执行\r\n                if (file_exists ( $tmpfile )) {\r\n                    // 执行导入方法\r\n                    $this-&gt;msg .= \"正在导入分卷 $volume_id ：&lt;span style=\'color:#f00;\'&gt;\" . $tmpfile . \'&lt;/span&gt;&lt;br /&gt;\';\r\n                    if ($this-&gt;_import ( $tmpfile )) {\r\n\r\n                    } else {\r\n                        $volume_id = $volume_id ? $volume_id :1;\r\n                        exit ( \"导入分卷：&lt;span style=\'color:#f00;\'&gt;\" . $tmpfile . \'&lt;/span&gt;失败！可能是数据库结构已损坏！请尝试从分卷1开始导入\' );\r\n                    }\r\n                } else {\r\n                    $this-&gt;msg .= \"此分卷备份全部导入成功！&lt;br /&gt;\";\r\n                    return;\r\n                }\r\n                $volume_id ++;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 将sql导入到数据库（普通导入）\r\n     *\r\n     * @param string $sqlfile\r\n     * @return boolean\r\n     */\r\n    private function _import($sqlfile) {\r\n        // sql文件包含的sql语句数组\r\n        $sqls = array ();\r\n        $f = fopen ( $sqlfile, \"rb\" );\r\n        // 创建表缓冲变量\r\n        $create_table = \'\';\r\n        while ( ! feof ( $f ) ) {\r\n            // 读取每一行sql\r\n            $line = fgets ( $f );\r\n            // 这一步为了将创建表合成完整的sql语句\r\n            // 如果结尾没有包含\';\'(即为一个完整的sql语句，这里是插入语句)，并且不包含\'ENGINE=\'(即创建表的最后一句)\r\n            if (! preg_match ( \'/;/\', $line ) || preg_match ( \'/ENGINE=/\', $line )) {\r\n                // 将本次sql语句与创建表sql连接存起来\r\n                $create_table .= $line;\r\n                // 如果包含了创建表的最后一句\r\n                if (preg_match ( \'/ENGINE=/\', $create_table)) {\r\n                    //执行sql语句创建表\r\n                    $this-&gt;_insert_into($create_table);\r\n                    // 清空当前，准备下一个表的创建\r\n                    $create_table = \'\';\r\n                }\r\n                // 跳过本次\r\n                continue;\r\n            }\r\n            //执行sql语句\r\n            $this-&gt;_insert_into($line);\r\n        }\r\n        fclose ( $f );\r\n        return true;\r\n    }\r\n\r\n    //插入单条sql语句\r\n    private function _insert_into($sql){\r\n        if (! mysql_query ( trim ( $sql ) )) {\r\n            $this-&gt;msg .= mysql_error ();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * -------------------------------数据库导入end---------------------------------\r\n     */\r\n\r\n    // 关闭数据库连接\r\n    private function close() {\r\n        mysql_close ( $this-&gt;db );\r\n    }\r\n\r\n    // 锁定数据库，以免备份或导入时出错\r\n    private function lock($tablename, $op = \"WRITE\") {\r\n        if (mysql_query ( \"lock tables \" . $tablename . \" \" . $op ))\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    // 解锁\r\n    private function unlock() {\r\n        if (mysql_query ( \"unlock tables\" ))\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    // 析构\r\n    function __destruct() {\r\n        if($this-&gt;db){\r\n            mysql_query ( \"unlock tables\", $this-&gt;db );\r\n            mysql_close ( $this-&gt;db );\r\n        }\r\n    }\r\n\r\n}</pre>','(原创)php数据库导入导出类，mysql备份恢复分卷处理，调用简单','','publish','open','open','','%e5%8e%9f%e5%88%9bphp%e6%95%b0%e6%8d%ae%e5%ba%93%e5%af%bc%e5%85%a5%e5%af%bc%e5%87%ba%e7%b1%bb%ef%bc%8cmysql%e5%a4%87%e4%bb%bd%e6%81%a2%e5%a4%8d%e5%88%86%e5%8d%b7%e5%a4%84%e7%90%86%ef%bc%8c%e8%b0%83','','','2013-07-26 04:46:05','2013-07-26 12:46:05','','0','http://yanue.net/?p=174','0','post','','9');
INSERT INTO `wp_posts` VALUES('142','1','2012-05-09 21:20:01','2012-05-10 05:20:01','.htc文件是IE内核支持Web行为后用来描述此类行为的脚本文件。它们定义了一套方法和属性，程序员几乎可以把这些方法和属性应用到HTML页面上的任何元素上去。Web 行为是非常伟大的因为它们允许程序员把自定义的功能“连接”到现有的元素和控件，而不是必须让用户下载二进制文件（例如ActiveX 控件）来完成这个功能。\r\n\r\n演示：<a href=\"http://www.yanue.net/demo/css3/ie-css3.html\">http://www.yanue.net/demo/css3/ie-css3.html</a>\r\n\r\n下载：<a title=\"http://www.yanue.net/demo/css3/ie-css3.rar\" href=\"http://www.yanue.net/demo/css3/ie-css3.rar\">http://www.yanue.net/demo/css3/ie-css3.rar</a>\r\n\r\n代码：\r\n<pre class=\"lang_php decode_true\">&lt;!DOCTYPE HTML&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n	&lt;title&gt;让IE浏览器支持CSS3圆角,阴影属性&lt;/title&gt;\r\n  &lt;meta name=&quot;author&quot; content=&quot;yanue&quot; /&gt;\r\n  &lt;meta name=&quot;copyright&quot; content=&quot;www.yanue.net&quot; /&gt;\r\n	&lt;style type=&quot;text/css&quot;&gt;\r\n	.test {\r\n			width:560px;\r\n			height:400px;\r\n	  	background-color: #ccc;\r\n			padding:10px 8px 6px; \r\n			border: 2px solid #C0C0C0; \r\n			margin-bottom:10px;\r\n	  	border-radius: 10px;\r\n	  	behavior: url(ie-css3.htc);\r\n	}\r\n	&lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n	&lt;div class=&quot;test&quot;&gt;\r\n		请到ie下观看效果\r\n		这个页面是用以测试主机是否有正确的content-type。\r\n		如果有圆角和阴影，说明支持htc\r\n		说明详解：&lt;a href=&quot;http://www.yanue.net/archives/142.html&quot;&gt;http://www.yanue.net/archives/142.html&lt;/a&gt;\r\n	&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\nWebkit内核的浏览器支持“-webkit-border-radius: 10px;”属性（10px是圆角半径），可以直接解析出圆角；Firefox浏览器支持“-moz-border-radius: 10px;”属性，也是可以直接解析出圆角；IE系浏览器则需要加上“border-radius: 15px;”的属性。\r\n\r\n<strong>注意</strong>：\r\n\r\n1、behavior的url里一定要填写ie-css3.htc的绝对路径，因为 IE浏览器找该文件是相对当前html文件路径来找的，所以对于Wordpress等动态程序生成的页面一定要填写绝对路径。\r\n\r\n2、一定要有定位属性：position:relative;\r\n\r\n3、因为在IE浏览器下这些CSS3效果的实现是要借助于VML，由VML绘制圆角或是投影效果，所以还需要一个z-index属性。z-index属性最好设置得比较大，如2。\r\n\r\n4、如果在IE浏览器下某些模块无法用此渲染，可以试着绝对定位相应的层，即加上“ width: 400px; height:400px;”属性。\r\n\r\n5、radius属性的10px是圆角半径，还可以给两个值如“border-radius: 10px 5px;”，这样则左上角与右下角半径为10px，右上角与左下角半径为5px。也可以赋4个值，为“上  右  下  左”。','ie-css3.htc让IE浏览器支持CSS3圆角,阴影属性','','publish','open','open','','ie-css3-htc%e8%ae%a9ie%e6%b5%8f%e8%a7%88%e5%99%a8%e6%94%af%e6%8c%81css3%e5%9c%86%e8%a7%92%e9%98%b4%e5%bd%b1%e5%b1%9e%e6%80%a7','','','2012-06-17 06:03:54','2012-06-17 14:03:54','','0','http://yanue.net/?p=142','0','post','','0');
INSERT INTO `wp_posts` VALUES('169','1','2012-05-18 00:27:08','2012-05-18 08:27:08','有时需要把整个字段的结构信息查询出来，于是我们可以通过\r\n<pre class=\"lang_php decode_true\">SHOW FULL COLUMNS FROM tbl_name [FROM db_name]//列出字段及详情</pre>\r\n然后通过 mysql_fetch_array() 函数就可以了，但是单独这样的话，只会显示第一个字段的详细信息，我们需要统计出字段数量，然后分别循环出来（一开始我就这样，一直找不到原因，只能查出第一个字段，灰常郁闷！），下面是实现代码：\r\n<pre class=\"lang_php decode_true\">// 连接数据库\r\n$db = mysql_connect ( &#039;localhost&#039;, &#039;root&#039;, &#039;root&#039; ) or die ( &quot;数据库连接失败.&quot; );\r\n// 选择使用哪个数据库,这里是 test\r\nmysql_select_db ( &#039;test&#039;, $db ) or die ( &quot;无法打开数据库&quot; );\r\n// 数据库编码方式\r\nmysql_query ( &#039;SET NAMES utf8&#039; );\r\n// 选择表名\r\n$table = &#039;test&#039;;\r\n// 查找所有字段信息\r\n$sqlColumns = mysql_query ( &quot;SHOW FULL COLUMNS FROM $table&quot;, $db ) or die ( &quot;错误或该表不存在&quot; );\r\n// 统计字段总数\r\n$columnNum = mysql_num_rows ( $sqlColumns );\r\n$i = 0;\r\n// 循环每个字段\r\nwhile ( $i &lt; $columnNum ) {\r\n	// 获取每个字段信息信息\r\n	$colname = mysql_fetch_array ( $sqlColumns );\r\n	// 答应详细字段信息\r\n	print_r ( $colname );\r\n	$i ++;\r\n}</pre>\r\n下面是相关的sql语句\r\n<pre class=\"lang_php decode_true\">SHOW DATABASES                                //列出 MySQL Server 数据库。\r\nSHOW TABLES [FROM db_name]                    //列出数据库数据表。\r\nSHOW CREATE TABLES tbl_name                    //导出数据表结构。\r\nSHOW TABLE STATUS [FROM db_name]              //列出数据表及表状态信息。\r\nSHOW COLUMNS FROM tbl_name [FROM db_name]     //列出资料表字段\r\nSHOW FIELDS FROM tbl_name [FROM db_name]，DESCRIBE tbl_name [col_name]。\r\nSHOW FULL COLUMNS FROM tbl_name [FROM db_name]//列出字段及详情\r\nSHOW FULL FIELDS FROM tbl_name [FROM db_name] //列出字段完整属性\r\nSHOW INDEX FROM tbl_name [FROM db_name]       //列出表索引。\r\nSHOW STATUS                                  //列出 DB Server 状态。\r\nSHOW VARIABLES                               //列出 MySQL 系统环境变量。\r\nSHOW PROCESSLIST                             //列出执行命令。\r\nSHOW GRANTS FOR user                         //列出某用户权限</pre>\r\n&nbsp;','php查询mysql表中所有字段详细信息','','publish','open','open','','php%e6%9f%a5%e8%af%a2mysql%e8%a1%a8%e4%b8%ad%e6%89%80%e6%9c%89%e5%ad%97%e6%ae%b5%e8%af%a6%e7%bb%86%e4%bf%a1%e6%81%af','','','2012-06-17 06:41:42','2012-06-17 14:41:42','','0','http://yanue.net/?p=169','0','post','','0');
INSERT INTO `wp_posts` VALUES('207','1','2012-06-09 05:54:00','2012-06-09 13:54:00','这是运用google map api v3开发的地图应用，使用谷歌地图地址解析服务，主要实现经纬度和地名之间相互解析功能，同时实现了批量解析。\r\n\r\n<strong>实现功能：</strong>\r\n\r\n1. 经纬度查询(通常指的是查询地名的经纬度，最后获取的是经纬度)\r\n2. 经纬度查找地名(和上面相反，指的是使用经纬度去查找地名，最后获取的是地名)\r\n3. 批量解析功能(不必要为很多数据而烦恼，你可以一次性进行多个地名或者经纬度进行解析)\r\n4. 地图跟进显示(每一次解析，谷歌地图位置都会显示当前解析最佳地理位置)\r\n5. 解析结果清晰(解析后的结果会仔细显示在结果区域，如有解析错误，则显示错误原因)\r\n\r\n<strong>在线地址：</strong>\r\n\r\n<span style=\"color: #ff0000;\"><a href=\"http://map.yanue.net/geo.html\"><span style=\"color: #ff0000;\">http://</span></a><a href=\"http://map.yanue.net/geo.html\"><span style=\"color: #ff0000;\">map</span></a>.<a href=\"http://map.yanue.net/geo.html\"><span style=\"color: #ff0000;\">www.yanue.net/</span></a><a href=\"http://map.yanue.net/geo.html\"><span style=\"color: #ff0000;\">geo.html</span></a></span>\r\n\r\n<strong>使用说明：</strong>\r\n\r\n1.受当地法律限制与实际GPS经纬度略有偏差\r\n2.建议使用IE8以上或使用Google Chrome或Firefox浏览器。\r\n3.导入任务后，每秒查询2次(可以暂停操作)。\r\n4.由于‘墙’的原因，地图可能会加载很满，如果长时间没有反应，请重新载入\r\n5.地名查询经纬度时，每个<span style=\"color: #ff0000;\">地名</span>按行输入,并点击‘解析地名’按钮即可\r\n6.经纬度查询地名时，请以\"<span style=\"color: #ff0000;\">纬度,经度</span>\"的格式<span style=\"color: #ff0000;\">按行输入</span>,并点击‘解析经纬度’按钮即可\r\n\r\n以上是详细介绍，另外，这个版本只能返回最佳的匹配地名或者经纬度。如果你需要解析出来的数据进行精确处理。请详见我的另外一篇文章：\r\n\r\n<a href=\"http://www.yanue.net/archives/32.html\">http://www.yanue.net/archives/32.html</a>\r\n\r\n代码中主要是使用谷歌地图google.maps.Geocoder类进行地名或经纬度处理，该类具体使用方法见我的另我一篇文章\r\n\r\n<span style=\"color: #993300;\"><a title=\"谷歌地图地理解析和反解析geocode.geocoder详解\" href=\"http://www.yanue.net/archives/217.html\"><span style=\"color: #993300;\">http://www.yanue.net/archives/217.html</span></a></span>\r\n\r\n最后我贴出实现代码，基本上都很详细的说明，非常简单，具体不明白可以联系我qq 642399406，欢迎大家拍砖\r\n\r\n<strong>下载地址：</strong><span style=\"color: #993300;\"><a title=\"Google map地理（批量）解析反解析源码\" href=\"http://map.yanue.net/geoBatch.rar\"><span style=\"color: #993300;\">http://map.yanue.net/geoBatch.rar</span></a></span>\r\n\r\n<strong>实现代码：</strong>(你可以复制到本地试试)\r\n<pre class=\"lang_php decode_true\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;meta charset=&quot;UTF-8&quot;&gt;\r\n&lt;script src=&quot;http://maps.google.com/maps/api/js?sensor=false&amp;libraries=places&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n&lt;title&gt;google map 经纬度批量在线查询工具 google map查询地名返回经纬度&lt;/title&gt;\r\n&lt;meta name=&quot;author&quot; content=&quot;yanue&quot; /&gt;\r\n&lt;meta name=&quot;copyright&quot; content=&quot;powered by yanue&quot; /&gt;\r\n&lt;link rel=&quot;site&quot; href=&quot;http://www.yanue.net/map&quot; /&gt;\r\n&lt;script type=&quot;text/javascript&quot;&gt;\r\n	window.onload = function() {\r\n		var geo = new  geoEach();\r\n		var toLatLngBtn = document.getElementById(&#039;toLatLngBtn&#039;);\r\n		//批量解析地名到经纬度\r\n		toLatLngBtn.onclick = function(){\r\n			var area = document.getElementById(&#039;addrs&#039;).value;\r\n		  area=area.split(&#039;\\n&#039;);\r\n			var sh;\r\n			var i = 0;\r\n			sh = window.setInterval(function() {\r\n				if (i &lt; area.length) {\r\n					geo.toLatLng(area[i]);\r\n			} else {\r\n				window.clearInterval(sh);\r\n			}\r\n			i++;\r\n			}, 500);\r\n		}\r\n		//批量解析经纬度到地名\r\n		var toAddressBtn = document.getElementById(&#039;toAddressBtn&#039;);\r\n		toAddressBtn.onclick = function(){\r\n			var latLngs = document.getElementById(&#039;latLngs&#039;).value;\r\n		  latLngs = latLngs.split(&#039;\\n&#039;);\r\n			var sh;\r\n			var i = 0;\r\n			var sh = window.setInterval(function() {\r\n				if (i &lt; latLngs.length) {\r\n					geo.toAddress(latLngs[i]);\r\n				} else {\r\n					window.clearInterval(sh);\r\n				}\r\n				i++;\r\n			}, 500);\r\n		}\r\n	}\r\n	/*\r\n	* 函数名：  geoEach()\r\n	* 功能：地名解析成经纬度,经纬度解析成地名\r\n	* 作者：yanue\r\n	* 使用方法：\r\n	  //初始化\r\n	  var geo = new  geoEach();\r\n	  // 解析地名 传入值地名 结果：纬度lat,经度lng\r\n	  geo.toLatLng(地名);\r\n	  // 解析经纬度 传入值（纬度lat,经度lng）：26.57, 106.72 结果是地名\r\n	  geo.toAddress(经纬度字符串);\r\n	*/\r\n	function  geoEach() {\r\n		//初始化地图\r\n		 geoEach.map = new google.maps.Map(document.getElementById(&quot;map_canvas&quot;),{\r\n					center : new google.maps.LatLng(26.57, 106.72),\r\n					zoom : 8,\r\n					mapTypeId : google.maps.MapTypeId.ROADMAP\r\n		});\r\n		//添加一个marker\r\n		 geoEach.marker = new google.maps.Marker({map:  geoEach.map,position: new google.maps.LatLng(26.57, 106.72)});\r\n		//实例化Geocoder服务\r\n		 geoEach.geocoder = new google.maps.Geocoder();\r\n	}\r\n	 geoEach.address = null;//需要解析的地名\r\n	 geoEach.latLng = null;//需要解析的经纬度字符串\r\n	 geoEach.prototype = {\r\n		//解析地名\r\n		toLatLng : function(address) {\r\n			//接收\r\n			 geoEach.address = address;\r\n			//执行geocode解析地名\r\n			 geoEach.geocoder.geocode({\r\n				//传入地名\r\n				&#039;address&#039; :  geoEach.address\r\n			}, function(results, status) {\r\n				//create div\r\n				var newElement = window.document.createElement(&#039;p&#039;);\r\n				if (status == google.maps.GeocoderStatus.OK) {\r\n					//获取解析后的经纬度\r\n					var location = results[0].geometry.location;\r\n					//切换地图位置\r\n					 geoEach.map.setCenter(location);\r\n					 geoEach.marker.setPosition(location);\r\n\r\n					// location is like (26.647449, 106.63014299999998) so we should clear &#039;(&#039; in zhe start of this string and &#039;)&#039; in end;\r\n					var latLng = location.toString().substr(1,location.toString().indexOf(&#039;)&#039;) - 1);\r\n					// insert innerHTML\r\n					newElement.innerHTML =  geoEach.address + &quot;：&quot; + latLng;\r\n				} else {\r\n					// insert error innerHTML\r\n					newElement.innerHTML =  geoEach.address + &quot;：error &quot; + status;\r\n				}\r\n				//append child\r\n				document.getElementById(&#039;showResults&#039;).appendChild(newElement);\r\n			});\r\n		},\r\n		//解析经纬度\r\n		toAddress:function(latLng){\r\n			 geoEach.latLng = latLng.toString();\r\n			//去除中间所有空格，将中文&#039;，&#039;号替换成英文&#039;,&#039;并按&#039;,&#039;分割\r\n			 geoEach.latLng =  geoEach.latLng.replace(/[(^\\s+)(\\s+$)]/g,&quot;&quot;).replace(&#039;，&#039;,&#039;,&#039;).split(&#039;,&#039;);\r\n			//第一个值为纬度并转化为float类型\r\n			var lat = parseFloat( geoEach.latLng[0]);\r\n			//第二个值为经度并转化为float类型\r\n			var lng = parseFloat( geoEach.latLng[1]);\r\n			//执行geocode解析经纬度\r\n		   geoEach.geocoder.geocode({\r\n		  	//传入经纬度\r\n				&#039;location&#039; : new google.maps.LatLng(lat, lng)\r\n			},function(results, status){\r\n				//create div to show result\r\n				var newElement = window.document.createElement(&#039;p&#039;)\r\n			  if (status == google.maps.GeocoderStatus.OK) {\r\n			  	//获取解析后的经纬度\r\n					var location = results[0].geometry.location;\r\n					//切换地图位置\r\n					 geoEach.map.setCenter(location);\r\n					 geoEach.marker.setPosition(location);\r\n			  	//获取解析后的地址\r\n			  	var address = results[0].formatted_address;\r\n			    // insert result innerHTML\r\n					newElement.innerHTML =  geoEach.latLng + &quot;：&quot; + address;\r\n			  } else {\r\n					// insert error innerHTML\r\n					newElement.innerHTML =  geoEach.latLng + &quot;：error &quot; + status;\r\n				}\r\n				//append child\r\n			  document.getElementById(&#039;showResults&#039;).appendChild(newElement);\r\n			});\r\n		}\r\n	}\r\n&lt;/script&gt;\r\n&lt;style type=&quot;text/css&quot;&gt;\r\n *{\r\n  margin:0;\r\n  padding:0;\r\n }\r\n body{\r\n   font-size:12px;\r\n   line-height:160%;\r\n }\r\n #showResults{\r\n   float:left;\r\n }\r\n&lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n	&lt;h2&gt;批量解析地名&lt;/h2&gt;\r\n	请从下面输入你要解析的地名（每个地名隔一行）&lt;br /&gt;\r\n	输入完成后按‘批量解析’按钮&lt;br /&gt;\r\n	&lt;textarea name=&quot;&quot; id=&quot;addrs&quot; cols=&quot;50&quot; rows=&quot;5&quot;&gt;贵阳&lt;/textarea&gt;\r\n	&lt;button id=&#039;toLatLngBtn&#039;&gt;解析地名&lt;/button&gt;\r\n	&lt;br /&gt;\r\n	请从下面输入你要解析的经纬度（每个经纬度隔一行）格式（纬度lat,经度lng）&lt;br /&gt;\r\n	输入完成后按‘批量解析’按钮&lt;br /&gt;\r\n	&lt;h2&gt;批量解析经纬度&lt;/h2&gt;\r\n	&lt;textarea name=&quot;&quot; id=&quot;latLngs&quot; cols=&quot;30&quot; rows=&quot;5&quot;&gt;26.57, 106.72&lt;/textarea&gt;\r\n	&lt;button id=&#039;toAddressBtn&#039;&gt;解析经纬度&lt;/button&gt;\r\n	&lt;div id=&quot;map_canvas&quot; style=&#039;width: 300px; height: 200px;&#039;&gt;&lt;/div&gt;\r\n	&lt;div id=&quot;showResults&quot;&gt;&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n&nbsp;\r\n\r\n&nbsp;','(原创)经纬度查询,经纬度(批量)查找地名,地名(批量)查询经纬度,google map地理解析geocode.geocoder实例','','publish','open','open','','%e5%8e%9f%e5%88%9b%e7%bb%8f%e7%ba%ac%e5%ba%a6%e6%9f%a5%e8%af%a2%e7%bb%8f%e7%ba%ac%e5%ba%a6%e6%89%b9%e9%87%8f%e6%9f%a5%e6%89%be%e5%9c%b0%e5%90%8d%e5%9c%b0%e5%90%8d%e6%89%b9%e9%87%8f%e6%9f%a5','','\nhttp://yanue.net/archives/217.html','2012-06-17 06:47:44','2012-06-17 14:47:44','','0','http://yanue.net/?p=207','0','post','','0');
INSERT INTO `wp_posts` VALUES('311','1','2012-06-24 03:56:45','2012-06-24 11:56:45','JQuery获取和设置Select选项\r\n\r\n获取Select ：\r\n\r\n获取select 选中的 text:\r\n\r\n$(\"#select_id\").find(\"option:selected\").text();\r\n\r\n获取select选中的 value:\r\n\r\n$(\"#select_id option:selected\").val();\r\n($(\"#select_id\").val();这个方法是错误的)\r\n\r\n获取select选中的索引:\r\n\r\n$(\"#select_id \").get(0).selectedIndex;\r\n\r\n设置select:\r\n\r\n设置select 选中的索引：\r\n\r\n$(\"#select_id \").get(0).selectedIndex=index;//index为索引值\r\n\r\n设置select 选中的value：\r\n\r\n$(\"#select_id \").attr(\"value\",\"Normal“);\r\n\r\n$(\"#select_id \").val(\"Normal\");\r\n\r\n$(\"#select_id \").get(0).value = value;\r\n\r\n设置select 选中的text:\r\n\r\n\r\n\r\nvar count=$(\"#select_id \").find(\"option\").length;\r\n\r\nfor(var i=0;i&lt;count;i++)\r\n{           if($(\"#select_id \").get(0).options[i].text == text)\r\n{\r\n$(\"#select_id \").get(0).options[i].selected = true;\r\n\r\nbreak;\r\n}\r\n}\r\n\r\nselect根据value默认选中\r\n$(\"#SelectID option[value=\'selectValue\']\").attr(\"selected\",true)\r\n\r\n\r\n\r\n清空 Select:\r\n\r\n$(\"#select_id \").empty();\r\n\r\n$(\"#veg1\").find(\"option\").clone().appendTo(\"#veg2\");   添加另一个select option\r\n$(\"#veg2\").get(0).selectedIndex=2; 设置选中项','JQuery获取和设置Select选项方法','','publish','open','open','','jquery%e8%8e%b7%e5%8f%96%e5%92%8c%e8%ae%be%e7%bd%aeselect%e9%80%89%e9%a1%b9%e6%96%b9%e6%b3%95','','','2012-06-24 04:27:32','2012-06-24 12:27:32','','0','http://yanue.net/?p=311','0','post','','0');
INSERT INTO `wp_posts` VALUES('217','1','2012-06-09 08:00:56','2012-06-09 16:00:56','地址解析就是将地址(如：贵州省贵阳市)转换为地理坐标(如经度：106.71，纬度：26.57)的过程。\r\n\r\n地理反解析和上面的过程相反是将地理坐标(如纬度：26.57，经度：106.71)转换为地址(中国贵州省贵阳市南明区翠微巷7号 邮政编码: 550002)的过程。\r\n受当地法律限制及各方面原因，国内很多地图并不包含地理解析和反解析功能（地理解析和反解析功能功能不够强悍），Google永远是最棒的。废话不多说\r\n要使用到Google map 地理解析和反解析功能，我们需要了解google.maps.Geocoder类，谷歌地图给我们提供了强大的api，下面我们来实现\r\n<strong>1.初始化地图</strong>(最基本的，不解释)\r\n<pre class=\"lang_php decode_true\">//初始化地图\r\nvar map = new google.maps.Map(document.getElementById(\"map_canvas\"),{\r\n	center : new google.maps.LatLng(26.57, 106.72),\r\n	zoom : 8,\r\n	mapTypeId : google.maps.MapTypeId.ROADMAP\r\n});</pre>\r\n<strong>2.实例化谷歌Geocoder服务</strong>\r\n<pre class=\"lang_php decode_true\">//实例化Geocoder服务\r\nvar geocoder = new google.maps.Geocoder();</pre>\r\n这样我们就可以进行地理解析和反解析了，使用代码：\r\n<pre class=\"lang_php decode_true\">geocoder.geocode(request:GeocoderRequest, callback:function(Array.&lt;GeocoderResult&gt;, GeocoderStatus))</pre>\r\n<strong>i.数据请求：</strong>\r\n\r\n<strong></strong>其中需要进行请求的数据GeocoderRequest可为4种属性：\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>属性</th>\r\n<th>类型</th>\r\n<th>描述</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td><code>address</code></td>\r\n<td><code>string</code></td>\r\n<td>需要解析的地名. 可选.</td>\r\n</tr>\r\n<tr>\r\n<td><code>bounds</code></td>\r\n<td><code>LatLngBounds</code></td>\r\n<td>经纬度搜索范围. 可选.（我没有具体试用过）</td>\r\n</tr>\r\n<tr>\r\n<td><code>location</code></td>\r\n<td><code>LatLng（注意类型）</code></td>\r\n<td>需要解析的经纬度. 可选.</td>\r\n</tr>\r\n<tr>\r\n<td><code>region</code></td>\r\n<td><code>string</code></td>\r\n<td>国家代码. 可选.（我没有具体试用过）</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n对于解析我们使用address，反解析使用location(注意传入的类型)，请求的话，至少选择一种。\r\n\r\n<strong>ii:结果处理：</strong>\r\n\r\n而对于回掉函数（即解析后返回的处理函数）包含两个内容，GeocoderResult（解析结果，数组类型）和GeocoderStatus（解析状态）\r\n1.<span style=\"color: #ff0000;\">解析状态</span>是使用Geocoder()进行解析后返回的状态，包含5种：\r\n\r\nERROR（谷歌地图服务可能出错）\r\nINVALID_REQUEST（GeocoderRequest无效，即输入的请求是错误的，可能是没有选择，或者属性写错）\r\nOK（解析完成，并有相应数据）\r\nOVER_QUERY_LIMIT（响应超时）\r\nREQUEST_DENIED（网页被禁止geocoder解析）\r\nUNKNOWN_ERROR（未知错误）\r\nZERO_RESULTS（零结果）\r\n\r\n我们能用的就是<span style=\"color: #ff0000;\">状态为OK</span>的情况\r\n2.<span style=\"color: #ff0000;\">解析结果</span>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>属性</th>\r\n<th>类型</th>\r\n<th>描述</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td><code>address_components</code></td>\r\n<td><code>Array.&lt;<a href=\"https://developers.google.com/maps/documentation/javascript/reference#GeocoderAddressComponent\">GeocoderAddressComponent</a>&gt;</code></td>\r\n<td><code>GeocoderAddressComponent</code>s数组</td>\r\n</tr>\r\n<tr>\r\n<td><code>formatted_address</code></td>\r\n<td><code>string</code></td>\r\n<td>格式化后的最佳匹配地址（地名可小到街道）</td>\r\n</tr>\r\n<tr>\r\n<td><code>geometry</code></td>\r\n<td><code><a href=\"https://developers.google.com/maps/documentation/javascript/reference#GeocoderGeometry\">GeocoderGeometry</a></code></td>\r\n<td><code>GeocoderGeometry</code> 对象</td>\r\n</tr>\r\n<tr>\r\n<td><code>types</code></td>\r\n<td><code>Array.&lt;string&gt;</code></td>\r\n<td>一个表示返回的地理编码元素的类型的字符串数组</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n其中每一次解析成功后都会有上面的信息，我们最需要的就两样formatted_address和geometry。而address_components是一个地名数组，包含long_name（比如只返回省市名称），short_name和types，可以自己去试一下。\r\n\r\na. 格式化后的地名formatted_address，只需直接调用即可\r\n\r\nb.geometry返回一个<code>GeocoderGeometry</code> 对象，其中又包含有4个属性\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Properties</th>\r\n<th>Type</th>\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td><code>bounds</code></td>\r\n<td><code><a href=\"https://developers.google.com/maps/documentation/javascript/reference#LatLngBounds\">LatLngBounds</a></code></td>\r\n<td>解析出来的精确的界限</td>\r\n</tr>\r\n<tr>\r\n<td><code>location</code></td>\r\n<td><code><a href=\"https://developers.google.com/maps/documentation/javascript/reference#LatLng\">LatLng</a></code></td>\r\n<td>纬度/经度坐标</td>\r\n</tr>\r\n<tr>\r\n<td><code>location_type</code></td>\r\n<td><code><a href=\"https://developers.google.com/maps/documentation/javascript/reference#GeocoderLocationType\">GeocoderLocationType</a></code></td>\r\n<td>返回的<code>location类型</code></td>\r\n</tr>\r\n<tr>\r\n<td><code>viewport</code></td>\r\n<td><code><a href=\"https://developers.google.com/maps/documentation/javascript/reference#LatLngBounds\">LatLngBounds</a></code></td>\r\n<td>解析结果的视图范围</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n至此，所有关于地理解析和反解析就差不多说明完了，具体api参见<a href=\"https://developers.google.com/maps/documentation/javascript/reference#Geocoder\">https://developers.google.com/maps/documentation/javascript/reference#Geocoder</a>。\r\n\r\n感觉说的好晕！基于此我做了一个关于批量解析和反解析的应用，详见：<span style=\"color: #ff0000;\"><a href=\"http://map.yanue.net/geo.html\"><span style=\"color: #ff0000;\">http://map.yanue.net/geo.html</span></a></span>，<a href=\"http://map.yanue.net/geo.html\">http://map.yanue.net/toLatLng</a> .使用详解：<span style=\"color: #ff0000;\"><span style=\"color: #ff0000;\"><a href=\"http://www.yanue.net/archives/207.html\">http://www.yanue.net/archives/207.html</a> ，</span></span>\r\n\r\n<span style=\"color: #ff0000;\"><span style=\"color: #ff0000;\">下面我们来实例一下</span></span>\r\n\r\n<span style=\"color: #ff0000;\">实例代码：</span>（你有必要复制到本地试一下）\r\n<pre class=\"lang:php decode:true  crayon-selected\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;meta charset=\"UTF-8\"&gt;\r\n&lt;script src=\"http://maps.google.com/maps/api/js?sensor=false&amp;libraries=places\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;title&gt;谷歌地图地理解析和反解析geocode.geocoder详解&lt;/title&gt;\r\n&lt;meta name=\"author\" content=\"yanue\" /&gt;\r\n&lt;meta name=\"copyright\" content=\"powered by yanue\" /&gt;\r\n&lt;link rel=\"site\" href=\"http://map.yanue.net/\" /&gt;\r\n&lt;script type=\"text/javascript\"&gt;\r\nwindow.onload = function() {\r\n//初始化地图\r\nvar map = new google.maps.Map(document.getElementById(\"map_canvas\"),{\r\n	center : new google.maps.LatLng(26.57, 106.72),\r\n	zoom : 8,\r\n	mapTypeId : google.maps.MapTypeId.ROADMAP\r\n});\r\n//实例化Geocoder服务\r\nvar geocoder = new google.maps.Geocoder();\r\n\r\n//1.地理解析过程\r\n//请求数据GeocoderRequest为address，值为\'贵阳\'\r\ngeocoder.geocode({address:\'贵阳\'},function geoResults(results, status){\r\n  //这里是回掉函数(即结果处理函数)\r\n  //状态为Ok说明有结果\r\n  if (status == google.maps.GeocoderStatus.OK) {\r\n  	//一般情况下会有多个结果\r\n  	//第一个结果为最佳匹配的结果（匹配地名最全的结果），这里只去第一个，其他的可以根据需要自己循环出来\r\n  	//格式化过后的地址\r\n  	alert(\'地理解析结果：\'+results[0].formatted_address);\r\n  	//geometry是一个包含bounds（界限），location（纬度/经度坐标）,location_type和viewport（视图范围）\r\n  	//获取解析后的经纬度  	\r\n		alert(\'地理解析结果：\'+results[0].geometry.location);\r\n  }else{\r\n    alert(\"：error \" + status);\r\n  }\r\n});\r\n\r\n//2.地理反解析过程\r\n//请求数据GeocoderRequest为location，值类型为LatLng因此我们要实例化经纬度\r\ngeocoder.geocode({location:new google.maps.LatLng(26.57, 106.72)},function geoResults(results, status){\r\n  //这里处理结果和上面一模一样\r\n  if (status == google.maps.GeocoderStatus.OK) {\r\n  	alert(\'地理反解析结果：\'+results[0].formatted_address);\r\n		alert(\'地理反解析结果：\'+results[0].geometry.location);\r\n  }else{\r\n    alert(\"：error \" + status);\r\n  }\r\n});\r\n}\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n	&lt;div id=\"map_canvas\" style=\'width: 300px; height: 200px;\'&gt;&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n至此，文章完','(原创)谷歌地图地理解析和反解析geocode.geocoder详解','','publish','open','open','','%e8%b0%b7%e6%ad%8c%e5%9c%b0%e5%9b%be%e5%9c%b0%e7%90%86%e8%a7%a3%e6%9e%90%e5%92%8c%e5%8f%8d%e8%a7%a3%e6%9e%90geocode-geocoder%e8%af%a6%e8%a7%a3','','http://yanue.net/archives/207.html\nhttp://yanue.net/archives/207.html\nhttp://www.yanue.net/archives/207.html','2013-07-19 08:13:42','2013-07-19 16:13:42','','0','http://yanue.net/?p=217','0','post','','11');
INSERT INTO `wp_posts` VALUES('326','1','2012-06-30 05:45:55','2012-06-30 13:45:55','php+mysql一般情况下存储时间都为时间戳，但实际需要的时候，我们很可能需要对时间进行修改，这就需要由时间戳转换到时间格式，再时间格式转换为时间戳，而php需要一定的时间格式才能转换成时间戳（表示从格林威治时间1970年01月01日00时00分00秒起至现在的总秒数），因此需要进行正则判断，下面贴出代码：\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\n//匹配时间格式为2012-02-16或2012-02-16 23:59:59前面为0的时候可以不写\r\n$time = &quot;2012-02-16 23:59:59&quot;;\r\n$patten = &quot;/^\\d{4}[\\-](0?[1-9]|1[012])[\\-](0?[1-9]|[12][0-9]|3[01])(\\s+(0?[0-9]|1[0-9]|2[0-3])\\:(0?[0-9]|[1-5][0-9])\\:(0?[0-9]|[1-5][0-9]))?$/&quot;;\r\nif (preg_match ( $patten, $time )) {\r\n			echo $timestro = strtotime ( $time );\r\n		} else {\r\n			echo &quot;error&quot;;\r\n		}\r\n?&gt;</pre>\r\n对该正则的分析：\r\n/^\\d{4}[\\-](0?[1-9]|1[012])[\\-](0?[1-9]|[12][0-9]|3[01])(\\s+(0?[0-9]|[12][0-3])\\:(0?[0-9]|[1-5][1-9])\\:(0?[0-9]|[1-5][1-9]))?$/\r\n\r\n/是表达式开始符 最后面的/是表达式的结束符\r\n^字符串的开始，即以***开始\r\n$表示字符串的结尾，即表示已***结尾\r\n|表示或者\r\n()表示一个单元\r\nd{4}匹配一个4位数，\r\n(\\-)匹配一个“-”号，\r\n(0?[1-9]|1[012])匹配月份，\r\n(0?[1-9]|[12][0-9]|3[01])匹配天，\r\n(\\s+(0?[0-9]|1[0-9]|2[0-3])\\:(0?[0-9]|[1-5][0-9])\\:(0?[0-9]|[1-5][0-9]))?整个匹配时分秒部分，?表示有或者没有。\r\n\r\n最后一步就是对匹配成功的进行时间戳转换\r\n\r\n当前转换结果为：1329407999','(原创)PHP正则匹配日期和时间，php时间戳转换','','publish','open','open','','%e5%8e%9f%e5%88%9bphp%e6%ad%a3%e5%88%99%e5%8c%b9%e9%85%8d%e6%97%a5%e6%9c%9f%e5%92%8c%e6%97%b6%e9%97%b4%ef%bc%8cphp%e6%97%b6%e9%97%b4%e6%88%b3%e8%bd%ac%e6%8d%a2','','','2012-07-03 23:54:43','2012-07-04 07:54:43','','0','http://yanue.net/?p=326','0','post','','0');
INSERT INTO `wp_posts` VALUES('627','1','2013-07-21 20:41:24','2013-07-22 04:41:24','php开发测试及线上的时候可以根据不同情况设定错误和异常处理\r\n需要用到有三函数:\r\n<strong>register_shutdown_function</strong>(array(\'Debug\',\'fatalError\')); //定义PHP程序执行完成后执行的函数\r\n<strong>set_error_handler</strong>(array(\'Debug\',\'appError\')); // 设置一个用户定义的错误处理函数\r\n<strong>set_exception_handler</strong>(array(\'Debug\',\'appException\')); //自定义异常处理。\r\n下面讲一下register_shutdown_function() 函数.\r\n\r\n<strong>功能</strong>:register_shutdown_function() 函数可实现当程序执行完成后执行的函数，<strong>其功能为可实现程序执行完成的后续操作</strong>。程序在运行的时候可能存在执行超时，或强制关闭等情况，但这种情况下默认的提示是非常不友好的，如果使用register_shutdown_function()函数捕获异常，就能提供更加友好的错误展示方式，同时可以实现一些功能的后续操作，如执行完成后的临时数据清理，包括临时文件等。\r\n\r\n可以这样理解调用条件：\r\n\r\n1、当页面被用户强制停止时\r\n\r\n2、当程序代码运行超时时\r\n\r\n3、当ＰＨＰ代码执行完成时，代码执行存在异常和错误、警告\r\n\r\n1. 一个简介的例子 ， 调用一个函数\r\n<pre class=\"lang:php decode:true\">&lt;?php\r\nfunction test() {\r\n    echo \"test()\";\r\n}\r\nregister_shutdown_function(array(\"test\"));\r\necho \"show: \";\r\n?&gt;</pre>\r\n这个例子输出   show: test()    , 这个函数的作用就是在退出脚本前，调用已经注册的函数，并执行该函数。\r\n\r\n2. 在类中用一个数组作为一个参数\r\n<pre class=\"lang:php decode:true\">&lt;?php\r\n    class ClassDemo {\r\n        public function __construct() {\r\n            register_shutdown_function(array($this, \"f\"));\r\n        }\r\n\r\n        public function f() {\r\n            echo \"f()\";\r\n        }\r\n    }\r\n\r\n    $demo = new ClassDemo();\r\n    echo \"before &lt;/br&gt;\";\r\n?&gt;</pre>\r\n输出：\r\n\r\nbefore\r\nf()\r\n\r\n3. 带有参数的例子：\r\n<pre class=\"lang:php decode:true\">function f($str) {\r\n        echo $str.\"&lt;br&gt;\";\r\n}\r\n\r\nregister_shutdown_function(\"f\",\"hello\");</pre>\r\n<pre class=\"lang:php decode:true\">&lt;?php\r\n    class ClassDemo {\r\n        public function __construct() {\r\n            register_shutdown_function(array($this, \"f\"),\"hello\");\r\n        }\r\n\r\n        public function f($str) {\r\n            echo \"f():\".$str;\r\n        }\r\n    }\r\n\r\n   $demo = new ClassDemo();\r\n   echo \"before &lt;/br&gt;\";   \r\n?&gt;</pre>\r\n注意事项:\r\n\r\n1，register_shutdown_function()函数可重复调用，但执行的顺序与注册的顺序相同\r\n2，如果在调用register_shutdown_function()函数之前有exit()函数调用，register_shutdown_function()函数将不能执行\r\n3，PHP4后支持注册函数参数传递\r\n4，在某些服务端，如Apache，当前目录在register_shutdown_function()函数中能够改变\r\n5，register_shutdown_function()函数执行在headers发送之后','register_shutdown_function 函数详解','','publish','open','open','','register_shutdown_function-%e5%87%bd%e6%95%b0%e8%af%a6%e8%a7%a3','','','2013-07-21 20:46:05','2013-07-22 04:46:05','','0','http://www.yanue.net/?p=627','0','post','','0');
INSERT INTO `wp_posts` VALUES('315','1','2012-06-24 08:11:43','2012-06-24 16:11:43','<span style=\"font-size: small;\"><strong>1</strong><strong>．内联结、外联结、左联结、右联结的含义及区别：</strong><strong></strong></span>\r\n\r\n<span style=\"font-size: small;\">在SQL标准中规划的（Join）联结大致分为下面四种：</span>\r\n\r\n<span style=\"font-size: small;\">1．  内联结：将两个表中存在联结关系的字段符合联结关系的那些记录形成记录集的联结。</span>\r\n\r\n<span style=\"font-size: small;\">2．  外联结：分为外左联结和外右联结。</span>\r\n\r\n<span style=\"font-size: small;\">左联结A、B表的意思就是将表A中的全部记录和表B中联结的字段与表A的联结字段符合联结条件的那些记录形成的记录集的联结，这里注意的是最后出来的记录集会包括表A的全部记录。</span>\r\n\r\n<span style=\"font-size: small;\">右联结A、B表的结果和左联结B、A的结果是一样的，也就是说：</span>\r\n\r\n<span style=\"font-size: small;\">Select A.name B.name From A Left Join B On A.id=B.id </span>\r\n\r\n<span style=\"font-size: small;\">和Select A.name B.name From B Right Join A on B.id=A.id执行后的结果是一样的。</span>\r\n\r\n<span style=\"font-size: small;\">3．全联结：将两个表中存在联结关系的字段的所有记录取出形成记录集的联结（这个不需要记忆，只要是查询中提到了的表的字段都会取出，无论是否符合联结条件，因此意义不大）。</span>\r\n\r\n<span style=\"font-size: small;\">4．无联结：不用解释了吧，就是没有使用联结功能呗，也有自联结的说法。</span>\r\n\r\n<span style=\"font-size: small;\">   有个比较简便的记忆方法，内外联结的区别是内联结将去除所有不符合条件的记录，而外联结则保留其中部分。外左联结与外右联结的区别在于如果用A左联结B则A中所有记录都会保留在结果中，此时B中只有符合联结条件的记录，而右联结相反，这样也就不会混淆了。</span>\r\n\r\n<span style=\"font-size: small;\"><strong>2．  </strong><strong>MySQL</strong><strong>联结（</strong><strong>Join</strong><strong>）的语法</strong><strong></strong></span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">MySQL支持Select和某些Update和Delete情况下的Join语法，具体语法上的细节有：</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">table_references:</span>\r\n\r\n<span style=\"font-size: small;\">    table_reference [, table_reference] …</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">table_reference:</span>\r\n\r\n<span style=\"font-size: small;\">    table_factor</span>\r\n\r\n<span style=\"font-size: small;\">  | join_table</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">table_factor:</span>\r\n\r\n<span style=\"font-size: small;\">    tbl_name [[AS] alias]</span>\r\n\r\n<span style=\"font-size: small;\">        [{USE|IGNORE|FORCE} INDEX (key_list)]</span>\r\n\r\n<span style=\"font-size: small;\">  | ( table_references )</span>\r\n\r\n<span style=\"font-size: small;\">  | { OJ table_reference LEFT OUTER JOIN table_reference</span>\r\n\r\n<span style=\"font-size: small;\">        ON conditional_expr }</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">join_table:</span>\r\n\r\n<span style=\"font-size: small;\">    table_reference [INNER | CROSS] JOIN table_factor [join_condition]</span>\r\n\r\n<span style=\"font-size: small;\">  | table_reference STRAIGHT_JOIN table_factor</span>\r\n\r\n<span style=\"font-size: small;\">  | table_reference STRAIGHT_JOIN table_factor ON condition</span>\r\n\r\n<span style=\"font-size: small;\">  | table_reference LEFT [OUTER] JOIN table_reference join_condition</span>\r\n\r\n<span style=\"font-size: small;\">  | table_reference NATURAL [LEFT [OUTER]] JOIN table_factor</span>\r\n\r\n<span style=\"font-size: small;\">  | table_reference RIGHT [OUTER] JOIN table_reference join_condition</span>\r\n\r\n<span style=\"font-size: small;\">  | table_reference NATURAL [RIGHT [OUTER]] JOIN table_factor</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">join_condition:</span>\r\n\r\n<span style=\"font-size: small;\">    ON conditional_expr | USING (column_list)</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">上面的用法摘自权威资料，不过大家看了是否有点晕呢？呵呵，应该问题主要还在于table_reference是什么，table_factor又是什么？这里的table_reference其实就是表的引用的意思，因为在MySQL看来，联结就是一种对表的引用，因此把需要联结的表定义为table_reference，同时在SQL Standard中也是如此看待的。而table_factor则是MySQL对这个引用的功能上的增强和扩充，使得引用的表可以是括号内的一系列表，如下面例子中的JOIN后面括号：</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">SELECT * FROM t1 LEFT JOIN (t2, t3, t4) ON (t2.a=t1.a AND t3.b=t1.b AND t4.c=t1.c)</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">这个语句的执行结果和下面语句其实是一样的：</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">SELECT * FROM t1 LEFT JOIN (t2 CROSS JOIN t3 CROSS JOIN t4) </span>\r\n\r\n<span style=\"font-size: small;\">                 ON (t2.a=t1.a AND t3.b=t1.b AND t4.c=t1.c)</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">这两个例子不仅让我们了解了MySQL中table_factor和table_reference含义，同时能理解一点CROSS JOIN的用法，我要补充的是在MySQL现有版本中CROSS JOIN的作用和INNER JOIN是一样的（虽然在SQL Standard中是不一样的，然而在MySQL中他们的区别仅仅是INNER JOIN需要附加ON参数的语句，而CROSS JOIN不需要）。</span>\r\n\r\n<span style=\"font-size: small;\">既然说到了ON语句，那就解释一下吧，ON语句其实和WHERE语句功能大致相当，只是这里的ON语句是专门针对联结表的，ON语句后面的条件的要求和书写方式和WHERE语句的要求是一样的，大家基本上可以把ON当作WHERE用。</span>\r\n\r\n<span style=\"font-size: small;\">大家也许也看到了OJ table_reference LEFT OUTER JOIN table_reference这个句子，这不是MySQL的标准写法，只是为了和ODBC的SQL语法兼容而设定的，我很少用，Java的人更是不会用，所以也不多解释了。</span>\r\n\r\n<span style=\"font-size: small;\">那下面就具体讲讲简单的JOIN的用法了。首先我们假设有2个表A和B，他们的表结构和字段分别为：</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">表A：</span>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">ID</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Name</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">1</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Tim</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">2</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Jimmy</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">3</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">John</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">4</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Tom</span></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<span style=\"font-size: small;\">表B：</span>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">ID</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Hobby</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">1</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Football</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">2</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Basketball</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">2</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Tennis</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">4</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Soccer</span></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">1．  内联结：</span>\r\n\r\n<span style=\"font-size: small;\">Select A.Name B.Hobby from A, B where A.id = B.id，这是隐式的内联结，查询的结果是：</span>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Name</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Hobby</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Tim</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Football</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Jimmy</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Basketball</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Jimmy</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Tennis</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Tom</span></td>\r\n<td valign=\"top\" width=\"96\"><span style=\"font-size: small;\">Soccer</span></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<span style=\"font-size: small;\">它的作用和 Select A.Name from A INNER JOIN B ON A.id = B.id是一样的。这里的INNER JOIN换成CROSS JOIN也是可以的。</span>\r\n\r\n<span style=\"font-size: small;\">2．  外左联结</span>\r\n\r\n<span style=\"font-size: small;\">Select A.Name from A Left JOIN B ON A.id = B.id，典型的外左联结，这样查询得到的结果将会是保留所有A表中联结字段的记录，若无与其相对应的B表中的字段记录则留空，结果如下：</span>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Name</span></td>\r\n<td valign=\"top\" width=\"120\"><span style=\"font-size: small;\">Hobby</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Tim</span></td>\r\n<td valign=\"top\" width=\"120\"><span style=\"font-size: small;\">Football</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Jimmy</span></td>\r\n<td valign=\"top\" width=\"120\"><span style=\"font-size: small;\">Basketball，Tennis</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">John</span></td>\r\n<td valign=\"top\" width=\"120\"><span style=\"font-size: small;\"> </span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Tom</span></td>\r\n<td valign=\"top\" width=\"120\"><span style=\"font-size: small;\">Soccer</span></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<span style=\"font-size: small;\">所以从上面结果看出，因为A表中的John记录的ID没有在B表中有对应ID，因此为空，但Name栏仍有John记录。</span>\r\n\r\n<span style=\"font-size: small;\">3．  外右联结</span>\r\n\r\n<span style=\"font-size: small;\">如果把上面查询改成外右联结：Select A.Name from A Right JOIN B ON A.id = B.id，则结果将会是：</span>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Name</span></td>\r\n<td valign=\"top\" width=\"84\"><span style=\"font-size: small;\">Hobby</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Tim</span></td>\r\n<td valign=\"top\" width=\"84\"><span style=\"font-size: small;\">Football</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Jimmy</span></td>\r\n<td valign=\"top\" width=\"84\"><span style=\"font-size: small;\">Basketball</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Jimmy</span></td>\r\n<td valign=\"top\" width=\"84\"><span style=\"font-size: small;\">Tennis</span></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"67\"><span style=\"font-size: small;\">Tom</span></td>\r\n<td valign=\"top\" width=\"84\"><span style=\"font-size: small;\">Soccer</span></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<span style=\"font-size: small;\">这样的结果都是我们可以从外左联结的结果中猜到的了。</span>\r\n\r\n<span style=\"font-size: small;\">说到这里大家是否对联结查询了解多了？这个原本看来高深的概念一下子就理解了，恍然大悟了吧（呵呵，开玩笑了）？最后给大家讲讲MySQL联结查询中的某些参数的作用：</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">1．USING (column_list)：其作用是为了方便书写联结的多对应关系，大部分情况下USING语句可以用ON语句来代替，如下面例子：</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">a LEFT JOIN b USING (c1,c2,c3)，其作用相当于下面语句</span>\r\n\r\n<span style=\"font-size: small;\">a LEFT JOIN b ON a.c1=b.c1 AND a.c2=b.c2 AND a.c3=b.c3</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">只是用ON来代替会书写比较麻烦而已。</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">2．NATURAL [LEFT] JOIN：这个句子的作用相当于INNER JOIN，或者是在USING子句中包含了联结的表中所有字段的Left JOIN（左联结）。</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">3．STRAIGHT_JOIN：由于默认情况下MySQL在进行表的联结的时候会先读入左表，当使用了这个参数后MySQL将会先读入右表，这是个MySQL的内置优化参数，大家应该在特定情况下使用，譬如已经确认右表中的记录数量少，在筛选后能大大提高查询速度。</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">最后要说的就是，在MySQL5.0以后，运算顺序得到了重视，所以对多表的联结查询可能会错误以子联结查询的方式进行。譬如你需要进行多表联结，因此你输入了下面的联结查询：</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">SELECT t1.id,t2.id,t3.id </span>\r\n\r\n<span style=\"font-size: small;\">    FROM t1,t2 </span>\r\n\r\n<span style=\"font-size: small;\">    LEFT JOIN t3 ON (t3.id=t1.id)</span>\r\n\r\n<span style=\"font-size: small;\">    WHERE t1.id=t2.id;</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">但是MySQL并不是这样执行的，其后台的真正执行方式是下面的语句：</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">SELECT t1.id,t2.id,t3.id </span>\r\n\r\n<span style=\"font-size: small;\">    FROM t1,(  t2 LEFT JOIN t3 ON (t3.id=t1.id)  )</span>\r\n\r\n<span style=\"font-size: small;\">    WHERE t1.id=t2.id;</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">这并不是我们想要的效果，所以我们需要这样输入：</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">SELECT t1.id,t2.id,t3.id </span>\r\n\r\n<span style=\"font-size: small;\">    FROM (t1,t2)</span>\r\n\r\n<span style=\"font-size: small;\">    LEFT JOIN t3 ON (t3.id=t1.id)</span>\r\n\r\n<span style=\"font-size: small;\">    WHERE t1.id=t2.id;</span>\r\n\r\n<span style=\"font-size: small;\"> </span>\r\n\r\n<span style=\"font-size: small;\">在这里括号是相当重要的，因此以后在写这样的查询的时候我们不要忘记了多写几个括号，至少这样能避免很多错误（因为这样的错误是很难被开发人员发现的）。</span>','mysql中left join,right join,inner join用法分析与实例','','publish','open','open','','mysql%e4%b8%adleft-joinright-joininner-join%e7%94%a8%e6%b3%95%e5%88%86%e6%9e%90%e4%b8%8e%e5%ae%9e%e4%be%8b','','','2012-06-24 08:11:43','2012-06-24 16:11:43','','0','http://yanue.net/?p=315','0','post','','0');
INSERT INTO `wp_posts` VALUES('317','1','2012-06-24 19:53:31','2012-06-25 03:53:31','本文和大家重点讨论一下IE6不支持min-height的解决办法，这里主要包括两种解决方案，相信本文介绍一定会让你有所收获。\r\n\r\nIE6不支持min-height的解决办法\r\n\r\n最小高度min-height是很有用的，但IE6却不支持。真烦人。有没有办法呢？\r\n\r\n第一种方法：我们可以利用IE6不识别!important来实现：\r\n<pre class=\"lang_php decode_true\">height:auto!important; \r\nheight:500px; \r\nmin-height:500px;</pre>\r\n这3句代码就让IE6也有了高度min-height的效果，大家可以把下面的代码复制保存成网页文件看看效果。\r\n\r\nHTML代码\r\n<pre class=\"lang_php decode_true\">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; \r\n&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt; \r\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt; \r\n&lt;head&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=gb2312&quot; /&gt; \r\n&lt;title&gt;残缺 完美 生活&lt;/title&gt; \r\n&lt;/head&gt; \r\n&lt;style type=&quot;text/css&quot;&gt; *{ margin:0; padding:0; } \r\nbody{ font-family:Arial, Helvetica,宋体,sans-serif; font-size:12px; \r\n\r\ntext-align:center; background-color:#D4D5CC; } \r\n#wrapper{ height:auto!important; \r\nheight:500px; min-height:500px; \r\nwidth:760px; background-color:#e5e5e5; border:1px solid #fff; \r\ntext-align:left; line-height:150%; padding:20px; margin:10px auto; } \r\n&lt;/style&gt; &lt;body&gt; &lt;div id=&quot;wrapper&quot;&gt; \r\nThe Furthest Distance In The World &lt;br /&gt; 世界上最遥远的距离 &lt;br /&gt; \r\nTagore泰戈尔 &lt;br /&gt; The furthest distance in the world &lt;br /&gt; \r\n世界上最遥远的距离 &lt;br /&gt; Is not between life and death &lt;br /&gt; \r\n不是生与死 &lt;br /&gt; But when I stand in front of you &lt;br /&gt; \r\n而是 我就站在你面前 &lt;br /&gt; Yet you don&#039;t know that I love you &lt;br /&gt; \r\n你却不知道我爱你 &lt;br /&gt; \r\n&lt;/div&gt; \r\n&lt;/body&gt; \r\n&lt;/html&gt;</pre>\r\n◆还有一种方法：在IE6IE5IE7FF测试竟然正常，而且能通过W3C检测的,方法如下:\r\n\r\nHTML代码\r\n<pre class=\"lang_php decode_true\">#test { min-height:100px; background:#BBB; _height:100px; overflow: visible; }</pre>\r\n说明一下上面这段CSS的意思。\r\n\r\nmin-height:100px;这一句在ie7和FF已经可以正常显示了。。\r\n_height:100px这一句在ie6，ie5测试显示正常。但不能过W3C验证:L\r\noverflow:visible;这一句为了注明#test当内容超过100px时就自动延长。\r\n\r\n注意：你必须保证#test以外的都要是overflow:visible。否则还是不会显示超出。','E6中支持min-height的解决方案','','publish','open','open','','e6%e4%b8%ad%e6%94%af%e6%8c%81min-height%e7%9a%84%e8%a7%a3%e5%86%b3%e6%96%b9%e6%a1%88','','','2012-06-24 19:53:31','2012-06-25 03:53:31','','0','http://yanue.net/?p=317','0','post','','0');
INSERT INTO `wp_posts` VALUES('319','1','2012-06-27 18:05:30','2012-06-28 02:05:30','preg_match: 字符串比对解析。\r\n\r\npreg_match_all: 字符串整体比对解析。\r\npreg_replace: 字符串比对解析并取代。\r\npreg_split: 将字符串依指定的规则切开。\r\n\r\n具体用法：\r\n\r\n<strong>1. preg_match 字符串比对解析。</strong>\r\n\r\n语法: int preg_match(string pattern, string subject, array [matches]);\r\n\r\n返回值: 整数/数组\r\n\r\n函数种类: 资料处理\r\n\r\n内容说明: 本函数以 pattern 的规则来解析比对字符串 subject。比对结果返回的值放在数组参数 matches 之中，matches[0] 内容就是原字符串 subject、matches[1] 为第一个合乎规则的字符串、matches[2] 就是第二个合乎规则的字符串，余类推。若省略参数 matches，则只是单纯地比对，找到则返回值为 true。\r\n\r\n<strong>2.preg_match_all字符串整体比对解析。</strong>\r\n\r\n语法: int preg_match_all(string pattern, string subject, array matches, int [order]);\r\n\r\n返回值: 整数\r\n\r\n函数种类: 资料处理\r\n\r\n内容说明: 本函数以 pattern 的规则来整体解析比对字符串 subject。比对结果返回的值放在数组参数 matches 之中，并依顺序值 order 排序。参数 order 的值有 PREG_PATTERN_ORDER 及 PREG_SET_ORDER 二种。若没有 order 值，则系统自动以 PREG_PATTERN_ORDER 代入 order 值中。返回值为合乎比对结果的数目，若没有或错误则返回 false 值。\r\n\r\nPREG_PATTERN_ORDER 的例子\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\npreg_match_all(&quot;|&lt;[^&gt;]+&gt;(.*)&lt;/[^&gt;]+&gt;|U&quot;, &quot;&lt;div align=left&gt;a test&lt;/div&gt;&quot;, $out, PREG_PATTERN_ORDER);\r\nprint $out[0][0].&quot;, &quot;.$out[0][1].&quot;n&quot;;\r\nprint $out[1][0].&quot;, &quot;.$out[1][1].&quot;n&quot;\r\n?&gt;</pre>\r\n<strong>3.preg_replace字符串比对解析并取代。</strong>\r\n\r\n语法: mixed preg_replace(mixed pattern, mixed replacement, mixed subject);\r\n\r\n返回值: 混合类型资料\r\n\r\n函数种类: 资料处理\r\n\r\n内容说明: 本函数以 pattern 的规则来解析比对字符串 subject，欲取而代之的字符串为参数 replacement。返回值为混合类型资料，为取代后的字符串结果。\r\n\r\n使用范例\r\n\r\n下例返回值为 $startDate = 6/19/1969\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\n$patterns = array(&quot;/(19|20d{2})-(d{1,2})-(d{1,2})/&quot;, &quot;/^s*{(w+)}s*=/&quot;);\r\n$replace = array(&quot;3/4/1&quot;, &quot;$1 =&quot;);\r\nprint preg_replace($patterns, $replace, &quot;{startDate} = 1969-6-19&quot;);\r\n?&gt;</pre>\r\n<strong>4.preg_split将字符串依指定的规则切开。</strong>\r\n\r\n语法: array preg_split(string pattern, string subject, int [limit]);\r\n\r\n返回值: 数组\r\n\r\n函数种类: 资料处理\r\n\r\n内容说明: 本函数可将字符串依指定的规则分开。切开后的返回值为数组变量。参数 pattern 为指定的规则字符串、参数 subject 则为待处理的字符串、参数 limit 可省略，表示欲处理的最多合乎值。','PHP正则表达式的几个函数详解','','publish','open','open','','php%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f%e7%9a%84%e5%87%a0%e4%b8%aa%e5%87%bd%e6%95%b0%e8%af%a6%e8%a7%a3','','','2012-06-27 18:05:30','2012-06-28 02:05:30','','0','http://yanue.net/?p=319','0','post','','0');
INSERT INTO `wp_posts` VALUES('321','1','2012-06-27 19:26:54','2012-06-28 03:26:54','对于长文章的分页，实现思路非常简单，将正文按照一定字符串进行分割，分割后在按照页码进行数组索引，将当前页码对应数组的值输出即可，好像说得够晕的，下面来个实例：\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\n$str = &quot;asd啊&lt;b&gt;是&lt;/b&gt;大叔大叔asd杀毒发[NextPage]生的啊师傅 &lt;a href=\\&quot;asd\\&quot;&gt;asd&lt;/a&gt; 啊师傅asd a速度发啥地方&quot;;\r\n//接收页码(如果不存在就为1)\r\n$page = $_REQUEST[&#039;page&#039;] ? $_REQUEST[&#039;page&#039;] : 1;\r\n//通过分割符分割内容\r\n$arr = explode(&quot;[NextPage]&quot;,$str);\r\n//如果分割出来的数组大小为1即未进行分页\r\nif(count($arr)==1){\r\n	echo $str;\r\n}else{\r\n	//按页码输出相应的内容\r\n	echo $arr[$page-1];\r\n	//分页页码\r\n	for($i=1;$i&lt;=count($arr);$i++){	\r\n		if($page == $i){//当前页\r\n			echo &quot;&lt;a href=&#039;?page=&quot;.$i.&quot;&#039; class=&#039;current&#039;&gt;&quot;.$i.&quot;&lt;/a&gt; &quot;;\r\n		}else{\r\n		  echo &quot;&lt;a href=&#039;?page=&quot;.$i.&quot;&#039; &gt;&quot;.$i.&quot;&lt;/a&gt; &quot;;\r\n		}\r\n	}\r\n}\r\n?&gt;</pre>','(原创)php长文章分页思路及实例','','publish','open','open','','%e5%8e%9f%e5%88%9bphp%e9%95%bf%e6%96%87%e7%ab%a0%e5%88%86%e9%a1%b5%e6%80%9d%e8%b7%af%e5%8f%8a%e5%ae%9e%e4%be%8b','','','2012-06-27 19:56:14','2012-06-28 03:56:14','','0','http://yanue.net/?p=321','0','post','','0');
INSERT INTO `wp_posts` VALUES('332','1','2012-07-05 22:03:56','2012-07-06 06:03:56','<h3><strong>第一步 -</strong>下载goagent客户端（<a href=\"http://code.google.com/p/goagent/\" target=\"_blank\">Download</a>）；</h3>\r\n<strong>第二步 -</strong>修改local\\proxy.ini中的<tt>[gae]</tt>下的appid=你的appid(多appid请用|隔开)，即前面创建创建Application所设定的Application ID，如我设定的mr7wen；\r\n\r\n&nbsp;\r\n\r\n<strong><a href=\"http://www.mrwen.net/wp-content/uploads/2012/05/change-your-appid.jpg\" rel=\"example4\"><img title=\"change-your-appid\" src=\"http://www.mrwen.net/wp-content/uploads/2012/05/change-your-appid-300x241.jpg\" alt=\"\" width=\"300\" height=\"241\" /></a></strong>\r\n\r\n<strong>第三步 -</strong>双击server\\uploader.bat（Windows 7或Windows 8用户最好以管理员身份运行），根据提示依次输入Application ID，邮箱地址，和修改谷歌账号两步验证Step 8中生成的16位密码。（注，输入密码时，文字是不可见的，确定输入后回车确认即可。\r\n\r\n<a href=\"http://www.mrwen.net/wp-content/uploads/2012/05/upload.jpg\" rel=\"example4\"><img title=\"upload\" src=\"http://www.mrwen.net/wp-content/uploads/2012/05/upload-300x116.jpg\" alt=\"\" width=\"300\" height=\"116\" /></a>\r\n<h3>     开始使用GoAgent</h3>\r\n使用GoAgent上网前，你必须运行local\\goagent.exe（以管理员身份运行），就刚才下载的goagent压缩包里面的文件。\r\n\r\n<strong>如果你使用的是Chrome，请参考以下教程：</strong>\r\n\r\n<strong>第一）</strong>chrome请安装<a href=\"https://chrome.google.com/webstore/detail/dpplabbmogkhghncfbfdeeokoefdjegm\" rel=\"nofollow\">SwitchySharp</a>插件；\r\n<strong>     第二）</strong>导入SwitchySharp配置，下载地址<a href=\"http://goagent.googlecode.com/files/SwitchyOptions.bak\" rel=\"nofollow\">http://goagent.googlecode.com/files/SwitchyOptions.bak</a>，进入SwitchySharp设置界面，点击“导入/导出”-“从文件恢复”，导入刚才下载的SwitchyOptions.bak\r\n\r\n&nbsp;\r\n\r\n<strong></strong> <a href=\"http://www.mrwen.net/wp-content/uploads/2012/05/switchysharp.jpg\" rel=\"example4\"><img title=\"switchysharp\" src=\"http://www.mrwen.net/wp-content/uploads/2012/05/switchysharp-300x283.jpg\" alt=\"\" width=\"300\" height=\"283\" /></a>\r\n\r\n<strong>第三）</strong>使用Chrome浏览Twitter、Facebook，YouTube等网站时，记得切换到GoAgent\r\n\r\n&nbsp;\r\n\r\n<strong><a href=\"http://www.mrwen.net/wp-content/uploads/2012/05/chrome-goagent.jpg\" rel=\"example4\"><img title=\"chrome-goagent\" src=\"http://www.mrwen.net/wp-content/uploads/2012/05/chrome-goagent-300x273.jpg\" alt=\"\" width=\"300\" height=\"273\" /></a></strong>\r\n\r\n<strong>如果你使用的是Firefox，请参考以下教程：</strong>\r\n\r\n<strong>第一）</strong>安装火狐附加组件<a href=\"https://addons.mozilla.org/zh-cn/firefox/addon/autoproxy/\" rel=\"nofollow\">AutoProxy</a>；安装完毕后重启Firefox，提示规则列表，记得选中确定；\r\n\r\n&nbsp;\r\n\r\n<strong><a href=\"http://www.mrwen.net/wp-content/uploads/2012/05/gfwlist.jpg\" rel=\"example4\"><img title=\"gfwlist\" src=\"http://www.mrwen.net/wp-content/uploads/2012/05/gfwlist-300x51.jpg\" alt=\"\" width=\"300\" height=\"51\" /></a></strong>\r\n\r\n<strong>第二）</strong>FireFox-&gt;选项-&gt;高级-&gt;加密-&gt;查看证书-&gt;证书机构-&gt;导入证书, 选择local\\ca.crt, 勾选所有项，导入。\r\n\r\n&nbsp;\r\n\r\n<strong><a href=\"http://www.mrwen.net/wp-content/uploads/2012/05/certificate.jpg\" rel=\"example4\"><img title=\"certificate\" src=\"http://www.mrwen.net/wp-content/uploads/2012/05/certificate-300x163.jpg\" alt=\"\" width=\"300\" height=\"163\" /></a></strong>\r\n\r\n<strong>第三）</strong>添加代理设置，点击AutoProxy图标旁边的三角按钮，在下拉菜单中选择“preferences”或者使用快捷键Ctrl+Alt+P进入附加组件首选项设置，然后点击Proxy Server，选择Edit Proxy Server，添加代理地址，如下图：\r\n\r\n&nbsp;\r\n\r\n<strong></strong> <a href=\"http://www.mrwen.net/wp-content/uploads/2012/05/Edit-Proxy-Server.jpg\" rel=\"example4\"><img title=\"Edit-Proxy-Server\" src=\"http://www.mrwen.net/wp-content/uploads/2012/05/Edit-Proxy-Server-300x241.jpg\" alt=\"\" width=\"300\" height=\"241\" /></a>\r\n\r\n<strong>第四）</strong>修改默认代理，同样是“preferences”界面点击Proxy Server，选择Choose Proxy Server，将默认的Proxy改成刚才添加的；\r\n\r\n&nbsp;\r\n\r\n<strong><a href=\"http://www.mrwen.net/wp-content/uploads/2012/05/choose-proxy-server.jpg\" rel=\"example4\"><img title=\"choose-proxy-server\" src=\"http://www.mrwen.net/wp-content/uploads/2012/05/choose-proxy-server-300x108.jpg\" alt=\"\" width=\"300\" height=\"108\" /></a></strong>\r\n\r\n<strong>第五）</strong>使用AutoProxy会自动根据已定规则决定是否使用Proxy的。碉堡了。\r\n\r\n都设置好了就可以任你游了。速度刚刚的。\r\n\r\n<a title=\"老文乱谈\" href=\"http://www.mrwen.net/\">老文</a>上YouTube看720P视频居然完全不需要缓冲。\r\n\r\n&nbsp;\r\n\r\n遇到问题？请登录<a href=\"http://code.google.com/p/goagent/\">http://code.google.com/p/goagent/</a>或者留言。\r\n\r\n如果你使用的是linux或者mac，请阅读https://code.google.com/p/goagent/的FAQ。\r\n\r\n切记需要连接外网时运行文件夹local下的goagent.exe，否则无法连接外网。','GoAgent翻墙利器图文设置教程','','publish','open','open','','goagent%e7%bf%bb%e5%a2%99%e5%88%a9%e5%99%a8%e5%9b%be%e6%96%87%e8%ae%be%e7%bd%ae%e6%95%99%e7%a8%8b','','','2012-07-20 01:02:24','2012-07-20 09:02:24','','0','http://yanue.net/?p=332','0','post','','0');
INSERT INTO `wp_posts` VALUES('344','1','2012-07-25 08:47:34','2012-07-25 16:47:34','静态变量只存在于函数作用域内，也就是说，静态变量只存活在栈中。一般的函数内变量在函数结束后会释放，比如局部变量，但是静态变量却不会。就是说，下次再调用这个函数的时候，该变量的值会保留下来。\r\n\r\n只要在变量前加上关键字static，该变量就成为静态变量了。\r\n<div id=\"highlighter_722157\">\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\n	function test()\r\n	{\r\n		static $nm = 1;\r\n		$nm = $nm * 2;\r\n		print $nm.&quot;&lt;br /&gt;&quot;;\r\n	}\r\n\r\n    // 第一次执行，$nm = 2\r\n	test();\r\n    // 第一次执行，$nm = 4\r\n	test();\r\n    // 第一次执行，$nm = 8\r\n	test();\r\n?&gt;</pre>\r\n</div>\r\n程序运行结果：\r\n<div id=\"highlighter_401974\">\r\n<pre class=\"lang_php decode_true\">2\r\n4\r\n8</pre>\r\n</div>\r\n函数test()执行后，变量$nm的值都保存了下来了。\r\n\r\n在class中经常使用到静态属性，比如静态成员、静态方法。\r\n<h4>Program List：类的静态成员</h4>\r\n静态变量$nm属于类nowamagic，而不属于类的某个实例。这个变量对所有实例都有效。\r\n\r\n::是作用域限定操作符，这里用的是self作用域，而不是$this作用域，$this作用域只表示类的当前实例，self::表示的是类本身。\r\n<div id=\"highlighter_450489\">\r\n<pre class=\"lang_php decode_true\">    \r\n&lt;?php\r\n	class nowamagic \r\n	{\r\n		public static $nm = 1;\r\n\r\n		function nmMethod() \r\n		{\r\n			self::$nm += 2;\r\n			echo self::$nm . &#039;&lt;br /&gt;&#039;;\r\n		}\r\n	}\r\n\r\n	$nmInstance1 = new nowamagic();\r\n	$nmInstance1 -&gt; nmMethod();\r\n\r\n	$nmInstance2 = new nowamagic();\r\n	$nmInstance2 -&gt; nmMethod();\r\n?&gt;</pre>\r\n</div>\r\n程序运行结果：\r\n<div id=\"highlighter_881653\">\r\n<pre class=\"lang_php decode_true\">3\r\n5</pre>\r\n</div>\r\n<h4>Program List：静态属性</h4>\r\n<div id=\"highlighter_911652\">\r\n<pre class=\"lang_php decode_true\">    \r\n&lt;?php\r\n	class NowaMagic\r\n	{\r\n    	public static $nm = &#039;www.yanue.net&#039;;\r\n\r\n    	public function nmMethod() \r\n		{\r\n        	return self::$nm;\r\n    	}\r\n	}\r\n\r\n	class Article extends NowaMagic\r\n	{\r\n    	public function articleMethod() \r\n		{\r\n        	return parent::$nm;\r\n    	}\r\n	}\r\n\r\n	// 通过作用于限定操作符访问静态变量\r\n	print NowaMagic::$nm . &quot;&lt;br /&gt;&quot;;\r\n\r\n	// 调用类的方法\r\n	$nowamagic = new NowaMagic();\r\n	print $nowamagic-&gt;nmMethod() . &quot;&lt;br /&gt;&quot;;\r\n\r\n	print Article::$nm . &quot;&lt;br /&gt;&quot;;\r\n\r\n	$nmArticle = new Article();\r\n	print $nmArticle-&gt;nmMethod() . &quot;&lt;br /&gt;&quot;;\r\n?&gt;</pre>\r\n</div>\r\n程序运行结果：\r\n<div id=\"highlighter_269277\">\r\n<pre class=\"lang_php decode_true\">www.yanue.net\r\nwww.yanue.net\r\nwww.yanue.net\r\nwww.yanue.net</pre>\r\n</div>\r\n<h4>Program List：简单的静态构造器</h4>\r\nPHP没有静态构造器，你可能需要初始化静态类，有一个很简单的方法，在类定义后面直接调用类的Demonstration()方法。\r\n<div id=\"highlighter_502543\">\r\n<pre class=\"lang_php decode_true\">    \r\n&lt;?php\r\nfunction Demonstration()\r\n{\r\n    return &#039;This is the result of demonstration()&#039;;\r\n}\r\n\r\nclass MyStaticClass\r\n{\r\n    //public static $MyStaticVar = Demonstration(); //!!! FAILS: syntax error\r\n    public static $MyStaticVar = null;\r\n\r\n    public static function MyStaticInit()\r\n    {\r\n        //this is the static constructor\r\n        //because in a function, everything is allowed, including initializing using other functions\r\n\r\n        self::$MyStaticVar = Demonstration();\r\n    }\r\n} MyStaticClass::MyStaticInit(); //Call the static constructor\r\n\r\necho MyStaticClass::$MyStaticVar;\r\n//This is the result of demonstration()\r\n?&gt;</pre>\r\n</div>\r\n程序运行结果：\r\n<div id=\"highlighter_220462\">\r\n<pre class=\"lang_php decode_true\">This is the result of demonstration()</pre>\r\n</div>','PHP static之静态变量和属性方法','','publish','open','open','','php-static%e4%b9%8b%e9%9d%99%e6%80%81%e5%8f%98%e9%87%8f%e5%92%8c%e5%b1%9e%e6%80%a7%e6%96%b9%e6%b3%95','','','2013-06-06 18:00:46','2013-06-07 02:00:46','','0','http://yanue.net/?p=344','0','post','','0');
INSERT INTO `wp_posts` VALUES('337','1','2012-07-10 05:48:56','2012-07-10 13:48:56','PHP取得文件后缀，关于获取文件的扩展名有很多种方式，下面提供三种获取文件后缀的方法，大家可以研究下，具体代码就不解释了。直接看代码吧。\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\n//方法一:\r\nfunction extend_1($file_name)\r\n{\r\n$retval=&quot;&quot;;\r\n$pt=strrpos($file_name, &quot;.&quot;);\r\nif ($pt) $retval=substr($file_name, $pt+1, strlen($file_name) - $pt);\r\nreturn ($retval);\r\n}\r\n\r\n//方法二\r\nfunction extend_2($file_name)\r\n{\r\n$extend = pathinfo($file_name);\r\n$extend = strtolower($extend[&quot;extension&quot;]);\r\nreturn $extend;\r\n}\r\n\r\n//方法三\r\nfunction extend_3($file_name)\r\n{\r\n$extend =explode(&quot;.&quot; , $file_name);\r\n$va=count($extend)-1;\r\nreturn $extend[$va];\r\n}\r\n?&gt;</pre>\r\n&nbsp;','PHP获取文件后缀多种方法','','publish','open','open','','php%e8%8e%b7%e5%8f%96%e6%96%87%e4%bb%b6%e5%90%8e%e7%bc%80%e5%a4%9a%e7%a7%8d%e6%96%b9%e6%b3%95','','','2012-07-10 05:48:56','2012-07-10 13:48:56','','0','http://yanue.net/?p=337','0','post','','0');
INSERT INTO `wp_posts` VALUES('526','1','2013-06-22 22:45:06','2013-06-23 06:45:06','<pre>问题现象：Linux系统下用普通用户登录，然后用su命令切换到超级用户，再输入ifconfig命令，报错：command not find。而如果用su -命令切换到超级用户，再输入ifconfig命令则能成功执行。</pre>\r\n<pre>解决方案：大部分Linux发行版的默认账户是普通用户，而更改系统文件或者执行某些命令，需要root身份才能进行，这就需要从当前用户切换到root用户,Linux中切换用户的命令是su或su -,下面就su命令和su -命令最大的本质区别给大家详解一下：\r\n\r\n 前者只是切换了root身份，但Shell环境仍然是普通用户的Shell；而后者连用户和Shell环境一起切换成root身份了。只有切换了Shell环境才不会出现PATH环境变量错误。su切换成root用户以后，pwd一下，发现工作目录仍然是普通用户的工作目录；而用su -命令切换以后，工作目录变成root的工作目录了。用echo $PATH命令看一下su和su -以后的环境变量有何不同。以此类推，要从当前用户切换到其它用户也一样，应该使用su -命令。\r\n\r\n打个比方：\r\n在普通用户下输入：\r\n$pwd\r\n/home/test (当前用户目录)\r\n$su\r\n******        (输入密码)\r\n#pwd         (再次查看路径)\r\n/home/test (还是当前用户目录)</pre>\r\n<pre>但是如果换成su -的话结果如下：\r\n$pwd\r\n/home/test(当前用户目录)\r\n$su -\r\n******        (输入密码)\r\n#pwd         (再次查看路径)\r\n/root    (切换到超级用户目录)</pre>\r\n&nbsp;','Linux下su与su -命令的本质区别','','publish','open','open','','linux%e4%b8%8bsu%e4%b8%8esu-%e5%91%bd%e4%bb%a4%e7%9a%84%e6%9c%ac%e8%b4%a8%e5%8c%ba%e5%88%ab','','','2013-06-22 22:45:21','2013-06-23 06:45:21','','0','http://www.yanue.net/?p=526','0','post','','0');
INSERT INTO `wp_posts` VALUES('346','1','2012-07-25 08:58:37','2012-07-25 16:58:37','一切尽在注释里（来源于网络）\r\n<pre class=\"lang_php decode_true\">$long=&quot;big_long_variable_name&quot;;\r\n$$long=&quot;PHP&quot;; /* 用存放在变量$long里的字符串作为新变量的变量名，等同于$big_long_variable_name=&quot;PHP&quot;; */\r\n$short=&amp; $big_long_variable_name; /* 取变量$big_long_variable_name的值赋给变量$short，此时$short的值为&quot;PHP&quot;，等同于$short=&amp; $$long; */\r\nprint &quot;01 /$short is $short.&quot;; /* &quot;/$&quot;是转义序列，表示输出一个美元符号$，下同。本语句的作用是输出：01 $short is PHP. */\r\nprint &quot;02 Long is $big_long_variable_name.&quot;; /* 输出：02 Long is PHP. */\r\n?&gt;\r\n\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n\r\n&lt;?php $big_long_variable_name.=&quot; rocks!&quot;; /* 重新对$big_long_variable_name赋值。重新赋值过程中，由于在$big_long_variable_name的后面添加了.（点号），因而变量$big_long_variable_name此时的值应为原值（&quot;PHP&quot;）+新值（&quot; rocks!&quot;），即变量$big_long_variable_name当前完整的值为&quot;PHP rocks!&quot;。下同。*/\r\nprint &quot;03 /$short is $short&quot;; /* 输出：03 $short is PHP rocks! */\r\nprint &quot;04 Long is $big_long_variable_name&quot;; /* 输出：04 Long is PHP rocks! */\r\n?&gt;\r\n\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n\r\n05 $short is PHP rocks!\r\n06 Long is PHP rocks!\r\n\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n\r\n&lt;?php $short.=&quot;Programming $short&quot;; /* 重新对变量$short赋值。由于在$short后面添加了.（点号），因此请参考上例分析$short的值。*/\r\nprint &quot;07 /$short is $short&quot;; /* 输出：07 $short is PHP rocks!Programming PHP rocks! */\r\nprint &quot;08 Long is $big_long_variable_name&quot;; /* 由于变量$short被重新赋值为Programming PHP rocks!，因而变量$big_long_variable_name的值也与$short一同被改变为&quot;PHP rocks!Programming PHP rocks!&quot;。本语句输出：08 Long is PHP rocks!Programming PHP rocks!注意，如果是对具有相同值的一个变量进行销毁unset( )，则另一个变量不适用于此种情况，即不会随之被一同销毁。*/\r\n?&gt;\r\n\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n\r\n09 $short is Programming PHP rocks!\r\n10 Long is Programming PHP rocks!\r\n\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n\r\n&lt;?php $big_long_variable_name.=&quot;Web Programming $short&quot;; /* 变量$big_long_variable_name被重新赋值，此时它完整的值应为PHP rocks!Programming PHP rocks!Web Programming PHP rocks!Programming PHP rocks!。变量$short的值此时与变量$big_long_variable_name一致。请分别参考第5处、第10处注释进行分析。*/\r\nprint &quot;11 /$short is $short&quot;; /* 输出：11 PHP rocks!Programming PHP rocks!Web Programming PHP rocks!Programming PHP rocks! */\r\nprint &quot;12 Long is $big_long_variable_name&quot;;\r\n?&gt;\r\n\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n\r\n&lt;?php\r\nunset($big_long_variable_name); /* 用unset( )销毁变量$big_long_variable_name，变量$short不会因此受到任何影响。*/\r\nprint &quot;13 /$short is $short&quot;; /* 虽然销毁了变量$big_long_variable_name，但$short没有受到影响，它的值仍是最近一次被赋予的PHP rocks!Programming PHP rocks!Web Programming PHP rocks!Programming PHP rocks! */\r\nprint &quot;14 Long is $big_long_variable_name.&quot;; /* 变量$big_long_variable_name已被销毁，故而无值。输出：14 Long is. */\r\nsnow; \r\n?&gt;\r\n\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n\r\n&lt;?php $short=&quot;No point TEST1&quot;; /* 重新对变量$short赋值。由于这次没有在$short后面添加.（点号），因此$short当前的值为&quot;No point TEST1&quot;。*/\r\nprint &quot;15 /$short is $short.&quot;; /* 输出：15 $short is No point TEST1. */\r\n$short=&quot;No point TEST2 $short&quot;; /* 重新对变量$short赋值。没在$short的后面添加.（点号），但引用了它自身最近一次的值&quot;No point TEST1&quot;。*/\r\nprint &quot;16 /$short is $short.&quot;; /* 输出：16 $short is No point TEST2 No point TEST1. */</pre>','PHP可变变量、变量引用与销毁','','publish','open','open','','php%e5%8f%af%e5%8f%98%e5%8f%98%e9%87%8f%e3%80%81%e5%8f%98%e9%87%8f%e5%bc%95%e7%94%a8%e4%b8%8e%e9%94%80%e6%af%81','','','2012-07-25 09:01:11','2012-07-25 17:01:11','','0','http://yanue.net/?p=346','0','post','','0');
INSERT INTO `wp_posts` VALUES('349','1','2012-07-26 05:05:10','2012-07-26 13:05:10','<strong>数组操作的基本函数</strong>\r\n数组的键名和值\r\n<pre class=\"lang_php decode_true\">array_values($arr);//获得数组的值\r\narray_keys($arr);//获得数组的键名\r\narray_flip($arr);//数组中的值与键名互换（如果有重复前面的会被后面的覆盖）\r\nin_array(&quot;apple&quot;,$arr);//在数组中检索apple\r\narray_search(&quot;apple&quot;,$arr);//在数组中检索apple ，如果存在返回键名\r\narray_key_exists(&quot;apple&quot;,$arr);//检索给定的键名是否存在数组中\r\nisset($arr[apple]);//检索给定的键名是否存在数组中</pre>\r\n数组的内部指针\r\n<pre class=\"lang_php decode_true\">current($arr);//返回数组中的当前单元\r\npos($arr);//返回数组中的当前单元\r\nkey($arr);//返回数组中当前单元的键名\r\nprev($arr);//将数组中的内部指针倒回一位\r\nnext($arr);//将数组中的内部指针向前移动一位\r\nend($arr);//将数组中的内部指针指向最后一个单元\r\nreset($arr;//将数组中的内部指针指向第一个单元\r\neach($arr);//将返回数组当前元素的一个键名/值的构造数组，并使数组指针向前移动一位\r\nlist($key,$value)=each($arr);//获得数组当前元素的键名和值</pre>\r\n数组和变量之间的转换\r\n<pre class=\"lang_php decode_true\">extract($arr);//用于把数组中的元素转换成变量导入到当前文件中，键名当作变量名，值作为变量值\r\n//注：（第二个参数很重要，可以看手册使用）使用方法 echo $a;\r\ncompact(var1,var2,var3);//用给定的变量名创建一个数组</pre>\r\n二、数组的分段和填充\r\n数组的分段\r\n<pre class=\"lang_php decode_true\">array_slice($arr,0,3);//可以将数组中的一段取出，此函数忽略键名\r\narray_splice($arr,0,3，array(&quot;black&quot;,&quot;maroon&quot;));//可以将数组中的一段取出，与上个函数不同在于返回的序列从原数组中删除</pre>\r\n分割多个数组\r\n<pre class=\"lang_php decode_true\">array_chunk($arr,3,TRUE);//可以将一个数组分割成多个，TRUE为保留原数组的键名</pre>\r\n数组的填充\r\n<pre class=\"lang_php decode_true\">array_pad($arr,5,&#039;x&#039;);//将一个数组填补到制定长度</pre>\r\n三、数组与栈\r\n<pre class=\"lang_php decode_true\">array_push($arr,&quot;apple&quot;,&quot;pear&quot;);//将一个或多个元素压入数组栈的末尾（入栈），返回入栈元素的个数\r\narray_pop($arr);//将数组栈的最后一个元素弹出（出栈）</pre>\r\n四、数组与列队\r\n<pre class=\"lang_php decode_true\">array_shift($arr);//数组中的第一个元素移出并作为结果返回（数组长度减1，其他元素向前移动一位，数字键名改为从零技术，文字键名不变）\r\narray_unshift($arr,&quot;a&quot;,array(1,2));//在数组的开头插入一个或多个元素</pre>\r\n五、回调函数\r\n<pre class=\"lang_php decode_true\">array_walk($arr,&#039;function&#039;,&#039;words&#039;);//使用用户函数对数组中的每个成员进行处理（第三个参数传递给回调函数function）\r\narray_map(&quot;function&quot;,$arr1,$arr2);//可以处理多个数组（当使用两个或更多数组时，他们的长度应该相同）\r\narray_filter($arr,&quot;function&quot;);//使用回调函数过滤数组中的每个元素，如果回调函数为TRUE，数组的当前元素会被包含在返回的结果数组中，数组的键名保留不变\r\narray_reduce($arr,&quot;function&quot;,&quot;*&quot;);//转化为单值函数（*为数组的第一个值）</pre>\r\n六、数组的排序\r\n通过元素值对数组排序\r\n<pre class=\"lang_php decode_true\">sort($arr);//由小到大的顺序排序（第二个参数为按什么方式排序）忽略键名的数组排序\r\nrsort($arr);//由大到小的顺序排序（第二个参数为按什么方式排序）忽略键名的数组排序\r\nusort($arr,&quot;function&quot;);//使用用户自定义的比较函数对数组中的值进行排序（function中有两个参数，0表示相等，正数表示第一个大于第二个，负数表示第一个小于第二个）忽略键名的数组排序\r\nasort($arr);//由小到大的顺序排序（第二个参数为按什么方式排序）保留键名的数组排序\r\narsort($arr);//由大到小的顺序排序（第二个参数为按什么方式排序）保留键名的数组排序\r\nuasort($arr,&quot;function&quot;);//使用用户自定义的比较函数对数组中的值进行排序（function中有两个参数，0表示相等，正数表示第一个大于第二个，负数表示第一个小于第二个）保留键名的数组排序</pre>\r\n通过键名对数组排序\r\n<pre class=\"lang_php decode_true\">ksort($arr);//按照键名正序排序\r\nkrsort($arr);//按照键名逆序排序\r\nuksort($arr,&quot;function&quot;);//使用用户自定义的比较函数对数组中的键名进行排序（function中有两个参数，0表示相等，正数表示第一个大于第二个，负数表示第一个小于第二个）</pre>\r\n自然排序法排序\r\n<pre class=\"lang_php decode_true\">natsort($arr);//自然排序（忽略键名）\r\nnatcasesort($arr);//自然排序（忽略大小写，忽略键名）</pre>\r\n七、数组的计算\r\n数组元素的求和\r\n<pre class=\"lang_php decode_true\">array_sum($arr);//对数组内部的所有元素做求和运算</pre>\r\n数组的合并\r\n<pre class=\"lang_php decode_true\">array_merge($arr1,$arr2);//合并两个或多个数组（相同的字符串键名，后面的覆盖前面的，相同的数字键名，后面的不会做覆盖操作，而是附加到后面）\r\n“+”$arr1+$arr2;对于相同的键名只保留后一个\r\narray_merge_recursive($arr1,$arr2);//递归合并操作，如果数组中有相同的字符串键名，这些值将被合并到一个数组中去。如果一个值本身是一个数组，将按照相应的键名把它合并为另一个数组。当数组具有相同的数组键名时，后一个值将不会覆盖原来的值，而是附加到后面</pre>\r\n数组的差集\r\n<pre class=\"lang_php decode_true\">array_diff($arr1,$arr2);//返回差集结果数组\r\narray_diff_assoc($arr1,$arr2,$arr3);//返回差集结果数组，键名也做比较</pre>\r\n数组的交集\r\n<pre class=\"lang_php decode_true\">array_intersect($arr1,$arr2);//返回交集结果数组\r\narray_intersect_assoc($arr1,$arr2);//返回交集结果数组，键名也做比较</pre>\r\n八、其他的数组函数\r\n<pre class=\"lang_php decode_true\">range(0,12);//创建一个包含指定范围单元的数组\r\narray_unique($arr);//移除数组中重复的值，新的数组中会保留原始的键名\r\narray_reverse($arr,TRUE);//返回一个单元顺序与原数组相反的数组，如果第二个参数为TRUE保留原来的键名\r\n//srand((float)microtime()*10000000); //随机种子触发器\r\narray_rand($arr,2);//从数组中随机取出一个或 多个元素\r\nshuffle($arr);//将数组的顺序打乱</pre>','PHP数组函数及说明','','publish','open','open','','php%e6%95%b0%e7%bb%84%e5%87%bd%e6%95%b0%e5%8f%8a%e8%af%b4%e6%98%8e','','','2012-07-26 05:05:10','2012-07-26 13:05:10','','0','http://yanue.net/?p=349','0','post','','0');
INSERT INTO `wp_posts` VALUES('357','1','2012-08-25 02:05:54','2012-08-25 10:05:54','纯css实现div左右等高原理很简单，看了就知道\r\n\r\n主要使用margin负值+padding正值来实现，外层超出隐藏就ok了，具体看实例\r\n<pre class=\"lang_php decode_true\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;meta charset=utf-8&quot; /&gt;\r\n&lt;title&gt;纯css实现div左右等高&lt;/title&gt;\r\n&lt;style type=&quot;text/css&quot;&gt;\r\n*{\r\n margin:0;\r\n padding:0;\r\n}\r\n#wrap{\r\n overflow:hidden;\r\n width:1000px;\r\n margin:0 auto;\r\n}\r\n#left,#center{\r\n margin-bottom:-10000px;\r\n padding-bottom:10000px;\r\n}\r\n#left{\r\n float:left;\r\n width:250px;\r\n background:#00FFFF;\r\n }\r\n#center{\r\n float:left;\r\n width:500px;\r\n background:#FF0000;\r\n }\r\n\r\n&lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;div id=&quot;wrap&quot;&gt;\r\n &lt;div id=&quot;left&quot;&gt;\r\n  &lt;p&gt;left&lt;/p&gt;\r\n  &lt;p&gt;left&lt;/p&gt;\r\n  &lt;p&gt;left&lt;/p&gt;\r\n  &lt;p&gt;left&lt;/p&gt;\r\n  &lt;p&gt;left&lt;/p&gt;\r\n &lt;/div&gt;\r\n &lt;div id=&quot;center&quot;&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n  &lt;p&gt;center&lt;/p&gt;\r\n &lt;/div&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>','纯css实现div左右等高','','publish','open','open','','%e7%ba%afcss%e5%ae%9e%e7%8e%b0div%e5%b7%a6%e5%8f%b3%e7%ad%89%e9%ab%98','','','2012-08-25 02:05:54','2012-08-25 10:05:54','','0','http://yanue.net/?p=357','0','post','','0');
INSERT INTO `wp_posts` VALUES('359','1','2012-08-25 02:12:19','2012-08-25 10:12:19','带头像三级评论回复html+css代码，模式和qq空间里面的说说一样，留一个备用\r\n<pre class=\"lang:php decode:true \">&lt;!DOCTYPE HTML&gt;\r\n&lt;html lang=\"zh-CN\"&gt;\r\n    &lt;head&gt;\r\n        &lt;meta charset=\"UTF-8\"&gt;\r\n        &lt;title&gt;带头像三级评论回复html+css代码&lt;/title&gt;\r\n        &lt;style type=\"text/css\"&gt;\r\n            @CHARSET \"UTF-8\";\r\n            * {\r\n                margin: 0;\r\n                padding: 0;\r\n            }\r\n\r\n            .feed {\r\n                font-family: \"微软雅黑\";\r\n                width: 720px;\r\n                margin: 8px 0;\r\n            }\r\n\r\n            .avatar {\r\n                width: 50px;\r\n                float: left;\r\n                margin: 0 8px 0 0;\r\n                box-shadow: 0 0 3px #e0e0e0;\r\n                border-radius: 5px;\r\n                border: 1px solid #e0e0e0;\r\n            }\r\n\r\n            .feed .avatar img {\r\n                width: 50px;\r\n                height: 50px;\r\n            }\r\n\r\n            .feed .box1 {\r\n                width: 640px;\r\n                float: left;\r\n                background: #f6f6f6;\r\n                border: 1px solid #e0e0e0;\r\n                border-radius: 5px;\r\n            }\r\n\r\n            .feed .box1 .current {\r\n                font-size: 14px;\r\n                margin: 8px;\r\n            }\r\n\r\n            .feed .box1 .info {\r\n                margin: 0 8px;\r\n            }\r\n\r\n            .feed .box1 .info span {\r\n                float: right;\r\n            }\r\n\r\n            .feed .box1 .line {\r\n                padding: 8px 0 0 0;\r\n                border-bottom: 1px solid #e0e0e0;\r\n            }\r\n\r\n            .feed .box1 .box2 {\r\n                margin: 8px;\r\n                padding: 0 0 8px 0;\r\n                border-bottom: 1px dashed #ccc;\r\n            }\r\n\r\n            .feed .box1 .box2_comments {\r\n                width: 560px;\r\n                overflow: hidden;\r\n                float: left;\r\n            }\r\n\r\n            .feed .box1 .say {\r\n                margin: 0 0 8px;\r\n            }\r\n\r\n            .clear {\r\n                clear: both;\r\n            }\r\n\r\n            .feed .box1 .box2_comments .box3 {\r\n                margin: 8px 0;\r\n            }\r\n\r\n            .feed .box1 .box2_comments .box3_comments {\r\n                float: left;\r\n                width: 500px;\r\n            }\r\n\r\n            .reply_area {\r\n                border: 1px solid #e0e0e0;\r\n                height: 30px;\r\n                line-height: 30px;\r\n                width: 620px;\r\n                margin: 8px;\r\n                color: #666;\r\n                font-size: 12px;\r\n                font-family: \"微软雅黑\";\r\n                clear: both;\r\n            }\r\n\r\n        &lt;/style&gt;\r\n    &lt;/head&gt;\r\n    &lt;body&gt;\r\n        &lt;ul&gt;\r\n            &lt;li class=\"feed\"&gt;\r\n                &lt;div class=\"avatar\"&gt;\r\n                    &lt;img src=\"images/user.jpg\" alt=\"\" /&gt;\r\n                &lt;/div&gt;&lt;!--第一层循环start--&gt;\r\n                &lt;div class=\"box1\"&gt;\r\n                    &lt;p class=\'current\'&gt;\r\n                        &lt;a href=\"\"&gt;user&lt;/a&gt;\r\n                        说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容\r\n                    &lt;/p&gt;\r\n                    &lt;p class=\'info\'&gt;\r\n                        &lt;span&gt;&lt;a href=\"\"&gt;删除&lt;/a&gt;&lt;a href=\"\"&gt;评论&lt;/a&gt;&lt;/span&gt;\r\n                        &lt;strong&gt;刚刚&lt;/strong&gt;\r\n                        通过QQ空间 \r\n                    &lt;/p&gt;\r\n                    &lt;p class=\"line\"&gt;\r\n                    &lt;/p&gt;\r\n                    &lt;!--第二层循环start--&gt;\r\n                    &lt;div class=\"box2\"&gt;\r\n                        &lt;div class=\"avatar\"&gt;\r\n                            &lt;img src=\"images/user.jpg\" alt=\"\" /&gt;\r\n                        &lt;/div&gt;\r\n                        &lt;div class=\"box2_comments\"&gt;\r\n                            &lt;p class=\'say\'&gt;\r\n                                &lt;a href=\"\"&gt;user&lt;/a&gt;\r\n                                说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容\r\n                            &lt;/p&gt;\r\n                            &lt;p&gt;\r\n                                &lt;strong&gt;刚刚&lt;/strong&gt;\r\n                                &lt;a href=\"\"&gt;删除&lt;/a&gt;\r\n                                &lt;a href=\"\"&gt;回复&lt;/a&gt;\r\n                            &lt;/p&gt;\r\n                            &lt;!--第三层循环start--&gt;\r\n                            &lt;div class=\"box3\"&gt;\r\n                                &lt;div class=\"avatar\"&gt;\r\n                                    &lt;img src=\"images/user.jpg\" alt=\"\" /&gt;\r\n                                &lt;/div&gt;\r\n                                &lt;div class=\"box3_comments\"&gt;\r\n                                    &lt;p class=\'say\'&gt;\r\n                                        &lt;a href=\"\"&gt;user&lt;/a&gt;\r\n                                        说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容\r\n                                    &lt;/p&gt;\r\n                                    &lt;p&gt;\r\n                                        &lt;strong&gt;刚刚&lt;/strong&gt;\r\n                                        &lt;a href=\"\"&gt;删除&lt;/a&gt;\r\n                                        &lt;a href=\"\"&gt;回复&lt;/a&gt;\r\n                                    &lt;/p&gt;\r\n                                &lt;/div&gt;\r\n                                &lt;div class=\"clear\"&gt;\r\n                                &lt;/div&gt;\r\n                            &lt;/div&gt;\r\n                            &lt;!--第三层循环end--&gt;\r\n                        &lt;/div&gt;\r\n                        &lt;div class=\"clear\"&gt;\r\n                        &lt;/div&gt;\r\n                    &lt;/div&gt;\r\n                    &lt;div class=\"box2\"&gt;\r\n                        &lt;div class=\"avatar\"&gt;\r\n                            &lt;img src=\"images/user.jpg\" alt=\"\" /&gt;\r\n                        &lt;/div&gt;\r\n                        &lt;div class=\"box2_comments\"&gt;\r\n                            &lt;p class=\'say\'&gt;\r\n                                &lt;a href=\"\"&gt;user&lt;/a&gt;\r\n                                说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容\r\n                            &lt;/p&gt;\r\n                            &lt;p&gt;\r\n                                &lt;strong&gt;刚刚&lt;/strong&gt;\r\n                                &lt;a href=\"\"&gt;删除&lt;/a&gt;\r\n                                &lt;a href=\"\"&gt;回复&lt;/a&gt;\r\n                            &lt;/p&gt;\r\n                            &lt;!--第三层循环start--&gt;\r\n                            &lt;div class=\"box3\"&gt;\r\n                                &lt;div class=\"avatar\"&gt;\r\n                                    &lt;img src=\"images/user.jpg\" alt=\"\" /&gt;\r\n                                &lt;/div&gt;\r\n                                &lt;div class=\"box3_comments\"&gt;\r\n                                    &lt;p class=\'say\'&gt;\r\n                                        &lt;a href=\"\"&gt;user&lt;/a&gt;\r\n                                        说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容\r\n                                    &lt;/p&gt;\r\n                                    &lt;p&gt;\r\n                                        &lt;strong&gt;刚刚&lt;/strong&gt;\r\n                                        &lt;a href=\"\"&gt;删除&lt;/a&gt;\r\n                                        &lt;a href=\"\"&gt;回复&lt;/a&gt;\r\n                                    &lt;/p&gt;\r\n                                &lt;/div&gt;\r\n                                &lt;div class=\"clear\"&gt;\r\n                                &lt;/div&gt;\r\n                            &lt;/div&gt;\r\n                            &lt;div class=\"box3\"&gt;\r\n                                &lt;div class=\"avatar\"&gt;\r\n                                    &lt;img src=\"images/user.jpg\" alt=\"\" /&gt;\r\n                                &lt;/div&gt;\r\n                                &lt;div class=\"box3_comments\"&gt;\r\n                                    &lt;p class=\'say\'&gt;\r\n                                        &lt;a href=\"\"&gt;user&lt;/a&gt;\r\n                                        说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容说说内容\r\n                                    &lt;/p&gt;\r\n                                    &lt;p&gt;\r\n                                        &lt;strong&gt;刚刚&lt;/strong&gt;\r\n                                        &lt;a href=\"\"&gt;删除&lt;/a&gt;\r\n                                        &lt;a href=\"\"&gt;回复&lt;/a&gt;\r\n                                    &lt;/p&gt;\r\n                                &lt;/div&gt;\r\n                                &lt;div class=\"clear\"&gt;\r\n                                &lt;/div&gt;\r\n                            &lt;/div&gt;\r\n                            &lt;!--第三层循环end--&gt;\r\n                        &lt;/div&gt;\r\n                        &lt;div class=\"clear\"&gt;\r\n                        &lt;/div&gt;\r\n                    &lt;/div&gt;\r\n                    &lt;!--第二层循环end--&gt;\r\n                    &lt;p class=\"line\"&gt;\r\n                    &lt;/p&gt;\r\n                    &lt;textarea name=\"\" class=\"reply_area\"&gt;\r\n                        我也说两句\r\n                    &lt;/textarea&gt;\r\n                &lt;/div&gt;\r\n                &lt;!--第一层循环end--&gt;\r\n                &lt;div class=\"clear\"&gt;\r\n                &lt;/div&gt;\r\n            &lt;/li&gt;\r\n        &lt;/ul&gt;\r\n    &lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n&nbsp;','带头像三级评论回复html+css代码','','publish','open','open','','%e5%b8%a6%e5%a4%b4%e5%83%8f%e4%b8%89%e7%ba%a7%e8%af%84%e8%ae%ba%e5%9b%9e%e5%a4%8dhtmlcss%e4%bb%a3%e7%a0%81','','','2013-12-11 17:39:36','2013-12-12 01:39:36','','0','http://yanue.net/?p=359','0','post','','3');
INSERT INTO `wp_posts` VALUES('362','1','2012-08-25 02:21:16','2012-08-25 10:21:16','很多时候需要在鼠标点击非目标区域div将目标div隐藏的效果，这是需要判断点击事件是否在目标区域内，\r\n\r\njquery的实现方法是：(最近更新,未测)\r\n<pre class=\"lang_php decode_true\">$(document).click(function(e){ \r\n	e = window.event || e; // 兼容IE7\r\n	obj = $(e.srcElement || e.target);\r\n 	  if ($(obj).is(&quot;#elem,#elem *&quot;)) { \r\n 	   // alert(&#039;内部区域&#039;); \r\n  	} else {\r\n  		alert(&#039;你的点击不在目标区域&#039;);\r\n	} \r\n});</pre>\r\n这样就可以进行其他效果的操作了,另外一种类似思路:<a href=\"http://www.yanue.net/archives/439.html\" target=\"_blank\">jquery判断点击区域 隐藏/显示其他区域</a>\r\n\r\n原始写法:(不兼容ff)\r\n<pre class=\"lang_php decode_true\">$(document).click(function(){ \r\n 	  if ($(event.srcElement).is(&quot;#elem,#elem *&quot;)) { \r\n 	   // alert(&#039;内部区域&#039;); \r\n  	  } else {\r\n  		alert(&#039;你的点击不在目标区域&#039;);\r\n	  } \r\n});</pre>\r\n&nbsp;','jquery判断点击事件是否在目标区域','','publish','open','open','','jquery%e5%88%a4%e6%96%ad%e7%82%b9%e5%87%bb%e4%ba%8b%e4%bb%b6%e6%98%af%e5%90%a6%e5%9c%a8%e7%9b%ae%e6%a0%87%e5%8c%ba%e5%9f%9f','','','2013-01-11 08:10:55','2013-01-11 16:10:55','','0','http://yanue.net/?p=362','0','post','','4');
INSERT INTO `wp_posts` VALUES('371','1','2012-09-19 23:07:09','2012-09-20 07:07:09','<pre class=\"lang_php decode_true\"></pre>\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\n//例举一个URL格式的字符串:\r\n$str = &#039;http://test.com/testdir/index.php?param1=10&amp;param2=20&amp;param3=30&amp;param4=40&amp;param5=50&amp;param6=60&#039;;\r\n\r\n//1.0 用parse_url解析URL,此处是$str\r\n$arr = parse_url($str);\r\nvar_dump($arr);\r\n\r\n\r\n//2.0 将URL中的参数取出来放到数组里\r\n$arr_query = convertUrlQuery($arr[&#039;query&#039;]);\r\nvar_dump($arr_query);\r\n\r\n\r\n//3.0 将 参数数组 再变回 字符串形式的参数格式\r\nvar_dump(getUrlQuery($arr_query));\r\n\r\n\r\n/** \r\n * Returns the url query as associative array \r\n * \r\n * @param    string    query \r\n * @return    array    params \r\n */ \r\nfunction convertUrlQuery($query)\r\n{ \r\n    $queryParts = explode(&#039;&amp;&#039;, $query); \r\n    \r\n    $params = array(); \r\n    foreach ($queryParts as $param) \r\n	{ \r\n        $item = explode(&#039;=&#039;, $param); \r\n        $params[$item[0]] = $item[1]; \r\n    } \r\n    \r\n    return $params; \r\n}\r\n\r\nfunction getUrlQuery($array_query)\r\n{\r\n	$tmp = array();\r\n	foreach($array_query as $k=&gt;$param)\r\n	{\r\n		$tmp[] = $k.&#039;=&#039;.$param;\r\n	}\r\n	$params = implode(&#039;&amp;&#039;,$tmp);\r\n	return $params;\r\n}</pre>','PHP解析URL参数','','publish','open','open','','php%e8%a7%a3%e6%9e%90url%e5%8f%82%e6%95%b0','','','2012-09-19 23:07:09','2012-09-20 07:07:09','','0','http://yanue.net/?p=371','0','post','','0');
INSERT INTO `wp_posts` VALUES('433','1','2013-01-11 06:45:03','2013-01-11 14:45:03','<pre class=\"lang_php decode_true\">php创建打开文件和文件夹简单实例\r\n实例:\r\n&lt;?php\r\n$dir = &#039;logs/&#039;;\r\n$file = $dir.&#039;log_&#039;.date(&#039;Ymd&#039;).&#039;.txt&#039;;\r\nif (! file_exists ( $dir )) {\r\nmkdir ( $dir );\r\n}\r\nif(!file_exists($file)){	    //如果文件不存在（默认为当前目录下）\r\n$fs = fopen($file,&#039;w+&#039;);\r\n}else{\r\n$fs = fopen($file,&#039;a+&#039;);\r\n}\r\n\r\nfwrite($fs,&#039;asd&#039;);\r\nfclose($fs);	    //关闭文件\r\n\r\n?&gt;</pre>','php创建文件及文件夹','','publish','open','open','','php%e5%88%9b%e5%bb%ba%e6%96%87%e4%bb%b6%e5%8f%8a%e6%96%87%e4%bb%b6%e5%a4%b9','','','2013-01-11 06:45:03','2013-01-11 14:45:03','','0','http://yanue.net/?p=433','0','post','','0');
INSERT INTO `wp_posts` VALUES('489','1','2013-04-15 20:48:53','2013-04-16 04:48:53','<table cellspacing=\"0\" cellpadding=\"5\">\r\n<tbody>\r\n<tr>\r\n<th scope=\"row\">正则表达式</th>\r\n<td>\r\n<div>&lt;(\\S*?) [^&gt;]*&gt;.*?&lt;/\\1&gt;|&lt;.*? /&gt;</div></td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">匹配</th>\r\n<td>&lt;html&gt;hello&lt;/html&gt;|&lt;a&gt;abcd&lt;/a&gt;</td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">不匹配</th>\r\n<td>abc|123|&lt;html&gt;ddd</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;\r\n<table cellspacing=\"0\" cellpadding=\"5\">\r\n<tbody>\r\n<tr>\r\n<th scope=\"row\">正则表达式</th>\r\n<td>\r\n<div>^[^&lt;&gt;`~!/@\\#}$%:;)(_^{&amp;*=|\'+]+$</div></td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">匹配</th>\r\n<td>This is a test</td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">不匹配</th>\r\n<td>&lt;href = | &lt;br&gt; | That\'s it</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;\r\n<table cellspacing=\"0\" cellpadding=\"5\">\r\n<tbody>\r\n<tr>\r\n<th scope=\"row\">正则表达式</th>\r\n<td>\r\n<div>&amp;lt;!--.*?--&amp;gt;</div></td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">匹配</th>\r\n<td>&amp;lt;!-- &amp;lt;h1&amp;gt;this text has been removed&amp;lt;/h1&amp;gt; --&amp;gt; | &amp;lt;!-- yada --&amp;gt;</td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">不匹配</th>\r\n<td>&amp;lt;h1&amp;gt;this text has not been removed&amp;lt;/h1&amp;gt;</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;\r\n<table cellspacing=\"0\" cellpadding=\"5\">\r\n<tbody>\r\n<tr>\r\n<th scope=\"row\">正则表达式</th>\r\n<td>\r\n<div>(\\[(\\w+)\\s*(([\\w]*)=(\'|&amp;quot;)?([a-zA-Z0-9|:|\\/|=|-|.|\\?|&amp;amp;]*)(\\5)?)*\\])([a-zA-Z0-9|:|\\/|=|-|.|\\?|&amp;amp;|\\s]+)(\\[\\/\\2\\])</div></td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">匹配</th>\r\n<td>[link url=&amp;quot;http://www.domain.com/file.extension?getvar=value&amp;amp;secondvar=value&amp;quot;]Link[/li</td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">不匹配</th>\r\n<td>[a]whatever[/b] | [a var1=something var2=somethingelse]whatever[/a] | [a]whatever[a]</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;\r\n<table cellspacing=\"0\" cellpadding=\"5\">\r\n<tbody>\r\n<tr>\r\n<th scope=\"row\">正则表达式</th>\r\n<td>\r\n<div>href=[\\\"\\\'](http:\\/\\/|\\.\\/|\\/)?\\w+(\\.\\w+)*(\\/\\w+(\\.\\w+)?)*(\\/|\\?\\w*=\\w*(&amp;\\w*=\\w*)*)?[\\\"\\\']</div></td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">匹配</th>\r\n<td>href=\"www.yahoo.com\" | href=\"http://localhost/blah/\" | href=\"eek\"</td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">不匹配</th>\r\n<td>href=\"\" | href=eek | href=\"bad example\"</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;\r\n<table cellspacing=\"0\" cellpadding=\"5\">\r\n<tbody>\r\n<tr>\r\n<th scope=\"row\">正则表达式</th>\r\n<td>\r\n<div>&amp;quot;([^&amp;quot;](?:\\\\.|[^\\\\&amp;quot;]*)*)&amp;quot;</div></td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">匹配</th>\r\n<td>&amp;quot;This is a \\&amp;quot;string\\&amp;quot;.&amp;quot;</td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">不匹配</th>\r\n<td>&amp;quot;This is a \\&amp;quot;string\\&amp;quot;.</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;\r\n<table cellspacing=\"0\" cellpadding=\"5\">\r\n<tbody>\r\n<tr>\r\n<th scope=\"row\">正则表达式</th>\r\n<td>\r\n<div>(?i:on(blur|c(hange|lick)|dblclick|focus|keypress|(key|mouse)(down|up)|(un)?load|mouse(move|o(ut|ver))|reset|s(elect|ubmit)))</div></td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">匹配</th>\r\n<td>\r\n<table cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<th scope=\"row\"></th>\r\n<td>\r\n<div>onclick | onsubmit | onmouseover</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">不匹配</th>\r\n<td>click | onandon | mickeymouse</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;\r\n<table cellspacing=\"0\" cellpadding=\"5\">\r\n<tbody>\r\n<tr>\r\n<th scope=\"row\">正则表达式</th>\r\n<td>\r\n<div>(?s)/\\*.*\\*/</div></td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">匹配</th>\r\n<td>/* .................... */ | /* imagine lots of lines here */</td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">不匹配</th>\r\n<td>*/ malformed opening tag */ | /* malformed closing tag /*</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;\r\n<table cellspacing=\"0\" cellpadding=\"5\">\r\n<tbody>\r\n<tr>\r\n<th scope=\"row\">正则表达式</th>\r\n<td>\r\n<div>&lt;(\\S*?) [^&gt;]*&gt;.*?&lt;/\\1&gt;|&lt;.*? /&gt;</div></td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">匹配</th>\r\n<td>&lt;html&gt;hello&lt;/html&gt;|&lt;a&gt;abcd&lt;/a&gt;</td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">不匹配</th>\r\n<td>abc|123|&lt;html&gt;ddd</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;\r\n<table cellspacing=\"0\" cellpadding=\"5\">\r\n<tbody>\r\n<tr>\r\n<th scope=\"row\">正则表达式</th>\r\n<td>\r\n<div>\\xA9</div></td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">匹配</th>\r\n<td>©</td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">不匹配</th>\r\n<td>anything</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;\r\n<table cellspacing=\"0\" cellpadding=\"5\">\r\n<tbody>\r\n<tr>\r\n<th scope=\"row\">正则表达式</th>\r\n<td>\r\n<div>src[^&amp;gt;]*[^/].(?:jpg|bmp|gif)(?:\\&amp;quot;|\\\')</div></td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">匹配</th>\r\n<td>src=&amp;quot;../images/image.jpg&amp;quot; | src=&amp;quot;http://domain.com/images/image.jpg&amp;quot; | src=\'d:\\w</td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">不匹配</th>\r\n<td>src=&amp;quot;../images/image.tif&amp;quot; | src=&amp;quot;cid:value&amp;quot;</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;\r\n<table cellspacing=\"0\" cellpadding=\"5\">\r\n<tbody>\r\n<tr>\r\n<th scope=\"row\">正则表达式</th>\r\n<td>\r\n<div>/\\*[\\d\\D]*?\\*/</div></td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">匹配</th>\r\n<td>/* my comment */ | /* my multiline comment */ | /* my nested comment */</td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">不匹配</th>\r\n<td>*/ anything here /* | anything between 2 seperate comments | \\* *\\</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;\r\n<table cellspacing=\"0\" cellpadding=\"5\">\r\n<tbody>\r\n<tr>\r\n<th scope=\"row\">正则表达式</th>\r\n<td>\r\n<div>&lt;[a-zA-Z]+(\\s+[a-zA-Z]+\\s*=\\s*(\"([^\"]*)\"|\'([^\']*)\'))*\\s*/&gt;</div></td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">匹配</th>\r\n<td>&lt;img src=\"test.gif\"/&gt;</td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">不匹配</th>\r\n<td>&lt;img src=\"test.gif\"&gt; | &lt;img src=\"test.gif\"a/&gt;</td>\r\n</tr>\r\n</tbody>\r\n</table>','正则HTML标签规则','','publish','open','open','','%e6%ad%a3%e5%88%99html%e6%a0%87%e7%ad%be%e8%a7%84%e5%88%99','','','2013-04-15 20:48:53','2013-04-16 04:48:53','','0','http://yanue.net/?p=489','0','post','','0');
INSERT INTO `wp_posts` VALUES('398','1','2012-10-08 04:41:43','2012-10-08 12:41:43','相信使用seajs的好处大家都是知道的，接触seajs好像是在半年前，当时还不知道页面阻塞问题，这里不带多余的话了。\r\n\r\nseajs实现了模块化的开发，一个网站如果分了很多很多模块的话，等开发完成了，发现有很大一堆的js需要加载，即使使用了seajs优化加载了，但是过多的http请求会造成服务器的压力，影响加载等等。这时候我们需要将模块进行压缩和合并。这时候spm工具派上用场了。\r\n\r\n<strong><span style=\"color: #ff0000;\">1.安装spm</span></strong>\r\n\r\nspm工具是基于node（nodejs的服务平台）的,因此我们需要<span style=\"color: #ff0000;\">先安装</span> node 和 npm 下载地址：<a title=\"nodejs\" href=\"http://nodejs.org/#download\">http://nodejs.org/#download</a>.下载完成后安装即可。\r\n\r\nnode安装完成后，找到cmd命令文件以管理员的方式打开，输入以下命令进行安装：\r\n<pre class=\"lang_php decode_true\">npm install spm -g</pre>\r\n在此过程中，可能需要你很长的时间等待。（偶尔可能连接失败了，你需要关闭cmd后重新开启并执行同样的命令，过程将继续）\r\n\r\n<a href=\"http://www.yanue.net/archives/398.html/unnamed\" rel=\"attachment wp-att-404\"><img class=\"alignnone  wp-image-404\" title=\"安装spm\" alt=\"\" src=\"http://www.yanue.net/wp-content/uploads/2012/10/Unnamed.jpg\" width=\"618\" height=\"400\" /></a>\r\n\r\n安装完成后，恭喜你，可以使用了。\r\n\r\n<span style=\"color: #ff0000;\"><strong>2.spm的使用</strong><strong>：</strong></span>\r\n\r\n使用spm其实就是执行cmd命令，安装完成后，你就可以使用命令了 (当然有很多命令的)，输入：\r\n<pre class=\"lang_php decode_true\">spm help</pre>\r\n你会看到所有的命令。我们主要用的命令就是\r\n<pre class=\"lang_php decode_true\">spm build</pre>\r\n<span style=\"color: #ff0000;\">当然得注意两点：</span>\r\n\r\n(1).需要将执行目录切换到项目。比如你的项目js目录在D:/www/spm/js下；则需要先用cmd命令切换到D:/www/spm/js.见下图\r\n\r\n(2).项目的js目录结构里面必须包含src目录，即未合并和压缩的js文件（seajs模块文件）。<a title=\"spm目录结构约定\" href=\"https://github.com/spmjs/spm/wiki/Spm-build-%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84\">目录结构约定传送门</a>。\r\n\r\n<a href=\"http://www.yanue.net/archives/398.html/unnamed-2\" rel=\"attachment wp-att-405\"><img class=\"alignnone  wp-image-405\" title=\"spm build过程\" alt=\"\" src=\"http://www.yanue.net/wp-content/uploads/2012/10/Unnamed1.jpg\" width=\"545\" height=\"371\" /></a>\r\n\r\n最后，这些只是将了我接触的时候遇到的问题，具体spm命令及使用细节请见<a title=\"SPM使用文档\" href=\"https://github.com/spmjs/spm/wiki/_pages\">官方文档</a>','seajs打包部署工具spm的使用总结','','publish','open','open','','seajs%e6%89%93%e5%8c%85%e9%83%a8%e7%bd%b2%e5%b7%a5%e5%85%b7spm%e7%9a%84%e4%bd%bf%e7%94%a8%e6%80%bb%e7%bb%93','','','2013-01-28 21:41:53','2013-01-29 05:41:53','','0','http://yanue.net/?p=398','0','post','','4');
INSERT INTO `wp_posts` VALUES('419','1','2012-10-26 08:37:49','2012-10-26 16:37:49','一. <strong>移动</strong>：\r\nh,j,k,l: 左，下，上，右。\r\nw: 下一个词的词首。W:下一个单词(不含标点)。\r\ne:下一个词的词尾。E:不含标点。\r\nb:上一个词的词首。B:不含标点。\r\n&lt;&gt;: v 模式选中后进行缩进。\r\n二. <strong>跳转</strong>：\r\n%: 可以匹配{},\"\",(),[]之间跳转。\r\nH、M、L：直接跳转到当前屏幕的顶部、中部、底部。\r\n#H：跳转到当前屏的第#行。\r\n#L：跳转到当前屏的倒数第#行。\r\nzt: 当前编辑行置为屏顶。\r\nzz: 当前编辑行置为屏中。\r\nzb: 当前编辑行置为屏底。\r\nG：直接跳转到文件的底部。\r\ngg: 跳转到文件首。\r\ngd: 跳转到光标所在函数和变量的定义。\r\n():跳转到当前的行首、行尾。\r\n{}：向上、向下跳转到最近的空行。\r\n[{：跳转到目前区块开头。\r\n]}：跳转到目前区块结尾。\r\n: 跳转到行首。\r\n$: 跳转到行尾。\r\n$: 跳转到下一行的行尾。\r\n#：跳转到该行的第#个位置。\r\n#G: 15G,跳转到15行。\r\n:#：跳转到#行。\r\n三.<strong> 选择</strong>：\r\n.v: 开启可视模式。 V: 开启逐行可视模式。\r\n.^V: 矩形选择。\r\n.v3w: 选择三个字符。\r\n.ab：包括括号和()内的区域。\r\n.aB：包括括号和{}内的区域。\r\n.ib：括号()内的区域。\r\n.iB：括号{}内的区域。\r\n.aw：标记一个单词。\r\n四. <strong>编辑</strong>：\r\n. 新增：\r\ni: 光标前插入。\r\nI: 在当前行首插入。\r\na: 光标后插入。\r\nA: 当前行尾插入。\r\nO: 在当前行之前插入新行。\r\no: 在当前行之后插入新行。\r\n. 修改 c(change) 为主：\r\nr: 替换光标所在处的字符。\r\nR：替换光标所到之处的字符。\r\ncw: 更改光标所在处的字到字尾处。\r\nc#w: c3w 修改3个字符。\r\nC：修改到行尾。\r\nci\'：修改配对标点符号中的文本内容。\r\ndi\'：删除配对标点符号中的文本内容。\r\nyi\'：复制配对标点符号中的文本内容。\r\nvi\'：选中配对标点符号中的文本内容。\r\ns：替换当前一个光标所处字符。\r\n#S：删除 # 行，并以新文本代替。\r\n. 删除 d(delete) 为主：\r\nD：删除到行尾。\r\nX: 每按一次，删除光标所在位置的前面一个字符。\r\nx: 每按一次，删除光标所在位置的后面一个字符。\r\n#x: 删除光标所在位置后面6个字符。\r\nd^: 删至行首。\r\nd$: 删至行尾。\r\ndd:(剪切)删除光标所在行。\r\ndw: 删除一个单词/光标之后的单词剩余部分。\r\nd4w: 删除4个word。\r\n#dd: 从光标所在行开始删除#行。\r\ndaB: 删除{}及其内的内容。\r\ndiB: 删除{}中的内容。\r\nn1,n2 d：将n1,n2行之间的内容删除。\r\n. 查找：\r\n/： 输入关键字，发现不是要找的，直接在按n，向后查找直到找到为止。\r\n?： 输入关键字，发现不是要找的，直接在按n，向前查找直到找到为止。\r\n*: 在当前页向后查找同一字。\r\n#: 在当前页向前查找同一字。\r\n. 复制 y(yank)为主：\r\nyw: 将光标所在之处到字尾的字符复制到缓冲区中。\r\n#yw: 复制#个字到缓冲区。\r\nY：相当于yy, 复制整行。\r\n#yy:表示复制从光标所在的该行往下数#行文字。\r\np: 粘贴。所有与y相关的操作必用p来结合粘贴。\r\n]p：粘贴到合适的缩进处。\r\nn1,n2 co n3：复制第n1行到第n2行之间的内容到第n3行后面。\r\n. 大小写转换：\r\ngUU: 将当前行的字母改为大写。\r\nguu: 将当前行的字母改为小写。\r\ngUw: 将当前光标下的单词改为大写。\r\nguw: 将当前光标下的单词改为小写。\r\na. 整篇大写:\r\nggguG\r\ngg: 光标到文件第一个字符。\r\ngu: 把选择范围全部小写。\r\nG: 到文件结束。\r\nb. 整篇小写：gggUG\r\n. 其它：\r\nJ：当前行和下一行合并成一行。\r\n. 移动：\r\nn1,n2 m n3：将n1行到n2行之间的内容移至n3行下。','vim常用快捷键','','publish','open','open','','vim%e5%b8%b8%e7%94%a8%e5%bf%ab%e6%8d%b7%e9%94%ae','','','2012-10-26 08:40:44','2012-10-26 16:40:44','','0','http://yanue.net/?p=419','0','post','','0');
INSERT INTO `wp_posts` VALUES('411','1','2012-10-09 19:37:14','2012-10-10 03:37:14','调试是一门艺术，在项目开发过程中，调试是很关键的一步。php中一般使用die,exit()控制断点并使用echo、print_r()、var_dump()、printf()输出结果来调试。一般情况下以上就可以满足开发者调试的目的了。下面来介绍一下xdebug工具。\r\n<p align=\"left\">Xdebug是一个开放源代码的PHP程序调试器(即一个Debug工具)，可以用来跟踪，调试和分析PHP程序的运行状况。</p>\r\n<span style=\"color: #ff0000;\"><strong>安装Xdebug</strong></span>\r\n<p align=\"left\">1． 打开<a href=\"http://www.xdebug.org/download.php\">http://www.xdebug.org/download.php</a>下载对应的版本（根据你自己安装的服务器版本进行下载）</p>\r\n<p align=\"left\">2.   将下载的dll文件放到相应的目录中。比如D:\\server\\php\\ext下面；</p>\r\n<p align=\"left\">3.   配置php.ini文件，在ini文件里面追加下面代码</p>\r\n\r\n<pre class=\"lang_php decode_true\">[Xdebug] \r\nzend_extension=&quot;D:\\Program Files\\phpStudy\\PHP5\\ext\\php_xdebug.dll&quot; //dll文件位置\r\nxdebug.profiler_output_dir=&quot;D:\\xdebug&quot;  //\r\nxdebug.profiler_enable=On \r\nxdebug.profiler_enable_trigger=1 \r\nxdebug.default_enable=On \r\nxdebug.show_exception_trace=On \r\nxdebug.show_local_vars=1 \r\nxdebug.max_nesting_level=50 \r\nxdebug.var_display_max_depth=6 \r\nxdebug.dump_once=1 \r\nxdebug.dump_globals=1 \r\nxdebug.dump_undefined=On \r\nxdebug.dump.REQUEST=* \r\nxdebug.dump.SERVER=REQUEST_METHOD,REQUEST_URI,HTTP_USER_AGENT \r\nxdebug.trace_output_dir=&quot;D:\\xdebug&quot; \r\nxdebug.remote_enable=true     //Xdebug允许远程IDE连接\r\nxdebug.remote_host=127.0.0.1   //允许连接的zend studio的IP地址\r\nxdebug.remote_port=9000       //反向连接zend studio使用的端口\r\nxdebug.remote_handler=dbgp    //用于zend studio远程调试的应用层通信协议</pre>\r\n重启Apache后就完成安装了。你可以使用phpinfo查看是否安装成功\r\n\r\n<img class=\"alignnone\" title=\"检测xdebug是否安装成功\" src=\"http://images.cnblogs.com/cnblogs_com/mo-beifeng/image003.png\" alt=\"\" width=\"623\" height=\"222\" />\r\n\r\n<span style=\"color: #ff0000;\"><strong>调试：</strong></span>\r\n\r\n安装完成后，xdebug会输出相应的（错误）调试信息。\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\necho aa;</pre>\r\n<a href=\"http://www.yanue.net/archives/411.html/uumuneqxqvi32g6h41l4\" rel=\"attachment wp-att-412\"><img class=\"alignnone  wp-image-412\" title=\"xdebug调试信息\" src=\"http://www.yanue.net/wp-content/uploads/2012/10/UUM@UNEQXQVI32G6H41L4.jpg\" alt=\"\" width=\"611\" height=\"205\" /></a>\r\n\r\n上面显示出错误类型http请求耗时等等，这是最基本的\r\n\r\nxdebug给我们提供了很多调试的方法，比如<strong>脚本执行时间</strong>，内存占用等等\r\n\r\n实例：测试脚本执行时间和内存占用：\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\n$t =  xdebug_time_index();\r\nfor ($i = 0; $i &lt; 250000; $i++)\r\n{\r\n    // do nothing\r\n}\r\necho &quot;执行时间：&quot;.xdebug_time_index()-$t.&quot;&lt;br/&gt;&quot;;\r\n\r\necho &quot;使用内存：&quot;xdebug_memory_usage();</pre>\r\n还有很多调试功能，自己去体验吧.\r\n\r\nThe end.','php开发性能调试工具xdebug','','publish','open','open','','php%e5%bc%80%e5%8f%91%e6%80%a7%e8%83%bd%e8%b0%83%e8%af%95%e5%b7%a5%e5%85%b7xdebug','','','2012-10-09 19:40:30','2012-10-10 03:40:30','','0','http://yanue.net/?p=411','0','post','','0');
INSERT INTO `wp_posts` VALUES('407','1','2012-10-08 04:59:40','2012-10-08 12:59:40','大家知道，js弹出的警告框非常难看，这跟据浏览器自身情况又不一样。很多情况下，根据系统的整体结构，我们需要更友好，更美化的展示给用户才是最好的体验。废话不多说。\r\n\r\n以前一直纠结，不知道怎么实现，看了人家代码也没搞清楚，后来在项目中同事的写法提醒了我，于是记下来。\r\n\r\n实现由两种思路：\r\n\r\n<span style=\"color: #ff0000;\">思路1</span>：将确定和取消后需要执行的函数直接作为两个button的click事件回掉函数，有一个缺点是调用过后需要手动隐藏层\r\n\r\n<span style=\"color: #ff0000;\">思路2</span>：事件点击后先将帮顶在该dom上的其他事件移除，然后绑定上警告框事件，在根据用户在警告事件里的选择来确定需要执行的事件。\r\n\r\n可能说的很绕。下面对思路1做一个demo\r\n<pre class=\"lang_php decode_true\">&lt;!DOCTYPE HTML&gt;\r\n&lt;html lang=&quot;zh-CN&quot;&gt;\r\n    &lt;head&gt;\r\n        &lt;meta charset=&quot;UTF-8&quot;&gt;\r\n        &lt;meta name=&quot;author&quot; content=&quot;yanue&quot; /&gt;\r\n        &lt;meta name=&quot;generator&quot; content=&quot;www.yanue.net&quot; /&gt;\r\n        &lt;meta name=&quot;copyright&quot; content=&quot;powered by yanue&quot; /&gt;\r\n        &lt;title&gt;jquery模拟实现confirm效果的两种思路一&lt;/title&gt;\r\n        &lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js&quot;&gt;\r\n        &lt;/script&gt;\r\n    &lt;/head&gt;\r\n    &lt;body style=&#039;font-size:12px;font-family:&quot;microsoft yahei&quot;;color:#333;&#039;&gt;\r\n        &lt;h1&gt;jquery模拟实现confirm效果的两种思路一&lt;/h1&gt;\r\n        &lt;p&gt;\r\n            思路：将确定和取消后需要执行的函数直接作为两个button的click事件回掉函数\r\n        &lt;/p&gt;\r\n        &lt;p&gt;\r\n            将两个函数作为参数传入便于封装\r\n        &lt;/p&gt;\r\n        &lt;div class=&quot;confirm&quot; style=&#039;display:none;border:1px solid #ccc;width:200px;&#039;&gt;\r\n            &lt;p&gt;\r\n                提示信息\r\n            &lt;/p&gt;\r\n            &lt;p&gt;\r\n                &lt;a href=&quot;javascript:;&quot; id=&quot;cancel_btn&quot;&gt;取消&lt;/a&gt;\r\n                &lt;a href=&quot;javascript:;&quot; id=&quot;ok_btn&quot;&gt;确定&lt;/a&gt;\r\n            &lt;/p&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;del&quot;&gt;\r\n            &lt;a href=&quot;javascript:;&quot;&gt;点击这里删除我&lt;/a&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;status&quot;&gt;\r\n        &lt;/div&gt;\r\n        &lt;script type=&quot;text/javascript&quot;&gt;\r\n            //思路：将确定和取消后需要执行的函数直接作为两个button的click事件回掉函数\r\n            //将两个函数作为参数传入便于封装\r\n            //缺点：调用过后需要手动隐藏层\r\n            function myconfirm(func, cancel_callback){\r\n                $(&quot;.confirm&quot;).fadeIn();\r\n                if (typeof(func) == &#039;function&#039;) \r\n                    $(&#039;#ok_btn&#039;).click(func);\r\n                if (typeof(cancel_callback) == &#039;function&#039;) \r\n                    $(&#039;#cancel_btn&#039;).click(cancel_callback);\r\n            }\r\n\r\n            //点击确定后需要执行的函数\r\n            function ok(){\r\n                //alert(&#039;you clicked ok&#039;);\r\n                $(&#039;.del&#039;).html(&#039;你居然敢删除我？&#039;).fadeOut(2000);\r\n                $(&#039;.status&#039;).html(&#039;你点击了&quot;确定&quot;按钮&#039;);\r\n                //隐藏提示框(需要手动，不方便)\r\n                $(&quot;.confirm&quot;).hide();\r\n            }\r\n\r\n            //点击取消后需要执行的函数，一般情况下直接隐藏confirm\r\n            function cancel(){\r\n                //alert(&#039;you clicked cancel&#039;);\r\n                //隐藏提示框(需要手动，不方便)\r\n                $(&#039;.status&#039;).html(&#039;你点击了&quot;取消&quot;按钮&#039;);\r\n                $(&quot;.confirm&quot;).hide();\r\n            }\r\n\r\n            $(function(){\r\n                $(&#039;.del&#039;).click(function(){\r\n                    //弹出警告框\r\n                    myconfirm(ok, cancel);\r\n                });\r\n            })\r\n        &lt;/script&gt;\r\n    &lt;/body&gt;\r\n&lt;/html&gt;</pre>','(原创)jquery模拟实现confirm效果的两种思路一','','publish','open','open','','jquery%e6%a8%a1%e6%8b%9f%e5%ae%9e%e7%8e%b0confirm%e6%95%88%e6%9e%9c%e7%9a%84%e4%b8%a4%e7%a7%8d%e6%80%9d%e8%b7%af%e4%b8%80','','','2012-10-10 17:22:53','2012-10-11 01:22:53','','0','http://yanue.net/?p=407','0','post','','1');
INSERT INTO `wp_posts` VALUES('413','1','2012-10-10 03:25:26','2012-10-10 11:25:26','<strong></strong>GPS坐标和经纬度的算法和概率不太一样，但是我们可能会将他们互通起来用，下面先贴上我做的转换工具：<a title=\"GPS坐标转经纬度\" href=\"http://map.yanue.net/gps.html\" target=\"_blank\">http://map.yanue.net/gps.html</a>。里面实现了gps到谷歌地图百度地图经纬度的转换。不含糊，下面将他们之间的联系。\r\n\r\nGPS坐标系我本身不太了解它跟谷歌地图经纬度有多大区别，于是搜了一下，看看他们的区别：\r\n\r\n<strong>地形图坐标系：</strong>我国的地形图采用高斯－克吕格平面直角坐标系。在该坐标系中，横轴：赤道，用Ｙ表示；纵轴：中央经线，用Ｘ表示；坐标原点：中央经线与赤 道的交点，用0表示。赤道以南为负，以北为正；中央经线以东为正，以西为负。我国位于北半球，故纵坐标均为正值，但为避免中央经度线以西为负值的情况，将 坐标纵轴西移500公里。\r\n\r\n北京54坐标系：1954年我国在北京设立了大地坐标原点，采用克拉索夫斯基椭球体，依此计算出来的各大地控制点的坐标，称为北京54坐标系。\r\nGS84坐标系：即世界通用的经纬度坐标系。\r\n\r\n<strong>经纬度表示：</strong>1884年国际经度会议规定，以通过英国伦敦格林威治天文台子午仪中心的经线为0°经线。从0°经线往东叫东经，往西叫西经，东、西各分180°。习惯 上以西经20°和东经160°为分界把地球分为东西两个半球。假如从地轴的正中间将地球切成南北两半，上边的一半叫北半球，下边的一半叫南半球。被切的这 个平面，叫赤道面。赤道面与地球表面相交的线叫赤道。纬线从赤道往两极越来越短，到了两极就缩小成一个点了。科学家们把赤道定为0°纬线，从赤道向两极各 分为90°，赤道以南叫南纬，赤道以北叫北纬。在计算机或GPS上经纬度经常用度、分、秒和度.度、分.分、秒.秒的混合方式进行表示，度、分、秒间的进 制是60进制，度.度、分.分、秒.秒的进制是100进制，换算时一定要注意。可以近似地认为每个纬度之间的距离是不变的111KM,每分间 1.85KM，每秒间31.8M。经度间的距离随纬度增高逐渐减小，可按以下公式计算：\r\n\r\n经度1°长度=111.413cosφ一0.094cos3φ公里(纬度φ处)。\r\n一般从GPS得到的数据是经纬度。经纬度有多种表示方法。\r\n1.)  ddd.ddddd， 度 . 度的十进制小数部分（5位）例如：31.12035º\r\n2.) ddd.mm.mmm，度 . 分 . 分的十进制小数部分（3位）例如 31º10.335\'\r\n3.) ddd.mm.ss, 度 . 分 . 秒 例如 31º12\'42\"\r\n地球上任何一个固定的点都可以用确定的经纬度表示出来。\r\n\r\n<strong>关于经纬度坐标转换的方法</strong>\r\n一、十进制转换成经纬度\r\n把经纬度转换成十进制的方法很简单\r\n如下就可以了\r\nDecimal Degrees = Degrees + minutes/60 + seconds/3600\r\n例：57°55\'56.6\" =57+55/60+56.6/3600=57.9323888888888\r\n114°65\'24.6\"=114+65/60+24.6/3600=结果自己算!\r\n\r\n如把经纬度 (longitude，latitude) (205.395583333332，57.9323888888888)\r\n转换据成坐标(Degrees,minutes,seconds)(205°23\'44.1\"，57°55\'56.6\")。\r\n步骤如下：\r\n\r\n1， 直接读取\"度\"：205\r\n2，(205.395583333332-205)*60=23.734999999920 得到\"分\"：23\r\n3，(23.734999999920-23)*60=44.099999995200 得到\"秒\"：44.1\r\n\r\n采用同样的方法可以得到纬度坐标：57°55\'56.6\"\r\n\r\n好大一篇，都是别的地方copy过来的，有兴趣就自己看看吧\r\n\r\nThe end','GPS坐标转换经纬度及换算方法','','publish','open','open','','gps%e5%9d%90%e6%a0%87%e8%bd%ac%e6%8d%a2%e7%bb%8f%e7%ba%ac%e5%ba%a6%e5%8f%8a%e6%8d%a2%e7%ae%97%e6%96%b9%e6%b3%95','','','2012-10-10 03:36:04','2012-10-10 11:36:04','','0','http://yanue.net/?p=413','0','post','','3');
INSERT INTO `wp_posts` VALUES('417','1','2012-10-10 04:49:03','2012-10-10 12:49:03','jquery全屏漂浮广告插件 兼容主流浏览器 实现非常简单\r\n\r\n说明：jquery在1.9开始不支持.live()方法的写法而改用.on()，见<a href=\"http://jquery.com/upgrade-guide/1.9/#live-removed\">http://jquery.com/upgrade-guide/1.9/#live-removed</a>.该插件中关闭图片链接使用了.live().请根据自己情况自行修改.\r\n\r\n在线预览：\r\n\r\n<a href=\"http://demo.yanue.net/floatAd/\">http://demo.yanue.net/floatAd/</a>\r\n\r\n插件源码：\r\n<pre class=\"lang_php decode_true\">(function($){\r\n	$.fn.floatAd = function(options){\r\n		var defaults = {\r\n			imgSrc : \"http://wenwen.soso.com/p/20100204/20100204193850-483274619.jpg\", //漂浮图片路径\r\n			url : \"http://map.yanue.net\", //图片点击跳转页\r\n			openStyle : 1, //跳转页打开方式 1为新页面打开  0为当前页打开\r\n			speed : 10 //漂浮速度 单位毫秒\r\n		};\r\n		var options = $.extend(defaults,options);\r\n		var _target = options.openStyle == 1 ?  \"target=\'_blank\'\" : \'\' ;\r\n		var html = \"&lt;div id=\'float_ad\' style=\'position:absolute;left:0px;top:0px;z-index:1000000;cleat:both;\'&gt;\";\r\n            html += \"  &lt;a href=\'\" + options.imgJumpToUrl + \"\' \" + _target + \"&gt;&lt;img src=\'\" + options.imgSrc + \"\' border=\'0\' class=\'float_ad_img\'/&gt;&lt;/a&gt; &lt;a href=\'javascript:;\' id=\'close_float_ad\' style=\'\'&gt;x&lt;/a&gt;\";\r\n            html += \"&lt;/div&gt;\";\r\n\r\n        $(\'body\').append(html);\r\n\r\n		function init(){\r\n			var x = 0,y = 0 \r\n			var xin = true, yin = true \r\n			var step = 1 \r\n			var delay = 10 \r\n			var obj=$(\"#float_ad\") \r\n			obj.find(\'img.float_ad_img\').load(function(){\r\n				var float = function(){\r\n				    var L = T = 0;\r\n					var OW = obj.width();//当前广告的宽\r\n					var OH = obj.height();//高\r\n					var DW = $(document).width(); //浏览器窗口的宽\r\n					var DH = $(document).height(); \r\n\r\n 				    x = x + step *( xin ? 1 : -1 ); \r\n					if (x &lt; L) { \r\n						xin = true; x = L\r\n					} \r\n					if (x &gt; DW-OW-1){//-1为了ie\r\n						xin = false; x = DW-OW-1\r\n					} \r\n\r\n					y = y + step * ( yin ? 1 : -1 ); \r\n					if (y &gt; DH-OH-1) { \r\n\r\n						yin = false; y = DH-OH-1 ;\r\n					}\r\n					if (y &lt; T) {\r\n						yin = true; y = T\r\n					} \r\n\r\n					var left = x ; \r\n					var top = y; \r\n\r\n					obj.css({\'top\':top,\'left\':left});\r\n				}\r\n				var itl = setInterval(float,options.speed);\r\n				$(\'#float_ad\').mouseover(function(){clearInterval(itl)}); \r\n				$(\'#float_ad\').mouseout(function(){itl=setInterval(float, options.speed)} )\r\n			});\r\n			// 点击关闭\r\n			$(\'#close_float_ad\').live(\'click\',function(){\r\n			    $(\'#float_ad\').hide();\r\n			});\r\n		}\r\n\r\n	   init();\r\n\r\n	}; //floatAd\r\n\r\n})(jQuery);</pre>\r\n&nbsp;\r\n\r\n调用非常方便的：\r\n<pre class=\"lang_php decode_true\">&lt;script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-1.8.2.min.js\"&gt;&lt;/script&gt;\r\n	&lt;script type=\"text/javascript\" src=\"floatAd.js\"&gt;&lt;/script&gt;\r\n	&lt;script type=\"text/javascript\"&gt;\r\n		$(function(){\r\n			//调用漂浮插件\r\n			$(\"body\").floatAd({\r\n				imgSrc : \'http://wenwen.soso.com/p/20100204/20100204193850-483274619.jpg\',\r\n				url:\'http://www.yanue.net\'\r\n			});\r\n		})\r\n	&lt;/script&gt;</pre>\r\n&nbsp;','jquery全屏漂浮广告插件，可点击关闭(原创)','','publish','open','open','','jquery%e5%85%a8%e5%b1%8f%e6%bc%82%e6%b5%ae%e5%b9%bf%e5%91%8a%e6%8f%92%e4%bb%b6%e5%8e%9f%e5%88%9b','','\nhttp://jquery.com/upgrade-guide/1.9/#live-removed','2013-07-19 07:32:40','2013-07-19 15:32:40','','0','http://yanue.net/?p=417','0','post','','3');
INSERT INTO `wp_posts` VALUES('430','1','2013-01-11 05:54:57','2013-01-11 13:54:57','js正则去除特殊字符\r\n<pre class=\"lang_php decode_true\">// js正则去除特殊字符\r\nvar pattern = /[\\@\\#\\$\\%\\^\\&amp;\\*\\(\\)\\{\\}\\:\\&quot;\\&lt;\\&gt;\\?\\[\\]]/;  \r\n    if (pattern.test(title)){\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }</pre>\r\njquery 去除两边空格\r\n<pre class=\"lang_php decode_true\">//去除两边空格\r\n$.trim(&quot;    hello, how are you?    &quot;);</pre>','js正则去除特殊字符','','publish','open','open','','js%e6%ad%a3%e5%88%99%e5%8e%bb%e9%99%a4%e7%89%b9%e6%ae%8a%e5%ad%97%e7%ac%a6','','','2013-01-11 05:58:59','2013-01-11 13:58:59','','0','http://yanue.net/?p=430','0','post','','0');
INSERT INTO `wp_posts` VALUES('424','1','2012-10-26 21:45:23','2012-10-27 05:45:23','<span style=\"font-family: 微软雅黑; font-size: large;\"><span style=\"color: #ff0000;\"><strong>PHP中判断表是否存在的方法：</strong></span>\r\n</span>\r\n<pre class=\"lang_php decode_true\">if(mysql_num_rows(mysql_query(&quot;SHOW TABLES LIKE &#039;&quot;.$table.&quot;&#039;&quot;)==1) {\r\necho &quot;Table exists&quot;;\r\n} else {\r\necho &quot;Table does not exist&quot;;\r\n}</pre>\r\n<span style=\"font-family: 微软雅黑; font-size: large;\"><strong><span style=\"color: #ff0000;\">\r\nMySQL中判断表是否存在的方法：</span></strong>\r\n</span>\r\n<pre class=\"lang_php decode_true\">1. SHOW   TABLES   LIKE   &#039;%tb_bp_d_case%&#039;;  \r\n2. select `TABLE_NAME` from `INFORMATION_SCHEMA`.`TABLES` where `TABLE_SCHEMA`=&#039;dbname&#039; and `TABLE_NAME`=&#039;tablename&#039; ;\r\n3. 如果表不存在就建立这个表，那么可以直接用 create table if not exists tablename 这样的指令来建立，不需要先去查询表是否存在。\r\n4. 从模板表创建表：create table if not exists like old_table_name;</pre>\r\n<span style=\"font-family: 微软雅黑; font-size: large;\">\r\n</span>','PHP判断mysql中表是否存在','','publish','open','open','','php%e5%88%a4%e6%96%admysql%e4%b8%ad%e8%a1%a8%e6%98%af%e5%90%a6%e5%ad%98%e5%9c%a8','','','2012-10-26 21:45:23','2012-10-27 05:45:23','','0','http://yanue.net/?p=424','0','post','','0');
INSERT INTO `wp_posts` VALUES('431','1','2013-01-11 06:26:48','2013-01-11 14:26:48','MySQL 存储php中json_encode格式信息  ,遇到中文时, 会变成一堆类似uxxxx信息.\r\n<h4><strong>1. 原因分析:</strong></h4>\r\n在存储到数据库时！MySQL 不会存储 unicode 字符：\r\n\r\nMySQL 仅支持从基本的多语种平面字符 (0x0000-0xFFFF)。请尝试存储一个同义词相反:）\r\n\r\n更新： MySQL 5.5.3 上 （其中尚未 GA), 支持补充字符如果您使用 UTF8MB4 编码。\r\n\r\njson_encode中文的时候，会把每个中文字符encode成“\\uxxxx”\r\n而存进数据库的时候，“\\”被屏蔽了，直接变成”uxxxx”\r\n\r\n<b>2. 解决问题：</b>\r\n\r\n知道是什么原因就好解决问题了，你可以选择其他存储方式;\r\n或者再对症下药进一步转义\"\\\"为“\\\\”，以保留\"\\\"\r\n我们的解决方案：\r\n\r\n1. 避免json_encode将中文转换unicode编码.\r\nPHP5.4版本，已经给Json新增了一个选项: JSON_UNESCAPED_UNICODE。加上这个选项后，就不会自动把中文编码了。\r\n<div>\r\n<pre class=\"lang_php decode_true\">  $test = json_encode(&quot;深圳&quot;, JSON_UNESCAPED_UNICODE);</pre>\r\n</div>\r\n<div>2. 先将中文字段urlencode，json_encode后，再用urldecode，也可以保证中文不会被转成unicode。</div>\r\n<div>\r\n<pre class=\"lang_php decode_true\">  $test =urldecode(json_encode(array(&#039;brief&#039;=&gt;urlencode(&#039;简介&#039;),&#039;title&#039;=&gt;urlencode(标题)));</pre>\r\n</div>\r\n<div>3. 进一步转义\"\\\"为“\\\\” 避免unicode中文前\'\\\'被mysql当成特殊字符去除</div>\r\n<div>\r\n<pre class=\"lang_php decode_true\">  $test = addslashes(json_encode(&#039;中文&#039;));</pre>\r\n</div>\r\n以上都可以直接插入mysql,问题解决','MySQL 存储php中json_encode格式中文问题及解决','','publish','open','open','','mysql-%e5%ad%98%e5%82%a8php%e4%b8%adjson_encode%e6%a0%bc%e5%bc%8f%e4%b8%ad%e6%96%87%e9%97%ae%e9%a2%98%e5%8f%8a%e8%a7%a3%e5%86%b3','','','2013-01-11 06:29:28','2013-01-11 14:29:28','','0','http://yanue.net/?p=431','0','post','','0');
INSERT INTO `wp_posts` VALUES('432','1','2013-01-11 06:38:13','2013-01-11 14:38:13','((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)\r\n\r\n匹配格式：\r\n11位手机号码\r\n3-4位区号，7-8位直播号码，1－4位分机号\r\n如：12345678901、1234-12345678-1234\r\n\r\n&nbsp;\r\n\r\nif(/^(1[3,5,8,7]{1}[\\d]{9})|(((400)-(\\d{3})-(\\d{4}))|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{3,7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)$|^([ ]?)$/.test(str)) return true;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n匹配格式：\r\n11位手机号码\r\n3-4位区号，7-8位直播号码，1－4位分机号\r\n\r\n400号码\r\n如：12345678901、1234-12345678-1234 400-886-9998','电话号码正则验证(多种)','','publish','open','open','','%e7%94%b5%e8%af%9d%e5%8f%b7%e7%a0%81%e6%ad%a3%e5%88%99%e9%aa%8c%e8%af%81%e5%a4%9a%e7%a7%8d','','','2013-01-11 06:38:13','2013-01-11 14:38:13','','0','http://yanue.net/?p=432','0','post','','0');
INSERT INTO `wp_posts` VALUES('434','1','2013-01-11 06:59:50','2013-01-11 14:59:50','<strong>php获取网站基础路径baseUrl的两种方法</strong>\r\n\r\n<strong>方法一:</strong>\r\n<pre class=\"lang:php decode:true\">// baseUrl\r\nfunction baseUrl($uri=\'\'){\r\n	$baseUrl = ( isset($_SERVER[\'HTTPS\']) &amp;&amp; $_SERVER[\'HTTPS\'] != \'off\') ? \'https://\' : \'http://\';\r\n	$baseUrl .= isset($_SERVER[\'HTTP_HOST\']) ? $_SERVER[\'HTTP_HOST\'] : getenv(\'HTTP_HOST\');\r\n	$baseUrl .= isset($_SERVER[\'SCRIPT_NAME\']) ? dirname($_SERVER[\'SCRIPT_NAME\']) : dirname(getenv(\'SCRIPT_NAME\'));\r\n	return $baseUrl.\'/\'.$uri;\r\n}</pre>\r\n<strong>方法二:</strong>\r\n<pre class=\"lang_php decode_true\">    /**\r\n     * Suppose, you are browsing in your localhost\r\n     * http://localhost/myproject/index.php?id=8\r\n     */\r\n    function baseUrl()\r\n    {\r\n        // output: /myproject/index.php\r\n        $currentPath = $_SERVER[\'PHP_SELF\'];\r\n\r\n        // output: Array ( [dirname] =&gt; /myproject [basename] =&gt; index.php [extension] =&gt; php [filename] =&gt; index )\r\n        $pathInfo = pathinfo($currentPath);\r\n\r\n        // output: localhost\r\n        $hostName = $_SERVER[\'HTTP_HOST\'];\r\n\r\n        // output: http://\r\n        $protocol = strtolower(substr($_SERVER[\"SERVER_PROTOCOL\"],0,5))==\'https://\' ? \'https://\' : \'http://\';\r\n\r\n        // return: http://localhost/myproject/\r\n        return $protocol.$hostName.$pathInfo[\'dirname\'].\"/\";\r\n    }</pre>\r\n最后贴上: <a title=\"php获取当前页面完整url\" href=\"http://www.yanue.net/archives/666.html\">php获取当前页面完整url</a>的方法.','php获取网站基础路径baseUrl的两种方法','','publish','open','open','','php%e8%8e%b7%e5%8f%96%e7%bd%91%e7%ab%99%e5%9f%ba%e7%a1%80%e8%b7%af%e5%be%84baseurl%e9%83%bd%e4%b8%a4%e7%a7%8d%e6%96%b9%e6%b3%95','','\nhttp://www.yanue.net/archives/666.html','2013-07-22 20:51:19','2013-07-23 04:51:19','','0','http://yanue.net/?p=434','0','post','','0');
INSERT INTO `wp_posts` VALUES('450','1','2013-02-23 22:47:41','2013-02-24 06:47:41','通常的情况下用PHP输出内容会先缓存, 到最后全部输出. 如果有一个多步的耗时操作, 所有的结果都要等到页面执行完后才能看到. 中间漫长的过程只有等待. 能不能立即都看到每步的结果呢\r\n\r\n<strong>ob_flush 是刷新PHP自身的缓冲区。</strong>\r\nflush 只有在PHP做为apache的Module(handler或者filter)安装的时候，才有实际作用，它是刷新WebServer(可以认为特指apache)的缓冲区，即刷新到浏览器输出。\r\n\r\n有些Apache的模块，比如mod_gzip，可能自己进行输出缓存，这将导致flush()函数产生的结果不会立即被发送到客户端浏览器。 而 IE浏览器 只有当接受到的 4096个字节以后才开始显示该页面，所以必须发送一些额外的空格来让这些浏览器显示页面内容（原因：Nginx有fastcgi 缓冲区，数据超出缓冲区大小、或程序执行完，才会将内容输出到客户端： fastcgi_buffer_size 4k; ）。正确使用俩者的顺序是. 先ob_flush, 然后flush,当然, 在其他sapi下, 不调用flush也可以, 只不过为了保证你代码的可移植性, 建议配套使用.\r\n\r\n<strong>PHP实时显示输出</strong>：\r\n<pre class=\"lang_php decode_true\">//实时显示输出\r\nob_end_flush(); //关闭php缓存，或者在flush前ob_flush();\r\necho str_repeat(&quot; &quot;, 1024); //ie下 需要先发送256个字节, firefox 1024, chrome 2048\r\nset_time_limit(0);\r\nfor($i=0; $i&lt;10; $i++)\r\n{\r\necho &quot;Now Index is :&quot;. $i.&quot;&lt;br&gt;&quot;;\r\n//ob_flush(); //把php缓存推送到apache去，前面已经关闭了php缓存了，这里再推就报错了\r\nflush(); //把apache缓存推送到浏览器去\r\nsleep(1);\r\n}</pre>','php即时(刷新缓存)输出内容','','publish','open','open','','php%e5%8d%b3%e6%97%b6%e5%88%b7%e6%96%b0%e7%bc%93%e5%ad%98%e8%be%93%e5%87%ba%e5%86%85%e5%ae%b9','','','2013-02-23 22:47:41','2013-02-24 06:47:41','','0','http://yanue.net/?p=450','0','post','','0');
INSERT INTO `wp_posts` VALUES('438','1','2013-01-11 07:36:10','2013-01-11 15:36:10','php实现页面跳转及限时跳转的几种方法\r\n\r\n<strong>1.使用php里head函数进行跳转</strong>\r\n\r\n注意:head跳转前不要有任何输出,不然可能不能跳转.\r\n<pre class=\"lang:php decode:true\">header(\"refresh:3;url=http://www.yanue.net\");//限时跳转\r\nheader(\'location:http://www.yanue.net\');//立即跳转</pre>\r\n<div>\r\n\r\n<strong>2. HTML meta refresh 刷新与跳转(重定向)页面</strong>\r\n\r\nrefresh 属性值 -- 刷新与跳转(重定向)页面\r\n<div>\r\n<ul>\r\n	<li><strong>refresh</strong>用于刷新与跳转(重定向)页面</li>\r\n	<li>refresh出现在http-equiv属性中，使用content属性表示刷新或跳转的开始时间与跳转的网址</li>\r\n</ul>\r\n</div>\r\n<div>\r\n<pre class=\"lang_php decode_true crayon-selected\">&lt;meta http-equiv=\"refresh\" content=\"3; url=http://www.yanue.net\"&gt;</pre>\r\n</div>\r\n<div><strong>3.js实现页面跳转</strong></div>\r\n<div>js实现跳转主要用到location对象</div>\r\n<div>\r\n<pre class=\"lang:php decode:true  crayon-selected\">&lt;script type=\'text/javascript\'&gt;\r\n	// 立即跳转\r\n	window.location.href = \'http://www.yanue.net\';\r\n	// 限时跳转\r\n	setTimeout(function(){\r\n		// 3秒后跳转\r\n		window.location.href = \'http://www.yanue.net\';\r\n	},3000);\r\n&lt;/script&gt;</pre>\r\n</div>\r\n</div>','php实现页面跳转及限时跳转的几种方法','','publish','open','open','','php%e5%ae%9e%e7%8e%b0%e9%a1%b5%e9%9d%a2%e8%b7%b3%e8%bd%ac%e5%8f%8a%e9%99%90%e6%97%b6%e8%b7%b3%e8%bd%ac%e7%9a%84%e5%87%a0%e7%a7%8d%e6%96%b9%e6%b3%95','','','2013-07-23 19:04:12','2013-07-24 03:04:12','','0','http://yanue.net/?p=438','0','post','','0');
INSERT INTO `wp_posts` VALUES('439','1','2013-01-11 08:03:39','2013-01-11 16:03:39','前面发布一文 <a href=\"http://www.yanue.net/archives/362.html\" target=\"_blank\">jquery判断点击事件是否在目标区域</a> 也是来源于网络,没经过仔细测试,最后发现ff大哥不兼容.\r\n\r\n下面这个该是兼容了.\r\n<pre class=\"lang_php decode_true\">// 判断点击区域 隐藏/显示其他区域\r\ndocument.onclick = function(e) {\r\n	e = window.event || e; // 兼容IE7\r\n	obj = $(e.srcElement || e.target);\r\n	// 点击区域位于当前节点\r\n	if (obj.attr(&#039;id&#039;) == &#039;more_groups&#039;) {\r\n		if ($(&#039;.groups_list&#039;).is(&#039;:visible&#039;)) {\r\n			$(&#039;.groups_list&#039;).show();\r\n		} else {\r\n			$(&#039;.groups_list&#039;).hide();\r\n		}\r\n	}else{\r\n		//不是当前节点\r\n		$(&#039;.groups_list&#039;).hide();	\r\n	}\r\n};</pre>','jquery判断点击区域 隐藏/显示其他区域','','publish','open','open','','jquery%e5%88%a4%e6%96%ad%e7%82%b9%e5%87%bb%e5%8c%ba%e5%9f%9f-%e9%9a%90%e8%97%8f%e6%98%be%e7%a4%ba%e5%85%b6%e4%bb%96%e5%8c%ba%e5%9f%9f','','','2013-01-11 08:03:39','2013-01-11 16:03:39','','0','http://yanue.net/?p=439','0','post','','0');
INSERT INTO `wp_posts` VALUES('440','1','2013-01-11 08:24:36','2013-01-11 16:24:36','PHP重置根据图片显示大小及位置\r\n重置图片高宽和位置，溢出隐藏\r\n<pre class=\"lang:php decode:true \">&lt;?php\r\n/*\r\n重置图片高宽和位置，溢出隐藏\r\n保证在规定窗口满窗显示\r\n直接在图片style上使用输出\r\n参数：\r\n$ratio : 需要定义图片的宽高比\r\n$w : 外框的宽度\r\n$h : 外框的高度\r\n$type : 返回值类型，1.组合好的css字串，2.图片新的高宽值数组 \r\n返回值：\r\n例：width:200px;height:521px;margin-top:-260px;\r\n*/\r\n\r\nfunction resizeImgStyle($ratio,$w=200,$h=160,$type=1){\r\n	$width = $w != 0 ? $w : 200;\r\n	$height = $h != 0 ? $h : 200;\r\n	$frameRatio= $w/$h;//外框大小比例\r\n	$offestX = 0;\r\n	$offestY = 0;\r\n	$newImgWidth = 0;\r\n	$newImgHeight = 0;\r\n	if($frameRatio&gt;=$ratio){\r\n		//宽一点 最小边高 取高\r\n		$newImgWidth = $width;\r\n		$newImgHeight = $width/$ratio;\r\n		$offestX = 0;\r\n		$offestY = ($newImgHeight-$height)/2;\r\n	}else{\r\n		//窄一点 最小边宽 取宽\r\n		$newImgHeight = $height;\r\n		$newImgWidth = $height*$ratio;\r\n		$offestX = ($newImgWidth-$width)/2;\r\n		$offestY = 0;\r\n	}\r\n\r\n	if($type==2){\r\n		// 返回数组\r\n		$style = array(\'img_width\'=&gt;(int)$newImgWidth,\'img_height\'=&gt;(int)$newImgHeight);\r\n	}else{\r\n		// 判断\r\n		$offsetStyle = \'\';\r\n		$offsetStyle .= $offestY&gt;0 ? \'margin-top:-\'.(int)$offestY .\'px;\' : \'\' ;\r\n		$offsetStyle .= $offestX&gt;0 ? \'margin-left:-\'.(int)$offestY.\'px;\' : \'\' ;\r\n\r\n		$style =  \'width:\'.(int)$newImgWidth.\'px;\'.\'height:\'.(int)$newImgHeight.\'px;\'.$offsetStyle;\r\n	}\r\n\r\n	return $style;\r\n}\r\n?&gt;</pre>\r\n&nbsp;','php根据高宽比及显示窗口大小重置图片样式','','publish','open','open','','php%e6%a0%b9%e6%8d%ae%e9%ab%98%e5%ae%bd%e6%af%94%e5%8f%8a%e6%98%be%e7%a4%ba%e7%aa%97%e5%8f%a3%e5%a4%a7%e5%b0%8f%e9%87%8d%e7%bd%ae%e5%9b%be%e7%89%87%e6%a0%b7%e5%bc%8f','','','2013-10-16 01:30:25','2013-10-16 09:30:25','','0','http://yanue.net/?p=440','0','post','','0');
INSERT INTO `wp_posts` VALUES('441','1','2013-01-11 08:30:29','2013-01-11 16:30:29','<strong>Windows的中文字体：</strong>黑体：SimHei\r\n宋体：SimSun\r\n新宋体：NSimSun\r\n仿宋：FangSong\r\n楷体：KaiTi\r\n仿宋_GB2312：FangSong_GB2312\r\n楷体_GB2312：KaiTi_GB2312\r\n微软雅黑体：Microsoft YaHei\r\n<div style=\"font-size: 16px;\">\r\n\r\n<strong>英文字体：</strong>\r\n\r\n<strong>PmingLiu</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'PmingLiu\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Impact</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'Impact\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Georgia</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'Georgia\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Tahoma</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'Tahoma\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Arial</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'Arial\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Book Antiqua</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'Arial\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Century Gothic</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'Century Gothic\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Courier New</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'Courier New\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Times New Roman</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'Times New Roman\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Verdana</strong>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td style=\"font-family: \'Verdana\';\">ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyz\r\n0123456789</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>','网页CSS常用中英文字体(预览)','','publish','open','open','','%e7%bd%91%e9%a1%b5css%e5%b8%b8%e7%94%a8%e4%b8%ad%e8%8b%b1%e6%96%87%e5%ad%97%e4%bd%93','','','2013-01-11 09:06:42','2013-01-11 17:06:42','','0','http://yanue.net/?p=441','0','post','','0');
INSERT INTO `wp_posts` VALUES('442','1','2013-01-11 08:59:30','2013-01-11 16:59:30','<strong>vim乱码解决方法</strong>：\r\n\r\n只想改当前文件的编码方式的话，只需要在命令模式下输入：\r\n:set encoding=utf-8\r\n:set fileencoding=utf-8\r\n在根目录下新建一个.vimrc文件，在里面写上\r\n<div>let &amp;termencoding=&amp;encoding\r\nset fileencodings=utf-8,gbk,ucs-bom,cp936</div>\r\n<div>\r\n\r\n或者找到文件.vimrc后，将下面代码加入即可：\r\n<div>\r\n<div id=\"highlighter_867218\">\r\n<pre class=\"lang_php decode_true\">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\r\n&quot;解决windows下的中文乱码问题\r\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\r\nset encoding=utf-8\r\n&quot;set termencoding=utf-8\r\nset fileencodings=ucs-bom,utf-8,chinese,latin-1\r\nif has(&quot;win32&quot;)\r\nset fileencoding=chinese\r\nelse\r\nset fileencoding=utf-8\r\nendif\r\n\r\n&quot;解决中文菜单乱码\r\nset langmenu=zh_CN.utf-8\r\nsource $VIMRUNTIME/delmenu.vim\r\nsource $VIMRUNTIME/menu.vim\r\n\r\n&quot;解决console输出乱码\r\nlanguage messages zh_cn.utf-8</pre>\r\n</div>\r\n</div>\r\n注：Vim中有几个选项会影响对多字节编码的支持：\r\n<strong>encoding（enc）</strong>：encoding是Vim的内部使用编码，encoding的设置会影响Vim内部的 Buffer、消息文字等。在Unix环境下，encoding的默认设置等于locale；Windows环境下会和当前代码页相同。在中文 Windows环境下encoding的默认设置是cp936（GBK）。\r\n<strong>fileencodings（fencs）</strong>：Vim在打开文件时会根据fileencodings选项来识别文件编码，fileencodings可以同时设置多个编码，Vim会根据设置的顺序来猜测所打开文件的编码。\r\n<strong>fileencoding（fenc） </strong>：Vim在保存新建文件时会根据fileencoding的设置编码来保存。如果是打开已有文件，Vim会根据打开文件时所识别的编码来保存，除非在保存时重新设置fileencoding。\r\n<strong>termencodings（tenc）</strong>：在终端环境下使用Vim时，通过termencoding项来告诉Vim终端所使用的编码。\r\n\r\n</div>','解决vim中文出现乱码','','publish','open','open','','%e8%a7%a3%e5%86%b3vim%e4%b8%ad%e6%96%87%e5%87%ba%e7%8e%b0%e4%b9%b1%e7%a0%81','','','2013-01-11 09:05:37','2013-01-11 17:05:37','','0','http://yanue.net/?p=442','0','post','','0');
INSERT INTO `wp_posts` VALUES('445','1','2013-01-11 09:14:56','2013-01-11 17:14:56','php时间转换函数(把时间显示人性化)\r\n\r\n<strong>1.很详细</strong>\r\n<pre class=\"lang_php decode_true\">// 严格按照离当前时间的间隔来输出\r\n\r\nfunction formatTime($time)\r\n{\r\n	$t = time() - $time;\r\n	$f = array(\r\n		&#039;31536000&#039; =&gt; &#039;年&#039;,\r\n		&#039;2592000&#039; =&gt; &#039;个月&#039;,\r\n		&#039;604800&#039; =&gt; &#039;星期&#039;,\r\n		&#039;86400&#039; =&gt; &#039;天&#039;,\r\n		&#039;3600&#039; =&gt; &#039;小时&#039;,\r\n		&#039;60&#039; =&gt; &#039;分钟&#039;,\r\n		&#039;1&#039; =&gt; &#039;秒&#039;\r\n	);\r\n	foreach ($f as $k =&gt; $v) {\r\n		if (0 != $c = floor($t / (int)$k)) {\r\n			$m = floor($t % $k);\r\n			foreach ($f as $x =&gt; $y) {\r\n				if (0 != $r = floor($m / (int)$x)) {\r\n					return $c.$v.$r.$y.&#039;前&#039;;\r\n				}\r\n			}\r\n			return $c.$v.&#039;前&#039;;\r\n		}\r\n	}\r\n}\r\n//实例\r\n$times=time()-254;  \r\necho formatTime($times);</pre>\r\n<strong>2.到前天</strong>\r\n<pre class=\"lang_php decode_true\">//时间转换函数(把时间显示人性化)\r\nfunction formatTime($time)\r\n{     \r\n	$rtime = date(&quot;m-d H:i&quot;,$time);     \r\n	$htime = date(&quot;H:i&quot;,$time);           \r\n	$time = time() - $time;       \r\n	if ($time &lt; 60)\r\n	{         \r\n		$str = &#039;刚刚&#039;;     \r\n	}elseif($time &lt; 60 * 60){         \r\n		$min = floor($time/60);         \r\n		$str = $min.&#039;分钟前&#039;;     \r\n	}elseif($time &lt; 60 * 60 * 24){         \r\n		$h = floor($time/(60*60));         \r\n		$str = $h.&#039;小时前 &#039;.$htime;     \r\n	}elseif($time &lt; 60 * 60 * 24 * 3){         \r\n		$d = floor($time/(60*60*24));         \r\n		if($d==1){\r\n			$str = &#039;昨天 &#039;.$rtime;\r\n		}else{\r\n			$str = &#039;前天 &#039;.$rtime;     \r\n		}\r\n	}else{         \r\n		$str = $rtime;     \r\n	}     \r\n	return $str; \r\n}\r\n//实例\r\n$times=time()-254;  \r\necho formatTime($times);</pre>','php人性化时间(类似微博)转换两组','','publish','open','open','','php%e4%ba%ba%e6%80%a7%e5%8c%96%e6%97%b6%e9%97%b4%e7%b1%bb%e4%bc%bc%e5%be%ae%e5%8d%9a%e8%bd%ac%e6%8d%a2%e4%b8%a4%e7%bb%84','','','2013-01-11 09:15:02','2013-01-11 17:15:02','','0','http://yanue.net/?p=445','0','post','','0');
INSERT INTO `wp_posts` VALUES('452','1','2013-02-23 22:57:30','2013-02-24 06:57:30','如果用某些windows编辑器编辑的文件，很可能就会产生多余的^M转义符合，当然这些符号在win下是看不到的。\r\n\r\n用vim打开，发现文件中很多^M.\r\n\r\nVim中可以通过以下命令设置换行符：\r\n<pre class=\"lang_php decode_true\">:%s/^M//g</pre>\r\n当出现多种换行符的时候我们可以全能替换命令统一换行符\r\n<pre class=\"lang_php decode_true\">set fileformat=dos\r\n:%s/\\r\\(\\n\\)/\\r/g</pre>\r\n&nbsp;','Vim中^M的移除替换','','publish','open','open','','vim%e4%b8%adm%e7%9a%84%e7%a7%bb%e9%99%a4%e6%9b%bf%e6%8d%a2','','','2013-02-23 22:57:30','2013-02-24 06:57:30','','0','http://yanue.net/?p=452','0','post','','0');
INSERT INTO `wp_posts` VALUES('453','1','2013-02-23 23:04:47','2013-02-24 07:04:47','<strong>在vim中使用的替换命令如下：</strong>\r\n将第n行和第m行之间的old字符都替换为new字符\r\n<pre class=\"lang_php decode_true\">:n,ms/old/new/g</pre>\r\n将当前行中所有old字符都替换为new字符\r\n<pre class=\"lang_php decode_true\">:s/old/new/g</pre>\r\n将文中所有old字符都替换为new字符， 1表示开始，$表示文件结束\r\n<pre class=\"lang_php decode_true\">:1,$s/old/new/g</pre>\r\n也可以这样：\r\n<pre class=\"lang_php decode_true\">:%s/old/new/g</pre>','在vim中使用的替换命令','','publish','open','open','','%e5%9c%a8vim%e4%b8%ad%e4%bd%bf%e7%94%a8%e7%9a%84%e6%9b%bf%e6%8d%a2%e5%91%bd%e4%bb%a4','','','2013-02-23 23:04:47','2013-02-24 07:04:47','','0','http://yanue.net/?p=453','0','post','','0');
INSERT INTO `wp_posts` VALUES('454','1','2013-02-23 23:14:50','2013-02-24 07:14:50','<strong>php+mysql事务处理的几个步骤:</strong>\r\n1.关闭自动提交\r\n2.开启事务处理\r\n3.有异常就自动抛出异常提示再回滚\r\n4.开启自动提交\r\n\r\n<strong>注意:</strong>mysql只有这个InnoDB驱动是支持事务处理的，默认MyIsAM驱动不支持.\r\n下面是实例代码：\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\n    try{\r\n        $pdo=new pdo(&quot;mysql:host=localhost;dbname=mydb&quot;, &quot;root&quot;, &quot;root&quot;, array(PDO::ATTR_AUTOCOMMIT=&gt;0));//最后是关闭自动提交\r\n        //$pdo-&gt;setAttribute(PDO::ATTR_AUTOCOMMIT, 0);//这个是通过设置属性方法进行关闭自动提交和上面的功能一样\r\n        $pdo-&gt;setAttribute(PDO::ATTR_ERRMODE,  PDO::ERRMODE_EXCEPTION);//开启异常处理\r\n    }catch(PDOException $e){\r\n        echo &quot;数据库连接失败：&quot;.$e-&gt;getMessage();\r\n        exit;\r\n    }\r\n    /*\r\n     * 事务处理\r\n     *\r\n     *   张三从李四那里买了一台 2000 元的电脑\r\n     *     从张三帐号中扣出 2000元\r\n     *     向李四账号中加入 2000元\r\n     *     从商品表中减少一台电脑\r\n     *     MyIsAM  InnoDB\r\n     */\r\n    try{\r\n        $pdo-&gt;beginTransaction();//开启事务处理       \r\n        $price=500;\r\n        $sql=&quot;update zhanghao set price=price-{$price} where id=1&quot;;\r\n        $affected_rows=$pdo-&gt;exec($sql);\r\n        if(!$affected_rows)\r\n            throw new PDOException(&quot;张三转出失败&quot;);//那个错误抛出异常\r\n        $sql=&quot;update zhanghao set price=price+{$price} where id=3&quot;;\r\n        $affected_rows=$pdo-&gt;exec($sql);      \r\n        if(!$affected_rows)\r\n            throw new PDOException(&quot;向李四转入失败&quot;);\r\n        echo &quot;交易成功！&quot;;\r\n        $pdo-&gt;commit();//交易成功就提交\r\n    }catch(PDOException $e){\r\n        echo $e-&gt;getMessage();\r\n        $pdo-&gt;rollback();\r\n    }  \r\n    $pdo-&gt;setAttribute(PDO::ATTR_AUTOCOMMIT, 1);//自动提交，如果最后不自动提交，转账是不成功的  \r\n    //设置错误报告模式 ERRMODE_SILENT    ERRMODE_WARNING</pre>','php中pdo的mysql事务处理实例','','publish','open','open','','php%e5%88%a9%e7%94%a8pdo%e8%bf%9b%e8%a1%8cmysql%e7%9a%84%e4%ba%8b%e5%8a%a1%e5%a4%84%e7%90%86%e6%9c%ba%e5%88%b6','','','2013-02-23 23:16:28','2013-02-24 07:16:28','','0','http://yanue.net/?p=454','0','post','','0');
INSERT INTO `wp_posts` VALUES('455','1','2013-02-23 23:21:23','2013-02-24 07:21:23','PV(访问量)：即Page View, 即页面浏览量或点击量，用户每次刷新即被计算一次。\r\n\r\nUV(独立访客)：即Unique Visitor,访问您网站的一台电脑客户端为一个访客。00:00-24:00内相同的客户端只被计算一次。\r\n\r\nIP(独立IP)：指独立IP数。00:00-24:00内相同IP地址只被计算一次。\r\n\r\n新访客：某客户端首次访问为一个新访客。\r\n\r\n最近访客：最近一段时间内访问您网站的客户端。目前显示50条。\r\n\r\n当前在线人数：15分钟内在线访问的UV数。\r\n\r\n24小时独立IP：指每小时独立的IP地址。因为该数据每个小时是独立去重，所以叫24小时独立的IP。\r\n\r\n例如192.168.1.1 0点-1点 访问了您网站 在这个时段算一个IP。\r\n\r\n例如192.168.1.1 0点-1点 访问了您网站 在这个时段算一个IP。\r\n\r\n如果192.168.1.1 0点-1点 再次访问您的网站 去重不计算IP。\r\n\r\n如果192.168.1.1 1点-2点 又访问您的网站 在这个时段也算一个IP。\r\n\r\n最高IP : 指选择时间段范围内，某日访问IP最多的数值。\r\n\r\n最高PV：指选择时间段范围内，某日访问量最高的数值。\r\n\r\n日均流量：指选择时间范围内，平均每日流量。 (日均流量=总访问量/总天数)\r\n\r\n人均访问量：指选择时间范围内，每个访客访问网站的PV数。(计算公式：人均访问量=访问量/唯一访客数)。\r\n\r\n访问过程：每个访问者从进入您的网站开始访问，一直到最后离开您的网站，整个过程中发生的一切点击访问行为，称为一次访问过程。\r\n\r\n访问入口：每次访问过程中，用户进入的第一个页面为访问入口页面。\r\n\r\n访问出口：每次访问过程中，用户结束访问，离开前点击的最后一个页面为访问出口页面。\r\n\r\n平均停留时间：所有访客的访问过程，访问持续时间的平均值。\r\n\r\n平均访问页数：所有访客的访问过程，连续访问页面数的平均值。\r\n\r\n贡献用户数：每个访问来源带来的独立访客数，即UV数；\r\n\r\n贡献IP数：每个访问来源带来的独立IP数。\r\n\r\n贡献PV数：每个访问来源带来的访客的一切后续访问行为所产生的PV数。','网站统计中名词解释','','publish','open','open','','%e7%bd%91%e7%ab%99%e7%bb%9f%e8%ae%a1%e4%b8%ad%e5%90%8d%e8%af%8d%e8%a7%a3%e9%87%8a','','','2013-07-21 22:30:57','2013-07-22 06:30:57','','0','http://yanue.net/?p=455','0','post','','0');
INSERT INTO `wp_posts` VALUES('456','1','2013-02-23 23:26:52','2013-02-24 07:26:52','php计算两个时间之间月份差\r\n\r\n实例代码：\r\n<pre class=\"lang_php decode_true\">$yourdate=&quot;2012-10-20&quot;;\r\n$yourdate_unix=strtotime($yourdate);\r\necho (date(&quot;Y&quot;,$yourdate_unix)-date(&quot;Y&quot;))*12+(date(&quot;m&quot;,$yourdate_unix)-date(&quot;m&quot;));</pre>','php计算两个时间之间月份差','','publish','open','open','','php%e8%ae%a1%e7%ae%97%e4%b8%a4%e4%b8%aa%e6%97%b6%e9%97%b4%e4%b9%8b%e9%97%b4%e6%9c%88%e4%bb%bd%e5%b7%ae','','','2013-02-23 23:26:52','2013-02-24 07:26:52','','0','http://yanue.net/?p=456','0','post','','0');
INSERT INTO `wp_posts` VALUES('457','1','2013-02-23 23:49:05','2013-02-24 07:49:05','面对大数据量，大文件的sql操作，我们需要借助mysql强大的命令操作：\r\n\r\n<strong>1. 数据库导入命令</strong>\r\n<pre class=\"lang_php decode_true\">mysql -h localhost -u root -p   \r\nuse dbname\r\nsource backup.sql</pre>\r\n<strong>说明：</strong>需要使用命令连接上数据库并选择相应数据库才能使用。\r\n\r\n<strong>2. 数据库备份命令</strong>\r\n<div>MySQL的导出命令mysqldump，基本用法是：</div>\r\n<div>\r\n<pre class=\"lang_php decode_true\">mysqldump [OPTIONS] database [tables]</pre>\r\n<strong>说明：</strong>不能先连接数据库，是直接连接数据库导出\r\n\r\n</div>\r\n<div><strong>简单实例</strong>：</div>\r\n<div>\r\n<pre class=\"lang_php decode_true\">mysqldump -h localhost -u root -p dbname &gt; backup.sql</pre>\r\n<a href=\"http://www.yanue.net/archives/458.html\">mysqldump用法详解</a>\r\n\r\n</div>','MySQL大数据量之导入导出命令','','publish','open','open','','mysql%e5%a4%a7%e6%95%b0%e6%8d%ae%e9%87%8f%e4%b9%8b%e5%af%bc%e5%85%a5%e5%af%bc%e5%87%ba%e5%91%bd%e4%bb%a4','','','2013-02-23 23:58:32','2013-02-24 07:58:32','','0','http://yanue.net/?p=457','0','post','','0');
INSERT INTO `wp_posts` VALUES('458','1','2013-02-24 00:48:10','2013-02-24 08:48:10','MySQL的mysqldump命令，基本用法是：\r\n<pre class=\"lang_php decode_true\">mysqldump [OPTIONS] database [tables]</pre>\r\n<div><strong>说明：</strong></div>\r\n<div>1. 通过执行mysqldump --help，你能得到你mysqldump的版本支持的使用帮助信息。</div>\r\n<div>\r\n\r\n2.如果端口为默认的3306时，可省略 -P {端口号} 这一项。\r\n\r\n3.命令行格式中 { } 中的内容都是变量\r\n主机名 : {hostname}\r\n端   口：{port}    （一般默认3306，可缺省）\r\n用户名：{user} {username} （如root）\r\n密   码：{password}\r\n数据库名 ：{database}\r\n表   名：{table}  {table1}  {table2}\r\n文件名：{backup.sql}\r\n\r\n</div>\r\n<h3>常用操作:</h3>\r\n<strong>备份MySQL整个数据库：</strong>\r\n<pre class=\"lang_php decode_true\">mysqldump -h主机名 -P端口 -u用户名 -p密码 (–database) 数据库名 &gt; 文件名.sql\r\nmysqldump -h{hostname} -P{port} -u{username} -p{password} {database} &gt; {backup.sql}</pre>\r\n<strong>说明：</strong>参数及值可以分开如-P3306可以写成-P 3306，密码可以先不填写，以确保安全。\r\n\r\n<strong>MySQL数据库压缩备份：</strong>\r\n<pre class=\"lang_php decode_true\">mysqldump -h{hostname} -u{username} -p{password} {database} | gzip &gt; {backup.sql.gz}</pre>\r\n<strong>备份MySQL数据库某个(些)表:</strong>\r\n<pre class=\"lang_php decode_true\">mysqldump -h主机名  -P端口 -u用户名 -p密码 (–tables | –quick) 数据库名 表名1 (表名2 …) &gt; 文件名.sql (括号中的可缺省)。\r\n#实例：\r\nmysqldump -u root -p myadmindb admin_group admin_group_right admin_logs admin_user_right admin_users &gt; tmp.sql</pre>\r\n<strong>同时备份多个MySQL数据库:</strong>\r\n<pre class=\"lang_php decode_true\">mysqldump -h{hostname} -P{port} -u{username} -p{password} –databases {database1} {database2} {database3} &gt; multibackfile.sql</pre>\r\n<strong>还原MySQL数据库的命令:</strong>\r\n<pre class=\"lang_php decode_true\">mysql -h{hostname} -u{username} -p{password} {database} &lt; {backup.sql}</pre>\r\n<strong>还原压缩的MySQL数据库:</strong>\r\n<pre class=\"lang_php decode_true\">gunzip &lt; {backup.sql.gz} | mysql –u{username} –p{password} {database}</pre>\r\n<strong>将数据库转移到新服务器:</strong>\r\n<pre class=\"lang_php decode_true\">mysqldump –u{username} –p{password} {database} | mysql –host={hostname} –C {database}</pre>','mysqldump常见用法详解','','publish','open','open','','mysqldump%e5%b8%b8%e8%a7%81%e7%94%a8%e6%b3%95%e8%af%a6%e8%a7%a3','','','2013-02-24 00:48:10','2013-02-24 08:48:10','','0','http://yanue.net/?p=458','0','post','','0');
INSERT INTO `wp_posts` VALUES('461','1','2013-02-24 01:03:33','2013-02-24 09:03:33','<strong>php回调函数call_user_func_array,call_user_func使用及区别：</strong>\r\n\r\ncall_user_func函数和call_user_func_array函数都支持引用，这让他们和普通的函数调用更趋于功能一致:\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\nfunction a($b)   \r\n{   \r\n	$b++;   \r\n}   \r\n$c = 0;   \r\ncall_user_func(&#039;a&#039;, $c);   \r\necho $c;//显示 1   \r\ncall_user_func_array(&#039;a&#039;, array($c));   \r\necho $c;//显示 2\r\n?&gt;</pre>\r\n另：call_user_func函数和call_user_func_array函数都支持引用。\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\nfunction increment(&amp;$var)\r\n{\r\n    $var++;\r\n}\r\n$a = 0;\r\ncall_user_func(&#039;increment&#039;, $a);\r\necho $a; // 0\r\ncall_user_func_array(&#039;increment&#039;, array(&amp;$a)); // You can use this instead\r\necho $a; // 1\r\n?&gt;</pre>','php回调函数call_user_func_array,call_user_func使用','','publish','open','open','','php%e5%9b%9e%e8%b0%83%e5%87%bd%e6%95%b0call_user_func_arraycall_user_func%e4%bd%bf%e7%94%a8','','','2013-02-24 01:03:33','2013-02-24 09:03:33','','0','http://yanue.net/?p=461','0','post','','0');
INSERT INTO `wp_posts` VALUES('462','1','2013-02-24 01:07:03','2013-02-24 09:07:03','<strong>php中json_decode注意事项:</strong>\r\n<div>\r\n\r\n下面三种json写法都是错的，你能看出错在哪里吗？\r\n<blockquote>\r\n<pre class=\"lang_php decode_true\">$bad_json = &quot;{ &#039;bar&#039;: &#039;baz&#039; }&quot;;\r\n$bad_json = &#039;{ bar: &quot;baz&quot; }&#039;;\r\n$bad_json = &#039;{ &quot;bar&quot;: &quot;baz&quot;, }&#039;;</pre>\r\n</blockquote>\r\n对这三个字符串执行json_decode()都将返回null，并且报错。\r\n\r\n第一个的错误是，json的分隔符（delimiter）只允许使用双引号，不能使用单引号。\r\n\r\n第二个的错误是，json名值对的\"名\"（冒号左边的部分），任何情况下都必须使用双引号。\r\n\r\n第三个的错误是，最后一个值之后不能添加逗号（trailing comma）。\r\n\r\n另外，json只能用来表示对象（object）和数组（array），如果对一个字符串或数值使用json_decode()，将会返回null。\r\n<blockquote>\r\n<pre class=\"lang_php decode_true\">var_dump(json_decode(&quot;Hello World&quot;)); //null</pre>\r\n</blockquote>\r\n</div>','php中json_decode注意事项','','publish','open','open','','php%e4%b8%adjson_decode%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a1%b9','','','2013-02-24 01:07:03','2013-02-24 09:07:03','','0','http://yanue.net/?p=462','0','post','','0');
INSERT INTO `wp_posts` VALUES('463','1','2013-02-24 01:16:30','2013-02-24 09:16:30','jquery中live是一个很不错的事件处理方法，但主要是针对标准响应事件处理的函数。\r\n\r\n因为hover不是标准的事件，因此无法直接使用live进行处理，故使用以下方法代替，效果一样。\r\n\r\n要求 jQuery 1.4.3+\r\n\r\n<strong>实现方法</strong>：\r\n<pre class=\"lang_php decode_true\">$(&quot;table tr&quot;).live({\r\n        mouseenter:\r\n           function()\r\n           {\r\n\r\n           },\r\n        mouseleave:\r\n           function()\r\n           {\r\n\r\n           }\r\n       }\r\n    );</pre>','jquery中live事件hover实现方法mouseenter,mouseleave','','publish','open','open','','jquery%e4%b8%adlive%e4%ba%8b%e4%bb%b6hover%e5%ae%9e%e7%8e%b0%e6%96%b9%e6%b3%95mouseentermouseleave','','','2013-02-24 01:16:30','2013-02-24 09:16:30','','0','http://yanue.net/?p=463','0','post','','0');
INSERT INTO `wp_posts` VALUES('473','1','2013-03-10 05:44:30','2013-03-10 13:44:30','如果有很多表需要删除，而表中有相同的前缀，我们可能需要如下语句：\r\n<pre class=\"lang_php decode_true\">drop table pre_tablename1;\r\ndrop table pre_tablename2;\r\ndrop table pre_tablename3;\r\n.......</pre>\r\n如果我们手动写，可能需要很多重复性的工作而且可能还不知道表名称。因此我们可以通过sql语句输出上面的删除表语句\r\n\r\n<strong>执行sql语句：</strong>\r\n<pre class=\"lang_php decode_true\">Select CONCAT( &#039;drop table &#039;, table_name, &#039;;&#039; ) \r\nFROM information_schema.tables \r\nWhere table_name LIKE &#039;pre_%&#039;;</pre>\r\n<strong>注意:</strong> like \'pre_%\' 其中 pre_是你需要替换的表前缀.当然你也可以根据自己的情况写规则。\r\n\r\n执行查询,会自动把匹配的表生成出 drop table table_name这样的SQL语句.\r\n\r\n批量复制一下到记事本或者 et之类的编辑工具中,确定你的sql语句是否正确.\r\n\r\n这么一来也可以安全的审核一下语句,避免误操作..\r\n\r\n当然这只是一种思路，也可以用在其他问题中。\r\n\r\n如批量修改表名的操作方法：\r\n<pre class=\"lang_php decode_true\">Select CONCAT( &#039;ALTER TABLE &#039;, table_name, &#039;RENAME TO &#039;, table_name,&#039;;&#039; ) \r\nFROM information_schema.tables \r\nWhere table_name LIKE &#039;uc_%&#039;;</pre>\r\n执行查询，会得到结果：\r\n<pre class=\"lang_php decode_true\">ALTER TABLE uc_aaa RENAME TO uc_aaa; \r\nALTER TABLE uc_bbb RENAME TO uc_bbb;</pre>\r\n批量复制一下到记事本或者 et之类的编辑工具中,然后批量替换 RENAME TO uc 成 RENAME TO 你想要的表前缀\r\n完成后 再执行.\r\n\r\n&nbsp;','mysql批量删除相同前缀的表和修改表名','','publish','open','open','','mysql%e6%89%b9%e9%87%8f%e5%88%a0%e9%99%a4%e7%9b%b8%e5%90%8c%e5%89%8d%e7%bc%80%e7%9a%84%e8%a1%a8%e5%92%8c%e4%bf%ae%e6%94%b9%e8%a1%a8%e5%90%8d','','','2013-03-10 05:44:30','2013-03-10 13:44:30','','0','http://yanue.net/?p=473','0','post','','0');
INSERT INTO `wp_posts` VALUES('474','1','2013-03-10 05:54:40','2013-03-10 13:54:40','mysql中<strong>alter</strong>命令的用法,用于编辑表结构.\r\n\r\n<strong>修改表名</strong>\r\n<pre class=\"lang_php decode_true\">alter table test rename test1;</pre>\r\n<strong>修改字段类型 </strong>\r\n<pre class=\"lang_php decode_true\">alter table employee change depno depno int(5) not null;</pre>\r\n&nbsp;\r\n\r\n<strong>加索引 </strong>\r\n<pre class=\"lang_php decode_true\">alter table 表名 add index 索引名 (字段名1[，字段名2 …]);</pre>\r\n例子：\r\n<pre class=\"lang_php decode_true\">alter table employee add index emp_name (name);</pre>\r\n&nbsp;\r\n\r\n<strong>加主关键字的索引</strong>\r\n<pre class=\"lang_php decode_true\">alter table 表名 add primary key (字段名);</pre>\r\n例子：\r\n<pre class=\"lang_php decode_true\">alter table employee add primary key(id);</pre>\r\n&nbsp;\r\n\r\n<strong>加唯一限制条件的索引 </strong>\r\n<pre class=\"lang_php decode_true\">alter table 表名 add unique 索引名 (字段名);</pre>\r\n例子：\r\n<pre class=\"lang_php decode_true\">alter table employee add unique emp_name2(cardnumber);</pre>\r\n&nbsp;\r\n\r\n<strong>查看某个表的索引 </strong>\r\n<pre class=\"lang_php decode_true\">show index from 表名;</pre>\r\n例子：\r\n<pre class=\"lang_php decode_true\">show index from employee;</pre>\r\n&nbsp;\r\n\r\n<strong>删除某个索引 </strong>\r\n<pre class=\"lang_php decode_true\">alter table 表名 drop index 索引名;</pre>\r\n例子：\r\n<pre class=\"lang_php decode_true\">alter table employee drop index emp_name;</pre>\r\n&nbsp;\r\n\r\n<strong>增加表字段</strong>：\r\n<pre class=\"lang_php decode_true\">ALTER TABLE table_name ADD field_name field_type;</pre>\r\n查看表：\r\n<pre class=\"lang_php decode_true\">SELECT * FROM table_name;</pre>\r\n&nbsp;\r\n\r\n<strong>修改原字段名称及类型</strong>：\r\n<pre class=\"lang_php decode_true\">ALTER TABLE table_name CHANGE old_field_name new_field_name field_type;</pre>\r\n删除字段：\r\n<pre class=\"lang_php decode_true\">ALTER TABLE table_name DROP field_name;</pre>','mysql更新数据表结构命令','','publish','open','open','','mysql%e6%9b%b4%e6%96%b0%e6%95%b0%e6%8d%ae%e8%a1%a8%e7%bb%93%e6%9e%84%e5%91%bd%e4%bb%a4','','','2013-04-17 01:24:27','2013-04-17 09:24:27','','0','http://yanue.net/?p=474','0','post','','0');
INSERT INTO `wp_posts` VALUES('478','1','2013-04-06 20:44:34','2013-04-07 04:44:34','ubuntu下用file-roller,也就是归档管理器打开.rar文件，里面的中文目录文件名总是乱码(一般情况只是win平台创建的rar包中文文件名乱码)。\r\n\r\n<strong>原因</strong>在于该rar文件中的编码与ubuntu的不同。\r\n\r\n<strong>解决办法</strong>很简单，卸载掉当前系统中的rar 软件，再使用源中的<code>unrar</code>包，或者使用 <a href=\"http://www.rarlab.com/download.htm\">rar for linux</a>，或者安装p7zip-rar就可解决。\r\n\r\n第一步：（卸载原来rar）\r\n<pre class=\"lang_php decode_true\">sudo apt-get remove rar</pre>\r\n第二步：（安装unrar或p7zip-rar）\r\n<pre class=\"lang_php decode_true\">sudo apt-get install unrar</pre>\r\n或\r\n<pre class=\"lang_php decode_true\">sudo apt-get install p7zip-rar</pre>','linux ubuntu中rar乱码问题解决','','publish','open','open','','linux-ubuntu%e4%b8%adrar%e4%b9%b1%e7%a0%81%e9%97%ae%e9%a2%98%e8%a7%a3%e5%86%b3','','','2013-04-06 20:44:34','2013-04-07 04:44:34','','0','http://yanue.net/?p=478','0','post','','0');
INSERT INTO `wp_posts` VALUES('487','1','2013-04-14 20:35:52','2013-04-15 04:35:52','Linux下的终端用的快捷键:\r\n\r\nShift+Ctrl+T:新建标签页\r\nShift+Ctrl+W:关闭标签页\r\nCtrl+PageUp:前一标签页\r\nCtrl+PageDown:后一标签页\r\nShift+Ctrl+PageUp:标签页左移\r\nShift+Ctrl+PageDown:标签页右移\r\nAlt+1:切换到标签页1\r\nAlt+2:切换到标签页2\r\nAlt+3:切换到标签页3\r\n\r\nShift+Ctrl+N:新建窗口\r\nShift+Ctrl+Q:关闭终端\r\n\r\n终端中的复制／粘贴:\r\nShift+Ctrl+C:复制\r\nShift+Ctrl+V:粘贴\r\n\r\n终端改变大小：\r\nF11：全屏\r\nCtrl+plus:放大\r\nCtrl+minus:减小\r\nCtrl+0:原始大小','Linux终端使用技巧','','publish','open','open','','linux%e7%bb%88%e7%ab%af%e4%bd%bf%e7%94%a8%e6%8a%80%e5%b7%a7','','','2013-04-14 20:35:52','2013-04-15 04:35:52','','0','http://yanue.net/?p=487','0','post','','0');
INSERT INTO `wp_posts` VALUES('481','1','2013-04-07 20:55:04','2013-04-08 04:55:04','<strong>位运算</strong> 就是把数值转化成二进制数来进行运算，常用的位运算符详下表：\r\n<table><caption><strong>位运算符</strong></caption>\r\n<thead>\r\n<tr>\r\n<th>例子</th>\r\n<th>名称</th>\r\n<th>结果</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>$a &amp; $b</td>\r\n<td>And（按位与）</td>\r\n<td>将把 $a 和 $b 中都为 1 的位设为 1。</td>\r\n</tr>\r\n<tr>\r\n<td>$a | $b</td>\r\n<td>Or（按位或）</td>\r\n<td>将把 $a 或者 $b 中为 1 的位设为 1。</td>\r\n</tr>\r\n<tr>\r\n<td>$a ^ $b</td>\r\n<td>Xor（按位异或）</td>\r\n<td>将把 $a 和 $b 中不同的位设为 1。</td>\r\n</tr>\r\n<tr>\r\n<td>~ $a</td>\r\n<td>Not（按位非）</td>\r\n<td>将 $a 中为 0 的位设为 1，反之亦然。</td>\r\n</tr>\r\n<tr>\r\n<td>$a &lt;&lt; $b</td>\r\n<td>Shift left（左移）</td>\r\n<td>将 $a 中的位向左移动 $b 次（每一次移动都表示“乘以 2”）。</td>\r\n</tr>\r\n<tr>\r\n<td>$a &gt;&gt; $b</td>\r\n<td>Shift right（右移）</td>\r\n<td>将 $a 中的位向右移动 $b 次（每一次移动都表示“除以 2”）。</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<pre class=\"lang_php decode_true\">&lt;?php						\r\n	$a=12;			/* 转化为二进制数为1100 */		\r\n	$b=9;			/* 转化为二进制数为1001 */		\r\n	$c=2;					\r\n	echo &quot;a=$a b=$b c=$c&quot;;	\r\n	echo &quot;&lt;br&gt;$a &amp; $b =&quot;;	\r\n	echo $a &amp; $b;				\r\n	echo &quot;&lt;br&gt;$a | $b =&quot;;	\r\n	echo $a | $b;				\r\n	echo &quot;&lt;br&gt;$a&lt;&lt;$c=&quot;;		\r\n	echo $a&lt;&lt;$c;				\r\n?&gt;</pre>\r\n<strong style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">优点和缺陷</strong>\r\n位运算的运算对象是二进制的位，速度快，效率高，而且节省存储空间，位运算做权限控制又相当地灵活。但是，位运算也有很大的局限，因为在32位计算机上，位移不能超过32次，这就要求权限数量不超过32种。\r\n例子：通过位运算简单实现权限控制。\r\n<pre class=\"lang_php decode_true\">&lt;?\r\n// 赋予权限值--&gt;删除：8、上传：4、写入：2、只读：1\r\ndefine(&quot;mDELETE&quot;,8);\r\ndefine(&quot;mUPLOAD&quot;,4);\r\ndefine(&quot;mWRITE&quot;,2);\r\ndefine(&quot;mREAD&quot;,1);\r\n//==========使用说明==================\r\n//部门经理的权限为(假设它拥有此部门的所有权限)，| 是位或运行符，不熟悉的就查查资料\r\necho mDELETE|mUPLOAD|mWRITE|mREAD ,&quot;&lt;br&gt;&quot;;// 相当于是把上面的权限值加起来：8+4+2+1=15\r\n// 设我只有 upload 和 read 权限，则\r\necho mUPLOAD|mREAD ,&quot;&lt;br&gt;&quot;;//相当于是把上传、只读的权限值分别相加：4+1=5\r\n/*\r\n*赋予它多个权限就分别取得权限值相加，又比如某位员工拥有除了删除外的权限其余都拥有，那它的权限值是多少?\r\n*应该是：4+2+1＝7\r\n*明白了怎么赋值给权限吧?\r\n*/\r\n//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n//判断某人的权限可用，设权限值在$key中\r\n/*\r\n*判断权限用&amp;位与符，\r\n*/\r\n#$key = 15;//13＝8+4+1\r\n$key = mDELETE|mUPLOAD|mWRITE|mREAD;\r\necho $key &amp; mDELETE;\r\nif($key &amp; mDELETE) echo &quot;有删除权限&lt;br&gt;&quot;; //8\r\nif($key &amp; mUPLOAD) echo &quot;有上传权限&lt;br&gt;&quot;; //4\r\nif($key &amp; mWRITE) echo &quot;有写权限&lt;br&gt;&quot;; //无此权限\r\nif($key &amp; mREAD) echo &quot;有读权限&lt;br&gt;&quot;; //1\r\n#取消某个权限\r\n$key = $key ^ mDELETE;\r\necho &#039;-----------------------------&#039;;\r\nif($key &amp; mDELETE) echo &quot;有删除权限&lt;br&gt;&quot;; //8\r\nif($key &amp; mDELETE) echo &quot;有删除权限&lt;br&gt;&quot;; //8\r\nif($key &amp; mUPLOAD) echo &quot;有上传权限&lt;br&gt;&quot;; //4\r\nif($key &amp; mWRITE) echo &quot;有写权限&lt;br&gt;&quot;; //无此权限\r\nif($key &amp; mREAD) echo &quot;有读权限&lt;br&gt;&quot;; //1\r\n?&gt;</pre>\r\n<pre class=\"lang_php decode_true\"></pre>','php位运算及实现权限控制','','publish','open','open','','php%e4%bd%8d%e8%bf%90%e7%ae%97%e5%8f%8a%e5%ae%9e%e7%8e%b0%e6%9d%83%e9%99%90%e6%8e%a7%e5%88%b6','','','2013-04-07 20:58:08','2013-04-08 04:58:08','','0','http://yanue.net/?p=481','0','post','','0');
INSERT INTO `wp_posts` VALUES('482','1','2013-04-08 20:49:03','2013-04-09 04:49:03','bin() 十进制转二进制\r\n\r\nascii() 字符串最左边的字母的ascii\r\n\r\noct() 十进制变八进制\r\n\r\nhex() 变十六进制\r\n\r\nchar() 把每个ASCII值转成对应字母\r\n\r\nchar(77,121,83,\'81.3\',\'76\')\r\n\r\nchar_length() 返回字符个数\r\n\r\nlength() 返回字符串的字节数\r\n\r\nconcat(str1,str2...) 将参数连接成字符串返回，如有任何一个为null，则返回值为null\r\n\r\nlocate(\'bar\',\'foobarbar\') 返回bar第一次出现的位置\r\n\r\ninstr(\'foobarbar\',\'bar\') 同上，参数位置颠倒\r\n\r\nlpad(\'hi\',4,\'?\') 左填充\r\n\r\nrpad(\'hi\',4,\'?.\') 右填充\r\n\r\nleft(\'dfsdfds sdfd\',5) 从左截5个字符\r\n\r\nright(\'dfsdfds sdfd\',5) 从右截5个字符\r\n\r\nsubstring(\'sdfsdfsda fdsaf sdf\',5,6) 从5个字符开始向右截6个，中间可以为负，从左开始数\r\n\r\nmid() 同substring()\r\n\r\nltrim(\'  fdsfsd  \') 拿掉左边的空格\r\n\r\nrtrim(\'  fdsfsd \') 拿掉右边的空格\r\n\r\ntrim(both \'x\' from \'xxfdfxx\')自定义拿\r\n\r\nspace(6) 得到6个空格的一个串\r\n\r\nrepeat(\'mysql\',3) 重复3次mysql\r\n\r\nreplace(\'www.sdfsd.com\',\'w\',\'ww\')将文本中w替换成ww\r\n\r\nreverse(\'abc\') 翻转字符串\r\n\r\nlcase() low() 把字符串变成小写\r\n\r\nucase() upper() 把字符串变成大写\r\n\r\nload_file(file_name) 读入文件\r\n\r\nmod(a,b) 取模 a%b\r\n\r\nceiling(x) 取大于x的最小整数\r\n\r\nround(x) 将x四舍五入到最近整数\r\n\r\nexp(x)返回值e的x次方\r\n\r\nln(x)\r\n\r\nlog(x,b) x为底\r\n\r\npi() 常值π\r\n\r\ncos(x)\r\n\r\nsin(x)\r\n\r\ntan(x)\r\n\r\nrand()产生一个在0-1.0之间的随机值 rand(x) x为随机数的种子\r\n\r\n时间日期函数\r\n\r\n<strong>字符串相关mysql内部函数</strong>：<a href=\"http://dev.mysql.com/doc/refman/5.6/en/string-functions.html\">http://dev.mysql.com/doc/refman/5.6/en/string-functions.html</a>。\r\n\r\n<strong>数字相关mysql内部函数</strong>：<a href=\"http://dev.mysql.com/doc/refman/5.6/en/numeric-functions.html\">http://dev.mysql.com/doc/refman/5.6/en/numeric-functions.html</a>。\r\n\r\n<strong>时间和日期相关mysql内部函数</strong>：<a href=\"http://dev.mysql.com/doc/refman/5.6/en/date-and-time-functions.html\">http://dev.mysql.com/doc/refman/5.6/en/date-and-time-functions.html</a>','MySQL常用内部函数列表','','publish','open','open','','mysql%e5%b8%b8%e7%94%a8%e5%86%85%e9%83%a8%e5%87%bd%e6%95%b0%e5%88%97%e8%a1%a8','','','2013-04-08 20:49:03','2013-04-09 04:49:03','','0','http://yanue.net/?p=482','0','post','','0');
INSERT INTO `wp_posts` VALUES('483','1','2013-04-09 21:11:57','2013-04-10 05:11:57','php日期函数date里面有个参数w代表周几\r\n\r\nw分别表示为: 0 周日 1 周一 2 周二 ... 6 周六\r\n\r\n所以我们判断今天是周几的话  直接:\r\n<pre class=\"lang_php decode_true\">$w = date(&#039;w&#039;);\r\n//注意上面返回的都是 数字,0123456.所以如果要显示中文的星期，可以定义下面的数组就可以了。\r\n$weekarray=array(&quot;日&quot;,&quot;一&quot;,&quot;二&quot;,&quot;三&quot;,&quot;四&quot;,&quot;五&quot;,&quot;六&quot;); //0表示星期日\r\necho &#039;周&#039;.$weekarray[$w];</pre>\r\n而判断某天是星期几  格式为date(\'w\',unix时间毫秒)\r\n<pre class=\"lang_php decode_true\">echo date(&#039;w&#039;,strtotime(&#039;2012-05-09 12:23:30&#039;));</pre>\r\n&nbsp;','php判断星期几','','publish','open','open','','php%e5%88%a4%e6%96%ad%e6%98%9f%e6%9c%9f%e5%87%a0','','','2013-04-09 21:36:52','2013-04-10 05:36:52','','0','http://yanue.net/?p=483','0','post','','0');
INSERT INTO `wp_posts` VALUES('484','1','2013-04-10 20:43:17','2013-04-11 04:43:17','如果需要将下面的json对象合并：\r\n<div id=\"message597597\">\r\n<pre class=\"lang_php decode_true\">var a ={&quot;a&quot;:&quot;1&quot;,&quot;b&quot;:&quot;2&quot;}\r\nvar b ={&quot;c&quot;:&quot;3&quot;,&quot;d&quot;:&quot;4&quot;,&quot;e&quot;:&quot;5&quot;}</pre>\r\n想得到结果：\r\n\r\n</div>\r\n<div>\r\n<pre class=\"lang_php decode_true\">var c ={&quot;a&quot;:&quot;1&quot;,&quot;b&quot;:&quot;2&quot;,&quot;c&quot;:&quot;3&quot;,&quot;d&quot;:&quot;4&quot;,&quot;e&quot;:&quot;5&quot;}</pre>\r\n</div>\r\n直接使用js的话，可以用一下方法：\r\n<pre class=\"lang_php decode_true\">&lt;script&gt;\r\nfunction extend(des, src, override){\r\n   if(src instanceof Array){\r\n       for(var i = 0, len = src.length; i &lt; len; i++)\r\n            extend(des, src[i], override);\r\n   }\r\n   for( var i in src){\r\n       if(override || !(i in des)){\r\n           des[i] = src[i];\r\n       }\r\n   } \r\n   return des;\r\n}\r\nvar a ={&quot;a&quot;:&quot;1&quot;,&quot;b&quot;:&quot;2&quot;}\r\nvar b ={&quot;c&quot;:&quot;3&quot;,&quot;d&quot;:&quot;4&quot;,&quot;e&quot;:&quot;5&quot;}\r\nvar c = extend({}, [a,b]);\r\nalert(c.a);\r\n&lt;/script&gt;</pre>\r\n当然如果你加载了jquery,那就更方便了。\r\n\r\n可以使用$.extend()方法，该方法有两种模式;\r\n<h4><a id=\"jQuery-extend-target-object1-objectN\" href=\"http://api.jquery.com/jQuery.extend/#jQuery-extend-target-object1-objectN\">jQuery.extend( target [, object1 ] [, objectN ] )</a>  #将后面的对象合并到新的对象中{}</h4>\r\n<h4><a id=\"jQuery-extend-deep-target-object1-objectN\" href=\"http://api.jquery.com/jQuery.extend/#jQuery-extend-deep-target-object1-objectN\">jQuery.extend( [deep ], target, object1 [, objectN ] )</a>  #将后面的对象合并到新的对象中{},如果深度deep为true则将递归合并成为新对象.</h4>\r\n<strong>实例：</strong>\r\n<pre class=\"lang_php decode_true\">&lt;script type=&quot;text/javascript&quot;&gt;\r\n    # 请记得先加载jquery\r\n    var a ={&quot;a&quot;:&quot;1&quot;,&quot;b&quot;:&quot;2&quot;}\r\n    var b ={&quot;c&quot;:&quot;3&quot;,&quot;d&quot;:&quot;4&quot;,&quot;e&quot;:&quot;5&quot;}\r\n    var c = $.extend({}, a,b);\r\n    console.log(c);\r\n&lt;/script&gt;</pre>','js和jquery中json对象合并的方法','','publish','open','open','','js%e5%92%8cjquery%e4%b8%adjson%e5%af%b9%e8%b1%a1%e5%90%88%e5%b9%b6%e7%9a%84%e6%96%b9%e6%b3%95','','http://api.jquery.com/jQuery.extend/#jQuery-extend-target-object1-objectN\nhttp://api.jquery.com/jQuery.extend/#jQuery-extend-deep-target-object1-objectN','2013-04-10 20:45:16','2013-04-11 04:45:16','','0','http://yanue.net/?p=484','0','post','','0');
INSERT INTO `wp_posts` VALUES('485','1','2013-04-11 20:46:56','2013-04-12 04:46:56','mysql获取group by内部可以获取到某字段的记录分组统计总数，而无法统计出分组的记录数。\r\n\r\n因此可以配合mysql自带的SQL_CALC_FOUND_ROWS和FOUND_ROWS()函数可以实现。\r\n<pre class=\"lang_php decode_true\">SELECT SQL_CALC_FOUND_ROWS t3.id, a,bunch,of,other,stuff FROM t1, t2, t3 WHERE(associate t1,t2,and t3 with each other) GROUPBY t3.id LIMIT 10,20</pre>\r\n<pre class=\"lang_php decode_true\">SELECT FOUND_ROWS() as count;</pre>\r\n使用以上两个语句即可完成满足group by的总记录行数。\r\n\r\n另附：\r\n\r\ngroup by 的简单使用方法：\r\n<pre class=\"lang_php decode_true\">&#039;SELECT column_id,count(*) as count FROM my_table group by column_id&#039;;</pre>\r\n官方文档：<a href=\"http://dev.mysql.com/doc/refman/5.6/en/group-by-functions.html\">http://dev.mysql.com/doc/refman/5.6/en/group-by-functions.html</a>','mysql获取group by的总记录行数:SQL_CALC_FOUND_ROWS','','publish','open','open','','mysql%e8%8e%b7%e5%8f%96group-by%e7%9a%84%e6%80%bb%e8%ae%b0%e5%bd%95%e8%a1%8c%e6%95%b0sql_calc_found_rows','','','2013-04-11 20:46:56','2013-04-12 04:46:56','','0','http://yanue.net/?p=485','0','post','','0');
INSERT INTO `wp_posts` VALUES('496','1','2013-04-23 20:57:46','2013-04-24 04:57:46','说明：正则表达式通常用于两种任务：1.验证，2.搜索/替换。用于验证时，通常需要在前后分别加上^和$，以匹配整个待验证字符串；搜索/替换时是否加上此限定则根据搜索的要求而定，此外，也有可能要在前后加上\\b而不是^和$。此表所列的常用正则表达式，除个别外均未在前后加上任何限定，请根据需要，自行处理。\r\n\r\n下面是常用的正则表达式:(另外,规则不是唯一的,根据自己的情况来使用)\r\n<table width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>网址（URL）</td>\r\n<td>[a-zA-z]+://[^\\s]*</td>\r\n</tr>\r\n<tr>\r\n<td>IP地址(IP Address)</td>\r\n<td>((2[0-4]\\d|25[0-5]|[01]?\\d\\d?)\\.){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)</td>\r\n</tr>\r\n<tr>\r\n<td>电子邮件(Email)</td>\r\n<td>\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*</td>\r\n</tr>\r\n<tr>\r\n<td>QQ号码</td>\r\n<td>[1-9]\\d{4,}</td>\r\n</tr>\r\n<tr>\r\n<td>HTML标记(包含内容或自闭合)</td>\r\n<td>&lt;(.*)(.*)&gt;.*&lt;\\/\\1&gt;|&lt;(.*) \\/&gt;</td>\r\n</tr>\r\n<tr>\r\n<td>密码(由数字/大写字母/小写字母/标点符号组成，四种都必有，8位以上)</td>\r\n<td>(?=^.{8,}$)(?=.*\\d)(?=.*\\W+)(?=.*[A-Z])(?=.*[a-z])(?!.*\\n).*$</td>\r\n</tr>\r\n<tr>\r\n<td>日期(年-月-日)</td>\r\n<td>(\\d{4}|\\d{2})-((0?([1-9]))|(1[1|2]))-((0?[1-9])|([12]([1-9]))|(3[0|1]))</td>\r\n</tr>\r\n<tr>\r\n<td>日期(月/日/年)</td>\r\n<td>((0?[1-9]{1})|(1[1|2]))/(0?[1-9]|([12][1-9])|(3[0|1]))/(\\d{4}|\\d{2})</td>\r\n</tr>\r\n<tr>\r\n<td>时间(小时:分钟, 24小时制)</td>\r\n<td>((1|0?)[0-9]|2[0-3]):([0-5][0-9])</td>\r\n</tr>\r\n<tr>\r\n<td>汉字(字符)</td>\r\n<td>[\\u4e00-\\u9fa5]</td>\r\n</tr>\r\n<tr>\r\n<td>中文及全角标点符号(字符)</td>\r\n<td>[\\u3000-\\u301e\\ufe10-\\ufe19\\ufe30-\\ufe44\\ufe50-\\ufe6b\\uff01-\\uffee]</td>\r\n</tr>\r\n<tr>\r\n<td>中国大陆固定电话号码</td>\r\n<td>(\\d{4}-|\\d{3}-)?(\\d{8}|\\d{7})</td>\r\n</tr>\r\n<tr>\r\n<td>中国大陆手机号码</td>\r\n<td>1\\d{10}</td>\r\n</tr>\r\n<tr>\r\n<td>中国大陆邮政编码</td>\r\n<td>[1-9]\\d{5}</td>\r\n</tr>\r\n<tr>\r\n<td>中国大陆身份证号(15位或18位)</td>\r\n<td>\\d{15}(\\d\\d[0-9xX])?</td>\r\n</tr>\r\n<tr>\r\n<td>非负整数(正整数或零)</td>\r\n<td>\\d+</td>\r\n</tr>\r\n<tr>\r\n<td>正整数</td>\r\n<td>[0-9]*[1-9][0-9]*</td>\r\n</tr>\r\n<tr>\r\n<td>负整数</td>\r\n<td>-[0-9]*[1-9][0-9]*</td>\r\n</tr>\r\n<tr>\r\n<td>整数</td>\r\n<td>-?\\d+</td>\r\n</tr>\r\n<tr>\r\n<td>小数</td>\r\n<td>(-?\\d+)(\\.\\d+)?</td>\r\n</tr>\r\n</tbody>\r\n</table>','常用正则表达式','','publish','open','open','','%e5%b8%b8%e7%94%a8%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f','','','2013-04-23 20:57:46','2013-04-24 04:57:46','','0','http://yanue.net/?p=496','0','post','','1');
INSERT INTO `wp_posts` VALUES('501','1','2013-05-17 22:43:35','2013-05-18 06:43:35','随着越来越多的的逻辑结构在浏览器中执行，使JavaScript的前端代码库越来越大，更难以维持。作为一种方式来解决这个问题，开发商已承诺提高生产力和维护的代码的MVC框架。下面是最新热门的mvc框架：\r\n<ul>\r\n	<li><a href=\"http://backbonejs.org/\">Backbone.js</a>:Provides models with key-value binding and custom events, collections, and connects it all to your existing API over a RESTful JSON interface.</li>\r\n	<li><a href=\"http://angularjs.org/\">AngularJS</a>: A toolset based on extending the HTML vocabulary for your application.</li>\r\n	<li><a href=\"http://emberjs.com/\">Ember.js</a>: Provides template written in the Handlebars templating language, views, controllers, models and a router.</li>\r\n	<li><a href=\"http://knockoutjs.com/\">Knockout</a>: Aims to simplify JavaScript UIs by applying the Model-View-View Model (MVVM) pattern.</li>\r\n	<li><a href=\"http://agilityjs.com/\">Agility.js</a>: Aims to let developers write maintainable and reusable browser code without the verbose or infrastructural overhead found in other MVC libraries.</li>\r\n	<li><a href=\"http://canjs.us/\">CanJS</a>: Focuses on striking a balance between size, ease of use, safety, speed and flexibility.</li>\r\n	<li><a href=\"http://spinejs.com/\">Spine</a>: A lightweight framework that strives to have the most friendly documentation for any JavaScript framework available.</li>\r\n	<li><a href=\"https://github.com/petermichaux/maria\">Maria</a>: Based on the original MVC flavor as it was used in Smalltalk - aka \"the Gang of Four MVC\".</li>\r\n	<li><a href=\"http://www.sencha.com/products/extjs\">ExtJS</a>: Amongst other things offers plugin-free charting, and modern UI widgets.</li>\r\n	<li><a href=\"http://sammyjs.org/\">Sammy.js</a>: A small JavaScript framework developed to provide a basic structure for developing JavaScript applications.</li>\r\n	<li><a href=\"http://hay.github.com/stapes/\">Stapes.js</a>: A tiny framework that aims to be easy to fit in an existing codebase, and because of its size it\'s suitable for mobile development.</li>\r\n	<li><a href=\"https://github.com/DimitarChristoff/Epitome\">Epitome</a>: Epitome is a MVC* (MVP) framework for MooTools.</li>\r\n	<li><a href=\"http://somajs.github.com/somajs/\">soma.js</a>: Tries help developers to write loosely-coupled applications to increase scalability and maintainability.</li>\r\n	<li><a href=\"https://github.com/rhysbrettbowen/PlastronJS\">PlastronJS</a>: MVC framework for Closure Library and Closure Compiler.</li>\r\n	<li><a href=\"http://www.rappidjs.com/\">rAppid.js</a>: Lets you encapsulate complexity into components which can be easy used like HTML elements in your application.</li>\r\n	<li><a href=\"https://github.com/elabs/serenade.js\">Serenade.js</a>: Tries to follow the ideas of classical MVC than competing frameworks.</li>\r\n	<li><a href=\"http://www.kendoui.com/\">Kendo UI</a>: Combines jQuery-based widgets, an MVVM framework, themes, templates, and more.</li>\r\n</ul>\r\n以上框架简介都是英文，你可以通过链接去官方了解。\r\n<div id=\"decidify-container\"></div>','最热门的JavaScript MVC框架','','publish','open','open','','%e6%9c%80%e7%83%ad%e9%97%a8%e7%9a%84javascript-mvc%e6%a1%86%e6%9e%b6','','','2013-05-17 22:43:35','2013-05-18 06:43:35','','0','http://yanue.net/?p=501','0','post','','0');
INSERT INTO `wp_posts` VALUES('502','1','2013-05-17 23:26:10','2013-05-18 07:26:10','html中颜色可以使用rgb和hex方式来表示。\r\n\r\n在色彩中，色相、明度、纯度也都可以产生渐变效果，并会表现出具有丰富层次的美感。本文主要讲述两种颜色RGB数值的梯级渐变算法。\r\n\r\n其中如如16进制颜色如#336600分别表示rgb模式中r的值为16进制33（即），g的值为16进制的66，和b为16进制的00，转换后用rgb完整表述为：rgb(51,102,0)。\r\n\r\n其中使用16进制进行加减乘除不方便，尤其还使用了rgb的16进制颜色组合（#336600）。因此我们可以将16进制转换为rgb单个进行梯级运算在进行组合。\r\n\r\n已知：RStart=50，REnd=200，RStart、REnd之间平均分成3份（Step=3），求每份的数值（StepN）分别是多少。\r\n\r\n公式：<span style=\"color: #00008b; font-family: \'Times New Roman\'; font-size: medium;\">Gradient = RStart+ (REnd-RStart) / Step * N <span style=\"color: #000000;\">（第N步的颜色rgb中R的值）</span></span>\r\n\r\n实现方法非常简单，只是需要将颜色从rgb到hex的互转。\r\n\r\n直接上代码：\r\n<pre class=\"lang:php decode:true  crayon-selected\">&lt;script type=\"text/javascript\"&gt;\r\n   /*\r\n	// 作者 yanue\r\n	// 参数：\r\n	// startColor：开始颜色hex\r\n	// endColor：结束颜色hex\r\n    // step:几个阶级（几步）\r\n   */\r\n   function gradientColor(startColor,endColor,step){\r\n       startRGB = this.colorRgb(startColor);//转换为rgb数组模式\r\n       startR = startRGB[0];\r\n       startG = startRGB[1];\r\n       startB = startRGB[2];\r\n\r\n       endRGB = this.colorRgb(endColor);\r\n       endR = endRGB[0];\r\n       endG = endRGB[1];\r\n       endB = endRGB[2];\r\n\r\n       sR = (endR-startR)/step;//总差值\r\n       sG = (endG-startG)/step;\r\n       sB = (endB-startB)/step;\r\n\r\n       var colorArr = [];\r\n       for(var i=0;i&lt;step;i++){\r\n		   //计算每一步的hex值 \r\n           var hex = this.colorHex(\'rgb(\'+parseInt((sR*i+startR))+\',\'+parseInt((sG*i+startG))+\',\'+parseInt((sB*i+startB))+\')\');\r\n           colorArr.push(hex);\r\n       }\r\n       return colorArr;\r\n   }\r\n\r\n   // 将hex表示方式转换为rgb表示方式(这里返回rgb数组模式)\r\n   gradientColor.prototype.colorRgb = function(sColor){\r\n       var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;\r\n       var sColor = sColor.toLowerCase();\r\n       if(sColor &amp;&amp; reg.test(sColor)){\r\n           if(sColor.length === 4){\r\n               var sColorNew = \"#\";\r\n               for(var i=1; i&lt;4; i+=1){\r\n                   sColorNew += sColor.slice(i,i+1).concat(sColor.slice(i,i+1));\r\n               }\r\n               sColor = sColorNew;\r\n           }\r\n           //处理六位的颜色值\r\n           var sColorChange = [];\r\n           for(var i=1; i&lt;7; i+=2){\r\n               sColorChange.push(parseInt(\"0x\"+sColor.slice(i,i+2)));\r\n           }\r\n           return sColorChange;\r\n       }else{\r\n           return sColor;\r\n       }\r\n   };\r\n\r\n   // 将rgb表示方式转换为hex表示方式\r\n   gradientColor.prototype.colorHex = function(rgb){\r\n       var _this = rgb;\r\n       var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;\r\n       if(/^(rgb|RGB)/.test(_this)){\r\n           var aColor = _this.replace(/(?:(|)|rgb|RGB)*/g,\"\").split(\",\");\r\n           var strHex = \"#\";\r\n           for(var i=0; i&lt;aColor.length; i++){\r\n               var hex = Number(aColor[i]).toString(16);\r\n               hex = hex&lt;10 ? 0+\'\'+hex :hex;// 保证每个rgb的值为2位\r\n               if(hex === \"0\"){\r\n                   hex += hex;\r\n               }\r\n               strHex += hex;\r\n           }\r\n           if(strHex.length !== 7){\r\n               strHex = _this;\r\n           }\r\n           return strHex;\r\n       }else if(reg.test(_this)){\r\n           var aNum = _this.replace(/#/,\"\").split(\"\");\r\n           if(aNum.length === 6){\r\n               return _this;\r\n           }else if(aNum.length === 3){\r\n               var numHex = \"#\";\r\n               for(var i=0; i&lt;aNum.length; i+=1){\r\n                   numHex += (aNum[i]+aNum[i]);\r\n               }\r\n               return numHex;\r\n           }\r\n       }else{\r\n           return _this;\r\n       }\r\n   }\r\n\r\n   var gradient = new gradientColor(\'#013548\',\'#554851\',10);\r\n   console.log(gradient);//控制台输出\r\n   alert(gradient);\r\n&lt;/script&gt;</pre>','js颜色阶梯过渡（均匀渐变）Gradient算法','','publish','open','open','','js%e9%a2%9c%e8%89%b2%e9%98%b6%e6%a2%af%e8%bf%87%e6%b8%a1%ef%bc%88%e5%9d%87%e5%8c%80%e6%b8%90%e5%8f%98%ef%bc%89gradient%e7%ae%97%e6%b3%95','','','2013-07-29 01:23:27','2013-07-29 09:23:27','','0','http://yanue.net/?p=502','0','post','','1');
INSERT INTO `wp_posts` VALUES('503','1','2013-05-17 23:40:36','2013-05-18 07:40:36','当工作目录修改删除过时更新使用svn更新就容易发生树冲突“Tree Confilict”.会出现类似提示。\r\n<pre>local unversioned, incoming add upon update</pre>\r\n如果使用图形化客户端可以通过对比文件和解决冲突按钮进行解决，\r\n\r\n如果是使用命令行的，\r\n\r\n情况类似如下：（其中 removed_directory 是你工作的某个目录）\r\n<pre class=\"lang_php decode_true\">$svn status\r\nD     C removed_directory\r\n&gt;   local unversioned, incoming add upon update\r\nSummary of conflicts:\r\nTree conflicts: 1</pre>\r\n这种情况我们可以通过以下命令解决：\r\n<pre class=\"lang_php decode_true\">$ svn resolve --accept working removed_directory\r\nResolved conflicted state of &#039;removed_directory&#039;\r\n$ svn revert removed_directory\r\nReverted &#039;removed_directory&#039;\r\n$ svn status\r\n$</pre>','命令模式坚决svn树冲突（local unversioned, incoming add upon update）','','publish','open','open','','%e5%91%bd%e4%bb%a4%e6%a8%a1%e5%bc%8f%e5%9d%9a%e5%86%b3svn%e6%a0%91%e5%86%b2%e7%aa%81%ef%bc%88local-unversioned-incoming-add-upon-update%ef%bc%89','','','2013-05-17 23:42:42','2013-05-18 07:42:42','','0','http://yanue.net/?p=503','0','post','','2');
INSERT INTO `wp_posts` VALUES('504','1','2013-05-17 23:57:01','2013-05-18 07:57:01','进行颜色处理时，经常会用到颜色各种表示方法之间的转换。\r\n\r\n如颜色阶梯渐变Gradient算法见：<a title=\"js颜色阶梯过渡（均匀渐变）Gradient算法-半叶寒羽\" href=\"http://www.yanue.net/archives/502.html\">js颜色阶梯过渡（均匀渐变）Gradient算法</a>\r\n\r\n下面是RGB格式颜色和十六进制（hex）互转代码：\r\n<pre class=\"lang_php decode_true\">&lt;script&gt;\r\n// 将hex表示方式转换为rgb表示方式(这里返回rgb数组组合)\r\nfunction colorRgb(sColor){\r\n   var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;\r\n   var sColor = sColor.toLowerCase();\r\n   if(sColor &amp;&amp; reg.test(sColor)){\r\n	   if(sColor.length === 4){\r\n		   var sColorNew = &quot;#&quot;;\r\n		   for(var i=1; i&lt;4; i+=1){\r\n			   sColorNew += sColor.slice(i,i+1).concat(sColor.slice(i,i+1));\r\n		   }\r\n		   sColor = sColorNew;\r\n	   }\r\n	   //处理六位的颜色值\r\n	   var sColorChange = [];\r\n	   for(var i=1; i&lt;7; i+=2){\r\n		   sColorChange.push(parseInt(&quot;0x&quot;+sColor.slice(i,i+2)));\r\n	   }\r\n	   return sColorChange;\r\n   }else{\r\n	   return sColor;\r\n   }\r\n};\r\n// 将rgb表示方式转换为hex表示方式\r\nfunction colorHex(rgb){\r\n   var _this = rgb;\r\n   var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;\r\n   if(/^(rgb|RGB)/.test(_this)){\r\n	   var aColor = _this.replace(/(?:\\(|\\)|rgb|RGB)*/g,&quot;&quot;).split(&quot;,&quot;);\r\n	   var strHex = &quot;#&quot;;\r\n	   for(var i=0; i&lt;aColor.length; i++){\r\n		   var hex = Number(aColor[i]).toString(16);\r\n		   hex = hex&lt;10 ? 0+&#039;&#039;+hex :hex;// 保证每个rgb的值为2位\r\n		   if(hex === &quot;0&quot;){\r\n			   hex += hex;\r\n		   }\r\n		   strHex += hex;\r\n	   }\r\n	   if(strHex.length !== 7){\r\n		   strHex = _this;\r\n	   }\r\n	   return strHex;\r\n   }else if(reg.test(_this)){\r\n	   var aNum = _this.replace(/#/,&quot;&quot;).split(&quot;&quot;);\r\n	   if(aNum.length === 6){\r\n		   return _this;\r\n	   }else if(aNum.length === 3){\r\n		   var numHex = &quot;#&quot;;\r\n		   for(var i=0; i&lt;aNum.length; i+=1){\r\n			   numHex += (aNum[i]+aNum[i]);\r\n		   }\r\n		   return numHex;\r\n	   }\r\n   }else{\r\n	   return _this;\r\n   }\r\n}\r\nconsole.log(colorRgb(&#039;#043869&#039;));\r\nconsole.log(colorHex(&#039;rgb(150,01,89)&#039;));\r\n&lt;/script&gt;</pre>','RGB格式颜色和十六进制（hex）互转','','publish','open','open','','rgb%e6%a0%bc%e5%bc%8f%e9%a2%9c%e8%89%b2%e5%92%8c%e5%8d%81%e5%85%ad%e8%bf%9b%e5%88%b6%ef%bc%88hex%ef%bc%89%e4%ba%92%e8%bd%ac','','','2013-05-17 23:57:01','2013-05-18 07:57:01','','0','http://yanue.net/?p=504','0','post','','0');
INSERT INTO `wp_posts` VALUES('505','1','2013-05-18 00:00:31','2013-05-18 08:00:31','<h2>toggle不支持事件代理的解决办法： jquery live绑定toggle</h2>\r\n<pre class=\"lang_php decode_true\">$(&quot;.xxx&quot;).live(&quot;click&quot;, function () {\r\n   $(this).toggle(function () {},function () {});\r\n   //  立即执行点击事件\r\n   $(this).trigger(&#039;click&#039;);\r\n});</pre>',' jquery中live绑定toggle的方法','','publish','open','open','','jquery%e4%b8%adlive%e7%bb%91%e5%ae%9atoggle%e7%9a%84%e6%96%b9%e6%b3%95','','','2013-05-18 00:00:31','2013-05-18 08:00:31','','0','http://yanue.net/?p=505','0','post','','0');
INSERT INTO `wp_posts` VALUES('506','1','2013-05-20 19:41:43','2013-05-21 03:41:43','浮动是一个有意思（你也可以说它很麻烦）的CSS属性，任何元素设置了浮动，层级就提高了，会影响它后面没设置浮动的元素，这些倒霉的被影响者会跑到浮动层的下面去（当然IE6、IE7除外），代码看起来是这样：\r\n<pre class=\"lang_php decode_true\">&lt;div style=\"width: 100px; height: 100px; border: 1px solid #333; float: left;\"&gt;&lt;/div&gt;\r\n&lt;div style=\"width: 120px; height: 140px; background: #eee;\"&gt;&lt;/div&gt;</pre>\r\n效果：\r\n<img alt=\"文章图片\" src=\"http://www.yanue.net/wp-content/uploads/2013/08/9ebfdeb93f3f80781bd81f79.jpg\" data-loadfunc=\"1\" data-loaded=\"1\" />\r\n\r\n因为设置了浮动的元素会提高层级，所以如果一个平淡无奇的父级元素（没有设置浮动或别的提高层级的属性）居然包住了一个浮动的家伙，并且这个父级还没有设置高，那它就悲催了，因为父级没法包住它的子级浮动元素（当然IE6、IE7又除外）：\r\n<pre class=\"lang_php decode_true\">&lt;div style=\"width: 160px; border: 1px solid #333; padding: 10px;\"&gt;\r\n\r\n        &lt;div style=\"width: 120px; height: 140px; background: #eee; float: left;\"&gt;&lt;/div&gt;\r\n\r\n&lt;/div&gt;</pre>\r\n如图：\r\n<img alt=\"\" src=\"http://hiphotos.baidu.com/yansueh/pic/item/83587e87d4b419aabe3e1e79.jpg\" width=\"194\" />\r\n\r\n<strong>那怎么样才能让父级包住浮动层呢？</strong>\r\n\r\n下面是列举的一些方法，如有大家还有其他的办法，欢迎补充：\r\n\r\n-------------------------------------------------------------------\r\n\r\n1. 在浮动层下，设置空DIV，代码如下：\r\n<pre class=\"lang_php decode_true\">&lt;div style=\"width: 160px; border: 1px solid #333; padding: 10px;\"&gt;\r\n        &lt;div style=\"width: 120px; height: 140px; background: #eee; float: left;\"&gt;&lt;/div&gt;        \r\n        &lt;div style=\"clear: both; height: 0; font-size: 1px;\"&gt;&lt;/div&gt;\r\n&lt;/div&gt;</pre>\r\n<strong>说明：</strong>\r\nclear: both;可以让元素不受到浮动层影响，排到浮动层的底下，\r\n而父级可以包住最底下这个空DIV，这样看起来，它似乎也就包住那个浮动层了，\r\n其实是障眼法哈～\r\n\r\n<strong>缺点：</strong>IE6下会多出1像素来，并且设置了无语义的空DIV；\r\n\r\n-------------------------------------------------------------------\r\n\r\n2. 在父级设置：overflow: hidden;\r\n<pre class=\"lang_php decode_true\">&lt;div style=\"width: 160px; border: 1px solid #333; padding: 10px; overflow: hidden;\"&gt;\r\n        &lt;div style=\"width: 120px; height: 140px; background: #eee; float: left;\"&gt;&lt;/div&gt;\r\n&lt;/div&gt;</pre>\r\n<strong>说明：</strong>overflow: hidden; 用它是为了提高父级的层级，层级提高了，自然能包住子级浮动元素了。\r\n\r\n<strong>缺点：</strong>要是父级里面有什么元素居然飘到父级以外的地方，那就悲剧了，例如很多JS的提示层效果，\r\n\r\n就不能用 overflow: hidden;\r\n\r\n-------------------------------------------------------------------\r\n\r\n3. 在父级设置：float\r\n<pre class=\"lang_php decode_true\">&lt;div style=\"width: 160px; border: 1px solid #333; padding: 10px; float: left;\"&gt;\r\n        &lt;div style=\"width: 120px; height: 140px; background: #eee; float: left;\"&gt;&lt;/div&gt;\r\n&lt;/div&gt;</pre>\r\n<strong>说明：</strong>父级包不住浮动层，因为层级不够，那父级也设置float好喽\r\n\r\n<strong>缺点：</strong>父级如果也有父级，也要设置浮动，那用这种方法，一路浮动到body那儿才算完事儿～～呃。。此方法本身就很滑稽\r\n\r\n-------------------------------------------------------------------\r\n\r\n4. 在父级设置：display: inline-block;\r\n<pre class=\"lang_php decode_true\">&lt;div style=\"width: 160px; border: 1px solid #333; padding: 10px; display: inline-block;\"&gt;\r\n        &lt;div style=\"width: 120px; height: 140px; background: #eee; float: left;\"&gt;&lt;/div&gt;\r\n&lt;/div&gt;</pre>\r\n<strong>说明：</strong>inline-block; 是一个不兼容的属性，但用在这里只是为了提高父级层级，\r\n如此一来，可以完全忽略它的不兼容性哈～\r\n\r\n<strong>缺点：</strong>设置不了元素居中：margin-left: auto; margin-right: auto;\r\n你可以在不需要居中的元素上使用这方法哈～\r\n\r\n-------------------------------------------------------------------\r\n\r\n5. 父级如果是绝对定位：position: absolute;\r\n\r\n&lt;div style=\"width: 160px; border: 1px solid #333; padding: 10px; position: absolute;\"&gt;\r\n&lt;div style=\"width: 120px; height: 140px; background: #eee; float: left;\"&gt;&lt;/div&gt;\r\n&lt;/div&gt;\r\n\r\n<strong>说明：</strong>要说层级，那绝对定位必定是老大，在绝对定位眼中，小小的浮动也居然敢称层级？？\r\n\r\n<strong>缺点：</strong>position: absolute;会影响布局，它是相对父级的块元素为参照物进行定位，\r\n完全不按文档流的方式走，呵呵，所以如果你要是在绝对定位的元素里设置浮动，那就尽情设置吧，\r\n\r\n不必理会任何浮动神马的，因为在绝对定位下，浮动啥的，真的是浮云了～\r\n\r\n-------------------------------------------------------------------\r\n\r\n6. 给浮动层下设置：&lt;br clear=\"all\" /&gt;\r\n<pre class=\"lang_php decode_true\">&lt;div style=\"width: 160px; border: 1px solid #333; padding: 10px;\"&gt;\r\n        &lt;div style=\"width: 120px; height: 140px; background: #eee; float: left;\"&gt;&lt;/div&gt;        \r\n        &lt;br clear=\"all\" /&gt;\r\n&lt;/div&gt;</pre>\r\n<strong>说明：</strong>短小精炼的一行代码，很有效哈，对此代码不了解？\r\n看看这里吧：\r\n<a href=\"http://www.blueidea.com/tech/web/2007/4576.asp\" target=\"_blank\">http://www.blueidea.com/tech/web/2007/4576.asp</a>\r\n\r\n-------------------------------------------------------------------\r\n\r\n7. 给父级加上这行吧：\r\n\r\n.clear:after { content: \'20\'; clear: both; display: block; }\r\n\r\n&lt;style&gt;\r\n.clear:after { content: \'20\'; clear: both; display: block; }\r\n&lt;/style&gt;\r\n\r\n&lt;div style=\"width: 160px; border: 1px solid #333; padding: 10px;\"&gt;\r\n&lt;div style=\"width: 120px; height: 140px; background: #eee; float: left;\"&gt;&lt;/div&gt;\r\n&lt;/div&gt;<em>复制代码</em>\r\n\r\n<strong>说明：</strong>:after 是一个很好用的属性，有了它，可以往任何元素里插入字符串、空格啦，\'.\'之类的，\r\n但可惜，IE6，IE7不认识:after，不过，又有什么关系呢？\r\n反正IE6IE7的父级能包住浮动层，所以不必管它们喽～\r\n<strong>忘了解释了，</strong>先给浮动层底下插入一个空格（content: \'20\';），再把这个空格转成块元素，并且清除浮动层的影响，让父级包住这个空格，也是障眼法哈～\r\n\r\n-------------------------------------------------------------------\r\n\r\n最后的结果都会是：\r\n\r\n<img alt=\"\" src=\"http://hiphotos.baidu.com/yansueh/pic/item/e734ef191c819778324e1570.jpg\" width=\"201\" />\r\n\r\n参与测试的浏览器列表：\r\n<img alt=\"\" src=\"http://hiphotos.baidu.com/yansueh/pic/item/b2f85332c9bf303c271f1470.jpg\" width=\"66\" />\r\n\r\n补充常用清楚浮动方法:\r\n<pre class=\"lang_php decode_true\">.clearfix:after {\r\n        content: \".\";\r\n        display: block;\r\n        clear: both;\r\n        overflow:hiddden;\r\n        visibility: hidden;\r\n        height: 0;\r\n}\r\n\r\n.clearfix {\r\n        display: inline-block;\r\n}\r\n\r\n* html .clearfix {\r\n        height: 1%;\r\n}</pre>\r\n&nbsp;','css清除浮动的7种方法','','publish','open','open','','css%e6%b8%85%e9%99%a4%e6%b5%ae%e5%8a%a8%e7%9a%847%e7%a7%8d%e6%96%b9%e6%b3%95','','','2013-08-07 01:41:02','2013-08-07 09:41:02','','0','http://yanue.net/?p=506','0','post','','0');
INSERT INTO `wp_posts` VALUES('507','1','2013-05-20 20:03:04','2013-05-21 04:03:04','用Javascript取float型小数点后两位，例22.127456取成22.13,如何做？\r\n\r\n1. 最笨的办法:\r\n<pre class=\"lang_php decode_true\">function get()\r\n{\r\n    var s = 22.127456 + &quot;&quot;;\r\n    var str = s.substring(0,s.indexOf(&quot;.&quot;) + 3);\r\n    alert(str);\r\n}</pre>\r\n2. 正则表达式效果不错:\r\n<pre class=\"lang_php decode_true\">&lt;script type=&quot;text/javascript&quot;&gt;\r\nwindow.onload = function(){\r\n    var a = &quot;23.456322&quot;;\r\n    var aNew;\r\n    var re = /([0-9]+\\.[0-9]{2})[0-9]*/;\r\n    aNew = a.replace(re,&quot;$1&quot;);\r\n    alert(aNew);\r\n}\r\n&lt;/script&gt;</pre>\r\n3. 他就比较聪明了:\r\n<pre class=\"lang_php decode_true\">&lt;script&gt;\r\n    var num=22.127456;\r\n    alert( Math.round(num*100)/100);\r\n&lt;/script&gt;</pre>\r\n4.会用新鲜东西的朋友....... 但是需要 IE5.5+才支持。\r\n<pre class=\"lang_php decode_true\">&lt;script&gt;\r\n    var num=22.127456;\r\n    alert( num.toFixed(2));\r\n&lt;/script&gt;</pre>\r\n5. 数字舍入toFixed()\r\n\r\n其中是利用一个函数toFixed 来取小数点几位的!\r\n<pre class=\"lang_php decode_true\">&lt;script language=&quot;javascript&quot;&gt;\r\n    var a = &quot;0.11&quot;;\r\n    var b = &quot;0.2801&quot;;\r\n    var c = &quot;1.002&quot;;\r\n    var sum1 = parseFloat(a)+parseFloat(b)+parseFloat(c);\r\n    var sum2 = (parseFloat(a)+parseFloat(b)+parseFloat(c)).toFixed(4)\r\n    document.write(&quot;a+b+c=&quot;+sum1);\r\n    document.write(&quot;&lt;br/&gt;&quot;)\r\n    document.write(&quot;a+b+c=&quot;+sum2)\r\n&lt;/script&gt;</pre>\r\na，b，c相加本来为1.3921，但sum1得出的结果为：1.3921000000000001，显然不正确，通过toFixed(n)方法修正后（n是精确的小数点位数），得到正确结果。\r\n\r\n例如：parseFloat(1.392143).toFixed(3)=1.392;\r\n\r\n顺便附上php获取小数点后两位的方法:\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\n    echo round(12.566921,2);\r\n    echo &#039;&lt;br /&gt;&#039;;\r\n    echo round(12.561921,2);\r\n?&gt;</pre>\r\n&nbsp;','js小数点操作方法(两位小数点)总结','','publish','open','open','','js%e5%b0%8f%e6%95%b0%e7%82%b9%e6%93%8d%e4%bd%9c%e6%96%b9%e6%b3%95%e4%b8%a4%e4%bd%8d%e5%b0%8f%e6%95%b0%e7%82%b9%e6%80%bb%e7%bb%93','','','2013-05-20 20:03:04','2013-05-21 04:03:04','','0','http://yanue.net/?p=507','0','post','','0');
INSERT INTO `wp_posts` VALUES('519','1','2013-06-22 21:06:09','2013-06-23 05:06:09','pgrep 是通过程序的名字来查询进程的工具，一般是用来判断程序是否正在运行。在服务器的配置和管理中，这个工具常被应用，简单明了。\r\n\r\n用法：\r\n# pgrep [选项] [程序名]\r\n\r\n<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">pgrep [-flvx] [-n | -o] [-d delim] [-P ppidlist] [-g pgrplist] [-s sidlist] [-u euidlist] [-U uidlist] [-G gidlist] [-J projidlist] [-t termlist] [-T taskidlist] [-c ctidlist] [-z zoneidlist] [pattern]</span>\r\n\r\n常用参数\r\n\r\n-l 列出程序名和进程ID；\r\n-o 进程起始的ID；\r\n-n 进程终止的ID；\r\n\r\n例如：\r\n<pre class=\"lang_php decode_true\">[yanue@server ~]$ pgrep -lo nginx\r\n28433 nginx\r\n[yanue@server ~]$ pgrep -l nginx\r\n28433 nginx\r\n28541 nginx\r\n28542 nginx\r\n28543 nginx\r\n28544 nginx\r\n[yanue@server ~]$ pgrep -ln nginx\r\n28544 nginx\r\n[yanue@server ~]$ pgrep nginx\r\n28433\r\n28541\r\n28542\r\n28543\r\n28544</pre>\r\n另外，还可以使用另外一个ps命令：（点击查看 <a title=\"ps命令详解\" href=\"http://www.yanue.net/archives/520.html\" target=\"_blank\">ps命令详解</a>）\r\n<pre class=\"lang_php decode_true\"> ps x | grep xxx  | awk &#039;{print $1}&#039;</pre>\r\n实例：\r\n<pre class=\"lang_php decode_true\">ps x | grep java | awk  &#039;{print $1}&#039;</pre>\r\n注释：\r\n\r\n1、xxx为执行的命令名称\r\n\r\n2、举个例子，获取当前用户下的java进程 【pid】\r\n\r\n[admin@vm168a ~]$ ps x | grep java | awk  \'{print $1}\'\r\n16920\r\n\r\n3、用到三个命令，ps、grep、awk。\r\n\r\n要是这样获取不到的话，可以使用ps命令：\r\n<pre class=\"lang_php decode_true\">ps -ef | grep xxx | grep -v &#039;grep&#039; | awk &#039;{print $2}&#039;</pre>\r\n<pre class=\"lang_php decode_true\">[yanue@server ~]$ ps -ef | grep nginx | grep -v &#039;grep&#039; | awk &#039;{print $2}&#039;\r\n28433\r\n28541\r\n28542\r\n28543\r\n28544</pre>','linux获取精准进程PID之pgrep命令','','publish','open','open','','linux%e8%8e%b7%e5%8f%96%e7%b2%be%e5%87%86%e8%bf%9b%e7%a8%8bpid%e4%b9%8bpgrep%e5%91%bd%e4%bb%a4','','','2013-06-22 21:21:57','2013-06-23 05:21:57','','0','http://www.yanue.net/?p=519','0','post','','0');
INSERT INTO `wp_posts` VALUES('520','1','2013-06-22 21:02:26','2013-06-23 05:02:26','linux中ps(process status) 命令是LINUX下最常用的也是非常强大的进程查看命令，运用该命令可以确定有哪些进程正在运行和运行地状态、进程是否结束、进程有没有僵死、哪些进程占用了过多地资源等等。 ps命令最常用的是用于监控后台进程的工作情况。\r\n\r\n<strong>Linux 查看进程ps命令及其参数：</strong>\r\n\r\n<strong> 使用方式：</strong>ps  [options]  [--help]\r\n\r\n<strong> 语　　法：</strong>\r\n<pre class=\"lang_php decode_true\">ps [-aAcdefHjlmNVwy][acefghLnrsSTuvxX][-C &lt;指令名称&gt;][-g &lt;群组名称&gt;][-G &lt;群组识别码&gt;][-p &lt;程序识别码&gt;][p &lt;程序识别码&gt;][-s &lt;阶段作业&gt;][-t &lt;终端机编号&gt;][t &lt;终端机编号&gt;][-u &lt;用户识别码&gt;][-U &lt;用户识别码&gt;][U &lt;用户名称&gt;][-&lt;程序识别码&gt;][--cols &lt;每列字符数&gt;][--columns &lt;每列字符数&gt;][--cumulative][--deselect][--forest][--headers][--help][--info][--lines &lt;显示列数&gt;][--no-headers][--group &lt;群组名称&gt;][-Group &lt;群组识别码&gt;][--pid &lt;程序识别码&gt;][--rows &lt;显示列数&gt;][--sid &lt;阶段作业&gt;][--tty &lt;终端机编号&gt;][--user &lt;用户名称&gt;][--User &lt;用户识别码&gt;][--version][--width &lt;每列字符数&gt;]</pre>\r\n<strong>参　　数：</strong>\r\n\r\n-a 　显示所有终端机下执行的程序，除了阶段作业领导者之外。\r\na 　显示现行终端机下的所有程序，包括其他用户的程序。\r\n-A 　显示所有程序。\r\n-c 　显示CLS和PRI栏位。\r\nc 　列出程序时，显示每个程序真正的指令名称，而不包含路径，参数或常驻服务的标示。\r\n-C &lt;指令名称&gt; 　指定执行指令的名称，并列出该指令的程序的状况。\r\n-d 　显示所有程序，但不包括阶段作业领导者的程序。\r\n-e 　此参数的效果和指定\"A\"参数相同。\r\ne 　列出程序时，显示每个程序所使用的环境变量。\r\n-f 　显示UID,PPIP,C与STIME栏位。\r\nf 　用ASCII字符显示树状结构，表达程序间的相互关系。\r\n-g&lt;群组名称&gt; 　此参数的效果和指定\"-G\"参数相同，当亦能使用阶段作业领导者的名称来指定。\r\ng 　显示现行终端机下的所有程序，包括群组领导者的程序。\r\n-G &lt;群组识别码&gt; 　列出属于该群组的程序的状况，也可使用群组名称来指定。\r\nh 　不显示标题列。\r\n-H 　显示树状结构，表示程序间的相互关系。\r\n-j或j 　采用工作控制的格式显示程序状况。\r\n-l或l 　采用详细的格式来显示程序状况。\r\nL 　列出栏位的相关信息。\r\n-m或m 　显示所有的执行绪。\r\nn 　以数字来表示USER和WCHAN栏位。\r\n-N 　显示所有的程序，除了执行ps指令终端机下的程序之外。\r\n-p &lt;程序识别码&gt; 　指定程序识别码，并列出该程序的状况。\r\np &lt;程序识别码&gt; 　此参数的效果和指定\"-p\"参数相同，只在列表格式方面稍有差异。\r\nr 　只列出现行终端机正在执行中的程序。\r\n-s &lt;阶段作业&gt; 　指定阶段作业的程序识别码，并列出隶属该阶段作业的程序的状况。\r\ns 　采用程序信号的格式显示程序状况。\r\nS 　列出程序时，包括已中断的子程序资料。\r\n-t &lt;终端机编号&gt; 　指定终端机编号，并列出属于该终端机的程序的状况。\r\nt &lt;终端机编号&gt; 　此参数的效果和指定\"-t\"参数相同，只在列表格式方面稍有差异。\r\n-T 　显示现行终端机下的所有程序。\r\n-u &lt;用户识别码&gt; 　此参数的效果和指定\"-U\"参数相同。\r\nu 　以用户为主的格式来显示程序状况。\r\n-U &lt;用户识别码&gt; 　列出属于该用户的程序的状况，也可使用用户名称来指定。\r\nU &lt;用户名称&gt; 　列出属于该用户的程序的状况。\r\nv 　采用虚拟内存的格式显示程序状况。\r\n-V或V 　显示版本信息。\r\n-w或w 　采用宽阔的格式来显示程序状况。\r\nx 　显示所有程序，不以终端机来区分。\r\nX 　采用旧式的Linux i386登陆格式显示程序状况。\r\n-y 　配合参数\"-l\"使用时，不显示F(flag)栏位，并以RSS栏位取代ADDR栏位　。\r\n-&lt;程序识别码&gt; 　此参数的效果和指定\"p\"参数相同。\r\n--cols &lt;每列字符数&gt; 　设置每列的最大字符数。\r\n--columns &lt;每列字符数&gt; 　此参数的效果和指定\"--cols\"参数相同。\r\n--cumulative 　此参数的效果和指定\"S\"参数相同。\r\n--deselect 　此参数的效果和指定\"-N\"参数相同。\r\n--forest 　此参数的效果和指定\"f\"参数相同。\r\n--headers 　重复显示标题列。\r\n--help 　在线帮助。\r\n--info 　显示排错信息。\r\n--lines &lt;显示列数&gt; 　设置显示画面的列数。\r\n--no-headers 　此参数的效果和指定\"h\"参数相同，只在列表格式方面稍有差异。\r\n--group &lt;群组名称&gt; 　此参数的效果和指定\"-G\"参数相同。\r\n--Group &lt;群组识别码&gt; 　此参数的效果和指定\"-G\"参数相同。\r\n--pid &lt;程序识别码&gt; 　此参数的效果和指定\"-p\"参数相同。\r\n--rows &lt;显示列数&gt; 　此参数的效果和指定\"--lines\"参数相同。\r\n--sid &lt;阶段作业&gt; 　此参数的效果和指定\"-s\"参数相同。\r\n--tty &lt;终端机编号&gt; 　此参数的效果和指定\"-t\"参数相同。\r\n--user &lt;用户名称&gt; 　此参数的效果和指定\"-U\"参数相同。\r\n--User &lt;用户识别码&gt; 　此参数的效果和指定\"-U\"参数相同。\r\n--version 　此参数的效果和指定\"-V\"参数相同。\r\n--widty &lt;每列字符数&gt; 　此参数的效果和指定\"-cols\"参数相同。\r\n\r\n<strong>常用的参数：</strong>\r\n\r\nps命令常用用法（方便查看系统进程）\r\n\r\n1）ps a 显示现行终端机下的所有程序，包括其他用户的程序。\r\n2）ps -A 显示所有进程。\r\n3）ps c 列出程序时，显示每个程序真正的指令名称，而不包含路径，参数或常驻服务的标示。\r\n4）ps -e 此参数的效果和指定\"A\"参数相同。\r\n5）ps e 列出程序时，显示每个程序所使用的环境变量。\r\n6）ps f 用ASCII字符显示树状结构，表达程序间的相互关系。\r\n7）ps -H 显示树状结构，表示程序间的相互关系。\r\n8）ps -N 显示所有的程序，除了执行ps指令终端机下的程序之外。\r\n9）ps s 采用程序信号的格式显示程序状况。\r\n10）ps S 列出程序时，包括已中断的子程序资料。\r\n11）ps -t&lt;终端机编号&gt; 　指定终端机编号，并列出属于该终端机的程序的状况。\r\n12）ps u 　以用户为主的格式来显示程序状况。\r\n13）ps x 　显示所有程序，不以终端机来区分。\r\n\r\n<strong>常用组合：</strong>\r\n\r\nps axjf\r\n\r\nps aux\r\n\r\nps -ef\r\n\r\nps -lA\r\n<pre class=\"lang_php decode_true\">[yanue@server ~]$ ps aux\r\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\r\nroot         1  0.0  0.0  10368   176 ?        Ss   May25   0:24 init [3]\r\nroot         2  0.0  0.0      0     0 ?        S    May25   0:00 [kthreadd/2336]\r\nroot         3  0.0  0.0      0     0 ?        S    May25   0:00 [khelper/2336]\r\nroot       135  0.0  0.0  12636   320 ?        S&lt;s  May25   0:00 /sbin/udevd -d\r\nroot       569  0.0  0.0   5928   464 ?        Ss   May25   1:07 syslogd -m 0\r\nroot       580  0.0  0.1  62684   640 ?        Ss   May25   0:48 /usr/sbin/sshd</pre>\r\nHead 标头：\r\n\r\n• USER：该 process 属于那个使用者账号的？\r\n\r\n• PID ：该 process 的号码。\r\n\r\n• %CPU：该 process 使用掉的 CPU 资源百分比；\r\n\r\n• %MEM：该 process 所占用的物理内存百分比；\r\n\r\n• VSZ ：该 process 使用掉的虚拟内存量 (Kbytes)\r\n\r\n• RSS ：该 process 占用的固定的内存量 (Kbytes)\r\n\r\n• TTY ：该 process 是在那个终端机上面运作，若与终端机无关，则显示 ?，另外， tty1-tty6 是本机上面的登入者程序，若为 pts/0 等等的，则表示为由网络连接进主机的程序。\r\n\r\n• STAT：该程序目前的状态，主要的状态有：\r\n\r\nR ：该程序目前正在运作，或者是可被运作；\r\n\r\nS ：该程序目前正在睡眠当中 (可说是 idle 状态啦！)，但可被某些讯号 (signal) 唤醒。\r\n\r\nT ：该程序目前正在侦测或者是停止了；\r\n\r\nZ ：该程序应该已经终止，但是其父程序却无法正常的终止他，造成 zombie (疆尸) 程序的状态\r\n\r\n• START：该 process 被触发启动的时间；\r\n\r\n• TIME ：该 process 实际使用 CPU 运作的时间。\r\n\r\n• COMMAND：该程序的实际指令为何？\r\n\r\nlinux上进程有5种状态:\r\n1. 运行(正在运行或在运行队列中等待)\r\n2. 中断(休眠中, 受阻, 在等待某个条件的形成或接受到信号)\r\n3. 不可中断(收到信号不唤醒和不可运行, 进程必须等待直到有中断发生)\r\n4. 僵死(进程已终止, 但进程描述符存在, 直到父进程调用wait4()系统调用后释放)\r\n5. 停止(进程收到SIGSTOP, SIGSTP, SIGTIN, SIGTOU信号后停止运行运行)\r\n\r\n<strong>使用ps格式输出来查看进程状态:</strong>\r\n<div>ps -eo user,stat..,cmd</div>\r\n<div></div>\r\n<div>user 用户名</div>\r\n<div>uid 用户号</div>\r\n<div>pid 进程号</div>\r\n<div>ppid 父进程号</div>\r\n<div>size 内存大小, Kbytes字节.</div>\r\n<div>vsize 总虚拟内存大小, bytes字节(包含code+data+stack)</div>\r\n<div>share 总共享页数</div>\r\n<div>nice 进程优先级(缺省为0, 最大为-20)</div>\r\n<div>priority(pri) 内核调度优先级</div>\r\n<div>pmem 进程分享的物理内存数的百分比</div>\r\n<div>trs 程序执行代码驻留大小</div>\r\n<div>rss 进程使用的总物理内存数, Kbytes字节</div>\r\n<div>time 进程执行起到现在总的CPU暂用时间</div>\r\n<div>stat 进程状态</div>\r\n<div>cmd(args) 执行命令的简单格式</div>\r\n<div></div>\r\n<div>例子:</div>\r\n<div>查看当前系统进程的uid,pid,stat,pri, 以uid号排序.</div>\r\n<div>ps -eo pid,stat,pri,uid –sort uid</div>\r\n<div></div>\r\n<div>查看当前系统进程的user,pid,stat,rss,args, 以rss排序.</div>\r\n<div>ps -eo user,pid,stat,rss,args –sort rss</div>','linux之ps命令详解','','publish','open','open','','linux%e4%b9%8bps%e5%91%bd%e4%bb%a4%e8%af%a6%e8%a7%a3','','','2013-06-22 21:04:06','2013-06-23 05:04:06','','0','http://www.yanue.net/?p=520','0','post','','0');
INSERT INTO `wp_posts` VALUES('522','1','2013-06-22 22:22:18','2013-06-23 06:22:18','du的英文原义为“disk usage”，含义为显示磁盘空间的使用情况，统计目录（或文件）所占磁盘空间的大小。该命令的功能是逐级进入指定目录的每一个子目录并显示该目录占用文件系统数据块（1024字节）的情况。若没有给出指定目录，则对当前目录进行统计。\r\n\r\n<strong>功能：</strong>统计目录（或文件）所占磁盘空间的大小。\r\n\r\n<strong>语法：</strong>du [选项][文件或目录]\r\n\r\n<strong>参数：</strong>\r\n<pre>  -s：对每个Names参数只给出占用的数据块总数。\r\n  -a：递归地显示指定目录中各文件及子目录中各文件占用的数据块数。若既不指定-s，也不指定-a，则只显示Names中的每一个目录及其中的各子目录所占的磁盘块数。\r\n  -b：以字节为单位列出磁盘空间使用情况（系统默认以k字节为单位）。\r\n  -k：以1024字节为单位列出磁盘空间使用情况。\r\n  -c：最后再加上一个总计（系统默认设置）。\r\n  -l：计算所有的文件大小，对硬链接文件，则计算多次。\r\n  -x：跳过在不同文件系统上的目录不予统计。</pre>\r\n简单实例：\r\n<pre class=\"lang_php decode_true\">[yanue@server www]$ du -h --max-depth=1\r\n676K    ./avatar\r\n7.9M    ./wp-includes\r\n6.4M    ./wp-admin\r\n18M     ./wp-content\r\n33M     .</pre>\r\n使用实例：\r\n\r\n实例1. 显示目录或者文件所占空间\r\n<pre class=\"lang_php decode_true\"> du  [文件或目录]</pre>\r\n实例2：显示多个文件所占空间\r\n<pre class=\"lang_php decode_true\"> du  [文件或目录]  [文件或目录]</pre>\r\n实例3：显示几个文件或目录各自占用磁盘空间的大小，还统计它们的总和\r\n<pre class=\"lang_php decode_true\"> du  -c  [文件或目录]  [文件或目录]</pre>\r\n实例4：按照空间大小排序\r\n<pre class=\"lang_php decode_true\">du|sort -nr|more</pre>','Linux下磁盘管理du命令','','publish','open','open','','linux%e4%b8%8b%e7%a3%81%e7%9b%98%e7%ae%a1%e7%90%86du%e5%91%bd%e4%bb%a4','','','2013-06-22 22:24:27','2013-06-23 06:24:27','','0','http://www.yanue.net/?p=522','0','post','','0');
INSERT INTO `wp_posts` VALUES('523','1','2013-06-22 22:24:45','2013-06-23 06:24:45','磁盘是Linux系统中一项非常重要的资源，如何对其进行有效的管理直接关系到整个系统的性能问题。磁盘管理有df、du和fdisk三个常用命令：df用于检查文件系统磁盘占用情况，du检查磁盘空间占用情况，而fdisk用于磁盘分区。\r\n\r\n<strong>1．df</strong>\r\n\r\ndf命令可以获取硬盘被占用了多少空间，目前还剩下多少空间等信息，它也可以显示所有文件系统对i节点和磁盘块的使用情况。\r\n\r\ndf命令各个选项的含义如下：\r\n<pre>  -a：显示所有文件系统的磁盘使用情况，包括0块（block）的文件系统，如/proc文件系统。\r\n  -k：以k字节为单位显示。\r\n  -i：显示i节点信息，而不是磁盘块。\r\n  -t：显示各指定类型的文件系统的磁盘空间使用情况。\r\n  -x：列出不是某一指定类型文件系统的磁盘空间使用情况（与t选项相反）。\r\n  -T：显示文件系统类型。</pre>\r\n<strong>2． du</strong>（<a title=\"Linux下磁盘管理du命令\" href=\"http://www.yanue.net/archives/522.html\" target=\"_blank\">详细使用方法及介绍</a>）\r\n\r\ndu的英文原义为“disk usage”，含义为显示磁盘空间的使用情况，统计目录（或文件）所占磁盘空间的大小。该命令的功能是逐级进入指定目录的每一个子目录并显示该目录占用文件系统数据块（1024字节）的情况。若没有给出指定目录，则对当前目录进行统计。\r\n\r\ndf命令的各个选项含义如下：\r\n<pre>  -s：对每个Names参数只给出占用的数据块总数。\r\n  -a：递归地显示指定目录中各文件及子目录中各文件占用的数据块数。若既不指定-s，也不指定-a，则只显示Names中的每一个目录及其中的各子目录所占的磁盘块数。\r\n  -b：以字节为单位列出磁盘空间使用情况（系统默认以k字节为单位）。\r\n  -k：以1024字节为单位列出磁盘空间使用情况。\r\n  -c：最后再加上一个总计（系统默认设置）。\r\n  -l：计算所有的文件大小，对硬链接文件，则计算多次。\r\n  -x：跳过在不同文件系统上的目录不予统计。</pre>\r\ndf与du命令区别解析:\r\n\r\n<span style=\"color: #ff00ff; font-size: large;\"><span style=\"color: #000000;\">1、句柄相关的基础知识</span><strong>\r\n</strong></span>       句柄包含：文件、目录、socket等，一个进程能够打开的文件句柄总数是一定的，可以通过ulimit –n 进行查看，一般是1024个。此参数也可以修改，以root用户运行以下命令：ulimit -HSn 4096 以上命令中，H指定了硬性大小，S指定了软性大小，n表示设定单个进程最大的打开文件句柄数量。个人觉得最好不要超过4096，毕竟打开的文件句柄数越多响应时间肯定会越慢。设定句柄数量后，<span style=\"color: #ff00ff;\">系统重启后，又会恢复默认值。</span>如果想永久保存下来，可以修改.bash_profile文件，可以修改 /etc/profile ，把命令ulimit -HSn 4096 加到最后。\r\n\r\n<span style=\"color: #000000; font-size: large;\">2、句柄泄漏的危害</span>\r\n\r\n出现句柄泄漏，进程会逐渐消耗完进程可打开的句柄，导致进程再也不能打开新的句柄，系统可能不能再正常工作。\r\n\r\n<span style=\"color: #000000;\"><span style=\"font-size: large;\">3、句柄泄露，为什么会导致磁盘空间不足:</span>\r\n</span>\r\n\r\n一个文件创建，就新生成了一个inode节点，且inode节点的引用计数为1。当文件被一个进程打开，则在内存中缓冲建立此inode节点缓存，且其引用计数加1。一个文件可以被多次打开，创建多个文件描述符，但对应的inode节点只有一个，对应的磁盘存储只有一个，只是引用计数每打开一次加1。\r\n\r\n<span style=\"color: #0000ff;\">       当文件被rm，在操作系统内部其实是调用了unlink操作，其目录项被删除，</span><span style=\"color: #ff00ff;\">如果</span>其对应的inode节点的引用计数为0，则删除对应的inode节点和清除inode节点位图中对应的位，<span style=\"color: #0000ff;\">其对应磁盘可被再申请</span>；<span style=\"color: #ff00ff;\">但如果</span>此文件被其他进程打开，<span style=\"color: #0000ff;\">则其对应的inode节点的引用</span><span style=\"color: #ff00ff;\">计数不为0</span>，则<span style=\"color: #ff00ff;\">不会删除对应</span>的inode节点和清除inode节点位图中对应的位，<span style=\"color: #0000ff;\">其对应磁盘不能被再申请</span>，<span style=\"color: #ff00ff;\">也就是在lsof下可以看到deleted句柄</span>；<span style=\"color: #0000ff;\">当前文件被所有使用进程close后</span>，系统删除对应的inode节点和清除inode节点位图中对应的位，其对应磁盘可被再申请。\r\n\r\n<span style=\"color: #000000; font-size: large;\">4、du和df的区别::</span>\r\n\r\ndu的英文原义为“disk usage”，含义为显示磁盘空间的使用情况。该命令逐级进入指定目录的每一个子目录并显示该目录占用文件系统数据块（1024字节）的情况。若没有给出Names，则对当前目录进行统计。\r\ndf命令参数功能：检查文件系统的磁盘空间占用情况，利用所有文件系统对i节点来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。\r\n\r\n这也是为什么：\r\n\r\n<span style=\"color: #0000ff;\">一个被进程打开的文件被rm后，其<span style=\"color: #ff0000;\">目录项</span>被删除了，在du命令下是<span style=\"color: #ff0000;\">不能被统计到，</span> 而<span style=\"color: #ff0000;\">其inode没有被删除，在df命令下是可以被统计到的</span>，这就是在du和df存在差别的原因。</span>\r\n\r\n<strong>1、正常情况下，df和du输出结果都会有差距。</strong>\r\n\r\ndu -sh命令通过将指定文件系统中所有的目录、符号链接和文件使用的块数累加得到该文件系统使用的总块数；\r\ndf命令通过查看文件系统磁盘块分配图得出总块数与剩余块数。\r\n文件系统分配其中的一些磁盘块用来记录它自身的一些数据，如i节点，磁盘分布图，间接块，超级块等。这些数据对大多数用户级的程序来说是不可见的，通常称为Meta Data。\r\ndu命令是用户级的程序，它不考虑Meta Data，\r\ndf命令则查看文件系统的磁盘分配图并考虑Meta Data。\r\n因此正常情况下，df计算的USED空间会比du计算的结果要稍大。\r\n\r\n<span style=\"color: #000000;\"><strong>2、异常情况下，df计算的USED空间会比du大很多。</strong></span>\r\n\r\n原因在于du是以文件名、目录名为依据计算空间使用的，而df是以硬盘块使用情况来计算空间使用的。\r\n\r\n当一个应用程序正在写一个大文件的时候，我们RM或者MV了这个文件（UNIX是允许这么干的，WINDOWS在这一点上傻有傻福），应用程序会占有句柄，并根据句柄所指磁盘位置直接写磁盘，而不会检查该文件是否被删除。','Linux磁盘管理命令df和du区别','','publish','open','open','','linux%e7%a3%81%e7%9b%98%e7%ae%a1%e7%90%86%e5%91%bd%e4%bb%a4df%e5%92%8cdu%e5%8c%ba%e5%88%ab','','','2013-06-22 22:25:16','2013-06-23 06:25:16','','0','http://www.yanue.net/?p=523','0','post','','0');
INSERT INTO `wp_posts` VALUES('527','1','2013-06-22 23:02:05','2013-06-23 07:02:05','rpm，全称RPM Package Manager，是RedHat发布的，针对特定硬件，已经编译好的软件包。安装之后就可以使用，不需要自行编译，以及之前对软件和硬件的检测，目录的配置等动作。\r\n常用命令组合：\r\n\r\n－ivh：安装显示安装进度--install--verbose--hash\r\n\r\n－Uvh：升级软件包--Update；\r\n\r\n－qpl：列出RPM软件包内的文件信息[Query Package list]；\r\n\r\n－qpi：列出RPM软件包的描述信息[Query Package install package(s)]；\r\n\r\n－qf：查找指定文件属于哪个RPM软件包[Query File]；\r\n\r\n－Va：校验所有的RPM软件包，查找丢失的文件[View Lost]；\r\n\r\n－e：删除包\r\n\r\n<strong>一、安装</strong>\r\n\r\n命令格式：\r\n\r\nrpm -i ( or --install) options file1.rpm ... fileN.rpm\r\n\r\n参数：\r\n\r\nfile1.rpm ... fileN.rpm 将要安装的RPM包的文件名\r\n\r\n详细选项：\r\n\r\n-h (or --hash) 安装时输出hash记号 (``#\'\')\r\n--test 只对安装进行测试，并不实际安装。\r\n--percent 以百分比的形式输出安装的进度。\r\n--excludedocs 不安装软件包中的文档文件\r\n--includedocs 安装文档\r\n--replacepkgs 强制重新安装已经安装的软件包\r\n--replacefiles 替换属于其它软件包的文件\r\n--force 忽略软件包及文件的冲突\r\n--noscripts 不运行预安装和后安装脚本\r\n--prefix &lt;path&gt; 将软件包安装到由 &lt;path&gt; 指定的路径下\r\n--ignorearch 不校验软件包的结构\r\n--ignoreos 不检查软件包运行的操作系统\r\n--nodeps 不检查依赖性关系\r\n--ftpproxy &lt;host&gt; 用 &lt;host&gt; 作为 FTP代理\r\n--ftpport &lt;port&gt; 指定FTP的端口号为 &lt;port&gt;\r\n\r\n通用选项\r\n\r\n-v 显示附加信息\r\n-vv 显示调试信息\r\n--root &lt;path&gt; 让RPM将&lt;path&gt;指定的路径做为\"根目录\"，这样预安装程序和后安\r\n装程序都会安装到这个目录下\r\n--rcfile &lt;rcfile&gt; 设置rpmrc文件为 &lt;rcfile&gt;\r\n--dbpath &lt;path&gt; 设置RPM 资料库存所在的路径为 &lt;path&gt;\r\n\r\n<strong>二、删除</strong>\r\n\r\n命令格式：\r\n\r\nrpm -e ( or --erase) options pkg1 ... pkgN\r\n\r\n参数\r\n\r\npkg1 ... pkgN ：要删除的软件包\r\n\r\n详细选项\r\n\r\n--test 只执行删除的测试\r\n--noscripts 不运行预安装和后安装脚本程序\r\n--nodeps 不检查依赖性\r\n\r\n通用选项\r\n\r\n-vv 显示调试信息\r\n--root &lt;path&gt; 让RPM将&lt;path&gt;指定的路径做为\"根目录\"，这样预安装程序和后安装\r\n程序都会安装到这个目录下\r\n--rcfile &lt;rcfile&gt; 设置rpmrc文件为 &lt;rcfile&gt;\r\n--dbpath &lt;path&gt; 设置RPM 资料库存所在的路径为 &lt;path&gt;\r\n\r\n<strong>三、升级</strong>\r\n\r\n命令格式\r\n\r\nrpm -U ( or --upgrade) options file1.rpm ... fileN.rpm\r\n\r\n参数\r\n\r\nfile1.rpm ... fileN.rpm 软件包的名字\r\n\r\n详细选项\r\n\r\n-h (or --hash) 安装时输出hash记号 (``#\'\')\r\n--oldpackage 允许\"升级\"到一个老版本\r\n--test 只进行升级测试\r\n--excludedocs 不安装软件包中的文档文件\r\n--includedocs 安装文档\r\n--replacepkgs 强制重新安装已经安装的软件包\r\n--replacefiles 替换属于其它软件包的文件\r\n--force 忽略软件包及文件的冲突\r\n--percent 以百分比的形式输出安装的进度。\r\n--noscripts 不运行预安装和后安装脚本\r\n--prefix &lt;path&gt; 将软件包安装到由 &lt;path&gt; 指定的路径下\r\n--ignorearch 不校验软件包的结构\r\n--ignoreos 不检查软件包运行的操作系统\r\n--nodeps 不检查依赖性关系\r\n--ftpproxy &lt;host&gt; 用 &lt;host&gt; 作为 FTP代理\r\n--ftpport &lt;port&gt; 指定FTP的端口号为 &lt;port&gt;\r\n\r\n通用选项\r\n\r\n-v 显示附加信息\r\n-vv 显示调试信息\r\n--root &lt;path&gt; 让RPM将&lt;path&gt;指定的路径做为\"根目录\"，这样预安装程序和后安装程序都会安装到这个目录下\r\n--rcfile &lt;rcfile&gt; 设置rpmrc文件为 &lt;rcfile&gt;\r\n--dbpath &lt;path&gt; 设置RPM 资料库存所在的路径为 &lt;path&gt;\r\n\r\n<strong>四、查询</strong>\r\n\r\n命令格式：\r\n\r\nrpm -q ( or --query) options\r\n\r\n参数：\r\n\r\npkg1 ... pkgN ：查询已安装的软件包\r\n\r\n详细选项\r\n\r\n-p &lt;file&gt;(or ``-\'\') 查询软件包的文件\r\n-f &lt;file&gt; 查询&lt;file&gt;属于哪个软件包\r\n-a 查询所有安装的软件包\r\n--whatprovides &lt;x&gt; 查询提供了 &lt;x&gt;功能的软件包\r\n-g &lt;group&gt; 查询属于&lt;group&gt; 组的软件包\r\n--whatrequires &lt;x&gt; 查询所有需要 &lt;x&gt; 功能的软件包\r\n\r\n信息选项\r\n\r\n&lt;null&gt; 显示软件包的全部标识\r\n-i 显示软件包的概要信息\r\n-l 显示软件包中的文件列表\r\n-c 显示配置文件列表\r\n-d 显示文档文件列表\r\n-s 显示软件包中文件列表并显示每个文件的状态\r\n--scripts 显示安装、卸载、校验脚本\r\n--queryformat (or --qf) 以用户指定的方式显示查询信息\r\n--dump 显示每个文件的所有已校验信息\r\n--provides 显示软件包提供的功能\r\n--requires (or -R) 显示软件包所需的功能\r\n\r\n通用选项\r\n\r\n-v 显示附加信息\r\n-vv 显示调试信息\r\n--root &lt;path&gt; 让RPM将&lt;path&gt;指定的路径做为\"根目录\"，这样预安装程序和后安装程序都会安装到这个目录下\r\n--rcfile &lt;rcfile&gt; 设置rpmrc文件为 &lt;rcfile&gt;\r\n--dbpath &lt;path&gt; 设置RPM 资料库存所在的路径为 &lt;path&gt;\r\n\r\n<strong>五、校验已安装的软件包</strong>\r\n\r\n命令格式：\r\n\r\nrpm -V ( or --verify, or -y) options\r\n\r\n参数\r\n\r\npkg1 ... pkgN 将要校验的软件包名\r\n\r\n软件包选项\r\n\r\n-p &lt;file&gt; Verify against package file &lt;file&gt;\r\n-f &lt;file&gt; 校验&lt;file&gt;所属的软件包\r\n-a Verify 校验所有的软件包\r\n-g &lt;group&gt; 校验所有属于组 &lt;group&gt; 的软件包\r\n\r\n详细选项\r\n\r\n--noscripts 不运行校验脚本\r\n--nodeps 不校验依赖性\r\n--nofiles 不校验文件属性\r\n\r\n通用选项\r\n\r\n-v 显示附加信息\r\n-vv 显示调试信息\r\n--root &lt;path&gt; 让RPM将&lt;path&gt;指定的路径做为\"根目录\"，这样预安装程序和后安装程序都会安装到这个目录下\r\n--rcfile &lt;rcfile&gt; 设置rpmrc文件为 &lt;rcfile&gt;\r\n--dbpath &lt;path&gt; 设置RPM 资料库存所在的路径为 &lt;path&gt;\r\n\r\n<strong>六、校验软件包中的文件</strong>\r\n\r\n语法：\r\n\r\nrpm -K ( or --checksig) options file1.rpm ... fileN.rpm\r\n\r\n参数：\r\n\r\nfile1.rpm ... fileN.rpm 软件包的文件名\r\n\r\nChecksig--详细选项\r\n\r\n--nopgp 不校验PGP签名\r\n\r\n通用选项\r\n\r\n-v 显示附加信息\r\n-vv 显示调试信息\r\n--rcfile &lt;rcfile&gt; 设置rpmrc文件为 &lt;rcfile&gt;\r\n\r\n<strong>七、其它RPM选项</strong>\r\n\r\n--rebuilddb 重建RPM资料库\r\n--initdb 创建一个新的RPM资料库\r\n--quiet 尽可能的减少输出\r\n--help 显示帮助文件\r\n--version 显示RPM的当前版本','linux rpm命令详细介绍','','publish','open','open','','linux-rpm%e5%91%bd%e4%bb%a4%e8%af%a6%e7%bb%86%e4%bb%8b%e7%bb%8d','','','2013-06-22 23:02:26','2013-06-23 07:02:26','','0','http://www.yanue.net/?p=527','0','post','','0');
INSERT INTO `wp_posts` VALUES('543','1','2013-07-09 18:02:21','2013-07-10 02:02:21','<h2>1.什么是php的路由机制</h2>\r\n1、路由机制就是把某一个特定形式的URL结构中提炼出来系统对应的参数。举个例子,如：<a title=\"Link added by VigLink\" href=\"http://main.wopop.com/article/1\" rel=\"nofollow\">http://main.wopop.com/article/1</a>  其中：/article/1  -&gt; ?_m=article&amp;id=1。\r\n\r\n2、然后将拥有对应参数的URL转换成特定形式的URL结构，是上面的过程的逆向过程。\r\n<h2><a name=\"_Toc5893\"></a>2.PHP的URL路由方式</h2>\r\n总体来说就是：获取路径信息-&gt;处理路径信息\r\n\r\nURL路由方式：\r\n\r\n第一种是通过url参数进行映射的方式，一般是两个参数，分别代表控制器类和方法比如index.php?c=index&amp;m=index映射到的是index控制器的index方法。\r\n\r\n第二种，是通过url-rewrite的方式，这样的好处是可以实现对非php结尾的其他后缀进行映射，当然通过rewrite也可以实现第一种方式，不过纯使用rewrite的也比较常见，一般需要配置apache或者nginx的rewrite规则\r\n<pre class=\"lang_php decode_true\">&lt;IfModule mod_rewrite.c&gt;\r\n    RewriteEngine On\r\n    RewriteBase /\r\n    RewriteRule ^index.php$ - [L]\r\n    RewriteCond %{REQUEST_FILENAME} !-f\r\n    RewriteCond %{REQUEST_FILENAME} !-d\r\n    RewriteRule . /index.php [L]\r\n&lt;/IfModule&gt;</pre>\r\n第三种，就是通过pathinfo的方式，所谓的pathinfo，就是形如这样的url。<a title=\"Link added by VigLink\" href=\"http://xxx.com/index.php/c/index/aa/cc\" rel=\"nofollow\">xxx.com/index.php/c/index/aa/cc</a>，apache在处理这个url的时候会把index.php后面的部分输入到环境变量$_SERVER[\'PATH_INFO\']，它等于/c/index/aa/cc。然后我们的路由器再通过解析这个串进行分析就可以了，后面的部分放入到参数什么地方的，就依据各个框架不同而不同了。\r\n<h2><a name=\"_Toc20384\"></a>3. 一个简单的PHP路由实现</h2>\r\n<h3><a name=\"_Toc21476\"></a>3.1 修改htaccess文件</h3>\r\n编写服务器apache或IIS自带的rewrite文件，将URL结构导入指定文件比如：index.php。\r\n\r\n开启rewrite：htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。启用.htaccess，需要修改apache/conf/httpd.conf，启用AllowOverride，并可以用AllowOverride限制特定命令的使用。\r\n<pre class=\"lang_php decode_true\">&lt;Directory /&gt;\r\nOptions FollowSymLinks\r\nAllowOverride None\r\n&lt;/Directory&gt;</pre>\r\n改为\r\n<pre class=\"lang_php decode_true\">&lt;Directory /&gt;\r\nOptions FollowSymLinks\r\nAllowOverride All\r\n&lt;/Directory&gt;</pre>\r\n然后我写了这样的rewrite：\r\n<pre class=\"lang_php decode_true\">RewriteEngine on #rewriteengine为重写引擎开关on为开启off为关闭\r\n#RewriteCond $1 !^(index.php.php|images|robots.txt)\r\nRewriteRule ([a-zA-Z]{1,})-([0-9]{1,}).html$ sharexie/test.php?action=$1&amp;id=$2\r\n#([a-zA-Z]{1,})-([0-9]{1,}).html$是规则，sharexie/test.php?action=$1&amp;id=$2是要替换的格式，$1代表第一个括号匹配的值，$2代表第二个。</pre>\r\n上面的代码就是将URL结构导入sharexie/test.php中。把这些保存为.htaccess文件放在网站的根目录就行了。\r\n\r\ntest.php\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\necho \'你的Action是：\' . $_GET[\'action\'];\r\necho \'&lt;br/&gt;\';\r\necho \'你的ID是：\' . $_GET[\'id\'];\r\n?&gt;</pre>\r\n好了，我们现在在浏览器中输入：\r\n\r\n127.0.0.1/view-12.html\r\n\r\n输出的是：\r\n\r\n你的Action是：view\r\n\r\n你的ID是：12\r\n\r\n<strong>1、讲解一下RewriteRule：</strong>\r\n\r\nRewriteRule是重写规则，支持正则表达式的，上面的([0-9]{1,})是指由数字组成的，$是结束标志，说明是以数字结束！\r\n\r\n<strong>2、RewriteRule配置参数</strong>\r\n\r\n1) R 强制外部重定向\r\n2) F 禁用URL,返回403HTTP状态码。\r\n3) G 强制URL为GONE，返回410HTTP状态码。\r\n4) P 强制使用代理转发。\r\n5) L 表明当前规则是最后一条规则，停止分析以后规则的重写。\r\n6) N 重新从第一条规则开始运行重写过程。\r\n7) C 与下一条规则关联8) T=MIME-type(force MIME type) 强制MIME类型\r\n9) NS  只用于不是内部子请求\r\n10) NC 不区分大小写\r\n11) QSA 追加请求字符串\r\n12) NE 不在输出转义特殊字符   %3d$1  等价于 =$1\r\n\r\n举例：\r\n\r\n1、将xianglc将定到 index.php?c=myuser&amp;m=itime&amp;domain=xianglc\r\n<pre class=\"lang_php decode_true\">RewriteRule ^([a-zA-Z0-9]){6,20}/?$ index.php?c=myuser&amp;m=itime&amp;domain=$0 [L]</pre>\r\n2、#RewriteRule ^/index.html$ /1.php [L]\r\n<pre class=\"lang_php decode_true\">RewriteRule ^/index-(.*?)-(.*?)-(.*?)-(.*?)-(.*?)-(.*?)-(.*?)-(.*?)-(.*?)$ $9&amp;a=$1&amp;b=$2&amp;c=$3&amp;d=$4&amp;e=$5&amp;f=$6&amp;g=$7&amp;h=$8 [C,NC]\r\nRewriteRule ^(.*?)-(.*?)-(.*?)-(.*?)-(.*?)-(.*?).html(.*?)$ /1.php?$7&amp;i=$1&amp;j=$2&amp;k=$3&amp;l=$4&amp;m=$5&amp;n=$6 [QSA,L,NC]</pre>\r\nPhp内容：\r\n\r\n<strong>3.2 一个路由解析器，用来解析规则，匹配和转换URL。</strong>\r\n\r\n先将所有的链接转到index.php中，在index.php中进行路由分发，按照类和方法分配到相应的类文件中的函数上去。用$_SERVER[\'REQUEST_URI\']取出URL中的<a title=\"Link added by VigLink\" href=\"http://www.yanue.net/\" rel=\"nofollow\">www.xx.com/</a>后面的部分，按照相关规则分别区分为class和mothod以及参数key=&gt;value的值。最后include该类文件，执行其中的函数。实例如下：\r\n<pre class=\"lang_php decode_true\">&lt;?php\r\nerror_reporting(0);\r\ndate_default_timezone_set(\"Asia/Shanghai\");\r\n$_DocumentPath = $_SERVER[\'DOCUMENT_ROOT\'];\r\n$_RequestUri = $_SERVER[\'REQUEST_URI\'];\r\n$_UrlPath = $_RequestUri;\r\n$_FilePath = __FILE__;\r\n$_AppPath = str_replace($_DocumentPath, \'\', $_FilePath);    //==&gt;routerindex.php\r\n$_AppPathArr = explode(DIRECTORY_SEPARATOR, $_AppPath);\r\nfor ($i = 0; $i &lt; count($_AppPathArr); $i++) {\r\n       $p = $_AppPathArr[$i];\r\n       if ($p) {\r\n           $_UrlPath = preg_replace(\'/^/\'.$p.\'//\', \'/\', $_UrlPath, 1);\r\n       }\r\n    }\r\n   $_UrlPath = preg_replace(\'/^//\', \'\', $_UrlPath, 1);\r\n   $_AppPathArr = explode(\"/\", $_UrlPath);\r\n   $_AppPathArr_Count = count($_AppPathArr);\r\n   $arr_url = array(\r\n       \'controller\' =&gt; \'sharexie/test\',\r\n       \'method\' =&gt; \'index\',\r\n       \'parms\' =&gt; array()\r\n   );\r\n   $arr_url[\'controller\'] = $_AppPathArr[0];\r\n   $arr_url[\'method\'] = $_AppPathArr[1];\r\n   if ($_AppPathArr_Count &gt; 2 and $_AppPathArr_Count % 2 != 0) {\r\n       die(\'参数错误\');\r\n   } else {\r\n       for ($i = 2; $i &lt; $_AppPathArr_Count; $i += 2) {\r\n           $arr_temp_hash = array(strtolower($_AppPathArr[$i])=&gt;$_AppPathArr[$i + 1]);\r\n           $arr_url[\'parms\'] = array_merge($arr_url[\'parms\'], $arr_temp_hash);\r\n       }\r\n   }\r\n   $module_name = $arr_url[\'controller\'];\r\n   $module_file = $module_name.\'.class.php\';\r\n   $method_name = $arr_url[\'method\'];\r\n   if (file_exists($module_file)) {\r\n       include $module_file;\r\n       $obj_module = new $module_name();\r\n       if (!method_exists($obj_module, $method_name)) {\r\n           die(\"要调用的方法不存在\");\r\n       } else {\r\n           if (is_callable(array($obj_module, $method_name))) {\r\n               $obj_module -&gt; $method_name($module_name, $arr_url[\'parms\']);\r\n               $obj_module -&gt; printResult();\r\n           }\r\n       }\r\n   } else {\r\n       die(\"定义的模块不存在\");\r\n   }\r\n?&gt;</pre>\r\n参考文档：\r\n\r\n<a href=\"http://httpd.apache.org/docs/2.2/rewrite/\">http://httpd.apache.org/docs/2.2/rewrite/</a>\r\n\r\n<a href=\"http://www.cnblogs.com/xiangxiaodong/archive/2012/07/19/2600138.html\">http://www.cnblogs.com/xiangxiaodong/archive/2012/07/19/2600138.html</a>\r\n\r\n转自:<a href=\"http://www.cnblogs.com/fredshare/archive/2012/09/17/2688944.html\">http://www.cnblogs.com/fredshare/archive/2012/09/17/2688944.html</a>','php路由实现的两种方式','','publish','open','open','','php%e8%b7%af%e7%94%b1%e5%ae%9e%e7%8e%b0%e7%9a%84%e4%b8%a4%e7%a7%8d%e6%96%b9%e5%bc%8f','','','2013-07-19 06:55:02','2013-07-19 14:55:02','','0','http://www.yanue.net/?p=543','0','post','','0');
INSERT INTO `wp_posts` VALUES('711','1','2013-07-25 23:07:23','2013-07-26 07:07:23','有时我们需要判断是不是ajax请求来决定模块输出还是json格式输出.\r\n<h4>PHP判断ajax请求的原理:</h4>\r\n在发送ajax请求的时候，我们可以通过XMLHttpRequest这个对象，创建自定义的header头信息， 在jquery框架中，对于通过它的$.ajax, $.get, or $.post方法请求网页内容时，它会向服务器传递一个HTTP_X_REQUESTED_WITH的参数，php中就是在header一层判断是否是ajax请求，对应的根据$_SERVER[\'HTTP_X_REQUESTED_WITH\']判断。\r\n<pre class=\"lang:php decode:true\">/**\r\n  * 当前请求是否ajax请求\r\n  *\r\n  * @access public\r\n  * @return bool\r\n  */\r\n function isAjax()\r\n {\r\n     return isset($_SERVER[\'HTTP_X_REQUESTED_WITH\']) &amp;&amp; strtolower($_SERVER[\'HTTP_X_REQUESTED_WITH\']) == \'XMLHttpRequest\';\r\n }</pre>\r\n<h4>注意:</h4>\r\n<ul>\r\n	<li>一般情况下$_SERVER[\'HTTP_X_REQUESTED_WITH\']默认是XMLHttpRequest</li>\r\n	<li>$_SERVER[\'HTTP_X_REQUESTED_WITH\']也可以自定义创建的，使用<code>XMLHttpRequest.setRequestHeader(</code><code>name</code><code>,value</code><code>);</code>参考文章：<a href=\"http://www.skygq.com/2011/01/04/php-check-request-from-ajax-or-normal/\" target=\"_blank\" rel=\"nofollow\">http://www.skygq.com/2011/01/04/php-check-request-from-ajax-or-normal/</a></li>\r\n</ul>\r\n<h4>PHP判断AJAX请求时跨域问题:</h4>\r\n如果是跨域的话这个，上面的isAjax就完全不正确了。跨域同域的问题参考:《<a href=\"http://www.php10086.com/2011/12/292.html\">$.getjson遇到的几个问题</a>》\r\n\r\n使用<a href=\"http://www.php10086.com/2011/12/292.html\" target=\"_blank\">$.getJSON</a>来实现跨域，但是检测是否是ajax一直是false，并尝试$get（参看：<a href=\"http://www.php10086.com/2012/07/843.html\">$.get实现返回解析json数据以及jsonp跨域</a>）之后无果的之后，考虑要使用万能的$ajax方法，见<strong>ajax的文档</strong>：\r\n<blockquote>如果指定了script或者jsonp类型，那么当从服务器接收到数据时，实际上是用了&lt;script&gt;标签而不是 XMLHttpRequest对象。这种情况下，$.ajax()不再返回一个XMLHttpRequest对象，并且也不会传递事件处理函数，比如 beforeSend。</blockquote>\r\n<h4>解释:</h4>\r\najax跨域只能指定jsonp格式的数据，这个是就不是XMLHttpRequest对象了，就算你自定义一个$_SERVER[\'HTTP_X_REQUESTED_WITH\']也是没有意义的\r\n<h4>解决的办法：</h4>\r\n针对跨域情况的getjson 或者ajax(jsonp)可以使用ACCEPT请求头部格式来判断\r\n\r\nPHP端对应$_SERVER[\'HTTP_ACCEPT\']\r\n\r\njsonp的请求一般是：text/javascript, application/javascript, */*\r\n\r\njson的请求：application/json, text/javascript, */*\r\n\r\n一个简单的判断跨域条件下的ajax请求：\r\n<pre class=\"lang:php decode:true\">switch ($_SERVER[\'HTTP_ACCEPT\']){  \r\n    case \'application/json, text/javascript, */*\':  \r\n        //  JSON 格式  \r\n        break;  \r\n    case \'text/javascript, application/javascript, */*\':  \r\n        // javascript 或 JSONP 格式  \r\n        break;  \r\n    case \'text/html, */*\':  \r\n        //  HTML 格式  \r\n        break;  \r\n    case \'application/xml, text/xml, */*\':  \r\n        //  XML 格式  \r\n        break;  \r\n}</pre>\r\n&nbsp;','PHP判断ajax请求:HTTP_X_REQUESTED_WITH','','publish','open','open','','php%e5%88%a4%e6%96%adajax%e8%af%b7%e6%b1%82http_x_requested_with','','http://www.skygq.com/2011/01/04/php-check-request-from-ajax-or-normal/\nhttp://www.skygq.com/2011/01/04/php-check-request-from-ajax-or-normal/\nhttp://www.php10086.com/2011/12/292.html\nhttp://www.php10086.com/2012/07/843.html','2013-07-25 23:12:24','2013-07-26 07:12:24','','0','http://www.yanue.net/?p=711','0','post','','0');
INSERT INTO `wp_posts` VALUES('546','1','2013-07-10 22:07:49','2013-07-11 06:07:49','<h2>文档标记:</h2>\r\n文档标记的使用范围是指该标记可以用来修饰的关键字，或其他文档标记。\r\n所有的文档标记都是在每一行的 * 后面以@开头。如果在一段话的中间出来@的标记，这个标记将会被当做普通内容而被忽略掉。\r\n<strong>@access</strong>\r\n使用范围：class,function,var,define,module\r\n该标记用于指明关键字的存取权限：private、public或proteced\r\n<strong>@author</strong>\r\n指明作者\r\n<strong>@copyright</strong>\r\n使用范围：class，function，var，define，module，use\r\n指明版权信息\r\n<strong>@deprecated</strong>\r\n使用范围：class，function，var，define，module，constent，global，include\r\n指明不用或者废弃的关键字\r\n<strong>@example</strong>\r\n该标记用于解析一段文件内容，并将他们高亮显示。Phpdoc会试图从该标记给的文件路径中读取文件内容\r\n<strong>@const</strong>\r\n使用范围：define\r\n用来指明php中define的常量\r\n<strong>@final</strong>\r\n使用范围：class,function,var\r\n指明关键字是一个最终的类、方法、属性，禁止派生、修改。\r\n<strong>@filesource</strong>\r\n和example类似，只不过该标记将直接读取当前解析的php文件的内容并显示。\r\n<strong>@global</strong>\r\n指明在此函数中引用的全局变量\r\n<strong>@ingore</strong>\r\n用于在文档中忽略指定的关键字\r\n<strong>@license</strong>\r\n相当于html标签中的例如\r\n,首先是URL，接着是要显示的内容\r\n可以写作 @license <a title=\"半叶寒羽\" href=\"http://yanue.net/\" rel=\"nofollow\">http://yanue.net/</a> 半叶寒羽\r\n<strong>@link</strong>\r\n类似于license\r\n但还可以通过link指到文档中的任何一个关键字\r\n<strong>@name</strong>\r\n为关键字指定一个别名。\r\n<strong>@package</strong>\r\n使用范围：页面级别的-&gt; define，function，include\r\n类级别的-&gt;class，var，methods\r\n用于逻辑上将一个或几个关键字分到一组。\r\n<strong>@abstrcut</strong>\r\n说明当前类是一个抽象类\r\n<strong>@param</strong>\r\n指明一个函数的参数\r\n<strong>@return</strong>\r\n指明一个方法或函数的返回指\r\n<strong>@static</strong>\r\n指明关建字是静态的。\r\n<strong>@var</strong>\r\n指明变量类型\r\n<strong>@version</strong>\r\n指明版本信息\r\n<strong>@todo</strong>\r\n指明应该改进或没有实现的地方\r\n<strong>@throws</strong>\r\n指明此函数可能抛出的错误异常,极其发生的情况\r\n上面提到过，普通的文档标记标记必须在每行的开头以@标记，除此之外，还有一种标记叫做inline tag,用{@}表示，具体包括以下几种：\r\n<strong>{@link}</strong>\r\n用法同@link\r\n<strong>{@source}</strong>\r\n显示一段函数或方法的内容\r\n<h2>一些注释规范</h2>\r\n<strong>a.</strong>注释必须是\r\n/**\r\n* XXXXXXX\r\n*/\r\n的形式\r\n<strong>b.</strong>对于引用了全局变量的函数，必须使用glboal标记。\r\n<strong>c.</strong>对于变量，必须用var标记其类型（int,string,bool...）\r\n<strong>d.</strong>函数必须通过param和return标记指明其参数和返回值\r\n<strong>e.</strong>对于出现两次或两次以上的关键字，要通过ingore忽略掉多余的，只保留一个即可\r\n<strong>f.</strong>调用了其他函数或类的地方，要使用link或其他标记链接到相应的部分，便于文档的阅读。\r\n<strong>g.</strong>必要的地方使用非文档性注释，提高代码易读性。\r\n<strong>h.</strong>描述性内容尽量简明扼要，尽可能使用短语而非句子。\r\n<strong>i.</strong>全局变量，静态变量和常量必须用相应标记说明\r\n<h2>附录</h2>\r\n附录1 能够被phpdoc识别的关键字：\r\n\r\nInclude\r\nRequire\r\ninclude_once\r\nrequire_once\r\ndefine\r\nfunction\r\nglobal\r\nclass\r\n\r\n<a name=\"19\"></a>\r\n<h3>附录2 文档中可以使用的标签:</h3>\r\n<code> &lt;b&gt;</code>\r\n\r\n&lt;code&gt;\r\n\r\n&lt;br&gt;\r\n\r\n&lt;kdb&gt;\r\n\r\n&lt;li&gt;\r\n\r\n&lt;pre&gt;\r\n\r\n&lt;ul&gt;\r\n\r\n&lt;SAMP&gt;\r\n\r\n&lt;var&gt;','phpDoccument文档标记标签及注释规范','','publish','open','open','','phpdoc%e6%96%87%e6%a1%a3%e6%a0%87%e8%ae%b0%e6%a0%87%e7%ad%be%e5%8f%8a%e6%b3%a8%e9%87%8a%e8%a7%84%e8%8c%83','','','2013-07-10 22:24:34','2013-07-11 06:24:34','','0','http://www.yanue.net/?p=546','0','post','','0');
INSERT INTO `wp_posts` VALUES('549','1','2013-07-10 22:35:40','2013-07-11 06:35:40','Phpdocumentor文档规范及文档标签见:<a href=\"http://www.yanue.net/archives/546.html\">http://www.yanue.net/archives/546.html</a>.\r\n\r\n注释实例:\r\n<pre class=\"lang_php decode_true brush: php; gutter: true\">&lt;?php\r\n\r\n//----- 文档块 ----------------------------\r\n/**\r\n * 以 / ** 开头的注释是一个文档块(DocBlock)\r\n */\r\n\r\nfunction a0() {}\r\n\r\n//----- 文档块描述细节 --------------------\r\n\r\n// 文档块包括哪些？\r\n/**\r\n * 文档块按顺序包括3个部分\r\n * 1. 短描述\r\n * 2. 长描述\r\n * 3. tag段\r\n */\r\n\r\nfunction a1() {}\r\n\r\n//比如\r\n/**\r\n * 短描述\r\n *\r\n * 这是一个长描述。\r\n * 继续长描述。\r\n * 如果短描述超过3行，则会只去第一行，作为短描述。\r\n *\r\n * 另起一段：因为上面的空行\r\n */\r\n\r\nfunction a2() {}\r\n// &lt;p&gt;的例子\r\n/**\r\n * 短描述\r\n *\r\n * &lt;p&gt;这是一个长描述。\r\n * 继续长描述。\r\n * 用p标签包围的长描述&lt;/p&gt;\r\n * &lt;p&gt;另起一段&lt;/p&gt;\r\n * &lt;p&gt;再另起一段&lt;/p&gt;\r\n */\r\nfunction a3() {}\r\n\r\n/**\r\n * phpdoc 不支持html的标签，但是可以用下面的几个标签(注意加&lt;&gt;)\r\n * \r\n * b -- &lt;b&gt; 加粗 &lt;/b&gt;\r\n *\r\n * br -- 换行，&lt;br&gt;可能被某些转换器忽略 &lt;br&gt;\r\n *\r\n * i -- &lt;i&gt; 斜体 &lt;/i&gt;\r\n *\r\n * kbd -- &lt;kbd&gt; 标示 键盘输入/屏幕输出 &lt;/kbd&gt;\r\n *\r\n * ul -- 没有顺序的列表\r\n *\r\n * li -- 列表项\r\n *\r\n * ol -- 顺序列表\r\n *\r\n * p -- 如果成对使用，则表明一个段，否则只是一个字符串&lt;p&gt;\r\n * &lt;p&gt;这是一个段&lt;/p&gt;\r\n *\r\n * pre -- \r\n * &lt;pre&gt;原样输出，即使是各种标签&lt;b&gt;加粗&lt;/b&gt;，相当于XML的CDATA\r\n * 注意输出成HTML后，会有效果\r\n * &lt;/pre&gt;\r\n *\r\n * var -- 变量名\r\n *\r\n * samp -- 非php的示例\r\n *\r\n * &lt;code&gt; 加粗 &lt;/code&gt;\r\n *\r\n * 不要把这些标签想成是字符串，它们应解析器的不同，而被解析成各种形式\r\n * 如：b标签在DocBook中是&lt;emphasis&gt;，p标签在PDF中是4个空格\r\n * 这些都在模板的options.ini文件中定义\r\n *\r\n * 要显示带前后尖括号的b标签，可以用《《XXX》》(小写尖括号), 如&lt;&lt;b&gt;&gt;\r\n *\r\n * 要用@标签，如果行的开头，则用@，其他地方不需要加反斜杠 \r\n * 如：\r\n *\r\n * &lt;code&gt;\r\n * @return abc\r\n * 这是一个标签 @name\r\n * &lt;/code&gt;\r\n */ \r\n\r\nfunction a4() {}\r\n\r\n/**\r\n * 简单的列表(不允许嵌套，因为它不再简单)\r\n *\r\n * 这是一个简单的列表(以-、+、#、o)\r\n * - item 1\r\n * - item 2, this one\r\n *   is multi-line\r\n * 这是一个简单的列表(以-、+、#、o)\r\n * + item 1\r\n * + item 2\r\n * 这是一个简单的列表(以-、+、#、o)\r\n * # item 1\r\n * # item 2\r\n * 这是一个简单的列表(以-、+、#、o)\r\n * o item 1\r\n * o item 2\r\n * 列表结束。下面是顺序列表(以数字开头)\r\n * 1 ordered item 1\r\n * 2 ordered item 2\r\n * 列表结束。下面是还是顺序列表(以数字开头，并且有个点)\r\n * 1. ordered item 1\r\n * 2. ordered item 2\r\n */\r\nfunction a5() {}\r\n\r\n/**\r\n * 有嵌套的列表\r\n *\r\n * 使用ul li ol等标签创建复杂的嵌套列表\r\n * &lt;ul&gt;\r\n * &lt;li&gt;outer item 1&lt;/li&gt;\r\n * &lt;li&gt;outer item 2, this one\r\n *   is multi-line&lt;/li&gt;\r\n * &lt;li&gt;item 3 is a nested inner list\r\n * &lt;ul&gt;\r\n * &lt;li&gt;inner item 1&lt;/li&gt;\r\n * &lt;li&gt;inner item 2&lt;/li&gt;\r\n * &lt;/ul&gt;\r\n * &lt;li&gt;outer item 4&lt;/li&gt;\r\n * &lt;/ul&gt;\r\n */\r\nfunction a6() {}\r\n\r\n/**\r\n * 在todo标签中的列表\r\n * @todo My Simple TODO List\r\n *     - item 1\r\n *     - item 2\r\n *     - item 3\r\n *      - item 3\r\n * @todo My Complex TODO List\r\n *     &lt;ol&gt;\r\n *       &lt;li&gt;item 1.0&lt;/li&gt;\r\n *       &lt;li&gt;item 2.0&lt;/li&gt;\r\n *       &lt;li&gt;item 3.0&lt;/li&gt;\r\n *       &lt;li&gt;\r\n *         &lt;ol&gt;\r\n *           &lt;li&gt;item 3.1&lt;/li&gt;\r\n *           &lt;li&gt;item 3.2&lt;/li&gt;\r\n *         &lt;/ol&gt;\r\n *       &lt;li&gt;\r\n *       &lt;li&gt;item 4.0&lt;/li&gt;\r\n *     &lt;/ol&gt;\r\n */\r\nfunction a7() {}\r\n\r\n//----- Tags ------------------------------------\r\n\r\n// Tags：以@开头的标示\r\n// 下面是常用的Tag\r\n\r\n/**\r\n * 简单的描述\r\n *\r\n * 你可以任意扩展描述，成千上万行都可以\r\n *\r\n * 用 {@link ellement} 指向一个 element\r\n * 比如：指向a1: {@link a1}\r\n * \r\n * 用 {@link url} 指向一个站点\r\n * 比如：{@link http://www.sina.com.cn 新浪网}\r\n * \r\n * 用 {@source} 显示源代码.\r\n * 比如：显示函数的代码：\r\n * {@source } \r\n * \r\n * 可用Tag列表:\r\n * type 是PHP类型：integer, array, mixed, string等\r\n *\r\n * - @abstract\r\n * - @access       public or private\r\n * - @author       作者 &lt;author@email&gt;\r\n * - @copyright    版权\r\n * - @deprecated   废弃\r\n * - @deprec       deprecated的简写\r\n * - @example      指向例子\r\n * - @exception    兼容javadoc\r\n * - @global       type $globalvarname\r\n * - @global       type 函数中的全局变量描述\r\n * - @ignore\r\n * - @internal     给高级程序员看的内部细节描述\r\n * - @param        type [$varname] 描述\r\n * - @return       type 描述\r\n * - @link         URL\r\n * - @name         procpagealias [不懂]\r\n * - @name         $globalvaralias\r\n * - @magic        兼容phpdoc.de\r\n * - @package      包名\r\n * - @see          指向其他元素的名字，如函数名，类方法等\r\n * - @since        一个版本号或日期\r\n * - @static\r\n * - @staticvar    type 函数中的静态变量的描述\r\n * - @subpackage   子包\r\n * - @throws       兼容Javadoc\r\n * - @todo         待办列表，兼容phpdoc.de\r\n * - @var          type    类变量的类型\r\n * - @version      版本\r\n */\r\nfunction if_there_is_an_inline_source_tag_this_must_be_a_function()\r\n{\r\n// ...\r\n}\r\n\r\n//----- 可以文档的源代码元素 ------------------------------------\r\n\r\n//-- 包 \r\n\r\n/*\r\n * Phpdoc划分包的逻辑：\r\n * 函数、常量、全局变量属于包\r\n * 方法、类变量属于类\r\n * 包可以包含多个类\r\n *\r\n * 一个文件中不要包含多个包\r\n */\r\n\r\n//--- 程序文件级 --------------------\r\n/*\r\n * 文件的第一个块就是 文件级的文档块(page-level Docblock)\r\n * 或者包含@package标签\r\n * 它可以有这些元素：\r\n *   标准标签\r\n *   @package\r\n *   @subpackage\r\n *\r\n */\r\n\r\n//--- Include/Require 语句 ----------\r\n/*\r\n * 它可以有这些元素：\r\n *   标准标签\r\n */ \r\n\r\n//--- define 语句 -------------------\r\n/*\r\n * 它可以有这些元素：\r\n *   标准标签\r\n *   @name\r\n */ \r\n\r\n//--- function 声明 -------------------\r\n/*\r\n * 它可以有这些元素：\r\n *   标准标签\r\n *   @global\r\n *   @param\r\n *   @return\r\n *   @staticvar\r\n *   inline {@source}\r\n */ \r\n\r\n//--- 全局变量 ------------------------\r\n/*\r\n * 它可以有这些元素：\r\n *   标准标签\r\n *   @name\r\n */ \r\n\r\n//--- class 声明 -------------------\r\n/*\r\n * 它可以有这些元素：\r\n *   标准标签\r\n *   @package\r\n *   @subpackage\r\n *   @static\r\n */ \r\n\r\n//--- class 变量 -------------------\r\n/*\r\n * 它可以有这些元素：\r\n *   标准标签\r\n *   @var\r\n */ \r\n\r\n//--- class 变量 -------------------\r\n/*\r\n * 它可以有这些元素：\r\n *   标准标签\r\n *   @global\r\n *   @param\r\n *   @return\r\n *   @static\r\n *   @staticvar\r\n *   inline {@source}\r\n */ \r\n\r\n/*\r\n * 标准文档标签\r\n * 常用的：\r\n *   @author\r\n *   @copyright\r\n *   @version\r\n *   @since\r\n *   @link\r\n *   @see\r\n * 其他：\r\n *   @tutorial\r\n *   @example\r\n *   @access\r\n *   @deprecated\r\n *   @ignore\r\n *   @internal\r\n *   inline {@internal}}\r\n *   inline {@inheritdoc}\r\n *   inline {@link}\r\n */\r\n\r\n/*\r\n * 文档标签的继承关系\r\n *\r\n * Class子类可以继承父类的文档，几个简单的规则：\r\n *\r\n * @author, @version, @copyright 自动继承，除非显示指明\r\n * @package and @subpackage 也会继承，但是建议显示申明，以避免名字冲突\r\n * 如果没有简单描述，则会继承\r\n * 如果没有长简单描述，则会继承\r\n * 如果有长描述，想继承父类的描述，则使用inline标签 {@inheritdoc}\r\n */\r\n\r\n//----- 命令行参数说明 ------------------------------------\r\n// phpdoc -h 查看帮助, 参数如下：\r\n//\r\n/* -c --config 载入配置文件，如：-c defualt ;载入default.ini文件\r\n * -cp --converterparams 动态扩展转换器的参数，多个值用逗号分割\r\n * -ct --customtags 自定义tag，多个值用逗号分割；如：-ct mgtag,yourtag  =&gt; @mytag @yourtag\r\n * -d --directory 指定要解析的目录\r\n * -dc --defaultcategoryname 指定默认分类名，默认值为:defaul\r\n * -dh --hidden 相当于-dh on，让phpdoc解析以.开头的隐藏文件和目录\r\n * -dn --defaultpackagename 指定默认包名，默认是：default\r\n * -ed --examplesdir 例子文件寻找路径，如：-ed /full/path/to/example\r\n * -f --filename 要解析的源文件名，用,分割，可以使用 * ?\r\n * -i --ignore 不解析的文件名或目录，用,分割，可以使用 * ? ；\r\n *    - -i  忽略 /path/to/here/tests/* 和 /path/tests/*\r\n *    - -i *.inc 忽略所有的 .inc 文件 *\r\n *    - -i *path/to/* 忽略 /path/path/to/my/* 和 /path/to/*\r\n *    - -i *test* 忽略 /path/tests/* 和 /path/here/my_test.php\r\n * -is --ignoresymlinks 忽略任何链接文件，这个只在Linux/Unix下有效，因为Win下没有链接文件\r\n * -it --ignore-tags 忽略某些tag；通常用于创建不同版本的文档；如给普通用户的文档，就不需要@todo标签\r\n *    忽略inline标签，加上大括号，如--ignore-tags {@internal}\r\n *    参数是完整名字，如-it @todo，  -it todo 是错误的写法\r\n * -j --javadocdesc 使用javadoc兼容标签\r\n * -o --output 指定要使用的转换器和模板；默认可选：\r\n *   HTML:frames:* - 输出带框架的HTML页面\r\n *     HTML:frames:default - 类Javadoc模板，没有太多格式\r\n *     HTML:frames:earthli - Marco von Ballmoos写的模板，非常漂亮\r\n *     HTML:frames:l0l33t - 非常漂亮的模板\r\n *     HTML:frames:phpdoc.de - 类phpdoc.de\'s PHPDoc\r\n *     HTML:frames:phphtmllib - 非常好的用户发行模板\r\n *      以上模板都有javascript增强版本：HTML:frames:DOM/name 其中name表示 default, l0l33t, phpdoc.de, 等等\r\n *     HTML:frames:phpedit - 基于PHPEdit帮助生成器\r\n *\r\n *   HTML:Smarty:* - 输出不带框架的HTML\r\n *     HTML:Smarty:default - 用css控制页面布局的模板\r\n *     HTML:Smarty:HandS - Layout is based on PHP, but more refined, with logo image\r\n *     HTML:Smarty:PHP - Layout is identical to the PHP website\r\n *\r\n *   CHM:default:* - 输出成CHM格式，需要用Windows的Help软件编译\r\n *     CHM:default:default - 基于HTML:frames:l0l33t\r\n *\r\n *   PDF:default:* - 输出成PDF文档\r\n *     PDF:default:default - 标准格式\r\n *\r\n *   XML:DocBook:* - 输出成XML--DocBook格式\r\n *     XML:DocBook/peardoc2:default - pear.php.net（第2版）\r\n *\r\n * -p --pear Parse a PEAR-style repository (package is directory, _members are @access private) on/off default off \r\n * -po --packageoutput output documentation only for selected packages. Use a comma-delimited list \r\n * -pp --parseprivate 开启；默认不显示@access private的文档\r\n * -q --quiet 关闭多余信息；用法：-q on --不显示  -q off --显示，默认值\r\n * -ric --readmeinstallchangelog Specify custom filenames to parse like README, INSTALL or CHANGELOG files \r\n * -s --sourcecode generate highlighted sourcecode for every parsed file (PHP 4.3.0+ only) on/off default off \r\n * -t --target 要输出的路径\r\n * -ti --title 文档的标题\r\n * -tb --templatebase 指定自己的模板目录\r\n * -ue --undocumentedelements 为没有文档的元素 产生警告; 用法：-ue on  -ue off (默认值)\r\n */\r\n\r\n/*\r\n * phpdoc -t /path/to/output -d path/to/directory1,/another/path,/third/path \r\n *   -f /path/to/anotherfile.php -i *test.php,tests/ -pp on -ti My Title -o HTML:frames:phpedit\r\n *\r\n * phpdoc -c myconfig\r\n */\r\n\r\n?&gt;</pre>\r\n来自: http://sofire.iteye.com/blog/120007','phpdoc文档注释实例','','publish','open','open','','phpdoc%e6%96%87%e6%a1%a3%e6%b3%a8%e9%87%8a%e5%ae%9e%e4%be%8b','','','2013-07-16 00:31:29','2013-07-16 08:31:29','','0','http://www.yanue.net/?p=549','0','post','','0');
INSERT INTO `wp_posts` VALUES('584','1','2013-07-19 09:19:28','2013-07-19 17:19:28','最近更换了博客的代码高亮插件，以前用的是SyntaxHighlighter:\r\n代码格式：\r\n<pre class=\"lang:php decode:true\">&lt;pre class=\"brush: php; gutter: true\"&gt;\r\n//代码区\r\n......\r\n&lt;/pre&gt;</pre>\r\n现在换成了Crayon Syntax Highlighter:\r\n<pre class=\"lang_php decode_true\">&lt;pre class=\"lang_php decode_true\"&gt;\r\n//代码区\r\n......\r\n&lt;/pre&gt;</pre>\r\n代码高亮的区域不一样，又有很多文章需要改，好吧，mysql肯定有替换功能函数，于是找了一下mysql的replace()函数资料:\r\n<h3><span style=\"font-family: monospace;\">replace</span>()函数语法:</h3>\r\n<pre class=\"lang:php decode:true\">update [table_name] set [field_name] = replace([field_name],\'[string_to_find]\',\'[string_to_replace]\');</pre>\r\n实例：\r\n<pre class=\"lang:php decode:true\">mysql&gt; SELECT REPLACE(\'www.yanue.net\', \'www\', \'map\');\r\n+----------------------------------------+\r\n| REPLACE(\'www.yanue.net\', \'www\', \'map\') |\r\n+----------------------------------------+\r\n| map.yanue.net |\r\n+----------------------------------------+\r\n1 row in set (0.00 sec)</pre>\r\n因此一个函数可以replace()函数就十分方便的解决问题了：\r\n<pre class=\"lang:php decode:true\">UPDATE wp_posts \r\nSET post_content = REPLACE(post_content, \'&lt;pre class=\"brush: php; gutter: true\"&gt;\', \'&lt;pre class=\"lang_php decode_true\"&gt;\');</pre>\r\n文章完.','MySQL之替换字符串函数replace()的使用','','publish','open','open','','mysql%e4%b9%8b%e6%9b%bf%e6%8d%a2%e5%ad%97%e7%ac%a6%e4%b8%b2%e5%87%bd%e6%95%b0replace%e7%9a%84%e4%bd%bf%e7%94%a8','','','2013-07-19 09:19:28','2013-07-19 17:19:28','','0','http://www.yanue.net/?p=584','0','post','','0');
INSERT INTO `wp_posts` VALUES('597','1','2013-07-19 20:12:10','2013-07-20 04:12:10','MySQL查看用户权限命令的两方法:\r\n\r\n<strong>一. 使用MySQL grants</strong>\r\n\r\nMySQL grant详细用法见:<a title=\"mysql grant使用详解\" href=\"http://www.yanue.net/archives/598.html\">http://www.yanue.net/archives/598.html</a>\r\n\r\n使用方法:\r\n<pre class=\"lang:php decode:true\">mysql&gt; show grants for username@localhost;</pre>\r\n实例:\r\n<pre class=\"lang:php decode:true\">mysql&gt; show grants for root@localhost;\r\n+---------------------------------------------------------------------+\r\n| Grants for root@localhost                                           |\r\n+---------------------------------------------------------------------+\r\n| GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'localhost\' WITH GRANT OPTION |\r\n+---------------------------------------------------------------------+\r\n1 row in set (0.01 sec)</pre>\r\n<strong> 二. 直接通过mysql select查询语句:</strong>\r\n<pre class=\"lang:php decode:true crayon-selected\">mysql&gt; select * from mysql.user where user=\'test\' and host=\'127.0.0.1\' \\G;\r\n*************************** 1. row ***************************\r\n                  Host: 127.0.0.1\r\n                  User: test\r\n              Password: *EB3C643405D7F53BD4BF7FBA98DCF5641E228833\r\n           Select_priv: N\r\n           Insert_priv: N\r\n           Update_priv: N\r\n           Delete_priv: N\r\n           Create_priv: N\r\n             Drop_priv: N\r\n           Reload_priv: N\r\n         Shutdown_priv: N\r\n          Process_priv: N\r\n             File_priv: N\r\n            Grant_priv: N\r\n       References_priv: N\r\n            Index_priv: N\r\n            Alter_priv: N\r\n          Show_db_priv: N\r\n            Super_priv: N\r\n Create_tmp_table_priv: N\r\n      Lock_tables_priv: N\r\n          Execute_priv: N\r\n       Repl_slave_priv: N\r\n      Repl_client_priv: N\r\n      Create_view_priv: N\r\n        Show_view_priv: N\r\n   Create_routine_priv: N\r\n    Alter_routine_priv: N\r\n      Create_user_priv: N\r\n            Event_priv: N\r\n          Trigger_priv: N\r\nCreate_tablespace_priv: N\r\n              ssl_type: \r\n            ssl_cipher: \r\n           x509_issuer: \r\n          x509_subject: \r\n         max_questions: 0\r\n           max_updates: 0\r\n       max_connections: 0\r\n  max_user_connections: 0\r\n                plugin: mysql_native_password\r\n authentication_string: \r\n      password_expired: N\r\n1 row in set (0.00 sec)</pre>\r\n可以看到Select_priv,Insert_priv,Update_priv...等为N表示没有权限,该用户权限一目了然.\r\n\r\n这时可以使用命令<strong>给用户加权限:</strong>见<a title=\"MYSQL里给用户加权限\" href=\"http://www.yanue.net/archives/603.html\">http://www.yanue.net/archives/603.html</a>\r\n<pre class=\"lang:php decode:true\">grant all privileges on *.* to \'test\'@\'127.0.0.1\' identified by \'passwd\';\r\nflush privileges;</pre>\r\n<strong>另外:show可以看到很多东西:</strong>\r\n<pre class=\"lang:php decode:true\">show databases;\r\nshow tables;\r\nshow create database dbname;  // 这个可以看到创建数据库时用到的一些参数。\r\nshow create table tablename;   // 可以看到创建表时用到的一些参数</pre>','MySQL查看用户权限的两种方法','','publish','open','open','','mysql%e6%9f%a5%e7%9c%8b%e7%94%a8%e6%88%b7%e6%9d%83%e9%99%90%e7%9a%84%e4%b8%a4%e7%a7%8d%e6%96%b9%e6%b3%95','','','2013-07-19 20:20:08','2013-07-20 04:20:08','','0','http://www.yanue.net/?p=597','0','post','','0');
INSERT INTO `wp_posts` VALUES('603','1','2013-09-07 20:45:22','2013-09-08 04:45:22','GRANT语句的语法：\r\n<pre class=\"lang:php decode:true\">mysql&gt; grant 权限1,权限2,…权限n on 数据库名称.表名称 to 用户名@用户地址 identified by “连接口令”;</pre>\r\n看上去像这样：\r\n<pre class=\"lang:php decode:true \">GRANT privileges (columns) ON what TO user IDENTIFIED BY \"password\" WITH GRANT OPTION</pre>\r\n权限1,权限2,…权限n代表select,insert,update,delete,create,drop,index,alter,grant,references,reload,shutdown,process,file等14个权限。\r\n\r\n当权限1,权限2,…权限n被all privileges或者all代替，表示赋予用户全部权限。\r\n当数据库名称.表名称被*.*代替，表示赋予用户操作服务器上所有数据库所有表的权限。\r\n用户地址可以是localhost，也可以是ip地址、机器名字、域名。也可以用’%\'表示从任何地址连接。\r\n‘连接口令’不能为空，否则创建失败。\r\n要使用该语句，你需要填写下列部分：\r\n<strong>privileges </strong>\r\n\r\n授予用户的权限，下表列出可用于GRANT语句的权限指定符：\r\n权限指定符\r\n权限允许的操作\r\nALTER 修改表和索引\r\nCREATE 创建数据库和表\r\nDELETE 删除表中已有的记录\r\nDROP 抛弃（删除）数据库和表\r\nINDEX 创建或抛弃索引\r\nINSERT 向表中插入新行\r\nREFERENCE 未用\r\nSELECT 检索表中的记录\r\nUPDATE 修改现存表记录\r\nFILE 读或写服务器上的文件\r\nPROCESS 查看服务器中执行的线程信息或杀死线程\r\nRELOAD 重载授权表或清空日志、主机缓存或表缓存。\r\nSHUTDOWN 关闭服务器\r\nALL 所有；ALL PRIVILEGES同义词\r\nUSAGE 特殊的“无权限”权限\r\n\r\n上表显示在第一组的权限指定符适用于数据库、表和列，第二组数管理权限。一般，这些被相对严格地授权，因为它们允许用户影响服务器的操作。第三组权限特殊，ALL意味着“所有权限”，UASGE意味着无权限，即创建用户，但不授予权限。\r\n<strong>columns </strong>\r\n\r\n权限运用的列，它是可选的，并且你只能设置列特定的权限。如果命令有多于一个列，应该用逗号分开它们。\r\n<strong>what </strong>\r\n\r\n权限运用的级别。权限可以是全局的（适用于所有数据库和所有表）、特定数据库（适用于一个数据库中的所有表）或特定表的。可以通过指定一个columns字句是权限是列特定的。\r\n<strong>user</strong>\r\n\r\n权限授予的用户，它由一个用户名和主机名组成。在MySQL中，你不仅指定谁能连接，还有从哪里连接。这允许你让两个同名用户从不同地方连接。MySQL让你区分他们，并彼此独立地赋予权限。\r\nMySQL中的一个用户名就是你连接服务器时指定的用户名，该名字不必与你的Unix登录名或Windows名联系起来。缺省地，如果你不明确指定一个名字，客户程序将使用你的登录名作为MySQL用户名。这只是一个约定。你可以在授权表中将该名字改为nobody，然后以nobody连接执行需要超级用户权限的操作。\r\n<strong>password </strong>\r\n\r\n赋予用户的口令，它是可选的。如果你对新用户没有指定IDENTIFIED BY子句，该用户不赋给口令（不安全）。对现有用户，任何你指定的口令将代替老口令。如果你不指定口令，老口令保持不变，当你用IDENTIFIED BY时，口令字符串用改用口令的字面含义，GRANT将为你编码口令，不要象你用SET PASSWORD 那样使用password()函数。\r\nWITH GRANT OPTION子句是可选的。如果你包含它，用户可以授予权限通过GRANT语句授权给其它用户。你可以用该子句给与其它用户授权的能力。\r\n用户名、口令、数据库和表名在授权表记录中是大小写敏感的，主机名和列名不是。\r\n\r\n&nbsp;\r\n\r\n<strong>实例：</strong>\r\n<pre class=\"lang:php decode:true\">mysql&gt;grant select,insert,update,delete,create,drop on vtdc.employee to joe@10.163.225.87 identified by ‘123′;</pre>\r\n给来自10.163.225.87的用户joe分配可对数据库vtdc的employee表进行select,insert,update,delete,create,drop等操作的权限，并设定口令为123。\r\n<pre class=\"lang:php decode:true\">mysql&gt;grant all privileges on vtdc.* to joe@10.163.225.87 identified by ‘123′;</pre>\r\n给来自10.163.225.87的用户joe分配可对数据库vtdc所有表进行所有操作的权限，并设定口令为123。\r\n<pre class=\"lang:php decode:true\">mysql&gt;grant all privileges on *.* to joe@10.163.225.87 identified by ‘123′;</pre>\r\n给来自10.163.225.87的用户joe分配可对所有数据库的所有表进行所有操作的权限，并设定口令为123。\r\n<pre class=\"lang:php decode:true\">mysql&gt;grant all privileges on *.* to joe@localhost identified by ‘123′;</pre>\r\n给本机用户joe分配可对所有数据库的所有表进行所有操作的权限，并设定口令为123。','MYSQL用户权限管理GRANT使用','','publish','open','open','','mysql%e7%94%a8%e6%88%b7%e6%9d%83%e9%99%90%e7%ae%a1%e7%90%86grant%e4%bd%bf%e7%94%a8','','','2013-09-07 20:47:57','2013-09-08 04:47:57','','0','http://www.yanue.net/?p=603','0','post','','0');
INSERT INTO `wp_posts` VALUES('620','1','2013-07-20 08:15:58','2013-07-20 16:15:58','创建 WordPress 主题其实不难，只要你从现在开始认真学习这个教程，从零一步一步开始，你就会成为一个 WordPress 主题制作高手，至少你会修改现有主题。\r\n\r\nWordPress 主题教程：从零开始制作 WordPress 主题（作者：我爱水煮鱼）\r\n\r\n<a style=\"font-size: 1.5em;\" href=\"http://blog.wpjam.com/series/wordpress-theme-tutorials/\">WordPress 主题教程</a>\r\n<ul>\r\n	<li><a title=\"WordPress 主题教程：从零开始制作 WordPress 主题\" href=\"http://blog.wpjam.com/2007/06/04/so-you-want-to-create-wordpress-themes-huh/\">WordPress 主题教程：从零开始制作 WordPress 主题</a></li>\r\n	<li><a title=\"WordPress 主题教程 #1：介绍\" href=\"http://blog.wpjam.com/2007/06/04/wp-theme-lesson-1-intro/\">WordPress 主题教程 #1：介绍</a></li>\r\n	<li><a title=\"WordPress 主题教程 #2：模板文件和模板\" href=\"http://blog.wpjam.com/2007/06/04/wp-theme-lesson-2-template-files-and-templates/\">WordPress 主题教程 #2：模板文件和模板</a></li>\r\n	<li><a title=\"WordPress 主题教程 #3：开始 Index.php\" href=\"http://blog.wpjam.com/2007/06/04/wp-theme-lesson-3-starting-indexphp/\">WordPress 主题教程 #3：开始 Index.php</a></li>\r\n	<li><a title=\"WordPress 主题教程 #4a：Header 模板\" href=\"http://blog.wpjam.com/2007/06/04/wp-theme-lesson-4-header-template/\">WordPress 主题教程 #4a：Header 模板</a></li>\r\n	<li><a title=\"WordPress 主题教程 #4b：Header 模板 2\" href=\"http://blog.wpjam.com/2007/06/05/wp-theme-lesson-4b-header-template-continues/\">WordPress 主题教程 #4b：Header 模板 2</a></li>\r\n	<li><a title=\"WordPress 主题教程 #5：主循环\" href=\"http://blog.wpjam.com/2007/06/05/wp-theme-lesson-5-the-loop/\">WordPress 主题教程 #5：主循环</a></li>\r\n	<li><a title=\"WordPress 主题教程 #5b：日志内容\" href=\"http://blog.wpjam.com/2007/06/06/wp-theme-lesson-5b-the-content/\">WordPress 主题教程 #5b：日志内容</a></li>\r\n	<li><a title=\"WordPress 主题教程 #5c：日志元数据\" href=\"http://blog.wpjam.com/2007/06/07/wp-theme-lesson-5c-postmetadata/\">WordPress 主题教程 #5c：日志元数据</a></li>\r\n	<li><a title=\"WordPress 主题教程 #5d：Else，日志 ID，链接标题\" href=\"http://blog.wpjam.com/2007/06/08/wp-theme-lesson-5d-else-post-id-link-title/\">WordPress 主题教程 #5d：Else，日志 ID，链接标题</a></li>\r\n	<li><a title=\"WordPress 主题教程 #5e：日志导航链接\" href=\"http://blog.wpjam.com/2007/06/09/wp-theme-lesson-5e-posts-nav-link/\">WordPress 主题教程 #5e：日志导航链接</a></li>\r\n	<li><a title=\"WordPress 主题教程 #6：侧边栏\" href=\"http://blog.wpjam.com/2007/06/10/wp-theme-lesson-6-sidebar/\">WordPress 主题教程 #6：侧边栏</a></li>\r\n	<li><a title=\"WordPress 主题教程 #6b：页面链接列表\" href=\"http://blog.wpjam.com/2007/06/11/wp-theme-lesson-6b-page-link-listing/\">WordPress 主题教程 #6b：页面链接列表</a></li>\r\n	<li><a title=\"WordPress 主题教程 #6c：存档和链接列表\" href=\"http://blog.wpjam.com/2007/06/12/wp-theme-lesson-6c-get-archives-and-links/\">WordPress 主题教程 #6c：存档和链接列表</a></li>\r\n	<li><a title=\"WordPress 主题教程 #6d：搜索框和日历\" href=\"http://blog.wpjam.com/2007/06/13/wp-theme-lesson-6d-search-form-and-calendar/\">WordPress 主题教程 #6d：搜索框和日历</a></li>\r\n	<li><a title=\"WordPress 主题教程 #6e：窗体化侧边栏\" href=\"http://blog.wpjam.com/2007/06/13/wp-theme-lesson-6e-widgetizing-sidebar/\">WordPress 主题教程 #6e：窗体化侧边栏</a></li>\r\n	<li><a title=\"WordPress 主题教程 #7：尾部\" href=\"http://blog.wpjam.com/2007/06/13/wp-theme-lesson-7-footer/\">WordPress 主题教程 #7：尾部</a></li>\r\n	<li><a title=\"WordPress 主题教程 #8：验证 XHTML\" href=\"http://blog.wpjam.com/2007/06/13/wp-theme-lesson-8-how-to-validate/\">WordPress 主题教程 #8：验证 XHTML</a></li>\r\n	<li><a title=\"WordPress 主题教程 #9：Style.css 和 CSS 介绍\" href=\"http://blog.wpjam.com/2007/06/16/wp-theme-lesson-9-stylecss-and-css-intro/\">WordPress 主题教程 #9：Style.css 和 CSS 介绍</a></li>\r\n	<li><a title=\"WordPress 主题教程 #10：十六进制颜色代码和样式化链接\" href=\"http://blog.wpjam.com/2007/06/17/wp-theme-lesson-10-hex-codes-and-styling-links/\">WordPress 主题教程 #10：十六进制颜色代码和样式化链接</a></li>\r\n	<li><a title=\"WordPress 主题教程 #11：宽度和布局\" href=\"http://blog.wpjam.com/2007/06/21/wp-theme-lesson-11-widths-and-floats/\">WordPress 主题教程 #11：宽度和布局</a></li>\r\n	<li><a title=\"WordPress 主题教程 #12：日志样式化和其他杂项\" href=\"http://blog.wpjam.com/2007/06/29/wp-theme-lesson-12-post-formatting-and-miscellaneous/\">WordPress 主题教程 #12：日志样式化和其他杂项</a></li>\r\n	<li><a title=\"WordPress 主题教程 #13：样式化侧边栏\" href=\"http://blog.wpjam.com/2007/07/07/wp-theme-lesson-13-styling-sidebar/\">WordPress 主题教程 #13：样式化侧边栏</a></li>\r\n	<li><a title=\"WordPress 主题教程 #14：底部和拆分 Index\" href=\"http://blog.wpjam.com/2007/07/09/wp-theme-lesson-14-footer-and-dividing-index/\">WordPress 主题教程 #14：底部和拆分 Index</a></li>\r\n	<li><a title=\"WordPress 主题教程 #15：子模板文件\" href=\"http://blog.wpjam.com/2007/07/11/wp-theme-lesson-15-sub-template-files/\">WordPress 主题教程 #15：子模板文件</a></li>\r\n	<li><a title=\"WordPress 主题教程 #16：留言模板\" href=\"http://blog.wpjam.com/2007/07/13/wp-theme-lesson-16-comments-template/\">WordPress 主题教程 #16：留言模板</a></li>\r\n	<li><a title=\"erdaoo 的 WP Theme 教程学习笔记\" href=\"http://blog.wpjam.com/2007/07/20/wp-theme-tutorial-learning-notes-by-erdaoo/\">erdaoo 的 WP Theme 教程学习笔记</a></li>\r\n	<li><a title=\"WordPress 主题教程电子书下载\" href=\"http://blog.wpjam.com/article/wordpress-theme-tutorials-ebook/\">WordPress 主题教程电子书下载</a></li>\r\n</ul>','WordPress主题制作完整教程','','publish','open','open','','wordpress%e4%b8%bb%e9%a2%98%e5%88%b6%e4%bd%9c%e5%ae%8c%e6%95%b4%e6%95%99%e7%a8%8b','','','2013-07-21 21:41:30','2013-07-22 05:41:30','','0','http://www.yanue.net/?p=620','0','post','','0');
INSERT INTO `wp_posts` VALUES('636','1','2013-07-21 21:00:33','2013-07-22 05:00:33','PHP性能优化过程中避免不了需要获取PHP内存消耗，使用memory_get_usage()函数可获取当前的内存消耗情况，函数使用简单，下面以示例的形式介绍下使用 memory_get_usage() 函数获取当前PHP内存消耗量的用法。\r\n\r\n一，函数原型\r\n\r\nint memory_get_usage ([ bool $real_usage=false ] )\r\n\r\n二，版本兼容\r\n\r\nPHP 4 &gt;= 4.3.2,PHP 5\r\n\r\n三，基础用法与实例\r\n\r\n1，获取当前的内存消耗量\r\n<pre class=\"lang:php decode:true\">&lt;?php\r\necho memory_get_usage();\r\n$var=str_repeat(\"www.yanue.net\",10000);\r\necho \' \'.memory_get_usage();\r\nunset($var);\r\necho \' \'.memory_get_usage();\r\n?&gt;</pre>\r\n结果输出：315144 445232 315144\r\n\r\n说明：memory_get_usage() 函数输出的数值为 bytes 单位\r\n\r\n2，格式化 memory_get_usage() 结果以 KB 为单位输出\r\n<pre class=\"lang:php decode:true\">function convertSize($size){\r\n        $unit=array(\'byte\',\'kb\',\'mb\',\'gb\',\'tb\',\'pb\');\r\n        return round($size/pow(1024,($i=floor(log($size,1024)))),2).\' \'.$unit[$i];\r\n}</pre>\r\n3，自定义函数获取数组或变量值大小\r\n<pre class=\"lang:php decode:true\">&lt;?php\r\nfunction array_size($arr){\r\n    ob_start();\r\n    print_r($arr);\r\n    $mem=ob_get_contents();\r\n    ob_end_clean();\r\n    $mem=preg_replace(\"/n +/\",\"\",$mem);\r\n    $mem=strlen($mem);\r\n    return $mem;\r\n}\r\n$memEstimate=array_size($GLOBALS);\r\n?&gt;</pre>\r\n可以看出，要想减少内存的占用，可以使用 PHP unset() 函数把不再需要使用的变量删除。类似的还有：PHP mysql_free_result() 函数，可以清空不再需要的查询数据库得到的结果集，这样也能得到更多可用内存。\r\n\r\nPHP memory_get_usage()还可以有个参数，$real_usage，其值为布尔值。默认为 FALSE，表示得到的内存使用量不包括该函数（PHP 内存管理器）占用的内存；当设置为 TRUE 时，得到的内存为包括该函数（PHP 内存管理器）占用的内存。\r\n\r\n所以在实际编程中，可以用PHP memory_get_usage()比较各个方法占用内存的高低，来选择使用哪种占用内存小的方法。\r\n\r\n<strong>另外:</strong>\r\n\r\n比较有用的php内存函数:memory_get_peak_usage() 可以获取php运行过程由PHP分配的内存高峰.\r\n\r\n查看手册: <a href=\" http://php.net/manual/en/function.memory-get-usage.php\">http://php.net/manual/en/function.memory-get-usage.php</a>','PHP获取当前内存memory_get_usage函数','','publish','open','open','','php%e8%8e%b7%e5%8f%96%e5%bd%93%e5%89%8d%e5%86%85%e5%ad%98memory_get_usage%e5%87%bd%e6%95%b0','','','2013-07-21 21:00:33','2013-07-22 05:00:33','','0','http://www.yanue.net/?p=636','0','post','','0');
INSERT INTO `wp_posts` VALUES('666','1','2013-07-22 20:48:29','2013-07-23 04:48:29','项目开发过程中经常需要用到当前页面完整url和baseUrl等进行url跳转操作.\r\n\r\n前面已经讲过:<a title=\"php获取网站基础路径baseUrl的两种方法\" href=\"http://www.yanue.net/archives/434.html\">php获取网站基础路径baseUrl的两种方法</a>.\r\n\r\n下面说明一下获取当前页面完整路径的方法:\r\n<pre class=\"lang:php decode:true crayon-selected\">&lt;?php\r\nfunction getFullUrl(){\r\n    # 解决通用问题\r\n    $requestUri = \'\';\r\n    if (isset($_SERVER[\'REQUEST_URI\'])) { #$_SERVER[\"REQUEST_URI\"] 只有 apache 才支持,\r\n        $requestUri = $_SERVER[\'REQUEST_URI\'];\r\n    } else {\r\n        if (isset($_SERVER[\'argv\'])) {\r\n            $requestUri = $_SERVER[\'PHP_SELF\'] .\'?\'. $_SERVER[\'argv\'][0];\r\n        } else if(isset($_SERVER[\'QUERY_STRING\'])) {\r\n            $requestUri = $_SERVER[\'PHP_SELF\'] .\'?\'. $_SERVER[\'QUERY_STRING\'];\r\n        }\r\n    }\r\n//    echo $requestUri.\'&lt;br /&gt;\';\r\n    $scheme = empty($_SERVER[\"HTTPS\"]) ? \'\' : ($_SERVER[\"HTTPS\"] == \"on\") ? \"s\" : \"\";\r\n    $protocol = strstr(strtolower($_SERVER[\"SERVER_PROTOCOL\"]), \"/\",true) . $scheme;\r\n    $port = ($_SERVER[\"SERVER_PORT\"] == \"80\") ? \"\" : (\":\".$_SERVER[\"SERVER_PORT\"]);\r\n    # 获取的完整url\r\n    $_fullUrl = $protocol . \"://\" . $_SERVER[\'SERVER_NAME\'] . $port . $requestUri;\r\n    return $_fullUrl;\r\n}\r\n\r\necho getFullUrl();</pre>\r\n注: 由于php没有内置的函数.我们需要对url上的参数进行组合,从而实现整个url.','php获取当前页面完整url','','publish','open','open','','php%e8%8e%b7%e5%8f%96%e5%bd%93%e5%89%8d%e9%a1%b5%e9%9d%a2%e5%ae%8c%e6%95%b4url','','\nhttp://www.yanue.net/archives/434.html','2013-07-22 20:48:29','2013-07-23 04:48:29','','0','http://www.yanue.net/?p=666','0','post','','0');
INSERT INTO `wp_posts` VALUES('676','1','2013-07-22 20:59:01','2013-07-23 04:59:01','<strong>功能:</strong>对数组进行重新排序.\r\n\r\n<strong>说明:</strong>冒泡排序 (一维数组)(二维数组某个健排序)\r\n\r\n两两比较待排序数据元素的大小,发现两个数据元素的次序相反时即进行交换,直到没有反序的数据元素为止\r\n\r\n设想被排序的数组R[1..N] 垂直竖立,将每个数据元素看作有重量的气泡,从下往上扫描数组,凡扫描违反原则的轻气泡,就使其向上\"漂浮\".如此反复进行.直到最后任何两个气都是轻者在上,重者在下为止.\r\n<pre class=\"lang:php decode:true\">/**\r\n     * 冒泡排序 (一维数组)(二维数组某个健排序)\r\n     * 两两比较待排序数据元素的大小,发现两个数据元素的次序相反时即进行交换,直到没有反序的数据元素为止\r\n     * 设想被排序的数组R[1..N] 垂直竖立,将每个数据元素看作有重量的气泡,从下往上扫描数组,凡扫描违反原则的轻气泡,就使其向上\"漂浮\".如此反复进行.\r\n     * 直到最后任何两个气都是轻者在上,重者在下为止.\r\n     */\r\n\r\nfunction bubble_sort($array,$key=null) {\r\n        $count = count($array);\r\n        if($count &lt; 0) {\r\n            return false;\r\n        }\r\n        for($i = 0; $i &lt; $count; $i++) {\r\n            for($j = $count - 1; $j &gt; $i; $j--) {\r\n                if($key &amp;&amp; isset($array[$key])){//二维数组健存在\r\n                    if($array[$j][$key] &lt; $array[$j - 1][$key]) {\r\n                        $tmp = $array[$j];\r\n                        $array[$j] = $array[$j - 1];\r\n                        $array[$j - 1] = $tmp;\r\n                    }\r\n                }else{ //一维数组\r\n                    if($array[$j] &lt; $array[$j - 1]) {\r\n                        $tmp = $array[$j];\r\n                        $array[$j] = $array[$j - 1];\r\n                        $array[$j - 1] = $tmp;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return $array;\r\n    }</pre>\r\n&nbsp;','php一维二维数组键之冒泡排序','','publish','open','open','','php%e4%b8%80%e7%bb%b4%e4%ba%8c%e7%bb%b4%e6%95%b0%e7%bb%84%e9%94%ae%e4%b9%8b%e5%86%92%e6%b3%a1%e6%8e%92%e5%ba%8f','','','2013-07-22 20:59:01','2013-07-23 04:59:01','','0','http://www.yanue.net/?p=676','0','post','','1');
INSERT INTO `wp_posts` VALUES('685','1','2013-07-23 20:55:23','2013-07-24 04:55:23','我们统计流量的时候需要可以获取用户ip,根据用户ip之后可以通过纯ip真数据库QQWry.dat,获取出用户IP 所在的地理位置,这样可以做出更有意义的统计信息. QQWry.dat请自行搜索下载.\r\n\r\n下面看下如何解析QQWry.dat文件:\r\n\r\n首先看看<strong>QQWry.Data文件的内容结构</strong> ，以及<strong>解读方式</strong> 。\r\n\r\n一、<strong>文件结构</strong>\r\n文件主要分三个结构\r\n1、文件头，8个字节；\r\n2、数据记录区，不定长度；\r\n3、索引区，长度为 7 的整数倍；\r\n\r\n二、<strong>文件头</strong>\r\n文件头的8个字节分两部分，每个部分4个字节，分别指定了索引区的开始地址和结束地址。所以可以通过两个地址的差值 除 7 后 加 1 可以计算出总的记录数。\r\n\r\n二、<strong>记录区</strong>\r\n记录区的数据需要通过索引区的数据来获得各个数据的起始位置；本区数据记录了IP地址的结束地址和地区字符串；所有地区字符串都以 0×00 为结束。\r\n\r\n三、<strong>索引区</strong>\r\n检索IP对应的地区，关键就是找到IP起始地址对应的索引内容。一个IP索引数据包含7个字节，前4个字节是IP地址起始值，后3个字节是对应的IP数据 记录在文件内的偏移地址；IP数据记录中，前 4 个字节是IP结束地址；紧跟的数据有两种模式: 0×01 模式 和 0×02 模式。\r\n\r\n0×01模式，即在IP数据的第5个字节是 0×01，则在后面的 3 个字节是国家地区数据的偏移地址；国家地区数据包括国家和地区这两个字符串。即\r\n—————————————————————\r\n4字节 | 3字节 重定向 0x NN NN NN -&gt; 国家地区数据的文件偏移地址\r\n—————————————————————\r\n\r\n0×02模式，即在IP数据的第5个字节是 0×02，则在后面的 3 个字节是国家数据的偏移地址，地区数据是再往后的字符串，以 0×00 截至。即\r\n—————————————————————————–\r\n4字节 | 3字节 重定向 0x NN NN NN -&gt; 国家数据的文件偏移地址 | 地区字符串 | 0×00\r\n—————————————————————————–\r\n\r\n对于 0×01 模式所得到的 国家地区数据中，它可能又带有一个重定向结构，即\r\n————————————–\r\n国家字符串 | 0×00 | 地区字符串 | 0×00\r\n————————————–\r\n或\r\n————————————————————————-\r\n国家字符串 | 0×00 | 0×02 | 3字节 0x NN NN NN -&gt; 地区字符串的文件偏移地址\r\n————————————————————————-\r\n\r\n对于前一种情况，比较简单，直接读出两个字符串数据就可以了；对于后一种情况，需要再次重定向到地区字符串的偏移地址，然后读取到 0×00 为字符串结尾。\r\n\r\n对于这种采取地址映射实际字符串值的方式，主要作用是避免重复记录字符串值。在整个IP地址库文件中，有太多相同字符串记录了，采用 3 字节的映射地址要比重复记录字符串值节省太多空间了。\r\n<pre class=\"lang:php decode:true\">&lt;?php\r\n\r\n/**\r\n * IP 地理位置查询类\r\n *\r\n * @author 马秉尧\r\n * @version 1.5\r\n * @copyright 2005 CoolCode.CN\r\n */\r\nclass IpLocation {\r\n    /**\r\n     * QQWry.Dat文件指针\r\n     * @var resource\r\n     */\r\n    var $fp;\r\n    /**\r\n     * 第一条IP记录的偏移地址\r\n     * @var int\r\n     */\r\n    var $firstip;\r\n    /**\r\n     * 最后一条IP记录的偏移地址\r\n     * @var int\r\n     */\r\n    var $lastip;\r\n    /**\r\n     * IP记录的总条数（不包含版本信息记录）\r\n     * @var int\r\n     */\r\n    var $totalip;\r\n    /**\r\n     * 构造函数，打开 QQWry.Dat 文件并初始化类中的信息\r\n     * @param string $filename\r\n     * @return IpLocation\r\n     */\r\n    function __construct($filename = \"qqwry.dat\") {\r\n        $this-&gt;fp = 0;\r\n        if (($this-&gt;fp = @fopen($filename, \'rb\')) !== false) {\r\n            $this-&gt;firstip = $this-&gt;getlong();\r\n            $this-&gt;lastip = $this-&gt;getlong();\r\n            $this-&gt;totalip = ($this-&gt;lastip - $this-&gt;firstip) / 7;\r\n//注册析构函数，使其在程序执行结束时执行\r\n            register_shutdown_function(array(&amp;$this, \'__construct\'));\r\n        }\r\n    }\r\n    /**\r\n     * 返回读取的长整型数\r\n     * @access private\r\n     * @return int\r\n     */\r\n    function getlong() {\r\n//将读取的little-endian编码的4个字节转化为长整型数\r\n        $result = unpack(\'Vlong\', fread($this-&gt;fp, 4));\r\n        return $result[\'long\'];\r\n    }\r\n    /**\r\n     * 返回读取的3个字节的长整型数\r\n     *\r\n     * @access private\r\n     * @return int\r\n     */\r\n    function getlong3() {\r\n//将读取的little-endian编码的3个字节转化为长整型数\r\n        $result = unpack(\'Vlong\', fread($this-&gt;fp, 3).chr(0));\r\n        return $result[\'long\'];\r\n    }\r\n    /**\r\n     * 返回压缩后可进行比较的IP地址\r\n     *\r\n     * @access private\r\n     * @param string $ip\r\n     * @return string\r\n     */\r\n    function packip($ip) {\r\n// 将IP地址转化为长整型数，如果在PHP5中，IP地址错误，则返回False，\r\n// 这时intval将Flase转化为整数-1，之后压缩成big-endian编码的字符串\r\n        return pack(\'N\', intval(ip2long($ip)));\r\n    }\r\n    /**\r\n     * 返回读取的字符串\r\n     *\r\n     * @access private\r\n     * @param string $data\r\n     * @return string\r\n     */\r\n    function getstring($data = \"\") {\r\n        $char = fread($this-&gt;fp, 1);\r\n        while (ord($char) &gt; 0) { // 字符串按照C格式保存，以结束\r\n            $data .= $char; // 将读取的字符连接到给定字符串之后\r\n            $char = fread($this-&gt;fp, 1);\r\n        }\r\n        return $data;\r\n    }\r\n    /**\r\n     * 返回地区信息\r\n     *\r\n     * @access private\r\n     * @return string\r\n     */\r\n    function getarea() {\r\n        $byte = fread($this-&gt;fp, 1); // 标志字节\r\n        switch (ord($byte)) {\r\n            case 0: // 没有区域信息\r\n                $area = \"\";\r\n                break;\r\n            case 1:\r\n            case 2: // 标志字节为1或2，表示区域信息被重定向\r\n                fseek($this-&gt;fp, $this-&gt;getlong3());\r\n                $area = $this-&gt;getstring();\r\n                break;\r\n            default: // 否则，表示区域信息没有被重定向\r\n                $area = $this-&gt;getstring($byte);\r\n                break;\r\n        }\r\n        return $area;\r\n    }\r\n    /**\r\n     * 根据所给 IP 地址或域名返回所在地区信息\r\n     * @access public\r\n     * @param string $ip\r\n     * @return array\r\n     */\r\n    function getlocation($ip) {\r\n        if (!$this-&gt;fp) return null; // 如果数据文件没有被正确打开，则直接返回空\r\n        $location[\'ip\'] = gethostbyname($ip); // 将输入的域名转化为IP地址\r\n        $ip = $this-&gt;packip($location[\'ip\']); // 将输入的IP地址转化为可比较的IP地址\r\n// 不合法的IP地址会被转化为255.255.255.255\r\n// 对分搜索\r\n        $l = 0; // 搜索的下边界\r\n        $u = $this-&gt;totalip; // 搜索的上边界\r\n        $findip = $this-&gt;lastip; // 如果没有找到就返回最后一条IP记录（QQWry.Dat的版本信息）\r\n        while ($l &lt;= $u) { // 当上边界小于下边界时，查找失败\r\n            $i = floor(($l + $u) / 2); // 计算近似中间记录\r\n            fseek($this-&gt;fp, $this-&gt;firstip + $i * 7);\r\n            $beginip = strrev(fread($this-&gt;fp, 4)); // 获取中间记录的开始IP地址\r\n// strrev函数在这里的作用是将little-endian的压缩IP地址转化为big-endian的格式\r\n// 以便用于比较，后面相同。\r\n            if ($ip &lt; $beginip) { // 用户的IP小于中间记录的开始IP地址时\r\n                $u = $i - 1; // 将搜索的上边界修改为中间记录减一\r\n            }\r\n            else {\r\n                fseek($this-&gt;fp, $this-&gt;getlong3());\r\n                $endip = strrev(fread($this-&gt;fp, 4)); // 获取中间记录的结束IP地址\r\n                if ($ip &gt; $endip) { // 用户的IP大于中间记录的结束IP地址时\r\n                    $l = $i + 1; // 将搜索的下边界修改为中间记录加一\r\n                }\r\n                else { // 用户的IP在中间记录的IP范围内时\r\n                    $findip = $this-&gt;firstip + $i * 7;\r\n                    break; // 则表示找到结果，退出循环\r\n                }\r\n            }\r\n        }\r\n//获取查找到的IP地理位置信息\r\n        fseek($this-&gt;fp, $findip);\r\n        $location[\'beginip\'] = long2ip($this-&gt;getlong()); // 用户IP所在范围的开始地址\r\n        $offset = $this-&gt;getlong3();\r\n        fseek($this-&gt;fp, $offset);\r\n        $location[\'endip\'] = long2ip($this-&gt;getlong()); // 用户IP所在范围的结束地址\r\n        $byte = fread($this-&gt;fp, 1); // 标志字节\r\n        switch (ord($byte)) {\r\n            case 1: // 标志字节为1，表示国家和区域信息都被同时重定向\r\n                $countryOffset = $this-&gt;getlong3(); // 重定向地址\r\n                fseek($this-&gt;fp, $countryOffset);\r\n                $byte = fread($this-&gt;fp, 1); // 标志字节\r\n                switch (ord($byte)) {\r\n                    case 2: // 标志字节为2，表示国家信息又被重定向\r\n                        fseek($this-&gt;fp, $this-&gt;getlong3());\r\n                        $location[\'country\'] = $this-&gt;getstring();\r\n                        fseek($this-&gt;fp, $countryOffset + 4);\r\n                        $location[\'area\'] = $this-&gt;getarea();\r\n                        break;\r\n                    default: // 否则，表示国家信息没有被重定向\r\n                        $location[\'country\'] = $this-&gt;getstring($byte);\r\n                        $location[\'area\'] = $this-&gt;getarea();\r\n                        break;\r\n                }\r\n                break;\r\n            case 2: // 标志字节为2，表示国家信息被重定向\r\n                fseek($this-&gt;fp, $this-&gt;getlong3());\r\n                $location[\'country\'] = $this-&gt;getstring();\r\n                fseek($this-&gt;fp, $offset + 8);\r\n                $location[\'area\'] = $this-&gt;getarea();\r\n                break;\r\n            default: // 否则，表示国家信息没有被重定向\r\n                $location[\'country\'] = $this-&gt;getstring($byte);\r\n                $location[\'area\'] = $this-&gt;getarea();\r\n                break;\r\n        }\r\n        if ($location[\'country\'] == \" CZ88.NET\") { // CZ88.NET表示没有有效信息\r\n            $location[\'country\'] = \"未知\";\r\n        }\r\n        if ($location[\'area\'] == \" CZ88.NET\") {\r\n            $location[\'area\'] = \"\";\r\n        }\r\n        return $location;\r\n    }\r\n    /**\r\n     * 析构函数，用于在页面执行结束后自动关闭打开的文件。\r\n     *\r\n     */\r\n    function __desctruct() {\r\n        if ($this-&gt;fp) {\r\n            fclose($this-&gt;fp);\r\n        }\r\n        $this-&gt;fp = 0;\r\n    }\r\n}</pre>\r\n根据这个类,就可以完成我自己的需要了.\r\n\r\n&nbsp;\r\n\r\n&nbsp;','php读取操作IP地址数据库文件QQWry.dat','','publish','open','open','','php%e8%af%bb%e5%8f%96%e6%93%8d%e4%bd%9cip%e5%9c%b0%e5%9d%80%e6%95%b0%e6%8d%ae%e5%ba%93%e6%96%87%e4%bb%b6qqwry-dat','','','2013-07-23 20:56:28','2013-07-24 04:56:28','','0','http://www.yanue.net/?p=685','0','post','','0');
INSERT INTO `wp_posts` VALUES('690','1','2013-07-23 21:04:31','2013-07-24 05:04:31','【<strong>转换原理</strong>】：假设IP为：w.x.y.z，则IP地址转为整型数字的计算公式为：<strong>intIP = 256*256*256*w + 256*256*x + 256*y + z</strong>\r\n<div><strong>【PHP的互转】</strong>：PHP的转换方式比较简单，它内置了两个函数</div>\r\n<div>\r\n<pre class=\"lang:php decode:true\">int ip2long ( string $ip_address ) //ip转换成整型数值\r\nstring long2ip ( string $proper_address ) // 整型数值转换成ip</pre>\r\n</div>\r\n<div><strong>【MySQL的互转】</strong>：相对于MsSQL来说MySQL的转换方式比较简单，它和PHP一样也内置了两个函数&nbsp;\r\n<div>\r\n<div>IP 转为整型:&nbsp;\r\n<pre class=\"lang:php decode:true\"> select INET_ATON (IP地址)</pre>\r\n整型数值转换成IP\r\n<pre>select INET_NTOA ( IP的整型数值 )</pre>\r\n</div>\r\n</div>\r\n</div>','IP地址转换为整型数字的PHP方法,mysql方法','','publish','open','open','','ip%e5%9c%b0%e5%9d%80%e8%bd%ac%e6%8d%a2%e4%b8%ba%e6%95%b4%e5%9e%8b%e6%95%b0%e5%ad%97%e7%9a%84php%e6%96%b9%e6%b3%95mysql%e6%96%b9%e6%b3%95','','','2013-07-23 21:04:51','2013-07-24 05:04:51','','0','http://www.yanue.net/?p=690','0','post','','0');
INSERT INTO `wp_posts` VALUES('697','1','2013-07-24 07:14:06','2013-07-24 15:14:06','作为下一代Web技术的代表，HTML5概念在近些年尤其火热。据了解，HTML5受到垂青最直接的原因就是其跨平台性，除此之外，它不仅仅可以用于表示Web内容，还可能将Web带入一个广阔的生态平台。\r\n\r\n下面介绍html5中新增标签:\r\n\r\n&lt;<strong>article</strong>&gt; 标记定义一篇文章\r\n&lt;<strong>aside</strong>&gt; 标记定义页面内容部分的侧边栏\r\n&lt;<strong>audio</strong>&gt; 标记定义音频内容\r\n&lt;<strong>canvas</strong>&gt; 标记定义图片\r\n&lt;<strong>command</strong>&gt; 标记定义一个命令按钮\r\n&lt;<strong>datalist</strong>&gt; 标记定义一个下拉列表\r\n&lt;<strong>details</strong>&gt; 标记定义一个元素的详细内容\r\n&lt;<strong>dialog</strong>&gt; 标记定义一个对话框(会话框)\r\n&lt;<strong>embed</strong>&gt; 标记定义外部的可交互的内容或插件\r\n&lt;<strong>figure</strong>&gt; 标记定义一组媒体内容以及它们的标题&lt;footer&gt; 标记定义一个页面或一个区域的底部\r\n&lt;<strong>header</strong>&gt; 标记定义一个页面或一个区域的头部\r\n&lt;<strong>hgroup</strong>&gt; 标记定义文件中一个区块的相关信息\r\n&lt;<strong>keygen</strong>&gt; 标记定义表单里一个生成的键值\r\n&lt;<strong>mark</strong>&gt; 标记定义有标记的文本\r\n&lt;<strong>meter</strong>&gt; 标记定义 measurement within a predefined range\r\n&lt;<strong>nav</strong>&gt; 标记定义导航链接\r\n&lt;<strong>output</strong>&gt; 标记定义一些输出类型\r\n&lt;<strong>progress</strong>&gt; 标记定义任务的过程\r\n&lt;<strong>rp</strong>&gt; 标记是用在Ruby annotations 告诉那些不支持 Ruby元素的浏览器如何去显示\r\n&lt;<strong>rt</strong>&gt; 标记定义对ruby annotations的解释\r\n&lt;<strong>ruby</strong>&gt; 标记定义 ruby annotations.\r\n&lt;<strong>section</strong>&gt; 标记定义一个区域\r\n&lt;<strong>source</strong>&gt; 标记定义媒体资源\r\n&lt;<strong>time</strong>&gt; 标记定义一个日期/时间\r\n&lt;<strong>video</strong>&gt; 标记定义一个视频\r\n\r\nhtml5中废弃标签及属性见：<a title=\"HTML5废弃的标签及属性\" href=\"http://www.yanue.net/archives/700.html\">HTML5废弃的标签及属性</a>\r\n\r\n另附上直观的：<a title=\"html5元素周期表\" href=\"http://demo.yanue.net/HTML5element/\" target=\"_blank\">html5元素周期表</a>\r\n\r\n&nbsp;','HTML5新增标签及简介(全)','','publish','open','open','','html5%e6%96%b0%e5%a2%9e%e6%a0%87%e7%ad%be%e5%8f%8a%e7%ae%80%e4%bb%8b%e5%85%a8','','\nhttp://www.yanue.net/archives/700.html','2013-07-24 07:28:01','2013-07-24 15:28:01','','0','http://www.yanue.net/?p=697','0','post','','0');
INSERT INTO `wp_posts` VALUES('700','1','2013-07-24 07:24:34','2013-07-24 15:24:34','HTML5在引入新标签（见：<a title=\"HTML5新增标签及简介(全)\" href=\"http://www.yanue.net/archives/697.html\">HTML5新增标签及简介(全)</a>）的同时，废弃了不少常见元素，大抵分为如下几类。\r\n<h2>第一类：表现性元素</h2>\r\n<ul>\r\n	<li>basefont</li>\r\n	<li>big</li>\r\n	<li>center</li>\r\n	<li>font</li>\r\n	<li>s</li>\r\n	<li>strike</li>\r\n	<li>tt</li>\r\n	<li>u</li>\r\n</ul>\r\n建议用语义正确的元素代替他们，并使用CSS来确保渲染后的效果\r\n<h2>第二类：框架类元素</h2>\r\n因框架有很多可用性及可访问性问题，HTML5规范将以下元素移除。\r\n<ul>\r\n	<li>frame</li>\r\n	<li>frameset</li>\r\n	<li>noframes</li>\r\n</ul>\r\n但html5支持iframe。\r\n<h2>第三类:属性类</h2>\r\n很多表现性的属性也被新规范移除，如下：\r\n<ul>\r\n	<li>align</li>\r\n	<li>body标签上的link、vlink、alink、text属性</li>\r\n	<li>bgcolor</li>\r\n	<li>height和width</li>\r\n	<li>iframe元素上的scrolling属性</li>\r\n	<li>valign</li>\r\n	<li>hspace和vspace</li>\r\n	<li>table标签上的cellpadding、cellspacing和border属性</li>\r\n	<li>header标签上的profile属性</li>\r\n	<li>链接标签a上的target属性</li>\r\n	<li>img和iframe元素的longdesc属性</li>\r\n</ul>\r\n<h2>第四类：其他</h2>\r\n<ul>\r\n	<li>abbr取代acronym（用于表示缩写）</li>\r\n	<li>object取代了applet</li>\r\n	<li>ul取代了dir</li>\r\n</ul>\r\n另附上直观的：<a title=\"html5元素周期表\" href=\"http://demo.yanue.net/HTML5element/\" target=\"_blank\">html5元素周期表</a>','HTML5废弃的标签及属性','','publish','open','open','','html5%e5%ba%9f%e5%bc%83%e7%9a%84%e6%a0%87%e7%ad%be','','\nhttp://www.yanue.net/archives/697.html','2013-07-24 07:26:08','2013-07-24 15:26:08','','0','http://www.yanue.net/?p=700','0','post','','0');
INSERT INTO `wp_posts` VALUES('717','1','2013-07-25 23:41:53','2013-07-26 07:41:53','php开发测试及线上的时候可以根据不同情况设定错误和异常处理\r\n需要用到有三函数:\r\n<strong>register_shutdown_function</strong>(array(‘Debug’,\'fatalError’)); //定义PHP程序执行完成后执行的函数\r\n<strong>set_error_handler</strong>(array(‘Debug’,\'appError’)); // 设置一个用户定义的错误处理函数\r\n<strong>set_exception_handler</strong>(array(‘Debug’,\'appException’)); //自定义异常处理。\r\n\r\n其中前面已经说过了这个函数: <a title=\"register_shutdown_function 函数详解\" href=\"http://www.yanue.net/archives/627.html\">register_shutdown_function 函数详解</a>\r\n<h2>set_exception_handler定义和用法</h2>\r\nset_exception_handler() 函数设置用户自定义的异常处理函数。\r\n\r\n该函数用于创建运行时期间的用户自己的异常处理方法。\r\n\r\n该函数会返回旧的异常处理程序，若失败，则返回 null。\r\n<h3>语法</h3>\r\n<pre class=\"lang:php decode:true\">set_exception_handler(exception_function)</pre>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<th>参数</th>\r\n<th>描述</th>\r\n</tr>\r\n<tr>\r\n<td>error_function</td>\r\n<td>必需。规定未捕获的异常发生时调用的函数。\r\n\r\n该函数必须在调用 set_exception_handler() 函数之前定义。\r\n\r\n这个异常处理函数需要需要一个参数，即抛出的 exception 对象。</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>例子：</h2>\r\n<div>\r\n<div id=\"highlighter_681021\">\r\n<div>\r\n<pre class=\"lang:php decode:true\">function exceptionHandler($exception) {\r\n\r\n    $errmsg = \"[\".date(\"Y-m-d H:i:s\").\"] \".$exception-&gt;getMessage().\"n\";\r\n    $errmsg .= \"REQUEST: \".print_r($_REQUEST, true).\"n\";\r\n    $errmsg .= \"Server: \".print_r($_SERVER[\'REQUEST_URI\'], true).\"n\";\r\n\r\n    error_log($errmsg, 3, ERROR_LOG);\r\n\r\n}\r\nset_exception_handler(\'exceptionHandler\');</pre>\r\n</div>\r\n<div><a href=\"http://www.cnblogs.com/klj123wan/p/3200060.html#\"><span style=\"font-size: 1.5em; color: #333333;\">set_error_handler定义和用法</span></a></div>\r\n</div>\r\n</div>\r\nset_error_handler() 函数设置用户自定义的错误处理函数。\r\n\r\n该函数用于创建运行时期间的用户自己的错误处理方法。\r\n\r\n该函数会返回旧的错误处理程序，若失败，则返回 null。\r\n<h3>语法</h3>\r\n<pre class=\"lang:php decode:true\">set_error_handler(error_function,error_types)</pre>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<th>参数</th>\r\n<th>描述</th>\r\n</tr>\r\n<tr>\r\n<td>error_function</td>\r\n<td>必需。规定发生错误时运行的函数。</td>\r\n</tr>\r\n<tr>\r\n<td>error_types</td>\r\n<td>可选。规定在哪个错误报告级别会显示用户定义的错误。默认是 \"E_ALL\"。</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<div>\r\n<h2>提示和注释</h2>\r\n提示：如果使用了该函数，会完全绕过标准的 PHP 错误处理函数，如果必要，用户定义的错误处理程序必须终止 (die() ) 脚本。\r\n\r\n注释：如果在脚本执行前发生错误，由于在那时自定义程序还没有注册，因此就不会用到这个自定义错误处理程序。\r\n\r\n&nbsp;\r\n<h2>例子：</h2>\r\n<pre class=\"lang:php decode:true\">function errorHandler($errno, $errstr, $errfile, $errline) {\r\n\r\n    $errmsg = \"[\".date(\"Y-m-d H:i:s\").\"] [{$errno}] {$errstr}n\";\r\n    $errmsg .= \"Error on line {$errline} in {$errfile}nn\";\r\n    $errmsg .= \"REQUEST: \".print_r($_REQUEST, true).\"n\";\r\n    $errmsg .= \"Server: \".print_r($_SERVER[\'REQUEST_URI\'], true).\"n\";\r\n\r\n    error_log($errmsg, 3, ERROR_LOG);\r\n\r\n    die();\r\n}\r\nset_error_handler(\"errorHandler\");</pre>\r\n<h2><a style=\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\" title=\"复制代码\"> </a></h2>\r\n</div>','set_exception_handler 和 set_error_handler 函数','','publish','open','open','','set_exception_handler-%e5%92%8c-set_error_handler-%e5%87%bd%e6%95%b0','','\nhttp://www.yanue.net/archives/627.html','2013-07-25 23:41:53','2013-07-26 07:41:53','','0','http://www.yanue.net/?p=717','0','post','','0');
INSERT INTO `wp_posts` VALUES('759','1','2013-08-20 18:57:11','2013-08-21 02:57:11','百度搜索网站登录口：<a href=\"http://www.baidu.com/search/url_submit.html\" target=\"_black\">http://www.baidu.com/search/url_submit.html</a>\r\n谷歌Google提交入口：<a href=\"http://www.google.com/addurl\" target=\"_black\">http://www.google.com/addurl</a>\r\n搜狗网站收录提交入口:<a href=\"http://www.sogou.com/feedback/urlfeedback.php\" target=\"_black\">:http://www.sogou.com/feedback/urlfeedback.php</a>\r\nSOSO搜搜网站收录提交入口:<a href=\"http://www.soso.com/help/usb/urlsubmit.shtml\" target=\"_black\">http://www.soso.com/help/usb/urlsubmit.shtml</a>\r\n雅虎中国网站登录口：<a href=\"http://search.help.cn.yahoo.com/h4_4.html\" target=\"_black\">http://search.help.cn.yahoo.com/h4_4.html</a>\r\n网易有道搜索引擎登录口：<a href=\"http://tellbot.youdao.com/report\" target=\"_black\">http://tellbot.youdao.com/report</a>\r\nMSN必应网站登录口：<a href=\"http://cn.bing.com/docs/submit.aspx?FORM=WSDD2\" target=\"_black\">http://cn.bing.com/docs/submit.aspx?FORM=WSDD2</a>\r\nTOM搜索网站登录口：<a href=\"http://search.tom.com/tools/weblog/log.php\" target=\"_black\">http://search.tom.com/tools/weblog/log.php</a>\r\n新浪登录口（收费）：<a href=\"http://bizsite.sina.com.cn/newbizsite/docc/index-2jifu-03.htm\" target=\"_black\">http://bizsite.sina.com.cn/newbizsite/docc/index-2jifu-03.htm</a>\r\n蚁搜搜索网站登录口：<a href=\"http://www.antso.com/apply.asp\" target=\"_black\">http://www.antso.com/apply.asp</a>\r\n快搜搜索网站登录口：<a href=\"http://www.kuaisou.com/main/inputweb.asp\" target=\"_black\">http://www.kuaisou.com/main/inputweb.asp</a>\r\n\r\n至于360,我不说了.','各大搜索引擎网站登录入口','','publish','open','open','','%e5%90%84%e5%a4%a7%e6%90%9c%e7%b4%a2%e5%bc%95%e6%93%8e%e7%bd%91%e7%ab%99%e7%99%bb%e5%bd%95%e5%85%a5%e5%8f%a3','','','2013-08-20 19:00:32','2013-08-21 03:00:32','','0','http://www.yanue.net/?p=759','0','post','','1');
INSERT INTO `wp_posts` VALUES('804','1','2013-08-28 19:23:38','2013-08-29 03:23:38','replication的限制:一旦数据库过于庞大，尤其是当写入过于频繁，很难由一台主机支撑的时候，我们还是会面临到扩展瓶颈。数据切分(sharding):通过某种特定的条件，将我们存放在同一个数据库中的数据分散存放到多个数据库（主机）上面，以达到分散单台设备负载的效果。。数据的切分同时还可以提高系统的总体可用性，因为单台设备Crash之后，只有总体数据的某部分不可用，而不是所有的数据。\r\n\r\n<span style=\"text-decoration: underline;\"><i><b>数据的切分（Sharding）模式\r\n</b></i></span>\r\n一种是按照不同的表（或者Schema）来切分到不同的数据库（主机）之上，这种切可以称之为数据的垂直（纵向）切分；另外一种则是根据表中的数据的逻辑关系，将同一个表中的数据按照某种条件拆分到多台数据库（主机）上面，这种切分称之为数据的水平（横向）切分。\r\n\r\n<span style=\"text-decoration: underline;\"><i><b>垂直切分:</b></i></span>\r\n\r\n一个架构设计较好的应用系统，其总体功能肯定是由很多个功能模块所组成的，而每一个功能模块所需要的数据对应到数据库中就是一个或者多个表。而在架构设计中，各个功能模块相互之间的交互点越统一越少，系统的耦合度就越低，系统各个模块的维护性以及扩展性也就越好。这样的系统，实现数据的垂直切分也就越容易。\r\n\r\n一般来说，如果是一个负载相对不是很大的系统，而且表关联又非常的频繁，那可能数据库让步，将几个相关模块合并在一起减少应用程序的工作的方案可以减少较多的工作量，这是一个可行的方案。一个垂直拆分的例子:\r\n\r\n1.用户模块表：user,user_profile,user_group,user_photo_album\r\n2.群组讨论表：groups,group_message,group_message_content,top_message\r\n3.相册相关表：photo,photo_album,photo_album_relation,photo_comment\r\n4.事件信息表：event\r\n<ul>\r\n	<li><i>群组讨论模块和用户模块之间主要存在通过用户或者是群组关系来进行关联。一般关联的时候都会是通过用户的id或者nick_name以及group的id来进行关联，通过模块之间的接口实现不会带来太多麻烦；</i></li>\r\n	<li><i>相册模块仅仅与用户模块存在通过用户的关联。这两个模块之间的关联基本就有通过用户id关联的内容，简单清晰，接口明确；</i></li>\r\n	<li><i>事件模块与各个模块可能都有关联，但是都只关注其各个模块中对象的ID信息，同样可以做到很容易分拆。</i></li>\r\n</ul>\r\n<span style=\"text-decoration: underline;\"><i><b>垂直切分的优点</b></i></span>\r\n<ul>\r\n	<li><i>数据库的拆分简单明了，拆分规则明确；</i></li>\r\n	<li><i>应用程序模块清晰明确，整合容易；</i></li>\r\n	<li><i>数据维护方便易行，容易定位；</i></li>\r\n</ul>\r\n<span style=\"text-decoration: underline;\"><i><b>\r\n垂直切分的缺点</b></i></span>\r\n<ul>\r\n	<li><i>部分表关联无法在数据库级别完成，需要在程序中完成；</i></li>\r\n	<li><i>对于访问极其频繁且数据量超大的表仍然存在性能瓶颈，不一定能满足要求；</i></li>\r\n	<li><i>事务处理相对更为复杂；</i></li>\r\n	<li><i>切分达到一定程度之后，扩展性会遇到限制；</i></li>\r\n	<li><i>过读切分可能会带来系统过渡复杂而难以维护。</i></li>\r\n</ul>\r\n<span style=\"text-decoration: underline;\"><i><b>水平切分</b></i></span>\r\n\r\n将某个访问极其频繁的表再按照某个字段的某种规则来分散到多个表之中，每个表中包含一部分数据。\r\n\r\n对于上面的例子:所有数据都是和用户关联的，那么我们就可以根据用户来进行水平拆分，将不同用户的数据切分到不同的数据库中。\r\n\r\n现在互联网非常火爆的Web2.0类型的网站，基本上大部分数据都能够通过会员用户信息关联上，可能很多核心表都非常适合通过会员ID来进行数据的水平切分。而像论坛社区讨论系统，就更容易切分了，非常容易按照论坛编号来进行数据的水平切分。切分之后基本上不会出现各个库之间的交互。\r\n<span style=\"text-decoration: underline;\"><i><b>\r\n水平切分的优点</b></i></span>\r\n<ul>\r\n	<li><i>表关联基本能够在数据库端全部完成；</i></li>\r\n	<li><i>不会存在某些超大型数据量和高负载的表遇到瓶颈的问题；</i></li>\r\n	<li><i>应用程序端整体架构改动相对较少；</i></li>\r\n	<li><i>事务处理相对简单；</i></li>\r\n	<li><i>只要切分规则能够定义好，基本上较难遇到扩展性限制；</i></li>\r\n</ul>\r\n<span style=\"text-decoration: underline;\"><i><b>水平切分的缺点</b></i></span>\r\n<ul>\r\n	<li><i>切分规则相对更为复杂，很难抽象出一个能够满足整个数据库的切分规则；</i></li>\r\n	<li><i>后期数据的维护难度有所增加，人为手工定位数据更困难；</i></li>\r\n	<li><i>应用系统各模块耦合度较高，可能会对后面数据的迁移拆分造成一定的困难。</i></li>\r\n</ul>\r\n<span style=\"text-decoration: underline;\"><i><b>两种切分结合用:</b></i></span>\r\n\r\n一般来说，我们数据库中的所有表很难通过某一个（或少数几个）字段全部关联起来，所以很难简单的仅仅通过数据的水平切分来解决所有问题。而垂直切分也只能解决部分问题，对于那些负载非常高的系统，即使仅仅只是单个表都无法通过单台数据库主机来承担其负载。我们必须结合“垂直”和“水平”两种切分方式同时使用\r\n\r\n每一个应用系统的负载都是一步一步增长上来的，在开始遇到性能瓶颈的时候，大多数架构师和DBA都会选择先进行数据的垂直拆分，因为这样的成本最先，最符合这个时期所追求的最大投入产出比。然而，随着业务的不断扩张，系统负载的持续增长，在系统稳定一段时期之后，经过了垂直拆分之后的数据库集群可能又再一次不堪重负，遇到了性能瓶颈。\r\n\r\n如果我们再一次像最开始那样继续细分模块，进行数据的垂直切分，那我们可能在不久的将来，又会遇到现在所面对的同样的问题。而且随着模块的不断的细化，应用系统的架构也会越来越复杂，整个系统很可能会出现失控的局面。\r\n\r\n这时候我们就必须要通过数据的水平切分的优势，来解决这里所遇到的问题。而且，我们完全不必要在使用数据水平切分的时候，推倒之前进行数据垂直切分的成果，而是在其基础上利用水平切分的优势来避开垂直切分的弊端，解决系统复杂性不断扩大的问题。而水平拆分的弊端（规则难以统一）也已经被之前的垂直切分解决掉了，让水平拆分可以进行的得心应手。\r\n\r\n示例数据库:\r\n\r\n假设在最开始，我们进行了数据的垂直切分，然而随着业务的不断增长，数据库系统遇到了瓶颈，我们选择重构数据库集群的架构。如何重构？考虑到之前已经做好了数据的垂直切分，而且模块结构清晰明确。而业务增长的势头越来越猛，即使现在进一步再次拆分模块，也坚持不了太久。\r\n\r\n==&gt;选择了在垂直切分的基础上再进行水平拆分。\r\n\r\n==&gt;在经历过垂直拆分后的各个数据库集群中的每一个都只有一个功能模块，而每个功能模块中的所有表基本上都会与某个字段进行关联。如用户模块全部都可以通过用户ID进行切分，群组讨论模块则都通过群组ID来切分，相册模块则根据相册ID来进切分，最后的事件通知信息表考虑到数据的时限性（仅仅只会访问最近某个事件段的信息），则考虑按时间来切分。\r\n\r\n<span style=\"text-decoration: underline;\"><i><b>数据切分以及整合方案.</b></i></span>\r\n\r\n数据库中的数据在经过垂直和（或）水平切分被存放在不同的数据库主机之后，应用系统面临的最大问题就是如何来让这些数据源得到较好的整合，其中存在两种解决思路：\r\n<ul>\r\n	<li><i>在每个应用程序模块中配置管理自己需要的一个（或者多个）数据源，直接访问各个数据库，在模块内完成数据的整合；</i></li>\r\n	<li><i>通过中间代理层来统一管理所有的数据源，后端数据库集群对前端应用程序透明；</i></li>\r\n</ul>\r\n第二种方案,虽然短期内需要付出的成本可能会相对更大一些，但是对整个系统的扩展性来说，是非常有帮助的。针对第二种方案，可以选择的方法和思路有：\r\n\r\n<span style=\"text-decoration: underline;\"><i><b>1.利用MySQLProxy 实现数据切分及整合.</b></i></span>\r\n\r\n可用来监视、分析或者传输他们之间的通讯信息。他的灵活性允许你最大限度的使用它，目前具备的功能主要有连接路由，Query分析，Query过滤和修改，负载均衡，以及基本的HA机制等。MySQLProxy 本身并不具有上述所有的这些功能，而是提供了实现上述功能的基础。要实现这些功能，还需要通过我们自行编写LUA脚本来实现。\r\n\r\n原理:MySQLProxy 实际上是在客户端请求与MySQLServer 之间建立了一个连接池。所有客户端请求都是发向MySQLProxy，然后经由MySQLProxy 进行相应的分析，判断出是读操作还是写操作，分发至对应的MySQLServer 上。对于多节点Slave集群，也可以起做到负载均衡的效果。\r\n\r\n<span style=\"text-decoration: underline;\"><i><b>2.利用Amoeba实现数据切分及整合</b></i></span>\r\n\r\nAmoeba是一个基于Java开发的，专注于解决分布式数据库数据源整合Proxy程序的开源框架，Amoeba已经具有Query路由，Query过滤，读写分离，负载均衡以及HA机制等相关内容。Amoeba主要解决的以下几个问题：\r\n<ul>\r\n	<li><i>数据切分后复杂数据源整合；</i></li>\r\n	<li><i>提供数据切分规则并降低数据切分规则给数据库带来的影响；</i></li>\r\n	<li><i>降低数据库与客户端的连接数；</i></li>\r\n	<li><i>读写分离路由；</i></li>\r\n</ul>\r\nAmoebaFor MySQL 主要是专门针对MySQL数据库的解决方案，前端应用程序请求的协议以及后端连接的数据源数据库都必须是MySQL。对于客户端的任何应用程序来说，AmoebaForMySQL 和一个MySQL数据库没有什么区别，任何使用MySQL协议的客户端请求，都可以被AmoebaFor MySQL 解析并进行相应的处理。\r\n\r\nProxy程序常用的功能如读写分离，负载均衡等配置都在amoeba.xml中进行。Amoeba已经支持了实现数据的垂直切分和水平切分的自动路由，路由规则可以在rule.xml进行设置。\r\n<span style=\"text-decoration: underline;\"><i><b>\r\n3.利用HiveDB实现数据切分及整合</b></i></span>\r\n\r\nHiveDB同样是一个基于Java针对MySQL数据库的提供数据切分及整合的开源框架，只是目前的HiveDB仅仅支持数据的水平切分。主要解决大数据量下数据库的扩展性及数据的高性能访问问题，同时支持数据的冗余及基本的HA机制。\r\n\r\nHiveDB的实现机制与MySQLProxy 和Amoeba有一定的差异，他并不是借助MySQL的Replication功能来实现数据的冗余，而是自行实现了数据冗余机制，而其底层主要是基于HibernateShards 来实现的数据切分工作。数据切分与整合中可能存在的问题\r\n\r\n<span style=\"text-decoration: underline;\"><i><b>引入分布式事务的问题?</b></i></span>\r\n\r\n一旦数据进行切分被分别存放在多个MySQLServer中之后，不管我们的切分规则设计的多么的完美（实际上并不存在完美的切分规则），都可能造成之前的某些事务所涉及到的数据已经不在同一个MySQLServer 中了。\r\n\r\n==&gt;将一个跨多个数据库的分布式事务分拆成多个仅处于单个数据库上面的小事务，并通过应用程序来总控各个小事务。\r\n<span style=\"text-decoration: underline;\"><i><b>\r\n跨节点Join的问题?</b></i></span>\r\n\r\n==&gt;先从一个节点取出数据,然后根据这些数据,再到另一个表中取数据.\r\n==&gt;使用Federated存储引擎,问题是:乎如果远端的表结构发生了变更，本地的表定义信息是不会跟着发生相应变化的。\r\n\r\n<span style=\"text-decoration: underline;\"><i><b>跨节点合并排序分页问题?</b></i></span>\r\n\r\n==&gt;Join本身涉及到的多个表之间的数据读取一般都会存在一个顺序关系。但是排序分页就不太一样了，排序分页的数据源基本上可以说是一个表（或者一个结果集），本身并不存在一个顺序关系，所以在从多个数据源取数据的过程是完全可以并行的。这样，排序分页数据的取数效率我们可以做的比跨库Join更高，所以带来的性能损失相对的要更小。\r\n\r\n来自:<a href=\"http://blog.sina.com.cn/s/blog_493a84550101eo7c.html\">http://blog.sina.com.cn/s/blog_493a84550101eo7c.html</a>','MySQL数据库垂直和水平切分','','publish','open','open','','mysql%e6%95%b0%e6%8d%ae%e5%ba%93%e5%9e%82%e7%9b%b4%e5%92%8c%e6%b0%b4%e5%b9%b3%e5%88%87%e5%88%86','','','2013-08-28 19:23:38','2013-08-29 03:23:38','','0','http://www.yanue.net/?p=804','0','post','','0');
INSERT INTO `wp_posts` VALUES('768','1','2013-08-21 19:15:22','2013-08-22 03:15:22','搜狗输入法 for Linux 是基于Fcitx 框架（fcitx-sogoupinyin）。\r\n\r\n安装环境为Ubuntu 13.04\r\n\r\n<strong>准备工作：卸载Ubuntu默认的ibus输入法：</strong>\r\n<pre>sudo apt-get remove ibus</pre>\r\n<strong>然后添加Fcitx 源：</strong>\r\n<pre>sudo add-apt-repository ppa:fcitx-team/nightly</pre>\r\n<pre>sudo apt-get update</pre>\r\n<strong>然后 安装fcitx，搜狗输入法，Google输入法，以及设置fcitx为默认:</strong>\r\n<pre class=\"crayon-selected\">sudo apt-get install fcitx fcitx-config-gtk fcitx-googlepinyin fcitx-sogoupinyin</pre>\r\n这里可以安装很多输入法，根据你自己的需要：\r\nfcitx-sunpinyin fcitx-module-cloudpinyin\r\n默认没有安装im-switch 自己安装一个\r\n<pre>sudo apt-get install im-switch</pre>\r\n<pre>im-switch -s fcitx -z default</pre>\r\n<pre>sudo apt-get install fcitx-config-gtk</pre>\r\n<strong>完成之后注销或重起即可！</strong>\r\n\r\n<a href=\"http://www.yanue.net/wp-content/uploads/2013/08/sogou2.png\"><img alt=\"搜狗输入法for linux\" src=\"http://www.yanue.net/wp-content/uploads/2013/08/sogou2.png\" width=\"500\" /></a>\r\n\r\n<strong>附带几个fcitx输入法的热键：</strong>\r\n\r\n隐藏显示浮条=CTRL + ALT + H\r\n\r\n打开/关闭输入法=CTRL_SPACE\r\n# 中英文快速切换键 可以设置为L_CTRL R_CTRL L_SHIFT R_SHIFT L_SUPER R_SUPER\r\n中英文快速切换键=L_CTRL\r\n双击中英文切换=0\r\n击键时间间隔=250\r\n光标跟随=CTRL_K\r\n隐藏主窗口=CTRL_ALT_H\r\n切换虚拟键盘=CTRL_ALT_K\r\nGBK支持=CTRL_M\r\nGBK繁体切换键=CTRL_ALT_F\r\n联想=CTRL_L\r\n反查拼音=CTRL_ALT_E\r\n全半角=SHIFT_SPACE\r\n中文标点=ALT_SPACE\r\n上一页=-\r\n下一页==\r\n第二三候选词选择键=SHIFT\r\n保存词库=CTRL_ALT_S\r\n记录模式=CTRL_ALT_J\r\n\r\n&nbsp;','Linux下fcitx安装谷歌搜狗输入法','','publish','open','open','','linux%e4%b8%8bfcitx%e5%ae%89%e8%a3%85%e8%b0%b7%e6%ad%8c%e6%90%9c%e7%8b%97%e8%be%93%e5%85%a5%e6%b3%95','','','2013-08-21 19:20:29','2013-08-22 03:20:29','','0','http://www.yanue.net/?p=768','0','post','','0');
INSERT INTO `wp_posts` VALUES('776','1','2013-08-21 23:26:50','2013-08-22 07:26:50','安装环境：ubuntu 桌面版13.04\r\n\r\n安装版本：mysql-5.6.12.tar.gz\r\n\r\n1. 安装必备工具：\r\n<pre class=\"lang:php decode:true\">sudo apt-get install cmake libncurses5-dev  bison g++</pre>\r\n2 添加组和用户及安装目录权限\r\n<pre class=\"lang:php decode:true\">sudo groupadd mysql #添加组\r\nsudo useradd -g mysql mysql -s /bin/false #创建用户mysql并加入到mysql组，不允许mysql用户直接登录系统\r\nsudo mkdir -p /usr/local/mysql #创建MySQL安装目录\r\nsudo mkdir -p /usr/local/mysql/data #创建MySQL安装目录\r\nsudo chown -R mysql:mysql /usr/local/mysql/data #设置MySQL数据库目录权限</pre>\r\n3 编译安装ysql\r\n<pre>cd /usr/local/src  \r\nsudo wget http://mysql.mirror.kangaroot.net/Downloads/MySQL-5.6/mysql-5.6.12.tar.gz</pre>\r\n<div>\r\n\r\n3.1 解压MySQL\r\n<pre class=\"lang:php decode:true\">sudo tar -zxvf mysql-5.6.12.tar.gz</pre>\r\n3.2 配置编译\r\n<pre class=\"lang:php decode:true\">sudo cmake -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DSYSCONFDIR=/etc -DMYSQL_UNIX_ADDR=/tmp/mysql.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DEXTRA_CHARSETS=all -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_MEMORY_STORAGE_ENGINE=1 -DWITH_READLINE=1 -DENABLED_LOCAL_INFILE=1 -DMYSQL_DATADIR=/usr/local/mysql/data -DMYSQL_USER=mysql -DWITH_DEBUG=0\r\nsudo make -j4 #-j 数字 表示以多核心运行\r\nsudo make install</pre>\r\n4.1配置开机启动\r\n<pre class=\"lang:php decode:true\">sudo cp ./support-files/my-default.cnf /etc/my.cnf\r\nsudo cp ./support-files/mysql.server  /etc/init.d/mysqld  #把Mysql加入系统启动\r\nsudo chmod 755 /etc/init.d/mysqld\r\nsudo chkconfig mysqld on</pre>\r\n4.2常用命令软连接\r\n<pre class=\"lang:php decode:true\">sudo ln -s /usr/local/mysql/bin/mysql /usr/bin\r\nsudo ln -s /usr/local/mysql/bin/mysqladmin /usr/bin</pre>\r\n4.3 初始化数据库\r\n<pre class=\"lang:php decode:true\">sudo /usr/local/mysql/scripts/mysql_install_db --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --skip-name-resolve --user=mysql</pre>\r\n4.4 修改配置文件\r\n<pre class=\"lang:php decode:true\">sudo vi /etc/my.cnf</pre>\r\n文件末尾增加：\r\n<pre class=\"lang:php decode:true\">#增加默认存储类型和去掉反向解析\r\ndefault-storage-engine=MyISAM\r\nskip-name-resolve</pre>\r\n如果出现The server quit without updating PID file，\r\n\r\n请根据创建pid并更改权限775\r\n\r\n</div>','ubuntu 13.04下编译安装mysql','','publish','open','open','','ubuntu-13-04%e4%b8%8b%e7%bc%96%e8%af%91%e5%ae%89%e8%a3%85mysql','','','2013-08-21 23:28:01','2013-08-22 07:28:01','','0','http://www.yanue.net/?p=776','0','post','','0');
INSERT INTO `wp_posts` VALUES('781','1','2013-08-22 00:49:36','2013-08-22 08:49:36','上一篇文章中，我们介绍了安装<a title=\"ubuntu 13.04下编译安装mysql\" href=\"http://www.yanue.net/archives/776.html\" rel=\"bookmark\">ubuntu 13.04下编译安装mysql</a>,\r\n\r\n下面介绍安装php，可以配合apache或nginx进行使用.\r\n\r\n首先要安装编译php时要的几个扩展库\r\n(1)libxml2，若无php安装一些解析xml的扩展时会提示xml2-config not found\r\n<pre class=\"lang:php decode:true\">sudo apt-get install libxml2 libxml2-dev libxslt-dev</pre>\r\n(2)libevent1.4.11及以上版本，安装php的fpm模块时需要\r\n<pre>sudo apt-get install libevent-1.4-2 libevent-dev</pre>\r\n(3)libcurl，安装curl扩展需要\r\n<pre>sudo apt-get install libcurl4-openssl-dev</pre>\r\n(4)GD库，安装gd图片处理扩展需要\r\n<pre>sudo apt-get install libgd2-xpm libgd2-xpm-dev</pre>\r\n(5)zlib1g-dev，安装zlib和bz2扩展或编译mysqld阶段需要\r\n<pre>sudo apt-get install zlib1g-dev libbz2-dev</pre>\r\n<div>\r\n\r\n(6) configure: error: mcrypt.h not found. Please reinstall libmcrypt.\r\n<pre class=\"lang:php decode:true\">sudo  apt-get install libmcrypt-dev</pre>\r\n编译参数：\r\n<pre class=\"lang:php decode:true  crayon-selected\">sudo ./configure --prefix=/usr/local/php --mandir=/usr/share/man --infodir=/usr/share/info --sysconfdir=/etc --enable-cli --with-config-file-path=/usr/local/php/etc --with-openssl --with-kerberos --with-zlib --enable-bcmath --with-bz2 --enable-calendar --with-curl --enable-exif --enable-ftp --with-gd --enable-gd-native-ttf --enable-magic-quotes --enable-mbstring --enable-mbregex --enable-json --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-mysql-sock=mysqlnd --with-sqlite --with-pdo-sqlite --enable-pdo --enable-dba --enable-shmop --enable-soap --enable-sockets --enable-wddx --enable-fpm --with-mhash --with-mcrypt=/usr/local/libmcrypt --with-iconv --with-xsl --enable-zend-multibyte --enable-zip --with-pcre-regex --enable-dom --enable-gd-native-ttf --enable-posix --enable-fileinfo --enable-sysvmsg --enable-sysvsem --enable-sysvshm --with-libxml --with-xmlrpc --enable-xml --enable-xmlwriter --enable-xmlreader --enable-maintainer-zts</pre>\r\n</div>\r\n说明：如果是apache，请加上\r\n\r\n-with-apxs2=/usr/local/apache/bin/apxs\r\n\r\n--enable-maintainer-zts 支持apache的worker或event这两个MPM\r\n\r\n说明：这里为了支持apache的worker或event这两个MPM，编译时使用了--enable-maintainer-zts选项。\r\n\r\n<strong># 注:其中最后一个参数--enable-maintainer-zts在安装PHP5.4最新版本时必须添加(5.3貌似不需要),表示打开PHP进程安全Thread Safe,</strong><strong>默认不添加为NON </strong><strong>Thread Safe,</strong><strong>开启apache服务会报错.....</strong>\r\n\r\n编译通过就执行安装过程\r\n<pre class=\"lang:php decode:true\">sudo make -j 4\r\nsudo make install</pre>\r\n安装完成后\r\n<pre class=\"lang:php decode:true \">sudo cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm #因为php5.3开始自带fpm，使用自带的管理脚本\r\nsudo chmod +x /etc/init.d/php-fpm\r\nsudo ln -sf /usr/local/php/bin/php /usr/local/bin/\r\nsudo cp /etc/php-fpm.conf.default /etc/php-fpm.conf\r\nsudo cp php.ini-development /usr/local/php/etc/php.ini</pre>\r\n&nbsp;\r\n\r\n添加执行组和用户，如果添加过，则不需要\r\n<pre class=\"lang:php decode:true\">sudo groupadd www \r\nsudo useradd -g www www -s /bin/false</pre>\r\n修改fpm配置\r\n<pre class=\"lang:php decode:true\">sudo vi /etc/php-fpm.conf</pre>\r\n将user和group的值改为www,www\r\n<pre>service php-fpm start</pre>\r\n这样php-fpm启动成功，nginx可以fastcgi解析php。\r\n\r\n&nbsp;\r\n\r\n<strong> </strong>','ubuntu 13.04下编译安装php','','publish','open','open','','ubuntu-13-04%e4%b8%8b%e7%bc%96%e8%af%91%e5%ae%89%e8%a3%85php','','\nhttp://www.yanue.net/archives/776.html','2013-09-16 00:47:21','2013-09-16 08:47:21','','0','http://www.yanue.net/?p=781','0','post','','0');
INSERT INTO `wp_posts` VALUES('785','1','2013-08-22 17:37:50','2013-08-23 01:37:50','准备工作\r\n<pre class=\"lang:php decode:true\">cd /usr/local/src/\r\nsudo wget http://mirror.bit.edu.cn/apache/apr/apr-1.4.6.tar.gz\r\nsudo wget http://mirror.bit.edu.cn/apache/apr/apr-util-1.4.1.tar.gz\r\nsudo wget http://mirrors.cnnic.cn/apache/httpd/httpd-2.4.4.tar.gz</pre>\r\n安装必要工具\r\n<pre class=\"lang:php decode:true\">sudo apt-get install libpcre3 libpcre3-dev openssl libssl-dev</pre>\r\n解压缩及配置\r\n<pre class=\"lang:php decode:true\">tar -zxvf httpd-2.4.4.tar.gz\r\ntar -zxvf apr-1.4.6.tar.gz\r\ntar -zxvf apr-util-1.4.1.tar.gz\r\ncp -rf apr-1.4.6  httpd-2.4.4/srclib/apr \r\ncp -rf apr-util-1.4.1  httpd-2.4.4/srclib/apr-util\r\ncd httpd-2.4.4/</pre>\r\n以上可以避免执行配置安装httpd时出错\r\n<pre class=\"lang:php decode:true\">configure: error: Bundled APR requested but not found at ./srclib/. Download and unpack the corresponding apr and apr-util packages to ./srclib/.</pre>\r\n解决方法：需要下载apr和apr-utils 并解压到./srclib/, 再进行编译，上面已经完成,继续.\r\n<pre class=\"lang:php decode:true\">sudo ./configure --prefix=/usr/local/apache --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util --with-pcre=/usr/local/pcre --with-included-apr  --with-ssl --enable-ssl --enable-module=so --enable-rewrite --enable-cgid --enable-cgi    #配置\r\nsudo make -j4\r\nsudo make install</pre>\r\n安装完毕，进行简单配置\r\n<pre class=\"lang:php decode:true\">sudo cp build/rpm/httpd.init /etc/init.d/httpd\r\nsudo chmod 755 /etc/init.d/httpd\r\nsudo ln -fs /usr/local/apache/ /etc/httpd\r\nsudo ln -fs /usr/local/apache/bin/httpd /usr/sbin/httpd\r\nsudo ln -fs /usr/local/apache/bin/apachectl /usr/sbin/apachectl\r\nsudo ln -fs /usr/local/apache/logs /var/log/httpd\r\nsudo ln -s /usr/local/apache/conf/httpd.conf /etc/</pre>\r\n下一步：\r\n\r\n<strong><a title=\"编辑“ubuntu 13.04下编译安装php”\" href=\"http://www.yanue.net/wp-admin/post.php?post=781&amp;action=edit\">ubuntu 13.04下编译安装php</a></strong>','ubuntu 13.04下编译安装apache﻿﻿','','publish','open','open','','ubuntu-13-04%e4%b8%8b%e7%bc%96%e8%af%91%e5%ae%89%e8%a3%85apache%ef%bb%bf%ef%bb%bf','','','2013-08-22 17:37:50','2013-08-23 01:37:50','','0','http://www.yanue.net/?p=785','0','post','','0');
INSERT INTO `wp_posts` VALUES('789','1','2013-08-22 22:25:52','2013-08-23 06:25:52','<address>在Ubuntu中，phpstorm的运行需要jdk6.</address><address><a title=\"Java\" href=\"http://wiki.ubuntu.org.cn/Java\">Java</a>有2种，一种是Ubuntu源自带的open-java（icedtea），一个是Oracle的sun-java6。前者是Ubuntu默认的Java，一般更新后系统就自带了，这里讲后者的安装配置。</address><address> </address><address> </address><address><strong>添加PPA源，然后更新，最后安装。</strong></address>\r\n<pre> sudo add-apt-repository ppa:webupd8team/java\r\n sudo apt-get update\r\n sudo apt-get install oracle-java7-installer</pre>\r\n检验是否安装成功及版本\r\n<pre>java -version</pre>\r\n<h5>卸载 Oracle Java 6</h5>\r\n<pre>sudo apt-get remove oracle-java6-installer</pre>\r\n&nbsp;\r\n\r\n<strong>另外，手动安装方法：</strong>\r\n1，下载最新的 jdk6 版本，目前最新为：jdk-6u45-linux-x64.bin（根据机器到平台选择合适到版本）\r\n\r\n<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a>\r\n\r\n2，赋予执行权限，在 terminal 中输入：\r\n<pre class=\"lang:php decode:true\">chmod a+x jdk-6u45-linux-x64.bin</pre>\r\n3，解压，在 terminal 中输入：\r\n<pre class=\"lang:php decode:true\">./jdk-6u45-linux-x64.bin</pre>\r\n4，创建 jvm 目录，在 terminal 中输入：\r\n<pre class=\"lang:php decode:true\">sudo mkdir /usr/lib/jvm</pre>\r\n5，移动解压文件，在 terminal 中输入：\r\n<pre class=\"lang:php decode:true\">sudo mv ~/download/jdk1.6.0_45 /usr/lib/jvm/jdk1.6.0_45</pre>\r\n6，启用 jdk 6，在 terminal 中输入：\r\n<pre class=\"lang:php decode:true\">sudo ln -s -b /usr/lib/jvm/jdk1.6.0_45/jre/bin/java /etc/alternatives/java\r\nsudo ln -s -b /usr/lib/jvm/jdk1.6.0_45/jre/bin/java /usr/bin/java</pre>\r\n&nbsp;','ubuntu下ppa源安装jdk','','publish','open','open','','ubuntu%e4%b8%8bppa%e6%ba%90%e5%ae%89%e8%a3%85jdk','','','2013-08-22 22:33:03','2013-08-23 06:33:03','','0','http://www.yanue.net/?p=789','0','post','','0');
INSERT INTO `wp_posts` VALUES('808','1','2013-08-28 23:49:54','2013-08-29 07:49:54','ubuntu下使用phpstorm,在搜索功能及其他情况时候,一直遇到中文乱码,或者方框问题(我用的是英文ubuntu 13.04)\r\n\r\n而phpstorm运行需要独立安装jre6,参见:\r\n\r\n<address><a title=\"ubuntu下ppa源安装jdk\" href=\"http://www.yanue.net/archives/789.html\" rel=\"bookmark\">ubuntu下ppa源安装jdk</a>.</address>在ubuntu 11.04中安装netbeans 7.0的时候，出现一个奇怪的现象，启动netbeans中，发现很多中文字无法显示，直接显示一个方框。很显然是没有找到某些字的显示数据，但是奇怪的 是有些汉字可以显示，真神奇，难道netbeans所用到的字库居然不全吗？\r\n\r\n而 ubuntu可以正常显示汉字，说明ubuntu本身的字库应该是没问题到。那么问题出在什么地方呢？\r\n\r\n<strong>答案是：<span style=\"color: #ff0000;\">JRE</span></strong>\r\n\r\nnetbean是用java写的，它的运行是必须要依靠JRE的，这个大家都知道。而JRE使用的字体是依靠JRE本身的配置文件来决定在系统中和什么字体文件对应的。\r\n\r\n根据Java的官方文档（http://download.oracle.com/javase/1.5.0/docs/guide/intl /fontconfig.html#loading），字体对应配置文件是位于jre/lib下面，有两种形式，一种是src文件，一种是bfc文件。 bfc文件是二进制的，系统预定义的，所以我们需要修改的是src文件，到这个目录，一看，如下图：\r\n\r\n&nbsp;\r\n\r\n看到这些文件名，基本也明白了个大概。看看fontconfig.OS.version.properties.src这种格式就应该明白，这是不 同操作系统平台的配置文件，jre会根据操作系统的不同而自动选择对应的配置文件，因此，我打开了ubuntu 的对应文件，看第一行：\r\n\r\nallfonts.chinese-cn-iso10646=-arphic-ar pl uming cn-light-r-normal--*-%d-*-*-c-*-iso10646-1\r\n\r\n这里指定了jre用到逻辑字体和物理字体的对应关系，等号左边就是jre用的逻辑字体，而等号右边就是需要使用的物理字体了。\r\n\r\n只是这个物理字体看起来跟火星文差不多，但是这个火星文可是正宗的<b>X logical font description</b> (<b>XLFD</b>)描述方式，这里不多说了，想了解的读者可以自己去google一下即可。\r\n\r\n然后再看配置文件# Font File Names部分，其中有一行：\r\n\r\nfilename.-arphic-ar_pl_uming_cn-light-r-normal--*-%d-*-*-c-*-iso10646-1=/usr/share/fonts/truetype/arphic/uming.ttc\r\n\r\n这是上面描述的物理字体和系统字体文件的对应描述。\r\n\r\n左边不就是上面我们看着像火星文的物理字体名称吗？正好不知道哪儿去找这个字体，这下不就有答案了。连目录都告诉你了。\r\n\r\n立刻跑到/usr/share/fonts/truetype目录去一看，不要说uming.ttc，连arphic这个目录都没有！\r\n\r\n设置jre解决中文乱码方法:\r\n\r\n1.修改配置文件，让他指向系统有的字体文件。\r\n\r\n也就是修改：/usr/share/fonts/truetype/arphic/uming.ttc这部分，修改成存在的字体文件名称即可。\r\n\r\n2.安装一个uming.tcc字体文件。\r\n\r\n由于uming.tcc字体是比较有名的，是一个高质量的中文字库。因此我还是决定选择第二种方案。\r\n\r\n到网上一goole，立刻找到了下载地址：\r\n\r\nhttp://ftp.br.debian.org/debian/pool/main/t/ttf-arphic-uming/ttf-arphic-uming_0.2.20080216.1-3_all.deb\r\n\r\n下载回来之后：\r\n\r\nsudo dpkg -i ttf-arphic-uming_0.2.20080216.1-3_all.deb\r\n\r\n安装顺利完成，这个时候再跑到/usr/share/fonts/truetype目录去一看，这下有arphic这个目录了，然后打开目录一看，uming.ttc就在那里！\r\n\r\n马上打开netbeans，漫长的等待，终于看到了窗口，一切都有了，字体看着确实很美，不愧是arphic 产品啊。\r\n\r\n自此问题完美的解决了，不管版本如何变化，都可以按照这个方式去解决问题。\r\n\r\n网上一些文章说的cp字体到jre/lib/fonts/fallback，很多人不懂原理。fallback的目录是jre字体后备目录，意思就 是按照正常配置找不到字体信息，就会在这个目录下按照配置文件设定的顺序到字体文件中去寻找。用这个方式有两个问题,一个是效率低下。二是字体不统一，会 出现例如：文件这个词，文是楷体，件是黑体的“壮观”景象！为什么？因为文字在楷体字库找到了，但是这个字库找不到件字，于是就在fallback中到黑 体字库去找，并且找到。这种现象就神奇的出现了！\r\n\r\n所以这个方式其实是属于歪打正着的方法，很多人糊里糊涂显示正常了，也没有搞懂原理。而另外一些人就会出现字体不统一到情况。\r\n\r\n当然，上面所说的一切，在windows上均不会发生。因为windows比较统一，所以配置文件的配置一定可以正常工作，不会出现类似linux的连字体文件都可能找不到的情况。这也证明了规范，统一在软件中的重要性。\r\n\r\n另:<a title=\"Ubuntu下jre安装中文字体\" href=\"http://www.guoweiwei.com/wordpress/archives/129\">Ubuntu下jre安装中文字体</a>\r\n\r\n<span style=\"font-size: 13px;\"> 来自:</span><a style=\"font-size: 13px;\" href=\"http://www.guoweiwei.com/wordpress/archives/129\">http://www.guoweiwei.com/wordpress/archives/129</a>','ubuntu下JRE中文字体设置（解决phpstorm,NetBeans乱码问题）','','publish','open','open','','ubuntu%e4%b8%8bjre%e4%b8%ad%e6%96%87%e5%ad%97%e4%bd%93%e8%ae%be%e7%bd%ae%ef%bc%88%e8%a7%a3%e5%86%b3phpstormnetbeans%e4%b9%b1%e7%a0%81%e5%ae%89%e8%a3%85%ef%bc%89','','\nhttp://www.yanue.net/archives/789.html','2013-08-28 23:52:06','2013-08-29 07:52:06','','0','http://www.yanue.net/?p=808','0','post','','0');
INSERT INTO `wp_posts` VALUES('845','1','2013-09-07 22:01:24','2013-09-08 06:01:24','gps纠偏0.01精度工具：<a title=\"GPS坐标转换经纬度，gps纠偏\" href=\"http://map.yanue.net/gps.html\" target=\"_blank\">http://map.yanue.net/gps.html</a>，\r\n\r\ngps纠偏实现：<a title=\"gps纠偏数据库及gps纠偏php算法\" href=\"http://www.yanue.net/archives/853.html\">php之gps纠偏方法及纠偏数据库</a>。\r\n\r\n<strong><span style=\"color: #ff6600;\">大陆地图偏移原因</span>：</strong>\r\n\r\n<address>国家安全与地图保密插件：<span style=\"color: #ff6600;\"><strong>国家保密插件</strong></span>，也叫做加密插件或者加偏或者SM模组，其实就是对真实坐标系统进行人为的加偏处理，按照几行代码的算法，将真实的坐标加密成虚假的坐标，而这个加偏并不是线性的加偏，所以各地的偏移情况都会有所不同。而加密后的坐标也常被人称为<span style=\"color: #ff6600;\"><strong>火星坐标系统</strong></span>，这是我们的国家又一个伟大的发明，让国外的政府和企业等，都看不懂我们的坐标系统。</address>民间纠编地图可能引起很严重的国家安全刑事问题\r\n\r\n<span style=\"color: #ff6600;\">1、偏移的起因</span>：天朝测绘局以国家安全为理由，用法律的形式对所有在天朝发行的地图类产品加了强制性规范，要求所有地图类产品都必须使用国家测绘局的一种加偏移的算法，对地图的真实坐标进行加偏移处理，之后才可能通过审批准许上市。因此，天朝的所有官方及商用地图的坐标都是偏移的，这种偏移属于非线性的，偏移量在300至500米不等，偏移方向也不定。这种加过偏移的地图坐标就是所谓“<strong>火星坐标</strong>”。\r\n\r\n<span style=\"color: #ff6600;\">2、</span>GPS接收机本身接收卫星的信号，计算出本机所在位置的经纬度，在没有做特别处理的时候，这个经纬度是正确的。但是如果GPS支持加载地图的话，这个GPS中的地图就得受上述第一条法规的约束了，所以正式在天朝销售的行货GPS设备中的地图必须也得加偏移，处理成火星坐标。\r\n\r\n<span style=\"color: #ff6600;\">3、</span>问题来了，如果仅仅是地图搞成火星坐标，但GPS仍然输出真实坐标的话，就会发生GPS的定位（及导航）跟地图不能吻合的问题。于是，只好在GPS软件中设置一个使用同样算法的加偏移功能。GPS先从卫星上得到真实坐标，然后经过加偏移程序转换成火星坐标，由于是同一个算法，所以经过软件加偏移的坐标能跟同样加了偏移的地图吻合，就是“歪到一起”了。这样就可以用GPS正常导航了——但这台GPS设备输出的坐标仍然是火星坐标，放到Google Earth上面是没法正常吻合的。\r\n\r\n<span style=\"color: #ff6600;\">4、</span>由于Google Earth属于卫星照片，它不是地图，所以不受天朝测绘法的约束，因此Google Earth的坐标是真实坐标。这样，问题又来了，当你使用天朝处理过的GPS导出火星坐标（或航迹），企图把它放到Google Earth上面看看自己都走了哪些路的时候，因为Google Earth照片的坐标是真实的，而你的GPS导出的坐标是火星坐标，二者就对不上号了，你也许会看到在google Earth上，你开着车从别人的楼顶上飞过去，或者打湖里面漂过去。\r\n\r\n<span style=\"color: #ff6600;\">5、</span>水货GPS因为是洋鬼子的产品，原本并非销往天朝的，洋鬼子不会玩这种加偏移的买卖，所以水货GPS设备，如果使用机器原带的地图的话，得到的坐标（或者航迹）是真实正确的，这就是水货机器的无偏地图。但是洋鬼子的设备中一般没有中文地图，如果你把天朝的官方或者正式发布的商用地图放到水货GPS设备里面的话，就会发生第3条前面说的问题：设备的真实坐标跟天朝特殊地图的火星坐标不吻合——出现偏移——无法正常导航。\r\n\r\n<span style=\"color: #ff6600;\">6、</span>由于火星坐标的一系列问题，众民间人士根据那个加偏移算法自行折腾出了很多纠正了偏移的地图，这些地图的坐标是正确的。这样的地图拿到水货GPS设备上，因为水货GPS输出的坐标是真实的，所以可以完美配合工作，正确导航定位，并且输出正确的坐标——放到Google Earth上也是正确的。\r\n\r\n<span style=\"color: #ff6600;\">7、</span>天朝行货GPS设备软件中的加偏移功能，是通过一个所谓空心地图文件（或者28类地图，或者快拼模块）来触发启动偏移程序的，如果用户安装非本机自带的，但属于天朝官方或者正式发布的商用地图，那要配合空心地图文件（或者把地图类别设置为28），从而让GPS软件中的加偏移程序启动，使得GPS输出火星坐标，跟地图的火星坐标吻合，如此才能正常导航——但这台GPS设备输出的坐标仍然是火星坐标，放到Google Earth上面是没法正常吻合的。\r\n\r\n<span style=\"color: #ff6600;\">8、</span>天朝行货GPS设备，如果要得到真实坐标，使用民间的纠偏地图，就得把那个空心地图文件移除（或把原机自带的28类地图移除/取消，或把同样作用的快拼弄掉），这样GPS设备输出真实的坐标，才能跟纠偏地图的正确坐标吻合，实现正确导航定位，并且输出正确的坐标——放到Google Earth上也是正确的。不过，在天朝行货GPS上不能同时使用火星坐标地图和纠偏地图，否则必然有一个没法正常导航定位。\r\n\r\n<span style=\"color: #ff6600;\">9、</span>水货GPS设备用民间的简体中文刷机，一般来说也没有那个加偏移程序，所以要使用纠偏地图或者无偏地图。不能使用天朝官方的火星坐标地图，不然就对不上号。\r\n\r\n<wbr /> <wbr /> <wbr />其实很少有人知道国家保密插件问题，但作为导航电子地图产业或者汽车导航产业中的人，多多少少都会了解到这个问题。国家是出于国家安全考虑，将我们看到的真实的坐标变成假的虚拟的坐标，这样，我们的国家就安全了，不会被恐怖分子破坏了。最简单的举例来说，比如鸟巢吧，你真实的坐标是这个，加密后就成了那个，导航电子地图上看到的就是那个，那么人家导弹要是攻击那个的时候，那么导弹就打不中我们的鸟巢啦，我们的鸟巢就安全了。不过，个人担心这样加密后没有打中鸟巢，会不会打中水立方呢，可能是无心插柳柳成荫了。\r\n\r\n<address><wbr /> <wbr />具体说说这个保密插件的问题吧，是如何运作的呢？</address><wbr /> <wbr /> <wbr /> 现在，所有的电子地图所有的导航设备，都需要加入国家保密插件。第一步，地图公司测绘地图，测绘完成后，送到国家测绘局，将真实坐标的电子地图，加密成“火星坐标”，这样的地图才是可以出版和发布的，然后才可以让GPS公司处理。第二步，所有的GPS公司，只要需要汽车导航的，需要用到导航电子地图的，统统需要在软件中加入国家保密算法，将COM口读出来的真实的坐标信号，加密转换成国家要求的保密的坐标，这样，GPS导航仪和导航电子地图就可以完全匹配啦，GPS也就可以正常工作啦。\r\n\r\n<wbr /> <wbr /> <wbr /> 所以，所有的导航电子地图公司，像四维图新、瑞图、易图通、高德等等，都需要将自己的电子地图拿到国家测绘局进行加密处理，而所有的导航软件公司，都需要将自己的导航软件中加入国家测绘局提供的加密算法的代码。而这一段代码，就是国家的机密，不是公开的，每次去国家测绘局加密处理都需要预约并在封闭的环境中进行，编译完成后需要是在主程序的exe中，而不能编译在外部dll等文件中。\r\n\r\n<wbr /> <wbr /> <wbr /> 当然，国家的保密插件，是需要收费的，早期的时候，一个导航仪就需要10块钱的保密插件许可费，恩，保密插件也不是白用的，毕竟国家花了很多的钱和人力和物力才做出来的保护国家安全的保密东西怎么可以随便送你用呢，收点钱也就算是正常也算是在预料之中啦。现在的话，好像已经下放到地图数据公司了，就是看这个地图数据公司的经营状况，大概会出货多少份电子地图，然后一次性收取地图数据公司多少钱，可能是多少百万，然后这个钱呢，你们数据公司就自己找你们的导航软件公司的客户收吧，算在每一台设备中的许可费，恩，国家的办事效率变高了，一次直接从导航电子地图公司收费比逐个收取导航软件公司的钱要来的容易和不那么麻烦。\r\n\r\n现阶段，有些人或者组织，为了自己的利益，将导航软件和导航地图进行破解，并发现了导航电子地图中存在的地图偏差，所以就采取人为的手段，将地图反加密，将虚假的坐标转换成标准的WGS84坐标，最笨的方法就是线性的平移，大概偏差的距离为500米，基本上能够反回来，但误差较大，特别是南北距离加大的情况下，而聪明一点的方法，用matlab等工具计算出其中的曲线，然后反转回来。多么的可怕那，这是触犯国家法律的行为，国家的安全就这样被你们破坏了，这是一个刑事问题，而不是简单的破解软件破解地图的经济犯罪问题了。请大家务必务必遵守国家的法律，不要干出这样的傻事出来，出了事谁都保不了你，毕竟你将成为国家的敌人。\r\n\r\n<wbr /> <wbr /> <wbr /> 最后，说说保密插件带来的弊端，好处不容忽视，国家为了安全考虑，保密了就安全了，但弊端是，制造了人为的障碍，非常的不好用，比如导航软件出来的坐标，不能和Google Earth等国际软件匹配，Google Earth和Map在国内基本上就是废物。进一步带来的导航问题是，寻宝、分享等许多好玩的GPS活动，都无法在大陆地区展开，这一点真的让人很无奈。当然，也有一些时候，由于导航软件的保密插件问题，导致不能导航等等。保密插件，是一个让人哭笑不得的东西，就如同国际的WGS84坐标对我们的54坐标或者80坐标，就如同最近的国家部门准备开发“影像中国”反制google earth的泄密问题。等等种种，法律不可逾越，但我们也不希望人为的制造麻烦，或者为了更深入的经济利益。','gps纠偏及大陆地图偏移原因','','publish','open','open','','gps%e7%ba%a0%e5%81%8f%e5%8f%8a%e5%a4%a7%e9%99%86%e5%9c%b0%e5%9b%be%e5%81%8f%e7%a7%bb%e5%8e%9f%e5%9b%a0','','','2013-09-07 22:01:24','2013-09-08 06:01:24','','0','http://www.yanue.net/?p=845','0','post','','3');
INSERT INTO `wp_posts` VALUES('817','1','2013-08-29 01:54:40','2013-08-29 09:54:40','我是执行一下命令安装的\r\n<div>\r\n<div>sudo apt-get install dia</div>\r\n</div>\r\n打开软件后发现不能输入中文，网上搜索一圈后找到以下解决方案\r\n<div>\r\n<div> sudo vi /usr/bin/dia</div>\r\n</div>\r\n然后把\r\n\r\ndia-gnome --integrated \"$@\"\r\n\r\n修改成\r\n<div>\r\n<div>\r\n<div> dia-gnome  \"$@\"</div>\r\n</div>\r\n</div>\r\n重新启动dia，输入法选择系统默认（我的系统输入法是ibus），就可以输入中文了\r\n\r\n不过这样一改，工具条变成浮动的了\r\n\r\n另外，发现windows下dia，默认也是不能输入中文的，解决办法倒是简单些：\r\n\r\ndia的输入法菜单里选择“简单”，就可以输入中文了\r\n\r\nxp系统搜狗输入法下测试成功\r\n\r\n来自:<a href=\"http://blog.csdn.net/tsxw24/article/details/8622518\">http://blog.csdn.net/tsxw24/article/details/8622518</a>','dia 在Linux(ubuntu)下无法输入中文的解决办法','','publish','open','open','','dia-%e5%9c%a8linuxubuntu%e4%b8%8b%e6%97%a0%e6%b3%95%e8%be%93%e5%85%a5%e4%b8%ad%e6%96%87%e7%9a%84%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95','','','2013-08-29 01:54:40','2013-08-29 09:54:40','','0','http://www.yanue.net/?p=817','0','post','','0');
INSERT INTO `wp_posts` VALUES('821','1','2013-09-09 07:17:40','2013-09-09 15:17:40','以前一直都是弄一个ubuntu的live cd启动盘进行安装，每次都带盘，很麻烦，usb live cd制作参考: <a href=\"http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows\">http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows</a> 而wubi方法一般现在都不能成功引导，所以还是直接用硬盘引导安装比较妥。下面是整理来自网络的文章和自己的实际情况,我的环境是win8(windows下应该通用，xp不敢保证)，装的是ubuntu 13.04。\r\n\r\n1）首先还是分区，在计算机上右键--管理--磁盘管理\r\n\r\n装Ubuntu分配的硬盘大小最好是(20G以上）不要太小，这里请注意，Ubuntu和Windows文件系统完全不同，所以我们划好要给Ubuntu的分区后，删除卷。到时候，安装好的ubuntu的分区，在Windows下是看不到的，但是进入Ubuntu是可以访问Windows的磁盘的。这才叫双系统的吧，和wubi那种可不一样哦。\r\n\r\n2）准备两个东西：\r\n<span style=\"color: #ff0000;\">EasyBCD</span>软件（EasyBCD 2.2 下载见 <a href=\"http://dl.pconline.com.cn/download/90611.html\">http://dl.pconline.com.cn/download/90611.html</a> ）\r\n\r\n<span style=\"color: #ff0000;\">Ubuntu 13.04</span>的iso镜像 :<a href=\"http://ubuntu1304.cdn.mirrors.ustc.edu.cn/ubuntu-releases/13.04/ubuntu-13.04-desktop-i386.iso\">http://ubuntu1304.cdn.mirrors.ustc.edu.cn/ubuntu-releases/13.04/ubuntu-13.04-desktop-i386.iso</a>\r\n\r\n3）下面安装好后打开<a href=\"http://www.linuxidc.com/Linux/2012-10/72140.htm\" target=\"_blank\">EasyBCD</a>软件，可以看到现在我们的计算机只有一个启动“入口”，我们来给他加一个，第一步选择添加新条目（添加移动入口点），\r\n\r\n<a href=\"http://www.yanue.net/wp-content/uploads/2013/09/QQ图片20130909223947.jpg\"><img class=\"alignnone size-full wp-image-858\" alt=\"QQ图片20130909223947\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/QQ图片20130909223947.jpg\" width=\"583\" height=\"489\" /></a>\r\n\r\n第2步选NeoGrub，第3步点安装点保存 ，接着是配置（第4步），\r\n\r\n<a href=\"http://www.yanue.net/wp-content/uploads/2013/09/QQ图片20130909224027.jpg\"><img class=\"alignnone size-full wp-image-859\" alt=\"QQ图片20130909224027\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/QQ图片20130909224027.jpg\" width=\"583\" height=\"489\" /></a>\r\n\r\n然后就会出现一个menu.lst文件\r\n\r\n<a href=\"http://www.yanue.net/wp-content/uploads/2013/09/QQ图片20130909224403.jpg\"><img class=\"alignnone  wp-image-860\" alt=\"QQ图片20130909224403\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/QQ图片20130909224403.jpg\" width=\"822\" height=\"337\" /></a>\r\n\r\n我们要编辑这个文件 因为系统就是这个文件找到我们的Ubuntu的。\r\n\r\n<strong>把下面的 英文 复制进去，把原来的全覆盖掉</strong>\r\n<pre class=\"lang:php decode:true\">title Install Ubuntu\r\nroot (hd0,0)\r\nkernel (hd0,0)/vmlinuz boot=casper iso-scan/filename=/ubuntu-13.04-desktop-i386.iso ro quiet splash locale=zh_CN.UTF-8\r\ninitrd (hd0,0)/initrd.lz</pre>\r\n特别注意:\r\n\r\n<span style=\"color: #ff0000;\"><strong>ubuntu-13.04-desktop-i386.iso</strong></span>是你的iso的名字，别写成我的了，这个要改成你的。\r\n\r\n对于有的电脑上你的第一个盘符并不是C盘，在磁盘管理中可以看出，所以安装时需将(hd0,0)改为（hd0,1）【假设为第二个】。\r\n\r\n保存后重启电脑后就有个引导进入ubuntu试用安装。\r\n\r\n<span style=\"color: #ff0000;\">重要一步：</span>\r\n\r\n在这之前 要按<span style=\"color: #ff0000;\">Ctrl+Alt+T</span> 打开终端，输入代码:<span style=\"color: #ff0000;\">sudo umount -l /isodevice</span>这一命令取消掉对光盘所在 驱动器的挂载（<span style=\"color: #ff0000;\"><strong>注意，这里的-l是L的小写，</strong>-l 与 /isodevice 有一个空格。</span>），否则分区界面找不到分区。\r\n\r\n<a href=\"http://www.yanue.net/wp-content/uploads/2013/09/12110319542247.png\"><img class=\"alignnone size-full wp-image-864\" alt=\"12110319542247\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/12110319542247.png\" width=\"408\" height=\"112\" /></a>\r\n\r\n下面就点击 安装Ubuntu 13.04开始安装，\r\n\r\n点击桌面的安装，选择语言，点“继续”\r\n\r\n<a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-03-ready.png\"><img alt=\"ubuntu 13.04 install 03 ready\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/679f6026c666a5561f01c6281346fd76.png\" width=\"500\" height=\"312\" /></a>\r\n\r\n&nbsp;\r\n\r\n安装类型，有数据最好自己分区，选择“其他选项”\r\n\r\n<a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-05-choi.png\"><img alt=\"ubuntu 13.04 install 05 choi\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/16b43d98c3e999aa429965f3b6c75792.png\" width=\"500\" height=\"312\" /></a>\r\n\r\n&nbsp;\r\n\r\n分区界面\r\n\r\n<a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-06-sda.png\"><img alt=\"ubuntu 13.04 install 06 sda\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/036a12e98c398764644f3465c3479046.png\" width=\"500\" height=\"312\" /></a>\r\n\r\n&nbsp;\r\n\r\n设置根分区（类似windows系统盘）与交换空间（类似windows虚拟内存，Linux需要独立分区）\r\n\r\n<a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-07-format.png\"><img alt=\"ubuntu 13.04 install 07 format\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/dbdd4f82e71f400f04c767a17a61562c.png\" width=\"500\" height=\"312\" /></a>\r\n\r\n&nbsp;\r\n\r\n点击“继续”\r\n\r\n&nbsp;\r\n\r\n<a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-07-format-02.png\"><img alt=\"ubuntu 13.04 install 07 format 02\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/18ddfe93f145004d9ed545e3829466da.png\" width=\"500\" height=\"312\" /></a>\r\n\r\n&nbsp;\r\n\r\n然后开始安装\r\n\r\n<a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-08-start1.png\"><img alt=\"ubuntu 13.04 install 08 start\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/668fb6648a322d147747838f6cc4aa49.png\" width=\"500\" height=\"312\" /></a>\r\n\r\n&nbsp;\r\n\r\n下图，选择地区\r\n\r\n<a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-09-adress.png\"><img alt=\"ubuntu 13.04 install 09 adress\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/70b5201170a09cc2e58be61d5c52d201.png\" width=\"500\" height=\"312\" /></a>\r\n\r\n&nbsp;\r\n\r\n选择语言\r\n\r\n<a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-10-language-choice.png\"><img alt=\"ubuntu 13.04 install 10 language choice\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/c0cd3c57cd3bcce8489c4702c386275a.png\" width=\"500\" height=\"312\" /></a>\r\n\r\n&nbsp;\r\n\r\n设置用户及密码\r\n\r\n&nbsp;\r\n\r\n<a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-11-set-user.png\"><img alt=\"ubuntu 13.04 install 11 set user\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/1d92720c9bcb46fd5bc449052a8570cc.png\" width=\"500\" height=\"312\" /></a>\r\n\r\n&nbsp;\r\n\r\n进入安装，安装过程中，你可以选择一边喝茶一边看安装时的幻灯，看看<a title=\"Ubuntu\" href=\"http://imcn.me/ubuntu\">Ubuntu</a>的功能介绍\r\n\r\n&nbsp;\r\n\r\n<a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-01.png\"><img alt=\"ubuntu 13.04 install 12 installing 01\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/2afd36dfbf441ae84da70e29ee7cac79.png\" width=\"500\" height=\"312\" /></a>\r\n\r\n<a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-02.png\"><img alt=\"ubuntu 13.04 install 12 installing 02\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/9d23713a3b417d5f2d038d601c283049.png\" width=\"500\" height=\"312\" /></a>\r\n\r\n<a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-03.png\"><img alt=\"ubuntu 13.04 install 12 installing 03\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/aff9f0274d90ebb40b88439251d69cd0.png\" width=\"500\" height=\"312\" /></a>\r\n\r\n<a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-05.png\"><img alt=\"ubuntu 13.04 install 12 installing 05\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/d89cf84da38c42d2eaec9a820b6a13bc.png\" width=\"500\" height=\"312\" /></a>\r\n\r\n<a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-06.png\"><img alt=\"ubuntu 13.04 install 12 installing 06\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/219ee8965760ee2d42b9ba785b2fbab1.png\" width=\"500\" height=\"312\" /></a>\r\n\r\n<a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-07.png\"><img alt=\"ubuntu 13.04 install 12 installing 07\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/00ef08cfba1be9158e8a1639c7365d41.png\" width=\"500\" height=\"312\" /></a>\r\n\r\n<a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-08.png\"><img alt=\"ubuntu 13.04 install 12 installing 08\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/585875b7495c676636434ee235b09b49.png\" width=\"500\" height=\"312\" /></a>\r\n\r\n<a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-12-installing-09.png\"><img alt=\"ubuntu 13.04 install 12 installing 09\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/8000d8f31b3b0ef8fbe6cbc3dfe60756.png\" width=\"500\" height=\"312\" /></a>\r\n\r\n&nbsp;\r\n\r\n安装完成，重新启动！！！\r\n\r\n<a href=\"http://imcn.me/wp-content/uploads/2013/05/ubuntu-13.04-install-13-restart.png\"><img alt=\"ubuntu 13.04 install 13 restart\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/863a201e4926cfcf6c6ac1beca1a2bec.png\" width=\"500\" height=\"312\" /></a>\r\n\r\n&nbsp;\r\n\r\n（说明，我安装ubuntu过程中并不未截图，上面图片来自网络）','win8下使用EasyBCD硬盘安装ubuntu','','publish','open','open','','win8%e4%b8%8b%e4%bd%bf%e7%94%a8easybcd%e7%a1%ac%e7%9b%98%e5%ae%89%e8%a3%85ubuntu','','','2013-09-09 07:33:43','2013-09-09 15:33:43','','0','http://www.yanue.net/?p=821','0','post','','2');
INSERT INTO `wp_posts` VALUES('825','1','2013-09-05 18:05:24','2013-09-06 02:05:24','<strong>一、概念数据模型概述\r\n</strong>数据模型是现实世界中数据特征的抽象。数据模型应该满足三个方面的要求：\r\n1）能够比较真实地模拟现实世界\r\n2）容易为人所理解\r\n3）便于计算机实现\r\n\r\n概念数据模型也称信息模型，它以实体－联系(Entity-RelationShip,简称E-R)理论为基础，并对这一理论进行了扩充。它从用户的观点出发对信息进行建模，主要用于数据库的概念级设计。\r\n\r\n通常人们先将现实世界抽象为概念世界，然后再将概念世界转为机器世界。换句话说，就是先将现实世界中的客观对象抽象为实体(Entity)和联系(Relationship),它并不依赖于具体的计算机系统或某个DBMS系统，这种模型就是我们所说的CDM;然后再将CDM转换为计算机上某个DBMS所支持的数据模型，这样的模型就是物理数据模型,即PDM。\r\n\r\nCDM是一组严格定义的模型元素的集合，这些模型元素精确地描述了系统的静态特性、动态特性以及完整性约束条件等，其中包括了数据结构、数据操作和完整性约束三部分。\r\n1）数据结构表达为实体和属性;\r\n2）数据操作表达为实体中的记录的插入、删除、修改、查询等操作;\r\n3）完整性约束表达为数据的自身完整性约束（如数据类型、检查、规则等）和数据间的参照完整性约束（如联系、继承联系等）;\r\n\r\n\r\n<strong>二、实体、属性及标识符的定义</strong>\r\n实体（Entity），也称为实例，对应现实世界中可区别于其他对象的“事件”或“事物”。例如，学校中的每个学生，医院中的每个手术。\r\n每个实体都有用来描述实体特征的一组性质，称之为属性，一个实体由若干个属性来描述。如学生实体可由学号、姓名、性别、出生年月、所在系别、入学年份等属性组成。\r\n\r\n实体集（Entity Set）是具体相同类型及相同性质实体的集合。例如学校所有学生的集合可定义为“学生”实体集，“学生”实体集中的每个实体均具有学号、姓名、性别、出生年月、所在系别、入学年份等性质。\r\n\r\n实体类型（Entity Type）是实体集中每个实体所具有的共同性质的集合，例如“患者”实体类型为：患者｛门诊号，姓名，性别，年龄，身份证号.............｝。实体是实体类型的一个实例，在含义明确的情况下，实体、实体类型通常互换使用。\r\n\r\n实体类型中的每个实体包含唯一标识它的一个或一组属性，这些属性称为实体类型的标识符（Identifier），如“学号”是学生实体类型的标识符，“姓名”、“出生日期”、“信址”共同组成“公民”实体类型的标识符。\r\n\r\n有些实体类型可以有几组属性充当标识符，选定其中一组属性作为实体类型的主标识符，其他的作为次标识符。\r\n\r\n<strong>三、实体、属性及标识符的表达</strong>\r\n<a href=\"http://www.yanue.net/wp-content/uploads/2013/09/200812413341734.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/200812413341734.jpg\" width=\"591\" height=\"273\" border=\"0\" /></a>\r\n\r\n介绍PowerDesigner概念数据模型以及实体、属性创建。\r\n\r\n<strong>一、新建概念数据模型</strong>\r\n1）选择File--&gt;New,弹出如图所示对话框，选择CDM模型（即概念数据模型）建立模型。\r\n<a href=\"http://www.dezai.cn/UploadFiles/200812413342621.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413342621.jpg\" width=\"606\" height=\"347\" border=\"0\" /></a>\r\n\r\n2）完成概念数据模型的创建。以下图示，对当前的工作空间进行简单介绍。（以后再更详细说明）\r\n<a href=\"http://www.dezai.cn/UploadFiles/200812413343371.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413343371.jpg\" width=\"670\" height=\"480\" border=\"0\" /></a>\r\n\r\n3）选择新增的CDM模型，右击，在弹出的菜单中选择“Properties”属性项，弹出如图所示对话框。在“General”标签里可以输入所建模型的名称、代码、描述、创建者、版本以及默认的图表等等信息。在“Notes”标签里可以输入相关描述及说明信息。当然再有更多的标签，可以点击 \"More&gt;&gt;\"按钮，这里就不再进行详细解释。\r\n<img title=\"点击预览原图\" alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413345112.jpg\" width=\"522\" height=\"403\" border=\"0\" />\r\n\r\n<strong>二、创建新实体</strong>\r\n1）在CDM的图形窗口中，单击工具选项版上的Entity工具，再单击图形窗口的空白处，在单击的位置就出现一个实体符号。点击Pointer工具或右击鼠标，释放Entitiy工具。如图所示\r\n<a href=\"http://www.dezai.cn/UploadFiles/200812413346784.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413346784.jpg\" width=\"271\" height=\"265\" border=\"0\" /></a>\r\n2）双击刚创建的实体符号，打开下列图标窗口，在此窗口“General”标签中可以输入实体的名称、代码、描述等信息。\r\n<a href=\"http://www.dezai.cn/UploadFiles/200812413346738.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413346738.jpg\" width=\"521\" height=\"401\" border=\"0\" /></a>\r\n\r\n<strong>三、添加实体属性</strong>\r\n1）在上述窗口的“Attribute”选项标签上可以添加属性，如下图所示。\r\n<a href=\"http://www.dezai.cn/UploadFiles/200812413346472.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413346472.jpg\" width=\"521\" height=\"401\" border=\"0\" /></a>\r\n\r\n注意：\r\n数据项中的“添加属性”和“重用已有数据项”这两项功能与模型中Data Item的Unique code 和Allow reuse选项有关。\r\nP列表示该属性是否为主标识符;D列表示该属性是否在图形窗口中显示;M列表示该属性是否为强制的，即该列是否为空值。\r\n\r\n如果一个实体属性为强制的，那么， 这个属性在每条记录中都必须被赋值，不能为空。2）在上图所示窗口中，点击插入属性按钮，弹出属性对话框，如下图所示。\r\n<a href=\"http://www.dezai.cn/UploadFiles/200812413348811.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413348811.jpg\" width=\"521\" height=\"383\" border=\"0\" /></a>\r\n注意：这里涉及到域的概念，即一种标准的数据结构，它可应用至数据项或实体的属性上\r\n\r\n一、定义属性的标准检查约束\r\n标准检查约束是一组确保属性有效的表达式。在实体属性的特性窗口，打开如图所示的检查选项卡。\r\n<a href=\"http://www.dezai.cn/UploadFiles/200812413351965.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413351965.jpg\" width=\"521\" height=\"383\" border=\"0\" /></a>\r\n\r\n在这个选项卡可以定义属性的标准检查约束，窗口中每项的参数的含义，如下\r\n参数说明Minimum属性可接受的最小数Maximum 属性可接受的最大数Default属性不赋值时，系统提供的默认值Unit单位，如公里、吨、元Format属性的数据显示格式Lowercase属性的赋值全部变为小写字母Uppercase属性的赋值全部变为大写字母Cannot modify该属性一旦赋值不能再修改List Of Values属性赋值列表，除列表中的值，不能有其他的值Label属性列表值的标签\r\n二、定义属性的附加检查\r\n当Standard checks 或Rules 不能满足检查的要求时，可以在Additional Checks选项卡的Server子页上，通过SQL语句中使用%MINMAX%、%LISTVAL%、%RULES%、%UPPER%、%LOWER%几个变量来定义Standard和Rule,如图所示\r\n<a href=\"http://www.dezai.cn/UploadFiles/200812413353150.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413353150.jpg\" width=\"521\" height=\"383\" border=\"0\" /></a>\r\n\r\n%MINMAX%、%LISTVAL%、%UPPER%、%LOWER%\r\n在Standard Check中定义的Minimum 和Maximum、List values 、uppervalues、lowervalues\r\n\r\n%RULES%\r\n在Rules特性窗口Expression选项卡中定义的有效性规则表达式\r\n\r\n一、标识符\r\n标识符是实体中一个或多个属性的集合，可用来唯一标识实体中的一个实例。要强调的是，CDM中的标识符等价于PDM中的主键或候选键。\r\n每个实体都必须至少有一个标识符。如果实体只有一个标识符，则它为实体的主标识符。如果实体有多个标识符，则其中一个被指定为主标识符，其余的标识符就是次标识符了。\r\n\r\n二、如果定义主、次标识符\r\n1）选择某个实体双击弹出实体的属性对话框。在Identifiers选项卡上可以进行实体标识符的定义。如下图所示\r\n\r\n<a href=\"http://www.dezai.cn/UploadFiles/200812413353427.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413353427.jpg\" width=\"521\" height=\"401\" border=\"0\" /></a>\r\n\r\n2）选择第一行“主标识符”，点击属性按钮或双击第一行“主标识符”，弹出属性对话框，如图所示\r\n<a href=\"http://www.dezai.cn/UploadFiles/200812413354790.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413354790.jpg\" width=\"521\" height=\"383\" border=\"0\" /></a>\r\n3）选择\"Attributes\"选项卡，再点击“Add Attributes”工具，弹出如图所示窗口，选择某个属性作为标识符就行了。\r\n<a href=\"http://www.dezai.cn/UploadFiles/200812413355633.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413355633.jpg\" width=\"521\" height=\"383\" border=\"0\" /></a><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413355368.gif\" />\r\n\r\n一、数据项\r\n数据项（Data Item）是信息存储的最小单位，它可以附加在实体上作为实体的属性。\r\n注意：模型中允许存在没有附加至任何实体上的数据项。\r\n\r\n二、新建数据项\r\n1）使用“Model”---&gt; Data Items 菜单，在打开的窗口中显示已有的数据项的列表，点击 “Add a Row”按钮，创建一个新数据项，如图所示\r\n<a href=\"http://www.dezai.cn/UploadFiles/200812413356660.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413356660.jpg\" width=\"518\" height=\"328\" border=\"0\" /></a>\r\n\r\n2）当然您可以继续设置具体数据项的Code、DataType、Length等等信息。这里就不再详细说明了。\r\n\r\n三、数据项的唯一性代码选项和重用选项\r\n使用Tools---&gt;Model Options-&gt;Model Settings。在Data Item组框中定义数据项的唯一性代码选项(Unique Code)与重用选项（Allow Reuse）。\r\n注意：\r\n如果选择Unique Code复选框 ，每个数据项在同一个命名空间有唯一的代码，而选择Allow reuse ，一个数据项可以充当多个实体的属性。\r\n<a href=\"http://www.dezai.cn/UploadFiles/200812413357337.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413357337.jpg\" width=\"553\" height=\"423\" border=\"0\" /></a>\r\n\r\n四、在实体中添加数据项\r\n1）双击一个实体符号，打开该实体的属性窗口。\r\n2）单击Attributes选项卡，打开如下图所示窗口\r\n<a href=\"http://www.dezai.cn/UploadFiles/20081241340846.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241340846.jpg\" width=\"516\" height=\"439\" border=\"0\" /></a>\r\n\r\n注意：\r\nAdd a DataItem 与 Reuse a DataItem的区别在于\r\nAdd a DataItem 情况下，选择一个已经存在的数据项，系统会自动复制所选择的数据项。如果您设置了UniqueCode选项，那系统在复制过程中，新数据项的Code会自动生成一个唯一的号码，否则与所选择的数据项完全一致。\r\n\r\n\r\nReuse a DataItem情况下，只引用不新增，就是引用那些已经存在的数据项，作为新实体的数据项<img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413355368.gif\" />\r\n\r\n<strong>一、 联系\r\n</strong>联系（Relationship）是指实体集这间或实体集内部实例之间的连接。\r\n\r\n实体之间可以通过联系来相互关联。与实体和实体集对应，联系也可以分为联系和联系集，联系集是实体集之间的联系，联系是实体之间的联系，联系是具有方向性的。联系和联系集在含义明确的情况之下均可称为联系。\r\n\r\n按照实体类型中实例之间的数量对应关系，通常可将联系分为4类，即一对一（ONE TO ONE）联系、一对多（ONE TO MANY）联系、多对一（MANY TO ONE）联系和多对多联系（MANY TO MANY）。<strong> 二、 建立联系</strong>\r\n在CDM工具选项板中除了公共的工具外，还包括如下图所示的其它对象产生工具。\r\n<a href=\"http://www.dezai.cn/UploadFiles/20081241342987.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241342987.jpg\" width=\"319\" height=\"284\" border=\"0\" /></a>\r\n在图形窗口中创建两个实体后，单击“实体间建立联系”工具，单击一个实体，在按下鼠标左键的同时把光标拖至别一个实体上并释放鼠标左键，这样就在两个实体间创建了联系，右键单击图形窗口，释放Relationship工具。如下图所示\r\n<a href=\"http://www.dezai.cn/UploadFiles/20081241342304.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241342304.jpg\" width=\"354\" height=\"94\" border=\"0\" /></a>\r\n\r\n<strong>三、 四种基本的联系\r\n</strong>即一对一（ONE TO ONE）联系、一对多（ONE TO MANY）联系、多对一（MANY TO ONE）联系和多对多联系（MANY TO MANY）。如图所示\r\n<a href=\"http://www.dezai.cn/UploadFiles/20081241342982.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241342982.jpg\" width=\"377\" height=\"337\" border=\"0\" /></a>\r\n<strong>四、 其他几类特殊联系</strong>\r\n\r\n除了4种基本的联系之外，实体集与实体集之间还存在标定联系（Identify Relationship）、非标定联系（Non-Identify RelationShip）和递归联系（Recursive Relationship）。\r\n\r\n<em><strong>标定联系：</strong>\r\n</em>每个实体类型都有自己的标识符，如果两个实体集之间发生联系，其中一个实体类型的标识符进入另一个实体类型并与该实体类型中的标识符共同组成其标识符时，这种联系则称为标定联系，也叫依赖联系。反之称为非标定联系，也叫非依赖联系。\r\n注意：\r\n在非标定联系中，一个实体集中的部分实例依赖于另一个实例集中的实例，在这种依赖联系中，每个实体必须至少有一个标识符。而在标定联系中，一个实体集中的全部实例完全依赖于另个实体集中的实例，在这种依赖联系中一个实体必须至少有一个标识符，而另一个实体却可以没有自己的标识符。没有标识符的实体用它所依赖的实体的标识符作为自己的标识符。\r\n\r\n换句话来理解，在标定联系中，一个实体（选课）依赖 一个实体（学生），那么（学生）实体必须至少有一个标识符，而（选课）实体可以没有自己的标识符，没有标标识符的实体可以用实体（学生）的标识符作为自己的标识符。\r\n<a href=\"http://www.dezai.cn/UploadFiles/20081241344580.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241344580.jpg\" width=\"419\" height=\"271\" border=\"0\" /></a>\r\n\r\n\r\n<em><strong>递归联系：</strong>\r\n</em>递归联系是实体集内部实例之间的一种联系，通常形象地称为自反联系。同一实体类型中不同实体集之间的联系也称为递归联系。\r\n\r\n例如：在“职工”实体集中存在很多的职工，这些职工之间必须存在一种领导与被领导的关系。又如“学生”实体信中的实体包含“班长”子实体集与“普通学生”子实体集，这两个子实体集之间的联系就是一种递归联系。创建递归联系时，只需要单击“实体间建立联系”工具从实体的一部分拖至该实体的别一个部分即可。如图\r\n<a href=\"http://www.dezai.cn/UploadFiles/20081241345999.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241345999.jpg\" width=\"200\" height=\"140\" border=\"0\" /></a>\r\n\r\n<strong>五、 定义联系的特性</strong>\r\n\r\n在两个实体间建立了联系后，双击联系线，打开联系特性窗口，如图所示。\r\n<img title=\"点击预览原图\" alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241346114.jpg\" width=\"522\" height=\"490\" border=\"0\" />\r\n\r\n<strong>六、 定义联系的角色名\r\n</strong>在联系的两个方向上各自包含有一个分组框，其中的参数只对这个方向起作用，Role Name为角色名，描述该方向联系的作用，一般用一个动词或动宾组表。\r\n如：“学生 to 课目 ” 组框中应该填写“拥有”，而在“课目To 学生”组框中填写“属于”。（在此只是举例说明，可能有些用词不太合理）。\r\n<strong>七、 定义联系的强制性</strong>\r\nMandatory 表洋这个方向联系的强制关系。选中这个复选框，则在联系线上产生一个联系线垂直的竖线。不选择这个复选框则表示联系这个方向上是可选的，在联系线上产生一个小圆圈。\r\n\r\n<strong>八、 有关联系的基数</strong>\r\n联系具有方向性，每个方向上都有一个基数。\r\n\r\n举例，\r\n“系”与“学生”两个实体之间的联系是一对多联系，换句话说“学生”和“系”之间的联系是多对一联系。而且一个学生必须属于一个系，并且只能属于一个系，不能属于零个系，所以从“学生”实体至“系”实体的基数为“1,1”，从联系的另一方向考虑，一个系可以拥有多个学生，也可以没有任何学生，即零个学生，所以该方向联系的基数就为“0,n”,如图所示\r\n<a href=\"http://www.dezai.cn/UploadFiles/20081241347617.jpg\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241347617.jpg\" width=\"372\" height=\"99\" border=\"0\" /></a>\r\n<img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/200812413355368.gif\" />CDM是大多数开发者使用PD时最先创建的模型，也是整个数据库设计最高层的抽象。CDM是建立在传统的ER图模型理论之上的，ER图中有三大主要元素：实体型，属性和联系。其中实体型对应到CDM中的Entity，属性对应到CDM中每个Entity的Attribute，在概念上基本上是一一对应的。但在联系上，CDM有了比较大的扩展，除了保留ER图原有的RelationShip概念之外，还增加了Association，Inheritance两种实体关系，下面就让我们分别看看这些关系的用法和之间的区别（下图中被标红的工具栏按钮就是用来向实体中添加这些关系的）。\r\n<img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241348818.gif\" width=\"499\" height=\"34\" border=\"0\" />\r\n另外，在介绍所有这些CDM中的元素之前，笔者先给出一个很简单的CDM图，是对我们最最熟悉的学校场景的一个建模，下文中提到的所有概念在图中都有体现，大家在看下文的时候可以对照着来看：\r\n<img title=\"点击预览原图\" alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241348356.gif\" width=\"635\" height=\"492\" border=\"0\" />\r\n\r\n一. RelationShip(联系)\r\n先给出PD手册里对联系的定义：“A relationship is a link between entities. For example, in a CDM that manages human resources, the relationship Member links the entities Employee and Team, because employees can be members of teams. This relationship expresses that each employee works in a team and that each team has employees.” 可见，也许联系的概念真的太简单了吧，所以反而不那么好表述，所以PD的文档里也是用一个例子来说明出现了什么样的情况我们就认为两个实体间是有联系的。\r\n当我们提起实体间联系的时候，最先想到的恐怕是one to one，one to many 和many to many这三种联系类型，这些联系类型也是大家最熟悉的。笔者对ER图原本的概念并不精通，但在CDM中，联系还有另外三个可以设置的属性：mandatory（强制性联系）, dependent（依赖性联系/标定关联） 和dominant（统制联系）。这些属性对后面PDM的生成都有比较大的影响，需要我们一一有所了解。它们都是在联系的属性控制面板中设定的，见下图：\r\n<a href=\"http://www.dezai.cn/UploadFiles/20081241349141.gif\" target=\"_blank\"><img alt=\"\" src=\"http://www.dezai.cn/UploadFiles/20081241349141.gif\" width=\"523\" height=\"470\" border=\"0\" /></a>\r\n1.mandatory\r\n联系是否具有强制性，指的是实体间是不是一定会出现这种联系；或者换句话说，当我们在谈及一个联系的应用场景的时候，联系对应的那两个实体型的实体实例的个数可不可能为零。也许这样的解释还是有点抽象，让我们举两个联系的例子，一个是对两边的实体都有强制性的，另一个则不然。\r\n（1）教师--学生 联系\r\n这个联系首先是一个多对多联系，因为每个老师可以教多个学生，每个学生也都有多个老师来负责他们的学业。同时，这个联系对教师和学生都是强制性的，也就是说，不存在任何一个老师，他不负责任何一个学生的教学；也不存在任何一个学生，他没有任何一个任课老师。\r\n（2）学生--俱乐部 联系\r\n这个联系也是一个多对多关系，但它对学生这个实体型而言就不是强制的（Optional,可选的）。每个俱乐部都有至少一个学生参加，但并不是每个学生都要去参加俱乐部的活动。完全可以有一些学生，他们什么俱乐部都没参加。\r\n上面的例子主要是从概念的角度来区分了mandatory和optional的区别。实际上如果把这个模型对应到我们最后生成的表，如果A-B间的联系对A是mandatory的话，那么如果在A里面如果包含B的外键，这个外键不能为空值，反之可以为空值。后面我们谈到PDM和实际数据库的时候，大家会看到这一点。\r\n2.dependent\r\n每一个Entity型都有自己的Identifier，如果两个Entity型之间发生关联时，其中一个Entity型的Identifier进入另一个Entity型并与该 Entity型中的Identifier共同组成其Identifier时，这种关联称为标定关联,也叫依赖性关联(dependent relationship)。一个Entity型的Identifier进入另一个Entity型后充当其非Identifier时，这种关联称为非标定关联,也叫非依赖关联。\r\n概念的定义说起来还是有些拗口，说白了其实就是主-从表关系，从表要依赖于主表。比如在我们系统里要记录教师休假的情况，有一个实体型Holiday，其属性包括休假的开始时间和天数，每次有教师休假的时候，都要在这个表留下记录。从我们的场景描述中可以看到，实体型假期必须依附于实体型教师，即对于每一个假期实例，必须指向某一个教师实例。\r\n对于依赖型联系，必须注意它不可能是一个多对多联系，在这个联系中，必须有一个作为主体的实体型。一个dependent联系的从实体可以没有自己的identifier.\r\n3.dominant\r\n这个联系属性是最为简单的，它仅作用于一对一联系，并指明这种联系中的主从表关系。在A,B两个实体型的联系中，如果A--&gt;B被指定为dominant，那么A为这个一对一联系的主表，B为从表，并且在以后生成的PDM中会产生一个引用（如果不指定dominant属性的话会产生两个引用）。比如老师和班级之间的联系，因为每个班级都有一个老师做班主任，每个老师也最多只能做一个班级的班主任，所以是一个一对一关系。同时，我们可以将老师作为主表，用老师的工号来唯一确定一个班主任联系。\r\n\r\n二.Association（关联）\r\n先来看一下PD给association的定义：“An association is a connection between entities. In the Merise modeling methodology an association is used to connect several entities that each represents clearly defined objects, but are linked by an event, which may not be so clearly represented by another entity.”。\r\n在上一小段提到的那些RelationShip，在很多情况下（特别是多对多关系中），我们会把联系专门提出来，作为一个实体型放在两个需要被关联的实体型中间（在PD中，选中任何一个联系，在右键的弹出菜单中选择“Change to Entity”命令即可完成联系转实体的操作）。但有的时候，把若干个实体型之间的联系抽象为一个实体型可能不太合适，这个时候你可以选择为这些实体型建立一个association，那么在生成PDM的时候，所有这些相关实体型的identifier都会被加入到association对应生成的表模型中。所以，说白了，其实association就是实体型的一种特例，用来在建模的时候更确切的表达实体间的关联信息。在PD的文档中举了一个录音带、顾客、商店三个实体型在租借录音带这个场景上发生关联，然后把租借定义为上述三个实体型之间的association的例子，非常确切。在我们的学校模型里，我定义了家访做为老师和学生实体型中间的一个association，在接下来产生的PDM中大家就可能看到这种定义所产生的效果。\r\n\r\n三.Inheritance（继承）\r\n这种关系在概念层面是最容易理解的了，本文就不赘述了。\r\n\r\n来自：<a href=\"http://blog.csdn.net/shimiso/article/details/9195031\">http://blog.csdn.net/shimiso/article/details/9195031</a>','PowerDesigner画(CDM)ER图详细教程','','publish','open','open','','powerdesigner%e7%94%bbcdmer%e5%9b%be%e8%af%a6%e7%bb%86%e6%95%99%e7%a8%8b','','','2013-09-05 18:05:31','2013-09-06 02:05:31','','0','http://www.yanue.net/?p=825','0','post','','0');
INSERT INTO `wp_posts` VALUES('828','1','2013-09-05 18:07:32','2013-09-06 02:07:32','1、Data Item name <wbr />uniquencess\r\n\r\nEntity Attribute code uniqueness\r\n我想建两个实体，这两个实体都有id属性，我想用同样的名字都叫id，在生成物理模型的时候提示：\r\n- Entity Attribute name uniqueness\r\nError The following entity attribute does not have unique name:\r\n-&gt; Entity Attribute \'Entity_1.id\' (&lt;Model&gt;::Entity_1)\r\n-&gt; Entity Attribute \'Entity_2.id\' (&lt;Model&gt;::Entity_2)\r\n- Entity Attribute code uniqueness\r\nError The following entity attribute does not have unique code:\r\n-&gt; Entity Attribute \'Entity_1.id\' (&lt;Model&gt;::Entity_1)\r\n-&gt; Entity Attribute \'Entity_2.id\' (&lt;Model&gt;::Entity_2)\r\n请问如何修改，才能生成物理模型，我不希望改实体的属性名\r\n我用的Power Designer 15.1\r\n<span style=\"color: #ff8000;\">------解决方案--------------------------------------------------------</span>\r\nTool-&gt;check model...去掉Entity Attribute下Entity Attribute name uniqueness 和 Entity Attribute code uniqueness\r\n<div><span style=\"color: #333333; font-family: Arial;\">2、</span><a href=\"http://blog.csdn.net/eidolon8/article/details/7267748\">This data item is already used in a primary identifie</a></div>\r\n<div>菜单栏上的“tool”-〉“Model Option”-〉“Model Setting”把右边的“Data Item”数据框中的“Unique code”选项框取消掉。<img alt=\"\" src=\"http://www.yanue.net/wp-content/uploads/2013/09/13090239-42c617c7f9fa46d5954906856b18b18d.jpg\" />&nbsp;\r\n\r\n如果在由CDM-〉PDM转换的时候提示属性错误，请把PDM GENERATION OPTIONS中的Check model钩取消掉.\r\n\r\n3、Incomplete join\r\n\r\n产生错误的reference所关联的两个表中主键不统一,调整为一致后即可解决此错误\r\n\r\n4、Existence of index colum <wbr />\r\n\r\n主键与外码联系出现错误(解决:双击错误记录至index Properties窗口--&gt;Columns--&gt;在Columns Defintion下拉列表中选择正确的约束),实在不行，可以将有问题的表重新建一遍，问题也可以解决。\r\n\r\n5、Existence of entity attribute\r\n\r\n对应表实体缺少主键, 而属性里\"identifier\"项有标识,删除其中的identifier_x即可解决,或者添加主键\r\n\r\n6、Entity <wbr />Attribute <wbr />code <wbr />uniueness\r\n\r\n在Tools——Models <wbr />Options——Notation，将其设置为E/R+merise\r\n\r\n7、Table code maximum length\r\n\r\n点击Database -&gt; Edit Current DBMS <wbr />\r\n在Script-&gt;Objects-&gt; <wbr />\r\n下面： <wbr />\r\nTable-Maxlen和 <wbr />\r\nColumn-Maxlen两个值改大。\r\n\r\n来自：<a href=\"http://blog.sina.com.cn/s/blog_9a4d43d801019uup.html\">http://blog.sina.com.cn/s/blog_9a4d43d801019uup.html</a>\r\n\r\n</div>','powerdesigner 常见错误','','publish','open','open','','powerdesigner-%e5%b8%b8%e8%a7%81%e9%94%99%e8%af%af','','','2013-09-05 18:23:16','2013-09-06 02:23:16','','0','http://www.yanue.net/?p=828','0','post','','0');
INSERT INTO `wp_posts` VALUES('853','1','2013-09-07 23:07:28','2013-09-08 07:07:28','<address>gps设备获取的经纬度跟实际地图经纬度有偏移，大陆地图是这样的。google地图存在偏移是众所周知的事实，说到底就是<strong>火星坐标系和真实gps之间</strong>的转换，我国所有的地图为了安全起见都作了加偏。</address>具体偏移原因见: <a title=\"gps纠偏及大陆地图偏移原因\" href=\"http://www.yanue.net/?p=845\" rel=\"bookmark\">gps纠偏及大陆地图偏移原因</a>。\r\n\r\n总之，gps是从卫星上获取的经纬度，是准确的：<a title=\"GPS坐标转换经纬度及换算方法\" href=\"http://www.yanue.net/archives/413.html\" rel=\"bookmark\">GPS坐标转换经纬度及换算方法</a>。实际的地图都在原有的基础上加偏移值，天朝说是为了安全呗。因此，gps获取出来的经纬度直接在地图上展示，那肯定是不准确的，有偏差。当然不管google map,百度地图，搜狗地图等每一个都一样，但是他们的偏移算法肯定不一样，偏移的值也不一样。\r\n\r\ngoogle的国内地图坐标都是加过密的，由高德提供。\r\n百度的地图数据也是加过密的，估计是四维提供。\r\n但是不同批次的数据加密后的坐标是有偏差的。\r\n总而言之，相对GPS数据，两种地图都是有偏差的。\r\n\r\n经纬度在<a href=\"http://maps.google.com/\" target=\"_blank\">http://maps.google.com</a>和google earth上可以准确对应，但是在ditu.google.cn和百度地图上得到的总是偏移的\r\n\r\n既然有了偏移，就需要使用纠偏来解决gps定位问题，\r\n\r\nGPS坐标转百度坐标方法：http://api.map.baidu.com/ag/coord/convert?from=0&amp;to=4&amp;x=\'.经度.\'&amp;y=\'.纬度\r\n\r\ngoogle目前没有类似百度这样的，只能通过纠偏数据库进行校验。\r\n\r\n纠偏数据库都是要钱的，0.001精度2-5k都有卖，我网上找到一个0.01精度的，是一个 offset.dat 文件, 总共74.9M,数据为9813675条,不敢独享，分享给大家.\r\n\r\n<span style=\"color: #ff6600;\">google纠偏数据库</span>：<a title=\"google纠偏数据库\" href=\"http://map.yanue.net/offset.dat\">http://map.yanue.net/offset.dat</a>.\r\n\r\n基于该数据库，我搞的纠偏接口：\r\n\r\n<span style=\"color: #ff6600;\">免费接口</span>: <a href=\"http://map.yanue.net/gpsApi.php?lat=22.502412986242&amp;lng=113.93832783228\" target=\"_blank\">http://map.yanue.net/gpsApi.php</a>\r\n\r\n参数:\r\n\r\n<b>lat</b>: gps原始纬度,如22.502412986242,请保留小数点3位以上\r\n\r\n<b>lng</b>: gps原始经度,如113.93832783228,请保留小数点3位以上\r\n\r\ngps纠偏工具：<a title=\"GPS坐标转换经纬度\" href=\"http://map.yanue.net/gps.html\">http://map.yanue.net/gps.html</a>\r\n\r\n说正题，有了偏移数据库之后，根据算法就可以完成目的了。\r\n\r\n下面贴出php利用offset.dat修正gps经纬度的算法：\r\n<pre class=\"lang:php decode:true\">&lt;?php\r\n/**\r\n * gps经纬度修正\r\n *\r\n * 功能说明:利用0.01精度校正库offset.dat文件修正中国地图经纬度偏移。\r\n *         该校正适用于 Google map China, Microsoft map china ,MapABC 等，这些地图构成方法是一样的。\r\n * 使用方法:\r\n        $gps = new GpsOffset();\r\n        echo $gps-&gt;geoLatLng($lat,$lng);\r\n * 注意: 请在服务器开启offset.dat读取权限\r\n * @author yanue (yanue@outlook.com)\r\n * @version 1.0\r\n * @copyright yanue.net\r\n * @time 2013-06-30\r\n */\r\n\r\nclass GpsOffset {\r\n    const datMax = 9813675;# 该文件最大数据为9813675条\r\n    private $fp = null;\r\n    /*\r\n     * 构造函数，打开 offset.dat 文件并初始化类中的信息\r\n     * @param string $filename\r\n     * @return null\r\n     */\r\n    function __construct($filename = \"offset.dat\") {\r\n        if (($this-&gt;fp = @fopen($filename, \'rb\')) !== false) {\r\n            //注册析构函数，使其在程序执行结束时执行\r\n            register_shutdown_function(array(&amp;$this, \'__construct\'));\r\n        }\r\n    }\r\n\r\n    /*\r\n     * 读取dat文件并查找偏移像素值\r\n     * 说明:\r\n     * dat文件结构:该文件为0.01精度校正数据,并以lng和lat递增形式组合.\r\n     * 其中以8个字节为一组:\r\n     * lng : 2字节经度,如12151表示121.51\r\n     * lat : 2字节纬度,如3130表示31.30\r\n     * x_off : 2字节地图x轴偏移像素值\r\n     * y_off : 2字节地图y轴偏移像素值\r\n     * 因此采用二分法并以lng+lat的值作为条件\r\n     * 注意:请在服务器开启offset.dat读取权限\r\n     *\r\n     */\r\n    private function fromEarthToMars($lat,$lng){\r\n        $tmpLng=intval($lng * 100);\r\n        $tmpLat=intval($lat * 100);\r\n        $left = 0; //开始记录\r\n        $right = self::datMax; //结束记录\r\n        $searchLngLat = $tmpLng.$tmpLat;\r\n        // 采用用二分法来查找查数据\r\n        while($left &lt;= $right){\r\n            $recordCount =(floor(($left+$right)/2))*8; // 取半\r\n            fseek ( $this-&gt;fp, $recordCount , SEEK_SET ); // 设置游标\r\n            $c = fread($this-&gt;fp,8); // 读8字节\r\n            $lng = unpack(\'s\',substr($c,0,2));\r\n            $lat = unpack(\'s\',substr($c,2,2));\r\n            $x = unpack(\'s\',substr($c,4,2));\r\n            $y = unpack(\'s\',substr($c,6,2));\r\n            $curLngLat=$lng[1].$lat[1];\r\n            if ($curLngLat==$searchLngLat){\r\n                fclose($this-&gt;fp);\r\n                return array(\'x\'=&gt;$x[1],\'y\'=&gt;$y[1]);\r\n                break;\r\n            }else if($curLngLat&lt;$searchLngLat){\r\n                $left=($recordCount/8) + 1;\r\n            }else if($curLngLat&gt;$searchLngLat){\r\n                $right=($recordCount/8) - 1;\r\n            }\r\n        }\r\n        fclose($this-&gt;fp);\r\n        return false;\r\n    }\r\n\r\n    // 转换经纬度到\r\n    public function geoLatLng($lat,$lng){\r\n        $offset =$this-&gt;fromEarthToMars($lat,$lng);\r\n        $lngPixel=$this-&gt;lngToPixel($lng,18)+$offset[\'x\'];\r\n        $latPixel=$this-&gt;latToPixel($lat,18)+$offset[\'y\'];\r\n        $mixLat = $this-&gt;pixelToLat($latPixel,18);\r\n        $mixLng = $this-&gt;pixelToLng($lngPixel,18);\r\n        return array(\'lat\'=&gt;$mixLat,\'lng\'=&gt;$mixLng);\r\n    }\r\n    //经度到像素X值\r\n    private function lngToPixel($lng,$zoom) {\r\n        return ($lng+180)*(256&lt;&lt;$zoom)/360;\r\n    }\r\n\r\n    //纬度到像素Y值\r\n    private function latToPixel($lat, $zoom) {\r\n        $siny = sin($lat * pi() / 180);\r\n        $y=log((1+$siny)/(1-$siny));\r\n        return (128&lt;&lt;$zoom)*(1-$y/(2*pi()));\r\n    }\r\n\r\n    //像素X到经度\r\n    private function pixelToLng($pixelX,$zoom){\r\n        return $pixelX*360/(256&lt;&lt;$zoom)-180;\r\n    }\r\n\r\n    //像素Y到纬度\r\n    private function pixelToLat($pixelY, $zoom) {\r\n        $y = 2*pi()*(1-$pixelY /(128 &lt;&lt; $zoom));\r\n        $z = pow(M_E, $y);\r\n        $siny = ($z -1)/($z +1);\r\n        return asin($siny) * 180/pi();\r\n    }\r\n\r\n    public function __destruct(){\r\n        if($this-&gt;fp){\r\n            fclose($this-&gt;fp);\r\n        }\r\n        $this-&gt;fp = null;\r\n    }\r\n}</pre>\r\n参考文章：\r\n\r\n<a href=\"http://go2log.com/2011/08/30/%E4%B8%AD%E5%9B%BD%E5%9C%B0%E5%9B%BE%E5%81%8F%E7%A7%BB%E6%A0%A1%E6%AD%A3php%E7%AE%97%E6%B3%95/\">http://go2log.com/2011/08/30/%E4%B8%AD%E5%9B%BD%E5%9C%B0%E5%9B%BE%E5%81%8F%E7%A7%BB%E6%A0%A1%E6%AD%A3php%E7%AE%97%E6%B3%95/</a>（有c#算法）\r\n\r\n至此，文章完。\r\n\r\n&nbsp;','gps纠偏数据库及gps纠偏算法PHP','','publish','open','open','','gps%e7%ba%a0%e5%81%8f%e6%95%b0%e6%8d%ae%e5%ba%93%e5%8f%8agps%e7%ba%a0%e5%81%8f%e7%ae%97%e6%b3%95php','','http://www.yanue.net/?p=845\nhttp://go2log.com/2011/08/30/%E4%B8%AD%E5%9B%BD%E5%9C%B0%E5%9B%BE%E5%81%8F%E7%A7%BB%E6%A0%A1%E6%AD%A3php%E7%AE%97%E6%B3%95/','2013-09-07 23:07:28','2013-09-08 07:07:28','','0','http://www.yanue.net/?p=853','0','post','','3');
INSERT INTO `wp_posts` VALUES('887','1','2013-09-11 00:05:44','2013-09-11 08:05:44','在用apt-get安装软件时出现了类似于\r\ninstall-info: No dir file specified; try --help for more information.dpkg：处理 gettext (--configure)时出错： 子进程 post-installation script 返回了错误号 1 在处理时有错误发生：\r\nfindutils\r\n<span style=\"color: #ff0000;\">E: Sub-process /usr/bin/dpkg returned an error code (1)</span>\r\n办法如下：\r\n<pre class=\"lang:php decode:true\">sudo mv /var/lib/dpkg/info /var/lib/dpkg/info.bak //现将info文件夹更名\r\nsudo mkdir /var/lib/dpkg/info //再新建一个新的info文件夹\r\nsudo apt-get update</pre>\r\n// 不用解释了吧\r\n<pre class=\"lang:php decode:true\">apt-get -f install xxx\r\nsudo mv /var/lib/dpkg/info/* /var/lib/dpkg/info.bak</pre>\r\n//执行完上一步操作后会在新的info文件夹下生成一些文件，现将这些文件全部移到info.bak文件夹下\r\n<pre class=\"lang:php decode:true\">sudo rm -rf /var/lib/dpkg/info //把自己新建的info文件夹删掉\r\nsudo mv /var/lib/dpkg/info.bak /var/lib/dpkg/info //把以前的info文件夹重新改回名字</pre>\r\n到此问题顺利解决\r\n\r\n第二种方法：\r\n<pre class=\"lang:php decode:true\">for i in /usr/share/fonts/X11/* /usr/share/fonts/truetype/*\r\ndo sudo touch \"$i\"\r\ndone</pre>\r\n第三种方法：\r\n<pre class=\"lang:php decode:true\">sudo apt-get update --fix-missing\r\nsudo apt-get autoremove &amp;&amp; sudo apt-get clean &amp;&amp; sudo apt-get install -f</pre>\r\n参考：<a href=\"http://www.cnblogs.com/jary-wang/archive/2013/05/28/3103829.html\">http://www.cnblogs.com/jary-wang/archive/2013/05/28/3103829.html</a>\r\n\r\n<a href=\"http://www.ubuntukylin.com/ukylin/forum.php?mod=viewthread&amp;tid=3789\">http://www.ubuntukylin.com/ukylin/forum.php?mod=viewthread&amp;tid=3789</a>','ubuntu错误解决E: Sub-process /usr/bin/dpkg returned an error code (1)','','publish','open','open','','ubuntu%e9%94%99%e8%af%af%e8%a7%a3%e5%86%b3e-sub-process-usrbindpkg-returned-an-error-code-1','','','2013-09-13 02:49:10','2013-09-13 10:49:10','','0','http://www.yanue.net/?p=887','0','post','','2');
INSERT INTO `wp_posts` VALUES('893','1','2013-09-11 04:33:55','2013-09-11 12:33:55','在使用mysqldump备份数据库的时候报如下错误，mysqldump命令使用方法参见：<a href=\"http://www.yanue.net/archives/458.html\">http://www.yanue.net/archives/458.html</a>\r\n\r\n<address>mysqldump: Couldn\'t execute \'SET OPTION SQL_QUOTE_SHOW_CREATE=1\': You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'OPTION SQL_QUOTE_SHOW_CREATE=1\' at line 1 (1064)</address>下面解决方法来源于网络，针对我的版本是mysql5.6，问题解决。\r\n\r\n使用命令查看：\r\n<pre class=\"lang:php decode:true\">rpm -qa | grep -i mysql</pre>\r\n经排查发现是数据库版本问题、安装的是mysql5.6 、执行该命令是mysql5.5遗留下来的二进制文件、验证如下\r\n\r\n[root@bogon backup]# which mysqldump\r\n/usr/bin/mysqldump\r\n\r\n最后找到解决办法、用新安装的mysql绝对路径来实现备份\r\n<pre class=\"lang:php decode:true\">#/usr/local/mysql/bin/mysqldump --socket=/tmp/mysql.sock -uroot -p --lock-all-tables zabbix &gt; zabbix.sql</pre>\r\n另外：由于mysql server端的版本为5.6,mysql client端的版本为5.5,所以把mysql client端的版本也升到了5.6,再次执行mysqldump就好了.','解决mysqldump备份报错：SET OPTION SQL_QUOTE_SHOW_CREATE=1','','publish','open','open','','%e8%a7%a3%e5%86%b3mysqldump%e5%a4%87%e4%bb%bd%e6%8a%a5%e9%94%99%ef%bc%9aset-option-sql_quote_show_create1','','\nhttp://www.yanue.net/archives/458.html','2013-09-11 04:36:31','2013-09-11 12:36:31','','0','http://www.yanue.net/?p=893','0','post','','0');
INSERT INTO `wp_posts` VALUES('918','1','2013-09-16 00:07:25','2013-09-16 08:07:25','处理ubuntu中解压zip文件时乱码的问题\r\n<div></div>\r\n<div>第一步 首先安装7zip和convmv\r\n\r\nsudo apt-get install p7zip-full convmv\r\n\r\n第二步 假设zip文件名为open.zip，那么\r\nLANG=C 7z x open.zip\r\nconvmv -f cp936 -t utf8 -r --notest *</div>\r\n<div></div>\r\n<div>使用第一行命令时会解压出一些乱码文件，此时输入第二行命令即可将这些乱码处理掉</div>\r\n<div></div>\r\n<div>解决pdf中中文乱码的问题：</div>\r\n<div>sudo apt-get install poppler-data</div>\r\n<div></div>\r\n<div> rar乱码问题见：<a href=\"http://www.yanue.net/archives/478.html\">http://www.yanue.net/archives/478.html</a></div>\r\n<div></div>\r\n<div>测试成功</div>','ubuntu中解压zip文件时乱码的问题','','publish','open','open','','ubuntu%e4%b8%ad%e8%a7%a3%e5%8e%8bzip%e6%96%87%e4%bb%b6%e6%97%b6%e4%b9%b1%e7%a0%81%e7%9a%84%e9%97%ae%e9%a2%98','','\nhttp://www.yanue.net/archives/478.html','2013-09-16 00:07:36','2013-09-16 08:07:36','','0','http://www.yanue.net/?p=918','0','post','','0');
INSERT INTO `wp_posts` VALUES('930','1','2013-10-06 21:32:43','2013-10-07 05:32:43','<b>语　　法：</b>alias[别名]=[指令名称]\r\n\r\n<b>补充说明：</b>用户可利用alias，自定指令的别名。若仅输入alias，则可列出目前所有的别名设置。　alias的效力仅及于该次登入的操作。若要每次登入是即自动设好别名，可在/etc/profile或自己的~/.bashrc中设定指令的别名。\r\n\r\n还有，如果你想给每一位用户都生效的别名，请把alias la=\'ls -al\' 一行加在/etc/bashrc最后面，\r\n\r\nbashrc是环境变量的配置文件 /etc/bashrc和~/.bashrc 区别就在于\r\n\r\n/etc/bashrc 是设置给全系统\r\n\r\n~/.bashrc 是设置给单用户使用.\r\n\r\n<b>参　　数：</b>若不加任何参数，则列出目前所有的别名设置。\r\n\r\nCentOS5.6自带的alias定义\r\n\r\n取消别名的方法是在命令前加,比如 mkdir<span style=\"text-decoration: underline;\">\r\n</span>\r\n<div>[root@linuxso.com ~]#alais</div>\r\n<div>alias cp=\'cp -i\'</div>\r\n<div>alias l.=\'ls -d .* --color=tty\'</div>\r\n<div>alias ll=\'ls -l --color=tty\'</div>\r\n<div>alias ls=\'ls --color=tty\'</div>\r\n<div>alias mv =\'mv -i\'</div>\r\n<div>alias rm =\'rm -i\'</div>\r\n<div>alias which=\'alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde\'</div>\r\n<div></div>\r\n<div>有的系统里没有ll这个命令,原因就是没有定义ll=\'ls -l --color=tty\'这个别名</div>\r\n<div></div>\r\n<div>利用alias可以把很长的命令变成任意我们喜欢的简短的</div>\r\n<div></div>\r\n<div>设置和修改alias命令别名格式很简单</div>\r\n<div></div>\r\n<div>alias ll=\'ls -l --color=tty\'</div>\r\n<div> source .bashrc <wbr />  <wbr />#让我们的环境生效</div>\r\n如果想永久生效,就把这条写入到 /etc/bashrc里面\r\n\r\n<b>修改后，</b>通过以下命令即可生效：\r\n\r\nsource /etc/bashrc\r\n\r\n<span style=\"color: #ff0000;\"><b>或者重新登录即可</b></span>','linux alias 自定义命令','','publish','open','open','','linux-alias-%e8%87%aa%e5%ae%9a%e4%b9%89%e5%91%bd%e4%bb%a4','','','2013-10-06 21:34:39','2013-10-07 05:34:39','','0','http://www.yanue.net/?p=930','0','post','','0');
INSERT INTO `wp_posts` VALUES('936','1','2013-10-07 03:51:43','2013-10-07 11:51:43','<span style=\"color: #000000;\">yum<span style=\"font-family: \'DejaVu Sans\';\">安装必要工具(能解决比编译遇到到基本问题):</span></span>\r\n<pre class=\"lang:php decode:true \">yum -y install gcc gcc-c++  make cmake automake autoconf kernel-devel ncurses-devel libxml2-devel openssl-devel curl-devel libjpeg-devel libpng-devel  pcre-devel libtool-libs freetype-devel gd zlib-devel file bison patch mlocate flex diffutils   readline-devel glibc-devel glib2-devel bzip2-devel gettext-devel libcap-devel libmcrypt-devel openldap openldap-devellibxslt-devel</pre>\r\nconfigure: error: xml2-config not found. Please check your libxml2 installation.\r\n<pre class=\"lang:php decode:true \">yum install libxml2-devel</pre>\r\nconfigure: error: Cannot find OpenSSL’s\r\n<pre class=\"lang:php decode:true \">yum install openssl-devel</pre>\r\nconfigure: error: Please reinstall the libcurl distribution -\r\n\r\neasy.h should be in /include/curl/\r\n<pre class=\"lang:php decode:true \">yum install curl-devel</pre>\r\nconfigure: error: libjpeg.(a|so) not found\r\n<pre class=\"lang:php decode:true \">yum install libjpeg-devel</pre>\r\nconfigure: error: libpng.(a|so) not found.\r\n<pre class=\"lang:php decode:true \">yum install libpng-devel</pre>\r\nconfigure: error: libXpm.(a|so) not found.\r\n<pre class=\"lang:php decode:true \">yum install libXpm-devel</pre>\r\n&nbsp;\r\n\r\nconfigure: error: freetype.h not found.\r\n<pre class=\"lang:php decode:true \">yum install freetype-devel</pre>\r\n&nbsp;\r\n\r\nconfigure: error: utf8_mime2text() has new signature, but U8T_CANONICAL is missing. This should not happen. Check config.log for additional information.\r\n<pre class=\"lang:php decode:true \">yum install libc-client-devel</pre>\r\n&nbsp;\r\n\r\nconfigure: error: mcrypt.h not found. Please reinstall libmcrypt.\r\n<pre class=\"lang:php decode:true \">yum install libmcrypt-devel</pre>\r\n&nbsp;\r\n\r\nconfigure: error: Please reinstall libmhash – I cannot find mhash.h\r\n<pre class=\"lang:php decode:true \">yum install mhash-devel</pre>\r\n&nbsp;\r\n\r\nconfigure: error: Cannot find MySQL header files under /usr.\r\nNote that the MySQL client library is not bundled anymore!\r\n<pre class=\"lang:php decode:true \">yum install mysql-devel</pre>\r\n&nbsp;\r\n\r\nconfigure: error: Please reinstall ming distribution. libming.(a|so) not found\r\n- temp remove the config for ‘–with-ming=/opt/ming/’\r\n\r\nconfigure: error: Cannot find pspell\r\n<pre class=\"lang:php decode:true \">yum install pspell-devel</pre>\r\n&nbsp;\r\n\r\nconfigure: error: cannot find mm library\r\nDownload from <a href=\"http://www.ossp.org/pkg/lib/mm/\">http://www.ossp.org/pkg/lib/mm/</a>\r\n<pre class=\"lang:php decode:true \">wget ftp://ftp.ossp.org/pkg/lib/mm/mm-1.4.2.tar.gz\r\ntar -zxvf mm-1.4.2.tar.gz\r\n./configure\r\nmake\r\nmake install</pre>\r\nconfigure: error: Cannot find libtidy\r\n<pre class=\"lang:php decode:true \">yum install libtidy-devel\r\nyum install libtidy</pre>\r\nchange path at configure: ‘–with-tidy=/usr’\r\n\r\nconfigure: error: not found. Please reinstall the expat distribution.\r\n<pre class=\"lang:php decode:true \">yum install expat-devel</pre>\r\n&nbsp;\r\n\r\nconfigure: error: xslt-config not found. Please reinstall the libxslt &gt;= 1.1.0 distribution\r\n<pre class=\"lang:php decode:true \">yum install libxslt-devel</pre>\r\n*Tips: To uninstall, just enter:\r\n\r\nyum remove {package-name}','CentOS下编译php时的一些典型错误及解决办法','','publish','open','open','','centos%e4%b8%8b%e7%bc%96%e8%af%91php%e6%97%b6%e7%9a%84%e4%b8%80%e4%ba%9b%e5%85%b8%e5%9e%8b%e9%94%99%e8%af%af%e5%8f%8a%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95','','','2013-10-07 03:51:43','2013-10-07 11:51:43','','0','http://www.yanue.net/?p=936','0','post','','0');
INSERT INTO `wp_posts` VALUES('944','1','2013-10-16 18:18:53','2013-10-17 02:18:53','Sphinx是一个基于SQL的全文检索引擎；普遍使用于很多网站；但由于中英文的差异，其本身，对中文的支持并不好。主要是中英文分词方法不一样：英文只需按照空格对其分词即可，中文来说，却是件困难的事情。\r\n\r\n在合适的场景，选择合适的方案，得出最优的解。\r\n\r\n三种目前最常用的方案Coreseek、Sphinx-for-chinaese、Sphinx+Scws，并对其简单对比：\r\n一、Coreseek 为国人基于Sphinx开发的方案，目前最稳定版，是基于经典的Sphinx0.9.9版\r\n\r\n优点：有成熟的文档、以及社区；其分词mmseg为目前国内最为好用分词，索引和搜索分词都可以用到；\r\n缺点：深度开发、版本更新较慢；索引较慢\r\n策略：一个词库管理后台，维护词库；定期生成字典；此套件会自动分词索引；\r\n适用场景：普通青年、搭建差不多的搜索，适用于普遍网站\r\n\r\n二、Sphinx-for-chinaese 为国人2基于经典的Sphinx0.9.9版开发的扩展版\r\n优点：部署简单，易操作，内嵌分词和词库，索引和搜索分词都可以用到；\r\n缺点:版本更新较慢；分词较弱；索引相对较慢\r\n策略：同一\r\n适用场景：普通青年、快速搭建搜索的小站\r\n\r\n三、<span style=\"color: #ff0000;\">Sphinx+Scws</span> 为两套独立系统，单独部署，所谓高内聚低耦合，强烈推荐\r\n优点：两套系统，相对独立，各自单独Server；分词可以做其他用途；版本更新较快；\r\n缺点：部署稍复杂，使用稍复杂；索引分词只能用一元分词，数据量较大\r\n策略：词库管理外；使用时，先调用分词服务，后调用搜索\r\n适用场景：文艺青年、搭建像样点的搜索；好吧文艺青年\r\n\r\n下面针对Sphinx+Scws进行安装使用：\r\n\r\n<span style=\"color: #ff0000;\">一，安装<span style=\"font-family: \'Helvetica Neue\';\">Sphinx:</span></span>\r\n<pre class=\"lang:php decode:true\" title=\"sphinx 安装\">cd /usr/local/src\r\nwget http://sphinxsearch.com/files/sphinx-2.1.2-release.tar.gz\r\ntar -xzvf sphinx-2.1.2-release.tar.gz\r\ncd sphinx-2.1.2-release\r\n./configure --prefix=/usr/local/sphinx --with-mysql --with-static-mysql \r\nmake \r\nmake install\r\n# 添加到环境变量\r\necho export PATH=$PATH:/usr/local/sphinx/bin/ &gt;&gt; /etc/profile\r\nsource /etc/profile</pre>\r\n安装<span style=\"font-family: \'Helvetica Neue\';\">libsphinxclient:</span>\r\n<pre class=\"lang:php decode:true\">cd api/libsphinxclient\r\n./configure --prefix=/usr/local/sphinx/libsphinxclient\r\nmake &amp;&amp; make install</pre>\r\n安装Sphinx<span style=\"font-family: SimSun;\">的</span><span style=\"font-family: \'Helvetica Neue\';\">PHP</span><span style=\"font-family: SimSun;\">扩展</span>:\r\n<pre class=\"lang:php decode:true\">cd /usr/local/src\r\nwget -c http://pecl.php.net/get/sphinx-1.3.0.tgz\r\ntar zxvf sphinx-1.3.0.tgz\r\ncd sphinx-1.3.0\r\nphpize\r\n./configure --with-sphinx=/usr/local/sphinx/libsphinxclient --with-php-config=/usr/local/php/bin/php-config\r\nmake &amp;&amp; make install\r\necho \"[Sphinx]\" &gt;&gt; /usr/local/php/etc/php.ini\r\necho \"extension = sphinx.so\" &gt;&gt; /usr/local/php/etc/php.ini</pre>\r\n注意：我个人php安装到路径是/usr/local/php，需根据自己情况进行修改\r\n\r\n配置：\r\n<pre class=\"lang:php decode:true\">cd /usr/local/sphinx/etc\r\ncp sphinx.conf.dist sphinx.conf\r\nvi sphinx.conf</pre>\r\n配置文件详解见：<a title=\"sphinx配置文件详解 \" href=\" http://www.yanue.net/archives/945.html\"> http://www.yanue.net/archives/945.html</a>\r\n\r\n测试：\r\n<pre class=\"lang:php decode:true\">mysql -u test &lt; /usr/local/sphinx/etc/example.sql</pre>\r\n<span style=\"color: #ff0000;\">二，scws<span style=\"font-family: SimSun;\">安装：</span></span><span style=\"font-family: \'Helvetica Neue\';\">\r\n</span>\r\n<pre class=\"lang:php decode:true \">cd /usr/local/src\r\nwget http://www.xunsearch.com/scws/down/scws-1.2.2.tar.bz2\r\ntar xvjf scws-1.2.2.tar.bz2\r\ncd scws-1.2.2\r\n./configure --prefix=/usr/local/scws\r\nmake &amp;&amp; make install</pre>\r\nscws<span style=\"font-family: SimSun;\">的</span><span style=\"font-family: \'Helvetica Neue\';\">PHP</span><span style=\"font-family: SimSun;\">扩展安装</span><span style=\"font-family: \'Helvetica Neue\';\">:</span>\r\n<pre class=\"lang:php decode:true\">cd ./phpext\r\nphpize \r\n./configure --with-php-config=/usr/local/php/bin/php-config\r\nmake &amp;&amp; make install\r\necho \"[scws]\" &gt;&gt; /usr/local/php/etc/php.ini \r\necho \"extension = scws.so\" &gt;&gt; /usr/local/php/etc/php.ini\r\necho \"scws.default.charset = utf-8\" &gt;&gt; /usr/local/php/etc/php.ini\r\necho \"scws.default.fpath = /usr/local/scws/etc/\" &gt;&gt; /usr/local/php/etc/php.ini</pre>词库安装<span style=\"font-family: \'Helvetica Neue\';\">:</span>\r\n<pre class=\"lang:php decode:true \">cd /usr/local/src\r\nwget http://www.xunsearch.com/scws/down/scws-dict-chs-utf8.tar.bz2\r\ntar jxvf scws-dict-chs-utf8.tar.bz2 -C /usr/local/scws/etc/\r\nchown www:www /usr/local/scws/etc/dict.utf8.xdb</pre>\r\n下篇：\r\n\r\nsphinx配置文件详解 ：<a href=\"http://www.yanue.net/archives/945.html\">http://www.yanue.net/archives/945.html</a>','Sphinx+Scws全文检索引擎方案安装部署','','publish','open','open','','sphinxscws%e5%85%a8%e6%96%87%e6%a3%80%e7%b4%a2%e5%bc%95%e6%93%8e%e6%96%b9%e6%a1%88%e5%ae%89%e8%a3%85%e9%83%a8%e7%bd%b2','','','2013-10-16 18:18:53','2013-10-17 02:18:53','','0','http://www.yanue.net/?p=944','0','post','','0');
INSERT INTO `wp_posts` VALUES('945','1','2013-10-16 18:50:20','2013-10-17 02:50:20','<span style=\"color: #ff0000;\">sphinx的配置:</span>\r\n\r\n其结构组成主要如下:\r\n\r\nSource 源名称1{                //指定数据源\r\n\r\n一些配置\r\n\r\n}\r\n\r\nIndex 索引名称1{\r\n\r\nSource=源名称1\r\n\r\n}\r\n\r\nSource 源名称2{\r\n\r\n一些配置\r\n\r\n}\r\n\r\nIndex 索引名称2{\r\n\r\nSource=源名称2\r\n\r\n}\r\n\r\nIndexer{\r\n\r\nmem_limit = 32M\r\n\r\n}\r\n\r\nSearchd{                             //配置 searchd 守护程序本身\r\n\r\n}\r\n\r\n<span style=\"color: #ff0000;\">二.    Source 源名称 相关配置说明</span>\r\n\r\nType=数据库类型(Mysql 或SQL);\r\n\r\nSql_host=              数据库主机地址(如果是外网,请确保防火墙允许链接)\r\n\r\nSql_user=                     数据库用户名\r\n\r\nSql_pass=                     数据库密码\r\n\r\nSql_db=                 数据库名称\r\n\r\nSql_port=               数据库端口\r\n\r\nSql_query_pre=      执行SQL前设置的编码 (SET NAMES UTF8)\r\n\r\nSql_query=            全文检索要显示的内容,据官方说法:尽可能不要使用WHERE或GROUPBY ,将其交给SPHINX效率会更高;select 出来的字段必须包含至少一个唯一主键,以及全文检索的字段 sphinx 会对SELECT 中的 字段1 ,字段2 建立sphinx自己的索引 及 在查询的字段中查找关键字\r\n<pre>Sql<code>_query_info=</code> SELECT * FROM Inventory WHERE id=$id  来查找匹配记录 在查询中，<code>$id</code> 被替换为 searchd 返回的每个主键 (调试是使用 建议注释此项)</pre>\r\nStrip_html= 0/1      是否去掉HTML标签\r\n\r\nSql_attr_uint=         无符号整数属性,可以设置多个,设置数据库字段,设置哪个能显示出哪个字段数据的整形来.\r\n\r\n<span style=\"color: #ff0000;\">三.    Index中配置说明</span>\r\n\r\nSource=                 数据源名称\r\n\r\nPath =                 索引记录存放目录,注:d:/sphinx/data/cg 这个的意思是 在data目录下创建一个名为cg的文件\r\n\r\nmin_word_len=      索引的词的最小长度 设为1 既可以搜索单个字节搜索,越小 索引越精确,但建立索引花费的时间越长\r\n\r\ncharset_type=        utf-8/gbk 设置数据编码\r\n\r\ncharset_table=        字符表和大小写转换规则 .频繁应用于sphinx的分词过程\r\n\r\nmin_prefix_len =    最小前缀(0)\r\n\r\nmin_infix_len =      最小中缀(1)\r\n\r\nngram_len =        对于非字母型数据的长度切割(默认已字符和数字切割,设置1为按没个字母切割)\r\n\r\n<span style=\"color: #ff0000;\">四.    searchd配置说明</span>\r\n\r\nport=                     sphinx的端口(9312 与 searchd.exe监听结果一致)\r\n\r\nlog=                      服务进程日志存放路径，一旦sphinx出现异常，基本上可以从这里查询有效信息\r\n\r\nquery_log=             客户端查询日志 尤为有用 它将在运行时显示每次搜索并显示结果\r\n\r\nread_timeout=        请求超时(5)\r\n\r\nmax_children=        同时可执行的最大searchd 进程数(30)\r\n\r\npid_file=                进程ID文件\r\n\r\nmax_matches=              查询结果的最大返回数\r\n\r\nseamless_rotate=    是否支持无缝切换，做增量索引时通常需要(0/1)\r\n\r\n# 在启动运行时是否提前加载所有索引文件\r\n\r\npreopen_indexes = 0\r\n\r\n# 是否释放旧的索引文件\r\nunlink_old = 1\r\n\r\n# MVA跟新池大小(默认为1M)\r\nmva_updates_pool = 1M\r\n\r\n# 最大允许的网络包大小(默认8M)\r\nmax_packet_size = 8M\r\n\r\n# 每个查询最大允许的过滤器数量(默认256)\r\nmax_filters = 256\r\n\r\n#每个过滤器最大允许的值的个数(默认4096)\r\nmax_filter_values = 4096\r\n\r\n# 每个组的最大查询数(默认为32)\r\nmax_batch_queries = 32\r\n\r\n至此 spninx.conf 配置文件结束;注意:如果有换行 必须用反斜杠  链接\r\n\r\n配置案例：\r\n<pre class=\"lang:php decode:true\">#定义一个数据源\r\nsource search_main\r\n{\r\n           #定义数据库类型\r\n    type                 = mysql\r\n           #定义数据库的IP或者计算机名\r\n    sql_host             = localhost\r\n           #定义连接数据库的帐号\r\n    sql_user             = root\r\n           #定义链接数据库的密码\r\n    sql_pass             = test123\r\n           #定义数据库名称\r\n    sql_db               = test\r\n           #定义连接数据库后取数据之前执行的SQL语句\r\n    sql_query_pre        = SET NAMES utf8\r\n    sql_query_pre        = SET SESSION query_cache_type=OFF\r\n           #创建一个sph_counter用于增量索引\r\n    sql_query_pre        = CREATE TABLE IF NOT EXISTS sph_counter \r\n                                      ( counter_id INTEGER PRIMARY KEY NOT NULL,max_doc_id INTEGER NOT NULL)\r\n           #取数据之前将表的最大id记录到sph_counter表中\r\n    sql_query_pre        = REPLACE INTO sph_counter SELECT 1, MAX(searchid) FROM v9_search\r\n           #定义取数据的SQL，第一列ID列必须为唯一的正整数值\r\n    sql_query            = SELECT searchid,typeid,id,adddate,data FROM v9_search where \r\n                                      searchid&lt;( SELECT max_doc_id FROM sph_counter WHERE counter_id=1 ) \r\n                                        and searchid&gt;=$start AND searchid&lt;=$end\r\n           # sql_attr_uint和sql_attr_timestamp用于定义用于api过滤或者排序，写多行制定多列\r\n    sql_attr_uint        = typeid\r\n    sql_attr_uint        = id\r\n    sql_attr_timestamp   = adddate\r\n           #分区查询设置\r\n    sql_query_range      = SELECT MIN(searchid),MAX(searchid) FROM v9_search\r\n           #分区查询的步长\r\n    sql_range_step       = 1000\r\n           #设置分区查询的时间间隔\r\n    sql_ranged_throttle  = 0\r\n           #用于CLI的调试\r\n    sql_query_info       = SELECT * FROM v9_search WHERE searchid=$id\r\n}\r\n#定义一个增量的源\r\nsource search_main_delta : search_main\r\n{\r\n    sql_query_pre       = set names utf8\r\n           #增量源只查询上次主索引生成后新增加的数据\r\n#如果新增加的searchid比主索引建立时的searchid还小那么会漏掉\r\n    sql_query           = SELECT searchid,typeid,id,adddate,data FROM v9_search where  \r\n                                  searchid&gt;( SELECT max_doc_id FROM sph_counter WHERE counter_id=1 ) \r\n                                   and searchid&gt;=$start AND searchid&lt;=$end\r\n    sql_query_range     = SELECT MIN(searchid),MAX(searchid) FROM v9_search where \r\n                                       searchid&gt;( SELECT max_doc_id FROM sph_counter WHERE counter_id=1 )\r\n}\r\n\r\n#定义一个index_search_main索引\r\nindex index_search_main\r\n{\r\n           #设置索引的源\r\n    source            = search_main\r\n           #设置生成的索引存放路径\r\n    path         = /usr/local/coreseek/var/data/index_search_main\r\n           #定义文档信息的存储模式，extern表示文档信息和文档id分开存储\r\n    docinfo           = extern\r\n           #设置已缓存数据的内存锁定，为0表示不锁定\r\n    mlock             = 0\r\n           #设置词形处理器列表，设置为none表示不使用任何词形处理器\r\n    morphology        = none\r\n           #定义最小索引词的长度\r\n    min_word_len      = 1\r\n           #设置字符集编码类型，我这里采用的utf8编码和数据库的一致\r\n    charset_type      = zh_cn.utf-8\r\n           #指定分词读取词典文件的位置\r\n    charset_dictpath  = /usr/local/mmseg3/etc\r\n           #不被搜索的词文件里表。\r\n    stopwords       = /usr/local/coreseek/var/data/stopwords.txt\r\n           #定义是否从输入全文数据中取出HTML标记\r\n    html_strip       = 0\r\n}\r\n#定义增量索引\r\nindex index_search_main_delta : index_search_main\r\n{\r\n    source   = search_main_delta\r\n    path    = /usr/local/coreseek/var/data/index_search_main_delta\r\n}\r\n\r\n#定义indexer配置选项\r\nindexer\r\n{\r\n           #定义生成索引过程使用索引的限制\r\n    mem_limit        = 512M\r\n}\r\n\r\n#定义searchd守护进程的相关选项\r\nsearchd\r\n{\r\n           #定义监听的IP和端口\r\n    #listen            = 127.0.0.1\r\n    #listen            = 172.16.88.100:3312\r\n    listen            = 3312\r\n    listen            = /var/run/searchd.sock\r\n           #定义log的位置\r\n    log                = /usr/local/coreseek/var/log/searchd.log\r\n           #定义查询log的位置\r\n    query_log          = /usr/local/coreseek/var/log/query.log\r\n           #定义网络客户端请求的读超时时间\r\n    read_timeout       = 5\r\n           #定义子进程的最大数量\r\n    max_children       = 300\r\n           #设置searchd进程pid文件名\r\n    pid_file           = /usr/local/coreseek/var/log/searchd.pid\r\n           #定义守护进程在内存中为每个索引所保持并返回给客户端的匹配数目的最大值\r\n    max_matches        = 100000\r\n           #启用无缝seamless轮转，防止searchd轮转在需要预取大量数据的索引时停止响应\r\n    #也就是说在任何时刻查询都可用，或者使用旧索引，或者使用新索引\r\n    seamless_rotate    = 1\r\n           #配置在启动时强制重新打开所有索引文件\r\n    preopen_indexes    = 1\r\n           #设置索引轮转成功以后删除以.old为扩展名的索引拷贝\r\n    unlink_old         = 1\r\n           # MVA更新池大小，这个参数不太明白\r\n    mva_updates_pool   = 1M\r\n           #最大允许的包大小\r\n    max_packet_size    = 32M\r\n           #最大允许的过滤器数\r\n    max_filters        = 256\r\n           #每个过滤器最大允许的值的个数\r\n    max_filter_values  = 4096\r\n}</pre>\r\nsphinx的管理命令：\r\n\r\n1. 生成全部索引\r\n\r\n/usr/local/sphinx/bin/indexer --config /usr/local/sphinx/etc/sphinx.conf –all\r\n\r\n若此时searchd守护进程已经启动，那么需要加上—rotate参数：\r\n\r\n/usr/local/sphinx/bin/indexer --config /usr/local/sphinx/etc/sphinx.conf --all --rotate\r\n\r\n2. 启动searchd守护进程\r\n\r\n/usr/local/sphinx/bin/searchd --config /usr/local/sphinx/etc/sphinx.conf\r\n\r\n3. 生成主索引\r\n\r\n写成shell脚本，添加到crontab任务，设置成每天凌晨1点的时候重建主索引\r\n\r\n/usr/local/sphinx/bin/indexer --config /usr/local/sphinx/etc/sphinx.conf --rotate index_search_main\r\n\r\n4. 生成增量索引\r\n\r\n写成shell脚本，添加到crontab任务，设置成每10分钟运行一次\r\n\r\n/usr/local/sphinx/bin/indexer --config /usr/local/sphinx/etc/sphinx.conf --rotate index_search_main_delta\r\n\r\n5. 增量索引和主索引的合并\r\n\r\n写成shell脚本，添加到计划任务，每15分钟跑一次\r\n\r\n/usr/local/sphinx/bin/indexer --config /usr/local/sphinx/etc/sphinx.conf --merge index_search_main index_search_main_delta --rotate\r\n\r\n6. 使用search命令在命令行对索引进行检索\r\n\r\n/usr/local/sphinx/bin/search --config /usr/local/sphinx/etc/sphinx.conf','sphinx配置文件详解 ','','publish','open','open','','sphinx%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e8%af%a6%e8%a7%a3','','','2013-10-16 18:50:20','2013-10-17 02:50:20','','0','http://www.yanue.net/?p=945','0','post','','0');
INSERT INTO `wp_posts` VALUES('952','1','2013-10-18 00:15:11','2013-10-18 08:15:11','今天一个Ajax跨域问题，纠结我半天，记录之。\r\n\r\n&nbsp;\r\n<pre class=\"lang:php decode:true\">&lt;html&gt;\r\n&lt;head&gt;\r\n    &lt;title&gt;title&lt;/title&gt;\r\n    &lt;script src=\"http://code.jquery.com/jquery-1.7.1.min.js\"&gt;&lt;/script&gt;\r\n    &lt;script&gt;\r\n        $.ajax({\r\n            url:\"<a href=\"http://map.yanue.net/gpsApi.php?lat=22.502412986242&amp;lng=113.93832783228\">http://map.yanue.net/gpsApi.php?lat=22.502412986242&amp;lng=113.93832783228</a>\",\r\n            type:\'GET\',\r\n            success: function(data){\r\n                $(\'body\').append( \"Name: \" + data );\r\n            }\r\n        });\r\n    &lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    测试Ajax跨域问题\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n没有结果，chrome用F12 下查看错误得知：\r\n\r\nXMLHttpRequest cannot load <a title=\"http://map.yanue.net/gpsApi.php?lat=22.502412986242&amp;lng=113.93832783228\" href=\"http://map.yanue.net/gpsApi.php?lat=22.502412986242&amp;lng=113.93832783228\" target=\"_blank\">http://map.yanue.net/gpsApi.php?lat=22.502412986242&amp;lng=113.93832783228</a>. Origin <a title=\"http://localhost\" href=\"http://localhost/\" target=\"_blank\">http://localhost</a><span style=\"color: #ff0000;\"> is not allowed by Access-Control-Allow-Origin.</span>\r\n\r\nAJAX跨域问题产生。搜了好久，得知解决方案：\r\n\r\n一：使用jsonp格式， 如jquery中ajax请求参数   dataType:\'JSONP\'。\r\n<pre class=\"lang:php decode:true\">&lt;html&gt;\r\n&lt;head&gt;\r\n    &lt;title&gt;title&lt;/title&gt;\r\n    &lt;script src=\"http://code.jquery.com/jquery-1.7.1.min.js\"&gt;&lt;/script&gt;\r\n    &lt;script&gt;\r\n        $.ajax({\r\n            url:\"http://map.yanue.net/gpsApi.php?lat=22.502412986242&amp;lng=113.93832783228\",\r\n            type:\'GET\',\r\n            dataType:\'JSONP\',\r\n            success: function(data){\r\n                $(\'body\').append( \"Name: \" + data );\r\n            }\r\n        });\r\n    &lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n测试Ajax跨域问题\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n二，server端加上header设为 Access-Control-Allow-Origin：*\r\n\r\nheader(\"Access-Control-Allow-Origin: *\"); # 跨域处理\r\n\r\n问题就解决了。','解决Ajax跨域问题：Origin xx is not allowed by Access-Control-Allow-Origin. ','','publish','open','open','','%e8%a7%a3%e5%86%b3ajax%e8%b7%a8%e5%9f%9f%e9%97%ae%e9%a2%98%ef%bc%9aorigin-xx-is-not-allowed-by-access-control-allow-origin','','','2013-10-18 00:15:11','2013-10-18 08:15:11','','0','http://www.yanue.net/?p=952','0','post','','0');
INSERT INTO `wp_posts` VALUES('956','1','2013-10-25 02:52:58','2013-10-25 10:52:58','说明:增加用户是针对数据库进行操作\r\n1.进入到数据库 use dbname\r\n2.针对当前数据库添加用户 权限是针对当前数据\r\n<strong>1.添加并验证用户</strong>\r\n&gt; use admin\r\n&gt; db.addUser(\"zjx\",\"tsjianxin\")\r\n&gt; db.auth(\"zjx\",\"tsjianxin\")\r\n<strong>2.查看已存在的用户</strong>\r\n&gt; db.system.users.find()\r\n<strong>3.现在来给另一个数据库51cv配置一个读写权限的用户</strong>\r\n&gt; use 51cv\r\n&gt; db.addUser(\"51cvrw\",\"51cv\")\r\n...\"readOnly\" : false...\r\n<strong>4.配置一个只读权限的用户</strong>\r\n&gt; use 51cv\r\n&gt; db.addUser(\"51cvr\",\"51cv\",true)\r\n&gt; db.system.users.find()\r\n...\"readOnly\" : true...\r\n<strong>5.删除用户</strong>\r\n&gt; use dbname (admin or 51cv ,etc)\r\n&gt; db.system.users.remove({user:\"haha\"})\r\n&gt; db.system.users.find()\r\n<strong>6.用户登录数据库测试</strong>\r\nfor:mongod dbname -u uname -p password\r\nmongo admin -u zjx -p tsjianxin\r\n/usr/local/mongodb/bin/mongo admin -u 用户名 -p  密码 --port 端口号\r\n\r\nMongoDB  增加用户 删除用户  修改用户  读写权限 只读权限,\r\n\r\n&nbsp;\r\n\r\nMongoDB用户权限分配的操作是针对某个库来说的。--这句话很重要。\r\n\r\n&nbsp;\r\n\r\n1、 进入ljc 数据库：\r\n\r\nuse ljc;              --ljc为数据库名称。\r\n\r\n2、添加用户（读写权限，readOnly--&gt;false）：\r\n\r\ndb.addUser(\"java\",\"java\");\r\n\r\n3、 查看一下所有的用户\r\n\r\ndb.system.users.find();\r\n{ \"_id\" : ObjectId(\"4e02a89fb841deb5fda3e5e2\"), \"user\" : \"java\", \"readOnly\" : fa\r\nlse, \"pwd\" : \"59cf7cc156874cbd35cb00869126f569\" }\r\n\r\n4、用户授权。\r\n\r\ndb.auth(\"java\",\"java\");\r\n\r\n1                                         显示为1 表示授权成功，0表示不成功。\r\n\r\n5、 添加用户（只读权限，readOnly--&gt;true）：\r\n\r\ndb.addUser(\"java1\",\"java1\",true);\r\n\r\ndb.system.users.find();\r\n{ \"_id\" : ObjectId(\"4e02a89fb841deb5fda3e5e2\"), \"user\" : \"java\", \"readOnly\" : fa\r\nlse, \"pwd\" : \"59cf7cc156874cbd35cb00869126f569\" }\r\n{ \"_id\" : ObjectId(\"4e02aae6b841deb5fda3e5e3\"), \"user\" : \"java1\", \"readOnly\" : t\r\nrue, \"pwd\" : \"fca6bda05c87a72cce0a4a6458d1e266\" }\r\n\r\n注意上面标红的位置的readOnly 只读于可写是有区别的。\r\n\r\n&nbsp;\r\n\r\n6、更改密码（为已经存在的用户更改密码）：\r\n\r\ndb.addUser(\"java\",\"java1\");\r\n\r\n&nbsp;\r\n\r\n7、删除用户：\r\n\r\ndb.system.users.remove({user:\"java1\"});\r\n\r\n来自：<a href=\"http://tompig.iteye.com/blog/1102031\">http://tompig.iteye.com/blog/1102031</a>\r\n\r\n<a href=\"http://www.xuejiehome.com/blread-1444.html\">http://www.xuejiehome.com/blread-1444.html</a>','MongoDB增加用户认证: 增加用户、删除用户、修改用户密码、读写权限、只读权限','','publish','open','open','','mongodb%e5%a2%9e%e5%8a%a0%e7%94%a8%e6%88%b7%e8%ae%a4%e8%af%81-%e5%a2%9e%e5%8a%a0%e7%94%a8%e6%88%b7%e3%80%81%e5%88%a0%e9%99%a4%e7%94%a8%e6%88%b7%e3%80%81%e4%bf%ae%e6%94%b9%e7%94%a8%e6%88%b7%e5%af%86','','','2013-10-25 02:52:58','2013-10-25 10:52:58','','0','http://www.yanue.net/?p=956','0','post','','0');
