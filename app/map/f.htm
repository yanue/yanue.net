<!doctype html>
<html lang="zh-cn">
<head>
    <title>定位</title>
    <meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
    <meta http-equiv="description" content="this is my page">
    <meta http-equiv="content-type" content="text/html; charset=gb2312">
    <meta http-equiv="Content-Language" content="zh-CN"/>
    <style type="text/css">
        html {
            height: 100%
        }

        body {
            height: 100%;
            margin: 0;
            padding: 0
        }

        #map_canvas {
            height: 100%
        }

        #latlng-control {
            background: #ffc;
            border: 1px solid #676767;
            font-family: arial, helvetica, sans-serif;
            font-size: 12px;
            padding: 4px;
            position: absolute;
        }
    </style>
    <script src="http://maps.google.com/maps/api/js?sensor=false&libraries=places" type="text/javascript"></script>
</head>

<script type="text/javascript">
    var map, geocoder, infowindow, marker;

    function $(id) {
        return document.getElementById(id);
    }

    function initialize() {
        geocoder = new google.maps.Geocoder();
        var latlng = new google.maps.LatLng(39.934223, 116.415884);
        var myOptions = {
            zoom: 13,
            center: latlng,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map($("map_canvas"), myOptions);
//        var input = document.getElementById('address');
//        new google.maps.places.Autocomplete(input);
//
        google.maps.event.addListener(map, 'click', function (event) {
            placeMarker(event.latLng);
        });

        var latLngControl = new LatLngControl(map);

        // Register event listeners
        google.maps.event.addListener(map, 'mouseover', function (mEvent) {
            latLngControl.set('visible', true);
        });
        google.maps.event.addListener(map, 'mouseout', function (mEvent) {
            latLngControl.set('visible', false);
        });
        google.maps.event.addListener(map, 'mousemove', function (mEvent) {
            latLngControl.updatePosition(mEvent.latLng);
        });

        setInterval(function () {
            var latlng = map.getCenter();
            var lat = latlng.k;
            var lng = latlng.A;

            var nt = (Math.random()) * 0.2 + (lat - 0.1);
            var ng = (Math.random()) * 0.4 + (lng - 0.2);

            placeMarker(new google.maps.LatLng(nt, ng));
        }, 5000);
    }

    function placeMarker(location) {

        var myHtml = "位置信息:" + location;
        var marker = new google.maps.Marker({
            map: map,
            title: '当前经纬度：' + location,
            position: location
        });

        var infowindow = new google.maps.InfoWindow({ content: myHtml});
        google.maps.event.addListener(marker, 'click', function () {
            infowindow.open(map, marker);
        });


        document.getElementById("r").innerText = (Math.round(location.k * 1000) / 1000) + ':' + (Math.round(location.A * 1000) / 1000);
    }

    /**
     * LatLngControl class displays the LatLng and pixel coordinates
     * underneath the mouse within a container anchored to it.
     * @param {google.maps.Map} map Map to add custom control to.
     */
    function LatLngControl(map) {
        /**
         * Offset the control container from the mouse by this amount.
         */
        this.ANCHOR_OFFSET_ = new google.maps.Point(8, 8);

        /**
         * Pointer to the HTML container.
         */
        this.node_ = this.createHtmlNode_();

        // Add control to the map. Position is irrelevant.
        map.controls[google.maps.ControlPosition.TOP].push(this.node_);

        // Bind this OverlayView to the map so we can access MapCanvasProjection
        // to convert LatLng to Point coordinates.
        this.setMap(map);

        // Register an MVC property to indicate whether this custom control
        // is visible or hidden. Initially hide control until mouse is over map.
        this.set('visible', false);
    }

    // Extend OverlayView so we can access MapCanvasProjection.
    LatLngControl.prototype = new google.maps.OverlayView();
    LatLngControl.prototype.draw = function () {
    };

    /**
     * @private
     * Helper function creates the HTML node which is the control container.
     * @return {HTMLDivElement}
     */
    LatLngControl.prototype.createHtmlNode_ = function () {
        var divNode = document.createElement('div');
        divNode.id = 'latlng-control';
        divNode.index = 9999;
        return divNode;
    };

    /**
     * MVC property's state change handler function to show/hide the
     * control container.
     */
    LatLngControl.prototype.visible_changed = function () {
        this.node_.style.display = this.get('visible') ? '' : 'none';
    };

    /**
     * Specified LatLng value is used to calculate pixel coordinates and
     * update the control display. Container is also repositioned.
     * @param {google.maps.LatLng} latLng Position to display
     */
    LatLngControl.prototype.updatePosition = function (latLng) {
        var projection = this.getProjection();
        var point = projection.fromLatLngToContainerPixel(latLng);

        // Update control position to be anchored next to mouse position.
        this.node_.style.left = point.x + this.ANCHOR_OFFSET_.x + 'px';
        this.node_.style.top = point.y + this.ANCHOR_OFFSET_.y + 'px';

        // Update control to display latlng and coordinates.
        this.node_.innerHTML = [
            latLng.toUrlValue(4),
            '<br/>',
            point.x,
            'px, ',
            point.y,
            'px'
        ].join('');
    };

    function setpoint(lat, lng) {
        map.setCenter(new google.maps.LatLng(lat, lng), 11);
    }

    function seachkey(keyword) {
        var address = keyword;
        geocoder.geocode({ 'address': address}, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                map.setCenter(results[0].geometry.location);
                map.setZoom(13);
                var marker = new google.maps.Marker({
                    map: map,
                    title: '当前经纬度：' + results[0].geometry.location,
                    position: results[0].geometry.location
                });

                var infowindow = new google.maps.InfoWindow({ content: address + ":" + results[0].geometry.location});
                google.maps.event.addListener(marker, 'click', function () {
                    infowindow.open(map, marker);
                });
            } else {
                alert(address + " not found:" + "Geocode was not successful for the following reason: " + status);
            }
        });
    }

</script>

<body onload="initialize()">
<div id="map_canvas" style="width: 100%; height: 100%">
</div>
<div id="in" style="width:0; height: 0">
</div>
<div id="r" style="width:0; height: 0">
</div>
<br>
</body>
</html>
